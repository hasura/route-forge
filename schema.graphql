"""
Table to store dependencies between applications and their software components.
"""
type App_Mgmt_AppMgmtApplicationComponents {
  appMgmtApplication: App_Mgmt_AppMgmtApplications

  """Identifier for the application that uses the component."""
  appMgmtApplicationId: App_Mgmt_Uuid!
  appMgmtComponent: App_Mgmt_AppMgmtComponents

  """Identifier for the software component used by the application."""
  appMgmtComponentId: App_Mgmt_Uuid!

  """Type of dependency (e.g., runtime, build, test)."""
  dependencyType: App_Mgmt_AppMgmtDependencyTypes!
}

type App_Mgmt_AppMgmtApplicationComponentsAggExp {
  _count: Int!
  appMgmtApplicationId: App_Mgmt_UuidAggExp!
  appMgmtComponentId: App_Mgmt_UuidAggExp!
  dependencyType: App_Mgmt_AppMgmtDependencyTypesAggExp!
}

input App_Mgmt_AppMgmtApplicationComponentsBoolExp {
  _and: [App_Mgmt_AppMgmtApplicationComponentsBoolExp!]
  _not: App_Mgmt_AppMgmtApplicationComponentsBoolExp
  _or: [App_Mgmt_AppMgmtApplicationComponentsBoolExp!]
  appMgmtApplication: App_Mgmt_AppMgmtApplicationsBoolExp
  appMgmtApplicationId: App_Mgmt_UuidBoolExp
  appMgmtComponent: App_Mgmt_AppMgmtComponentsBoolExp
  appMgmtComponentId: App_Mgmt_UuidBoolExp
  dependencyType: App_Mgmt_AppMgmtDependencyTypesBoolExp
}

input App_Mgmt_AppMgmtApplicationComponentsFilterInput {
  limit: Int
  offset: Int
  order_by: [App_Mgmt_AppMgmtApplicationComponentsOrderByExp!]
  where: App_Mgmt_AppMgmtApplicationComponentsBoolExp
}

input App_Mgmt_AppMgmtApplicationComponentsOrderByExp {
  appMgmtApplication: App_Mgmt_AppMgmtApplicationsOrderByExp
  appMgmtApplicationId: OrderBy
  appMgmtComponent: App_Mgmt_AppMgmtComponentsOrderByExp
  appMgmtComponentId: OrderBy
  dependencyType: OrderBy
}

"""
Table to store associations between applications and the licenses they use.
"""
type App_Mgmt_AppMgmtApplicationLicenses {
  appMgmtApplication: App_Mgmt_AppMgmtApplications

  """Identifier for the application that uses the license."""
  appMgmtApplicationId: App_Mgmt_Uuid!
  appMgmtLicense: App_Mgmt_AppMgmtLicenses

  """Identifier for the software license used by the application."""
  appMgmtLicenseId: App_Mgmt_Uuid!
}

type App_Mgmt_AppMgmtApplicationLicensesAggExp {
  _count: Int!
  appMgmtApplicationId: App_Mgmt_UuidAggExp!
  appMgmtLicenseId: App_Mgmt_UuidAggExp!
}

input App_Mgmt_AppMgmtApplicationLicensesBoolExp {
  _and: [App_Mgmt_AppMgmtApplicationLicensesBoolExp!]
  _not: App_Mgmt_AppMgmtApplicationLicensesBoolExp
  _or: [App_Mgmt_AppMgmtApplicationLicensesBoolExp!]
  appMgmtApplication: App_Mgmt_AppMgmtApplicationsBoolExp
  appMgmtApplicationId: App_Mgmt_UuidBoolExp
  appMgmtLicense: App_Mgmt_AppMgmtLicensesBoolExp
  appMgmtLicenseId: App_Mgmt_UuidBoolExp
}

input App_Mgmt_AppMgmtApplicationLicensesFilterInput {
  limit: Int
  offset: Int
  order_by: [App_Mgmt_AppMgmtApplicationLicensesOrderByExp!]
  where: App_Mgmt_AppMgmtApplicationLicensesBoolExp
}

input App_Mgmt_AppMgmtApplicationLicensesOrderByExp {
  appMgmtApplication: App_Mgmt_AppMgmtApplicationsOrderByExp
  appMgmtApplicationId: OrderBy
  appMgmtLicense: App_Mgmt_AppMgmtLicensesOrderByExp
  appMgmtLicenseId: OrderBy
}

scalar App_Mgmt_AppMgmtApplicationLifecycleStatus

type App_Mgmt_AppMgmtApplicationLifecycleStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: App_Mgmt_AppMgmtApplicationLifecycleStatus
  min: App_Mgmt_AppMgmtApplicationLifecycleStatus
}

input App_Mgmt_AppMgmtApplicationLifecycleStatusBoolExp {
  _and: [App_Mgmt_AppMgmtApplicationLifecycleStatusBoolExp!]
  _eq: App_Mgmt_AppMgmtApplicationLifecycleStatus
  _gt: App_Mgmt_AppMgmtApplicationLifecycleStatus
  _gte: App_Mgmt_AppMgmtApplicationLifecycleStatus
  _in: [App_Mgmt_AppMgmtApplicationLifecycleStatus!]
  _is_null: Boolean
  _lt: App_Mgmt_AppMgmtApplicationLifecycleStatus
  _lte: App_Mgmt_AppMgmtApplicationLifecycleStatus
  _neq: App_Mgmt_AppMgmtApplicationLifecycleStatus
  _not: App_Mgmt_AppMgmtApplicationLifecycleStatusBoolExp
  _or: [App_Mgmt_AppMgmtApplicationLifecycleStatusBoolExp!]
}

"""
Table to store relationships between applications and their criticality levels.
Applications may have many relationships, even of the same type. They are only
differentiated through the description.
"""
type App_Mgmt_AppMgmtApplicationRelationships {
  appMgmtApplication: App_Mgmt_AppMgmtApplications
  appMgmtApplicationByApplicationId2: App_Mgmt_AppMgmtApplications

  """Primary key for application relationships"""
  appMgmtApplicationRelationshipId: App_Mgmt_Int4!

  """Identifier for the first application involved in the relationship."""
  applicationId1: App_Mgmt_Uuid

  """Identifier for the second application involved in the relationship."""
  applicationId2: App_Mgmt_Uuid

  """
  Criticality score of the relationship, indicating the impact of its failure.
  """
  criticality: App_Mgmt_AppMgmtCriticalityLevels

  """Additional explanation about nature of relationship."""
  description: App_Mgmt_Text

  """
  Type of relationship between the applications (e.g., depends on, uses data from).
  """
  relationshipType: App_Mgmt_AppMgmtRelationshipTypes
}

type App_Mgmt_AppMgmtApplicationRelationshipsAggExp {
  _count: Int!
  appMgmtApplicationRelationshipId: App_Mgmt_Int4AggExp!
  applicationId1: App_Mgmt_UuidAggExp!
  applicationId2: App_Mgmt_UuidAggExp!
  criticality: App_Mgmt_AppMgmtCriticalityLevelsAggExp!
  description: App_Mgmt_TextAggExp!
  relationshipType: App_Mgmt_AppMgmtRelationshipTypesAggExp!
}

input App_Mgmt_AppMgmtApplicationRelationshipsBoolExp {
  _and: [App_Mgmt_AppMgmtApplicationRelationshipsBoolExp!]
  _not: App_Mgmt_AppMgmtApplicationRelationshipsBoolExp
  _or: [App_Mgmt_AppMgmtApplicationRelationshipsBoolExp!]
  appMgmtApplication: App_Mgmt_AppMgmtApplicationsBoolExp
  appMgmtApplicationByApplicationId2: App_Mgmt_AppMgmtApplicationsBoolExp
  appMgmtApplicationRelationshipId: App_Mgmt_Int4BoolExp
  applicationId1: App_Mgmt_UuidBoolExp
  applicationId2: App_Mgmt_UuidBoolExp
  criticality: App_Mgmt_AppMgmtCriticalityLevelsBoolExp
  description: App_Mgmt_TextBoolExp
  relationshipType: App_Mgmt_AppMgmtRelationshipTypesBoolExp
}

input App_Mgmt_AppMgmtApplicationRelationshipsFilterInput {
  limit: Int
  offset: Int
  order_by: [App_Mgmt_AppMgmtApplicationRelationshipsOrderByExp!]
  where: App_Mgmt_AppMgmtApplicationRelationshipsBoolExp
}

input App_Mgmt_AppMgmtApplicationRelationshipsOrderByExp {
  appMgmtApplication: App_Mgmt_AppMgmtApplicationsOrderByExp
  appMgmtApplicationByApplicationId2: App_Mgmt_AppMgmtApplicationsOrderByExp
  appMgmtApplicationRelationshipId: OrderBy
  applicationId1: OrderBy
  applicationId2: OrderBy
  criticality: OrderBy
  description: OrderBy
  relationshipType: OrderBy
}

"""
Table to store comprehensive information about software applications within the organization.
"""
type App_Mgmt_AppMgmtApplications {
  appMgmtApplicationComponents(limit: Int, offset: Int, order_by: [App_Mgmt_AppMgmtApplicationComponentsOrderByExp!], where: App_Mgmt_AppMgmtApplicationComponentsBoolExp): [App_Mgmt_AppMgmtApplicationComponents!]
  appMgmtApplicationComponentsAggregate(filter_input: App_Mgmt_AppMgmtApplicationComponentsFilterInput): App_Mgmt_AppMgmtApplicationComponentsAggExp!

  """Unique identifier for an application."""
  appMgmtApplicationId: App_Mgmt_Uuid!
  appMgmtApplicationLicenses(limit: Int, offset: Int, order_by: [App_Mgmt_AppMgmtApplicationLicensesOrderByExp!], where: App_Mgmt_AppMgmtApplicationLicensesBoolExp): [App_Mgmt_AppMgmtApplicationLicenses!]
  appMgmtApplicationLicensesAggregate(filter_input: App_Mgmt_AppMgmtApplicationLicensesFilterInput): App_Mgmt_AppMgmtApplicationLicensesAggExp!
  appMgmtApplicationRelationships(limit: Int, offset: Int, order_by: [App_Mgmt_AppMgmtApplicationRelationshipsOrderByExp!], where: App_Mgmt_AppMgmtApplicationRelationshipsBoolExp): [App_Mgmt_AppMgmtApplicationRelationships!]
  appMgmtApplicationRelationshipsAggregate(filter_input: App_Mgmt_AppMgmtApplicationRelationshipsFilterInput): App_Mgmt_AppMgmtApplicationRelationshipsAggExp!
  appMgmtApplicationRelationshipsByApplicationId2(limit: Int, offset: Int, order_by: [App_Mgmt_AppMgmtApplicationRelationshipsOrderByExp!], where: App_Mgmt_AppMgmtApplicationRelationshipsBoolExp): [App_Mgmt_AppMgmtApplicationRelationships!]
  appMgmtApplicationRelationshipsByApplicationId2Aggregate(filter_input: App_Mgmt_AppMgmtApplicationRelationshipsFilterInput): App_Mgmt_AppMgmtApplicationRelationshipsAggExp!
  appMgmtArchitecture: App_Mgmt_AppMgmtArchitectures
  appMgmtSdlcProcess: App_Mgmt_AppMgmtSdlcProcesses
  appMgmtTeam: App_Mgmt_AppMgmtTeams
  appMgmtTeamByMaintainedByTeamId: App_Mgmt_AppMgmtTeams
  appMgmtTeamByOperatedByTeamId: App_Mgmt_AppMgmtTeams

  """Name of the application."""
  applicationName: App_Mgmt_Varchar
  applicationOwner: Enterprise_EnterpriseAssociates

  """
  Identifier for the individual responsible for communication with stakeholders,
  funding, budget, and strategy for the application.
  """
  applicationOwnerId: App_Mgmt_Int4

  """Type of application (e.g., web, mobile, desktop)."""
  applicationType: App_Mgmt_AppMgmtApplicationTypes

  """Identifier for the approved architecture the application adheres to."""
  architectureId: App_Mgmt_Uuid
  createdBy: Enterprise_EnterpriseAssociates

  """Identifier for the team that initially created the application."""
  createdByTeamId: App_Mgmt_Uuid

  """
  Identifier of the employee who initially created the application record.
  """
  createdByUserId: App_Mgmt_Int4

  """Date the application was deployed to its environment."""
  dateDeployed: App_Mgmt_Timestamptz

  """Date the application was retired or decommissioned."""
  dateRetired: App_Mgmt_Timestamptz
  department: Enterprise_EnterpriseDepartments

  """
  Environment where the application is deployed (e.g., on-premises, cloud).
  """
  deploymentEnvironment: App_Mgmt_AppMgmtDeploymentEnvironments

  """General description of the application's purpose."""
  description: App_Mgmt_Text

  """Link to the application's documentation."""
  documentationUrl: App_Mgmt_Varchar

  """
  Has financial responsibility for resource. This is the department that pays
  for maintenance, upgrades and operation of the application.
  """
  enterpriseDepartmentId: App_Mgmt_Int4

  """
  Current stage in the application's lifecycle (e.g., development, production).
  """
  lifecycleStatus: App_Mgmt_AppMgmtApplicationLifecycleStatus

  """
  Identifier for the team responsible for maintaining the application, including updates and fixes.
  """
  maintainedByTeamId: App_Mgmt_Uuid
  modifiedBy: Enterprise_EnterpriseAssociates

  """Identifier of the employee who last modified the application record."""
  modifiedByUserId: App_Mgmt_Int4

  """
  Identifier for the team responsible for the day-to-day operation of the application.
  """
  operatedByTeamId: App_Mgmt_Uuid

  """
  Recovery Point Objective (RPO): The maximum acceptable data loss for the application.
  """
  rpo: App_Mgmt_Interval

  """
  Recovery Time Objective (RTO): The maximum acceptable downtime for the application.
  """
  rto: App_Mgmt_Interval

  """
  Identifier for the SDLC process used to develop or manage the application.
  """
  sdlcProcessId: App_Mgmt_Uuid

  """Link to the repository where the application's source code is stored."""
  sourceCodeRepository: App_Mgmt_Varchar

  """Name of the vendor if the application is purchased."""
  vendor: App_Mgmt_Varchar

  """Current version of the application."""
  version: App_Mgmt_Varchar
}

type App_Mgmt_AppMgmtApplicationsAggExp {
  _count: Int!
  appMgmtApplicationId: App_Mgmt_UuidAggExp!
  applicationName: App_Mgmt_VarcharAggExp!
  applicationOwnerId: App_Mgmt_Int4AggExp!
  applicationType: App_Mgmt_AppMgmtApplicationTypesAggExp!
  architectureId: App_Mgmt_UuidAggExp!
  createdByTeamId: App_Mgmt_UuidAggExp!
  createdByUserId: App_Mgmt_Int4AggExp!
  dateDeployed: App_Mgmt_TimestamptzAggExp!
  dateRetired: App_Mgmt_TimestamptzAggExp!
  deploymentEnvironment: App_Mgmt_AppMgmtDeploymentEnvironmentsAggExp!
  description: App_Mgmt_TextAggExp!
  documentationUrl: App_Mgmt_VarcharAggExp!
  enterpriseDepartmentId: App_Mgmt_Int4AggExp!
  lifecycleStatus: App_Mgmt_AppMgmtApplicationLifecycleStatusAggExp!
  maintainedByTeamId: App_Mgmt_UuidAggExp!
  modifiedByUserId: App_Mgmt_Int4AggExp!
  operatedByTeamId: App_Mgmt_UuidAggExp!
  rpo: App_Mgmt_IntervalAggExp!
  rto: App_Mgmt_IntervalAggExp!
  sdlcProcessId: App_Mgmt_UuidAggExp!
  sourceCodeRepository: App_Mgmt_VarcharAggExp!
  vendor: App_Mgmt_VarcharAggExp!
  version: App_Mgmt_VarcharAggExp!
}

input App_Mgmt_AppMgmtApplicationsBoolExp {
  _and: [App_Mgmt_AppMgmtApplicationsBoolExp!]
  _not: App_Mgmt_AppMgmtApplicationsBoolExp
  _or: [App_Mgmt_AppMgmtApplicationsBoolExp!]
  appMgmtApplicationComponents: App_Mgmt_AppMgmtApplicationComponentsBoolExp
  appMgmtApplicationId: App_Mgmt_UuidBoolExp
  appMgmtApplicationLicenses: App_Mgmt_AppMgmtApplicationLicensesBoolExp
  appMgmtApplicationRelationships: App_Mgmt_AppMgmtApplicationRelationshipsBoolExp
  appMgmtApplicationRelationshipsByApplicationId2: App_Mgmt_AppMgmtApplicationRelationshipsBoolExp
  appMgmtArchitecture: App_Mgmt_AppMgmtArchitecturesBoolExp
  appMgmtSdlcProcess: App_Mgmt_AppMgmtSdlcProcessesBoolExp
  appMgmtTeam: App_Mgmt_AppMgmtTeamsBoolExp
  appMgmtTeamByMaintainedByTeamId: App_Mgmt_AppMgmtTeamsBoolExp
  appMgmtTeamByOperatedByTeamId: App_Mgmt_AppMgmtTeamsBoolExp
  applicationName: App_Mgmt_VarcharBoolExp
  applicationOwnerId: App_Mgmt_Int4BoolExp
  applicationType: App_Mgmt_AppMgmtApplicationTypesBoolExp
  architectureId: App_Mgmt_UuidBoolExp
  createdByTeamId: App_Mgmt_UuidBoolExp
  createdByUserId: App_Mgmt_Int4BoolExp
  dateDeployed: App_Mgmt_TimestamptzBoolExp
  dateRetired: App_Mgmt_TimestamptzBoolExp
  deploymentEnvironment: App_Mgmt_AppMgmtDeploymentEnvironmentsBoolExp
  description: App_Mgmt_TextBoolExp
  documentationUrl: App_Mgmt_VarcharBoolExp
  enterpriseDepartmentId: App_Mgmt_Int4BoolExp
  lifecycleStatus: App_Mgmt_AppMgmtApplicationLifecycleStatusBoolExp
  maintainedByTeamId: App_Mgmt_UuidBoolExp
  modifiedByUserId: App_Mgmt_Int4BoolExp
  operatedByTeamId: App_Mgmt_UuidBoolExp
  rpo: App_Mgmt_IntervalBoolExp
  rto: App_Mgmt_IntervalBoolExp
  sdlcProcessId: App_Mgmt_UuidBoolExp
  sourceCodeRepository: App_Mgmt_VarcharBoolExp
  vendor: App_Mgmt_VarcharBoolExp
  version: App_Mgmt_VarcharBoolExp
}

input App_Mgmt_AppMgmtApplicationsFilterInput {
  limit: Int
  offset: Int
  order_by: [App_Mgmt_AppMgmtApplicationsOrderByExp!]
  where: App_Mgmt_AppMgmtApplicationsBoolExp
}

input App_Mgmt_AppMgmtApplicationsOrderByExp {
  appMgmtApplicationId: OrderBy
  appMgmtArchitecture: App_Mgmt_AppMgmtArchitecturesOrderByExp
  appMgmtSdlcProcess: App_Mgmt_AppMgmtSdlcProcessesOrderByExp
  appMgmtTeam: App_Mgmt_AppMgmtTeamsOrderByExp
  appMgmtTeamByMaintainedByTeamId: App_Mgmt_AppMgmtTeamsOrderByExp
  appMgmtTeamByOperatedByTeamId: App_Mgmt_AppMgmtTeamsOrderByExp
  applicationName: OrderBy
  applicationOwnerId: OrderBy
  applicationType: OrderBy
  architectureId: OrderBy
  createdByTeamId: OrderBy
  createdByUserId: OrderBy
  dateDeployed: OrderBy
  dateRetired: OrderBy
  deploymentEnvironment: OrderBy
  description: OrderBy
  documentationUrl: OrderBy
  enterpriseDepartmentId: OrderBy
  lifecycleStatus: OrderBy
  maintainedByTeamId: OrderBy
  modifiedByUserId: OrderBy
  operatedByTeamId: OrderBy
  rpo: OrderBy
  rto: OrderBy
  sdlcProcessId: OrderBy
  sourceCodeRepository: OrderBy
  vendor: OrderBy
  version: OrderBy
}

scalar App_Mgmt_AppMgmtApplicationTypes

type App_Mgmt_AppMgmtApplicationTypesAggExp {
  _count: Int!
  _count_distinct: Int!
  max: App_Mgmt_AppMgmtApplicationTypes
  min: App_Mgmt_AppMgmtApplicationTypes
}

input App_Mgmt_AppMgmtApplicationTypesBoolExp {
  _and: [App_Mgmt_AppMgmtApplicationTypesBoolExp!]
  _eq: App_Mgmt_AppMgmtApplicationTypes
  _gt: App_Mgmt_AppMgmtApplicationTypes
  _gte: App_Mgmt_AppMgmtApplicationTypes
  _in: [App_Mgmt_AppMgmtApplicationTypes!]
  _is_null: Boolean
  _lt: App_Mgmt_AppMgmtApplicationTypes
  _lte: App_Mgmt_AppMgmtApplicationTypes
  _neq: App_Mgmt_AppMgmtApplicationTypes
  _not: App_Mgmt_AppMgmtApplicationTypesBoolExp
  _or: [App_Mgmt_AppMgmtApplicationTypesBoolExp!]
}

"""Table to store approved architectural designs and their key details."""
type App_Mgmt_AppMgmtArchitectures {
  ApprovedByAssociate: Enterprise_EnterpriseAssociates
  appMgmtApplications(limit: Int, offset: Int, order_by: [App_Mgmt_AppMgmtApplicationsOrderByExp!], where: App_Mgmt_AppMgmtApplicationsBoolExp): [App_Mgmt_AppMgmtApplications!]
  appMgmtApplicationsAggregate(filter_input: App_Mgmt_AppMgmtApplicationsFilterInput): App_Mgmt_AppMgmtApplicationsAggExp!

  """Unique identifier for an approved architectural design."""
  appMgmtArchitectureId: App_Mgmt_Uuid!
  appMgmtSdlcProcess: App_Mgmt_AppMgmtSdlcProcesses

  """Date when the architectural design was officially approved."""
  approvalDate: App_Mgmt_Timestamptz

  """Identifier of the employee who approved the design."""
  approvedById: App_Mgmt_Int4

  """Name given to the architectural design."""
  architectureName: App_Mgmt_Varchar
  createdBy: Enterprise_EnterpriseAssociates

  """Identifier of the employee who created the architectural design."""
  createdByUserId: App_Mgmt_Int4

  """Detailed explanation of the architectural design."""
  description: App_Mgmt_Text

  """Link to the full documentation for the architectural design."""
  documentationUrl: App_Mgmt_Varchar
  modifiedBy: Enterprise_EnterpriseAssociates

  """Identifier of the employee who last modified the architectural design."""
  modifiedByUserId: App_Mgmt_Int4

  """
  Identifier for the software development lifecycle process this architecture aligns with.
  """
  sdlcProcessId: App_Mgmt_Uuid

  """
  Current state of the architecture (e.g., approved, deprecated, proposed).
  """
  status: App_Mgmt_Varchar
}

type App_Mgmt_AppMgmtArchitecturesAggExp {
  _count: Int!
  appMgmtArchitectureId: App_Mgmt_UuidAggExp!
  approvalDate: App_Mgmt_TimestamptzAggExp!
  approvedById: App_Mgmt_Int4AggExp!
  architectureName: App_Mgmt_VarcharAggExp!
  createdByUserId: App_Mgmt_Int4AggExp!
  description: App_Mgmt_TextAggExp!
  documentationUrl: App_Mgmt_VarcharAggExp!
  modifiedByUserId: App_Mgmt_Int4AggExp!
  sdlcProcessId: App_Mgmt_UuidAggExp!
  status: App_Mgmt_VarcharAggExp!
}

input App_Mgmt_AppMgmtArchitecturesBoolExp {
  _and: [App_Mgmt_AppMgmtArchitecturesBoolExp!]
  _not: App_Mgmt_AppMgmtArchitecturesBoolExp
  _or: [App_Mgmt_AppMgmtArchitecturesBoolExp!]
  appMgmtApplications: App_Mgmt_AppMgmtApplicationsBoolExp
  appMgmtArchitectureId: App_Mgmt_UuidBoolExp
  appMgmtSdlcProcess: App_Mgmt_AppMgmtSdlcProcessesBoolExp
  approvalDate: App_Mgmt_TimestamptzBoolExp
  approvedById: App_Mgmt_Int4BoolExp
  architectureName: App_Mgmt_VarcharBoolExp
  createdByUserId: App_Mgmt_Int4BoolExp
  description: App_Mgmt_TextBoolExp
  documentationUrl: App_Mgmt_VarcharBoolExp
  modifiedByUserId: App_Mgmt_Int4BoolExp
  sdlcProcessId: App_Mgmt_UuidBoolExp
  status: App_Mgmt_VarcharBoolExp
}

input App_Mgmt_AppMgmtArchitecturesFilterInput {
  limit: Int
  offset: Int
  order_by: [App_Mgmt_AppMgmtArchitecturesOrderByExp!]
  where: App_Mgmt_AppMgmtArchitecturesBoolExp
}

input App_Mgmt_AppMgmtArchitecturesOrderByExp {
  appMgmtArchitectureId: OrderBy
  appMgmtSdlcProcess: App_Mgmt_AppMgmtSdlcProcessesOrderByExp
  approvalDate: OrderBy
  approvedById: OrderBy
  architectureName: OrderBy
  createdByUserId: OrderBy
  description: OrderBy
  documentationUrl: OrderBy
  modifiedByUserId: OrderBy
  sdlcProcessId: OrderBy
  status: OrderBy
}

"""Table to store component dependencies (BOM relationships)."""
type App_Mgmt_AppMgmtComponentDependencies {
  appMgmtComponent: App_Mgmt_AppMgmtComponents
  appMgmtComponentByParentComponentId: App_Mgmt_AppMgmtComponents

  """Identifier for the component being depended upon."""
  childComponentId: App_Mgmt_Uuid!

  """Type of dependency (e.g., runtime, build, test)."""
  dependencyType: App_Mgmt_AppMgmtDependencyTypes

  """Identifier for the component that depends on another component."""
  parentComponentId: App_Mgmt_Uuid!

  """Number of times the child component is used by the parent."""
  quantity: App_Mgmt_Int4
}

type App_Mgmt_AppMgmtComponentDependenciesAggExp {
  _count: Int!
  childComponentId: App_Mgmt_UuidAggExp!
  dependencyType: App_Mgmt_AppMgmtDependencyTypesAggExp!
  parentComponentId: App_Mgmt_UuidAggExp!
  quantity: App_Mgmt_Int4AggExp!
}

input App_Mgmt_AppMgmtComponentDependenciesBoolExp {
  _and: [App_Mgmt_AppMgmtComponentDependenciesBoolExp!]
  _not: App_Mgmt_AppMgmtComponentDependenciesBoolExp
  _or: [App_Mgmt_AppMgmtComponentDependenciesBoolExp!]
  appMgmtComponent: App_Mgmt_AppMgmtComponentsBoolExp
  appMgmtComponentByParentComponentId: App_Mgmt_AppMgmtComponentsBoolExp
  childComponentId: App_Mgmt_UuidBoolExp
  dependencyType: App_Mgmt_AppMgmtDependencyTypesBoolExp
  parentComponentId: App_Mgmt_UuidBoolExp
  quantity: App_Mgmt_Int4BoolExp
}

input App_Mgmt_AppMgmtComponentDependenciesFilterInput {
  limit: Int
  offset: Int
  order_by: [App_Mgmt_AppMgmtComponentDependenciesOrderByExp!]
  where: App_Mgmt_AppMgmtComponentDependenciesBoolExp
}

input App_Mgmt_AppMgmtComponentDependenciesOrderByExp {
  appMgmtComponent: App_Mgmt_AppMgmtComponentsOrderByExp
  appMgmtComponentByParentComponentId: App_Mgmt_AppMgmtComponentsOrderByExp
  childComponentId: OrderBy
  dependencyType: OrderBy
  parentComponentId: OrderBy
  quantity: OrderBy
}

"""Table to store detailed information about software components (BOM)."""
type App_Mgmt_AppMgmtComponents {
  appMgmtApplicationComponents(limit: Int, offset: Int, order_by: [App_Mgmt_AppMgmtApplicationComponentsOrderByExp!], where: App_Mgmt_AppMgmtApplicationComponentsBoolExp): [App_Mgmt_AppMgmtApplicationComponents!]
  appMgmtApplicationComponentsAggregate(filter_input: App_Mgmt_AppMgmtApplicationComponentsFilterInput): App_Mgmt_AppMgmtApplicationComponentsAggExp!
  appMgmtComponentDependencies(limit: Int, offset: Int, order_by: [App_Mgmt_AppMgmtComponentDependenciesOrderByExp!], where: App_Mgmt_AppMgmtComponentDependenciesBoolExp): [App_Mgmt_AppMgmtComponentDependencies!]
  appMgmtComponentDependenciesAggregate(filter_input: App_Mgmt_AppMgmtComponentDependenciesFilterInput): App_Mgmt_AppMgmtComponentDependenciesAggExp!
  appMgmtComponentDependenciesByParentComponentId(limit: Int, offset: Int, order_by: [App_Mgmt_AppMgmtComponentDependenciesOrderByExp!], where: App_Mgmt_AppMgmtComponentDependenciesBoolExp): [App_Mgmt_AppMgmtComponentDependencies!]
  appMgmtComponentDependenciesByParentComponentIdAggregate(filter_input: App_Mgmt_AppMgmtComponentDependenciesFilterInput): App_Mgmt_AppMgmtComponentDependenciesAggExp!

  """Unique identifier for a software component (e.g., library, module)."""
  appMgmtComponentId: App_Mgmt_Uuid!
  appMgmtLicense: App_Mgmt_AppMgmtLicenses

  """Identifier for the license associated with the component."""
  appMgmtLicenseId: App_Mgmt_Uuid

  """Name of the software component."""
  componentName: App_Mgmt_Varchar

  """
  Type of component (e.g., library, framework, API, module). Also used for
  language-specific categorization (e.g., java-library, npm-package).
  """
  componentType: App_Mgmt_AppMgmtComponentTypes

  """Version identifier for the software component."""
  componentVersion: App_Mgmt_Varchar
  createdBy: Enterprise_EnterpriseAssociates

  """Identifier of the employee who initially created the component record."""
  createdByUserId: App_Mgmt_Int4

  """Description of the component's functionality."""
  description: App_Mgmt_Text
  modifiedBy: Enterprise_EnterpriseAssociates

  """Identifier of the employee who last modified the component record."""
  modifiedByUserId: App_Mgmt_Int4

  """Namespace or module name within the component (if applicable)."""
  namespaceOrModule: App_Mgmt_Varchar

  """
  Language-specific package information (e.g., Maven coordinates, npm package name, NuGet package ID).
  """
  packageInfo: App_Mgmt_Text

  """
  Link to the component's repository (e.g., Maven repository, npm registry, NuGet feed).
  """
  repositoryUrl: App_Mgmt_Varchar

  """Vendor or provider of the software component."""
  vendor: App_Mgmt_Varchar
}

type App_Mgmt_AppMgmtComponentsAggExp {
  _count: Int!
  appMgmtComponentId: App_Mgmt_UuidAggExp!
  appMgmtLicenseId: App_Mgmt_UuidAggExp!
  componentName: App_Mgmt_VarcharAggExp!
  componentType: App_Mgmt_AppMgmtComponentTypesAggExp!
  componentVersion: App_Mgmt_VarcharAggExp!
  createdByUserId: App_Mgmt_Int4AggExp!
  description: App_Mgmt_TextAggExp!
  modifiedByUserId: App_Mgmt_Int4AggExp!
  namespaceOrModule: App_Mgmt_VarcharAggExp!
  packageInfo: App_Mgmt_TextAggExp!
  repositoryUrl: App_Mgmt_VarcharAggExp!
  vendor: App_Mgmt_VarcharAggExp!
}

input App_Mgmt_AppMgmtComponentsBoolExp {
  _and: [App_Mgmt_AppMgmtComponentsBoolExp!]
  _not: App_Mgmt_AppMgmtComponentsBoolExp
  _or: [App_Mgmt_AppMgmtComponentsBoolExp!]
  appMgmtApplicationComponents: App_Mgmt_AppMgmtApplicationComponentsBoolExp
  appMgmtComponentDependencies: App_Mgmt_AppMgmtComponentDependenciesBoolExp
  appMgmtComponentDependenciesByParentComponentId: App_Mgmt_AppMgmtComponentDependenciesBoolExp
  appMgmtComponentId: App_Mgmt_UuidBoolExp
  appMgmtLicense: App_Mgmt_AppMgmtLicensesBoolExp
  appMgmtLicenseId: App_Mgmt_UuidBoolExp
  componentName: App_Mgmt_VarcharBoolExp
  componentType: App_Mgmt_AppMgmtComponentTypesBoolExp
  componentVersion: App_Mgmt_VarcharBoolExp
  createdByUserId: App_Mgmt_Int4BoolExp
  description: App_Mgmt_TextBoolExp
  modifiedByUserId: App_Mgmt_Int4BoolExp
  namespaceOrModule: App_Mgmt_VarcharBoolExp
  packageInfo: App_Mgmt_TextBoolExp
  repositoryUrl: App_Mgmt_VarcharBoolExp
  vendor: App_Mgmt_VarcharBoolExp
}

input App_Mgmt_AppMgmtComponentsFilterInput {
  limit: Int
  offset: Int
  order_by: [App_Mgmt_AppMgmtComponentsOrderByExp!]
  where: App_Mgmt_AppMgmtComponentsBoolExp
}

input App_Mgmt_AppMgmtComponentsOrderByExp {
  appMgmtComponentId: OrderBy
  appMgmtLicense: App_Mgmt_AppMgmtLicensesOrderByExp
  appMgmtLicenseId: OrderBy
  componentName: OrderBy
  componentType: OrderBy
  componentVersion: OrderBy
  createdByUserId: OrderBy
  description: OrderBy
  modifiedByUserId: OrderBy
  namespaceOrModule: OrderBy
  packageInfo: OrderBy
  repositoryUrl: OrderBy
  vendor: OrderBy
}

scalar App_Mgmt_AppMgmtComponentTypes

type App_Mgmt_AppMgmtComponentTypesAggExp {
  _count: Int!
  _count_distinct: Int!
  max: App_Mgmt_AppMgmtComponentTypes
  min: App_Mgmt_AppMgmtComponentTypes
}

input App_Mgmt_AppMgmtComponentTypesBoolExp {
  _and: [App_Mgmt_AppMgmtComponentTypesBoolExp!]
  _eq: App_Mgmt_AppMgmtComponentTypes
  _gt: App_Mgmt_AppMgmtComponentTypes
  _gte: App_Mgmt_AppMgmtComponentTypes
  _in: [App_Mgmt_AppMgmtComponentTypes!]
  _is_null: Boolean
  _lt: App_Mgmt_AppMgmtComponentTypes
  _lte: App_Mgmt_AppMgmtComponentTypes
  _neq: App_Mgmt_AppMgmtComponentTypes
  _not: App_Mgmt_AppMgmtComponentTypesBoolExp
  _or: [App_Mgmt_AppMgmtComponentTypesBoolExp!]
}

scalar App_Mgmt_AppMgmtCriticalityLevels

type App_Mgmt_AppMgmtCriticalityLevelsAggExp {
  _count: Int!
  _count_distinct: Int!
  max: App_Mgmt_AppMgmtCriticalityLevels
  min: App_Mgmt_AppMgmtCriticalityLevels
}

input App_Mgmt_AppMgmtCriticalityLevelsBoolExp {
  _and: [App_Mgmt_AppMgmtCriticalityLevelsBoolExp!]
  _eq: App_Mgmt_AppMgmtCriticalityLevels
  _gt: App_Mgmt_AppMgmtCriticalityLevels
  _gte: App_Mgmt_AppMgmtCriticalityLevels
  _in: [App_Mgmt_AppMgmtCriticalityLevels!]
  _is_null: Boolean
  _lt: App_Mgmt_AppMgmtCriticalityLevels
  _lte: App_Mgmt_AppMgmtCriticalityLevels
  _neq: App_Mgmt_AppMgmtCriticalityLevels
  _not: App_Mgmt_AppMgmtCriticalityLevelsBoolExp
  _or: [App_Mgmt_AppMgmtCriticalityLevelsBoolExp!]
}

scalar App_Mgmt_AppMgmtDependencyTypes

type App_Mgmt_AppMgmtDependencyTypesAggExp {
  _count: Int!
  _count_distinct: Int!
  max: App_Mgmt_AppMgmtDependencyTypes
  min: App_Mgmt_AppMgmtDependencyTypes
}

input App_Mgmt_AppMgmtDependencyTypesBoolExp {
  _and: [App_Mgmt_AppMgmtDependencyTypesBoolExp!]
  _eq: App_Mgmt_AppMgmtDependencyTypes
  _gt: App_Mgmt_AppMgmtDependencyTypes
  _gte: App_Mgmt_AppMgmtDependencyTypes
  _in: [App_Mgmt_AppMgmtDependencyTypes!]
  _is_null: Boolean
  _lt: App_Mgmt_AppMgmtDependencyTypes
  _lte: App_Mgmt_AppMgmtDependencyTypes
  _neq: App_Mgmt_AppMgmtDependencyTypes
  _not: App_Mgmt_AppMgmtDependencyTypesBoolExp
  _or: [App_Mgmt_AppMgmtDependencyTypesBoolExp!]
}

scalar App_Mgmt_AppMgmtDeploymentEnvironments

type App_Mgmt_AppMgmtDeploymentEnvironmentsAggExp {
  _count: Int!
  _count_distinct: Int!
  max: App_Mgmt_AppMgmtDeploymentEnvironments
  min: App_Mgmt_AppMgmtDeploymentEnvironments
}

input App_Mgmt_AppMgmtDeploymentEnvironmentsBoolExp {
  _and: [App_Mgmt_AppMgmtDeploymentEnvironmentsBoolExp!]
  _eq: App_Mgmt_AppMgmtDeploymentEnvironments
  _gt: App_Mgmt_AppMgmtDeploymentEnvironments
  _gte: App_Mgmt_AppMgmtDeploymentEnvironments
  _in: [App_Mgmt_AppMgmtDeploymentEnvironments!]
  _is_null: Boolean
  _lt: App_Mgmt_AppMgmtDeploymentEnvironments
  _lte: App_Mgmt_AppMgmtDeploymentEnvironments
  _neq: App_Mgmt_AppMgmtDeploymentEnvironments
  _not: App_Mgmt_AppMgmtDeploymentEnvironmentsBoolExp
  _or: [App_Mgmt_AppMgmtDeploymentEnvironmentsBoolExp!]
}

"""Table to store information about software licenses."""
type App_Mgmt_AppMgmtLicenses {
  appMgmtApplicationLicenses(limit: Int, offset: Int, order_by: [App_Mgmt_AppMgmtApplicationLicensesOrderByExp!], where: App_Mgmt_AppMgmtApplicationLicensesBoolExp): [App_Mgmt_AppMgmtApplicationLicenses!]
  appMgmtApplicationLicensesAggregate(filter_input: App_Mgmt_AppMgmtApplicationLicensesFilterInput): App_Mgmt_AppMgmtApplicationLicensesAggExp!
  appMgmtComponents(limit: Int, offset: Int, order_by: [App_Mgmt_AppMgmtComponentsOrderByExp!], where: App_Mgmt_AppMgmtComponentsBoolExp): [App_Mgmt_AppMgmtComponents!]
  appMgmtComponentsAggregate(filter_input: App_Mgmt_AppMgmtComponentsFilterInput): App_Mgmt_AppMgmtComponentsAggExp!

  """Unique identifier for a software license."""
  appMgmtLicenseId: App_Mgmt_Uuid!

  """Name of the software license."""
  licenseName: App_Mgmt_Varchar

  """Full text or a summary of the software license terms."""
  licenseText: App_Mgmt_Text

  """Type of software license (e.g., MIT, GPL)."""
  licenseType: App_Mgmt_AppMgmtLicenseTypes
}

type App_Mgmt_AppMgmtLicensesAggExp {
  _count: Int!
  appMgmtLicenseId: App_Mgmt_UuidAggExp!
  licenseName: App_Mgmt_VarcharAggExp!
  licenseText: App_Mgmt_TextAggExp!
  licenseType: App_Mgmt_AppMgmtLicenseTypesAggExp!
}

input App_Mgmt_AppMgmtLicensesBoolExp {
  _and: [App_Mgmt_AppMgmtLicensesBoolExp!]
  _not: App_Mgmt_AppMgmtLicensesBoolExp
  _or: [App_Mgmt_AppMgmtLicensesBoolExp!]
  appMgmtApplicationLicenses: App_Mgmt_AppMgmtApplicationLicensesBoolExp
  appMgmtComponents: App_Mgmt_AppMgmtComponentsBoolExp
  appMgmtLicenseId: App_Mgmt_UuidBoolExp
  licenseName: App_Mgmt_VarcharBoolExp
  licenseText: App_Mgmt_TextBoolExp
  licenseType: App_Mgmt_AppMgmtLicenseTypesBoolExp
}

input App_Mgmt_AppMgmtLicensesFilterInput {
  limit: Int
  offset: Int
  order_by: [App_Mgmt_AppMgmtLicensesOrderByExp!]
  where: App_Mgmt_AppMgmtLicensesBoolExp
}

input App_Mgmt_AppMgmtLicensesOrderByExp {
  appMgmtLicenseId: OrderBy
  licenseName: OrderBy
  licenseText: OrderBy
  licenseType: OrderBy
}

scalar App_Mgmt_AppMgmtLicenseTypes

type App_Mgmt_AppMgmtLicenseTypesAggExp {
  _count: Int!
  _count_distinct: Int!
  max: App_Mgmt_AppMgmtLicenseTypes
  min: App_Mgmt_AppMgmtLicenseTypes
}

input App_Mgmt_AppMgmtLicenseTypesBoolExp {
  _and: [App_Mgmt_AppMgmtLicenseTypesBoolExp!]
  _eq: App_Mgmt_AppMgmtLicenseTypes
  _gt: App_Mgmt_AppMgmtLicenseTypes
  _gte: App_Mgmt_AppMgmtLicenseTypes
  _in: [App_Mgmt_AppMgmtLicenseTypes!]
  _is_null: Boolean
  _lt: App_Mgmt_AppMgmtLicenseTypes
  _lte: App_Mgmt_AppMgmtLicenseTypes
  _neq: App_Mgmt_AppMgmtLicenseTypes
  _not: App_Mgmt_AppMgmtLicenseTypesBoolExp
  _or: [App_Mgmt_AppMgmtLicenseTypesBoolExp!]
}

scalar App_Mgmt_AppMgmtRelationshipTypes

type App_Mgmt_AppMgmtRelationshipTypesAggExp {
  _count: Int!
  _count_distinct: Int!
  max: App_Mgmt_AppMgmtRelationshipTypes
  min: App_Mgmt_AppMgmtRelationshipTypes
}

input App_Mgmt_AppMgmtRelationshipTypesBoolExp {
  _and: [App_Mgmt_AppMgmtRelationshipTypesBoolExp!]
  _eq: App_Mgmt_AppMgmtRelationshipTypes
  _gt: App_Mgmt_AppMgmtRelationshipTypes
  _gte: App_Mgmt_AppMgmtRelationshipTypes
  _in: [App_Mgmt_AppMgmtRelationshipTypes!]
  _is_null: Boolean
  _lt: App_Mgmt_AppMgmtRelationshipTypes
  _lte: App_Mgmt_AppMgmtRelationshipTypes
  _neq: App_Mgmt_AppMgmtRelationshipTypes
  _not: App_Mgmt_AppMgmtRelationshipTypesBoolExp
  _or: [App_Mgmt_AppMgmtRelationshipTypesBoolExp!]
}

"""
Table to store software development lifecycle processes and their attributes.
"""
type App_Mgmt_AppMgmtSdlcProcesses {
  appMgmtApplications(limit: Int, offset: Int, order_by: [App_Mgmt_AppMgmtApplicationsOrderByExp!], where: App_Mgmt_AppMgmtApplicationsBoolExp): [App_Mgmt_AppMgmtApplications!]
  appMgmtApplicationsAggregate(filter_input: App_Mgmt_AppMgmtApplicationsFilterInput): App_Mgmt_AppMgmtApplicationsAggExp!
  appMgmtArchitectures(limit: Int, offset: Int, order_by: [App_Mgmt_AppMgmtArchitecturesOrderByExp!], where: App_Mgmt_AppMgmtArchitecturesBoolExp): [App_Mgmt_AppMgmtArchitectures!]
  appMgmtArchitecturesAggregate(filter_input: App_Mgmt_AppMgmtArchitecturesFilterInput): App_Mgmt_AppMgmtArchitecturesAggExp!

  """
  Unique identifier for a defined software development lifecycle process.
  """
  appMgmtSdlcProcessId: App_Mgmt_Uuid!
  appMgmtTeam: App_Mgmt_AppMgmtTeams

  """Identifier for the team that manages this SDLC process."""
  appMgmtTeamId: App_Mgmt_Uuid

  """Description of the steps and activities within the SDLC process."""
  description: App_Mgmt_Text

  """Link to the full documentation for the SDLC process."""
  documentationUrl: App_Mgmt_Varchar

  """Name of the software development lifecycle process."""
  processName: App_Mgmt_Varchar

  """The individual responsible for the SDLC process."""
  processOwner: App_Mgmt_Int4

  """Version number or identifier for the SDLC process."""
  version: App_Mgmt_Varchar
}

type App_Mgmt_AppMgmtSdlcProcessesAggExp {
  _count: Int!
  appMgmtSdlcProcessId: App_Mgmt_UuidAggExp!
  appMgmtTeamId: App_Mgmt_UuidAggExp!
  description: App_Mgmt_TextAggExp!
  documentationUrl: App_Mgmt_VarcharAggExp!
  processName: App_Mgmt_VarcharAggExp!
  processOwner: App_Mgmt_Int4AggExp!
  version: App_Mgmt_VarcharAggExp!
}

input App_Mgmt_AppMgmtSdlcProcessesBoolExp {
  _and: [App_Mgmt_AppMgmtSdlcProcessesBoolExp!]
  _not: App_Mgmt_AppMgmtSdlcProcessesBoolExp
  _or: [App_Mgmt_AppMgmtSdlcProcessesBoolExp!]
  appMgmtApplications: App_Mgmt_AppMgmtApplicationsBoolExp
  appMgmtArchitectures: App_Mgmt_AppMgmtArchitecturesBoolExp
  appMgmtSdlcProcessId: App_Mgmt_UuidBoolExp
  appMgmtTeam: App_Mgmt_AppMgmtTeamsBoolExp
  appMgmtTeamId: App_Mgmt_UuidBoolExp
  description: App_Mgmt_TextBoolExp
  documentationUrl: App_Mgmt_VarcharBoolExp
  processName: App_Mgmt_VarcharBoolExp
  processOwner: App_Mgmt_Int4BoolExp
  version: App_Mgmt_VarcharBoolExp
}

input App_Mgmt_AppMgmtSdlcProcessesFilterInput {
  limit: Int
  offset: Int
  order_by: [App_Mgmt_AppMgmtSdlcProcessesOrderByExp!]
  where: App_Mgmt_AppMgmtSdlcProcessesBoolExp
}

input App_Mgmt_AppMgmtSdlcProcessesOrderByExp {
  appMgmtSdlcProcessId: OrderBy
  appMgmtTeam: App_Mgmt_AppMgmtTeamsOrderByExp
  appMgmtTeamId: OrderBy
  description: OrderBy
  documentationUrl: OrderBy
  processName: OrderBy
  processOwner: OrderBy
  version: OrderBy
}

"""
Table to store the associations between teams and their members, including member functions.
"""
type App_Mgmt_AppMgmtTeamMembers {
  appMgmtTeam: App_Mgmt_AppMgmtTeams

  """Identifier of the team."""
  appMgmtTeamId: App_Mgmt_Uuid!
  associate(limit: Int, offset: Int, order_by: [Enterprise_EnterpriseAssociatesOrderByExp!], where: Enterprise_EnterpriseAssociatesBoolExp): [Enterprise_EnterpriseAssociates!]

  """Identifier of the team member from the enterprise associates table."""
  enterpriseAssociateId: App_Mgmt_Int4!

  """Function or role of the team member within the team."""
  function: App_Mgmt_Varchar
}

type App_Mgmt_AppMgmtTeamMembersAggExp {
  _count: Int!
  appMgmtTeamId: App_Mgmt_UuidAggExp!
  enterpriseAssociateId: App_Mgmt_Int4AggExp!
  function: App_Mgmt_VarcharAggExp!
}

input App_Mgmt_AppMgmtTeamMembersBoolExp {
  _and: [App_Mgmt_AppMgmtTeamMembersBoolExp!]
  _not: App_Mgmt_AppMgmtTeamMembersBoolExp
  _or: [App_Mgmt_AppMgmtTeamMembersBoolExp!]
  appMgmtTeam: App_Mgmt_AppMgmtTeamsBoolExp
  appMgmtTeamId: App_Mgmt_UuidBoolExp
  enterpriseAssociateId: App_Mgmt_Int4BoolExp
  function: App_Mgmt_VarcharBoolExp
}

input App_Mgmt_AppMgmtTeamMembersFilterInput {
  limit: Int
  offset: Int
  order_by: [App_Mgmt_AppMgmtTeamMembersOrderByExp!]
  where: App_Mgmt_AppMgmtTeamMembersBoolExp
}

input App_Mgmt_AppMgmtTeamMembersOrderByExp {
  appMgmtTeam: App_Mgmt_AppMgmtTeamsOrderByExp
  appMgmtTeamId: OrderBy
  enterpriseAssociateId: OrderBy
  function: OrderBy
}

"""
Table to store information about development and management teams, including team lead association.
"""
type App_Mgmt_AppMgmtTeams {
  appMgmtApplications(limit: Int, offset: Int, order_by: [App_Mgmt_AppMgmtApplicationsOrderByExp!], where: App_Mgmt_AppMgmtApplicationsBoolExp): [App_Mgmt_AppMgmtApplications!]
  appMgmtApplicationsAggregate(filter_input: App_Mgmt_AppMgmtApplicationsFilterInput): App_Mgmt_AppMgmtApplicationsAggExp!
  appMgmtApplicationsByMaintainedByTeamId(limit: Int, offset: Int, order_by: [App_Mgmt_AppMgmtApplicationsOrderByExp!], where: App_Mgmt_AppMgmtApplicationsBoolExp): [App_Mgmt_AppMgmtApplications!]
  appMgmtApplicationsByMaintainedByTeamIdAggregate(filter_input: App_Mgmt_AppMgmtApplicationsFilterInput): App_Mgmt_AppMgmtApplicationsAggExp!
  appMgmtApplicationsByOperatedByTeamId(limit: Int, offset: Int, order_by: [App_Mgmt_AppMgmtApplicationsOrderByExp!], where: App_Mgmt_AppMgmtApplicationsBoolExp): [App_Mgmt_AppMgmtApplications!]
  appMgmtApplicationsByOperatedByTeamIdAggregate(filter_input: App_Mgmt_AppMgmtApplicationsFilterInput): App_Mgmt_AppMgmtApplicationsAggExp!
  appMgmtSdlcProcesses(limit: Int, offset: Int, order_by: [App_Mgmt_AppMgmtSdlcProcessesOrderByExp!], where: App_Mgmt_AppMgmtSdlcProcessesBoolExp): [App_Mgmt_AppMgmtSdlcProcesses!]
  appMgmtSdlcProcessesAggregate(filter_input: App_Mgmt_AppMgmtSdlcProcessesFilterInput): App_Mgmt_AppMgmtSdlcProcessesAggExp!

  """Unique identifier for a development or management team."""
  appMgmtTeamId: App_Mgmt_Uuid!
  appMgmtTeamMembers(limit: Int, offset: Int, order_by: [App_Mgmt_AppMgmtTeamMembersOrderByExp!], where: App_Mgmt_AppMgmtTeamMembersBoolExp): [App_Mgmt_AppMgmtTeamMembers!]
  appMgmtTeamMembersAggregate(filter_input: App_Mgmt_AppMgmtTeamMembersFilterInput): App_Mgmt_AppMgmtTeamMembersAggExp!

  """Description of the team's responsibilities."""
  description: App_Mgmt_Text
  teamLead: Enterprise_EnterpriseAssociates

  """Identifier of the team lead from the enterprise associates table."""
  teamLeadId: App_Mgmt_Int4

  """Name of the team."""
  teamName: App_Mgmt_Varchar
}

type App_Mgmt_AppMgmtTeamsAggExp {
  _count: Int!
  appMgmtTeamId: App_Mgmt_UuidAggExp!
  description: App_Mgmt_TextAggExp!
  teamLeadId: App_Mgmt_Int4AggExp!
  teamName: App_Mgmt_VarcharAggExp!
}

input App_Mgmt_AppMgmtTeamsBoolExp {
  _and: [App_Mgmt_AppMgmtTeamsBoolExp!]
  _not: App_Mgmt_AppMgmtTeamsBoolExp
  _or: [App_Mgmt_AppMgmtTeamsBoolExp!]
  appMgmtApplications: App_Mgmt_AppMgmtApplicationsBoolExp
  appMgmtApplicationsByMaintainedByTeamId: App_Mgmt_AppMgmtApplicationsBoolExp
  appMgmtApplicationsByOperatedByTeamId: App_Mgmt_AppMgmtApplicationsBoolExp
  appMgmtSdlcProcesses: App_Mgmt_AppMgmtSdlcProcessesBoolExp
  appMgmtTeamId: App_Mgmt_UuidBoolExp
  appMgmtTeamMembers: App_Mgmt_AppMgmtTeamMembersBoolExp
  description: App_Mgmt_TextBoolExp
  teamLeadId: App_Mgmt_Int4BoolExp
  teamName: App_Mgmt_VarcharBoolExp
}

input App_Mgmt_AppMgmtTeamsFilterInput {
  limit: Int
  offset: Int
  order_by: [App_Mgmt_AppMgmtTeamsOrderByExp!]
  where: App_Mgmt_AppMgmtTeamsBoolExp
}

input App_Mgmt_AppMgmtTeamsOrderByExp {
  appMgmtTeamId: OrderBy
  description: OrderBy
  teamLeadId: OrderBy
  teamName: OrderBy
}

scalar App_Mgmt_Int4

type App_Mgmt_Int4AggExp {
  _count: Int!
  _count_distinct: Int!
  avg: App_Mgmt_Numeric
  bit_and: App_Mgmt_Int4
  bit_or: App_Mgmt_Int4
  bit_xor: App_Mgmt_Int4
  max: App_Mgmt_Int4
  min: App_Mgmt_Int4
  stddev: App_Mgmt_Numeric
  stddev_pop: App_Mgmt_Numeric
  stddev_samp: App_Mgmt_Numeric
  sum: App_Mgmt_Int8
  var_pop: App_Mgmt_Numeric
  var_samp: App_Mgmt_Numeric
  variance: App_Mgmt_Numeric
}

input App_Mgmt_Int4BoolExp {
  _and: [App_Mgmt_Int4BoolExp!]
  _eq: App_Mgmt_Int4
  _gt: App_Mgmt_Int4
  _gte: App_Mgmt_Int4
  _in: [App_Mgmt_Int4!]
  _is_null: Boolean
  _lt: App_Mgmt_Int4
  _lte: App_Mgmt_Int4
  _neq: App_Mgmt_Int4
  _not: App_Mgmt_Int4BoolExp
  _or: [App_Mgmt_Int4BoolExp!]
}

scalar App_Mgmt_Int8

scalar App_Mgmt_Interval

type App_Mgmt_IntervalAggExp {
  _count: Int!
  _count_distinct: Int!
  avg: App_Mgmt_Interval
  max: App_Mgmt_Interval
  min: App_Mgmt_Interval
  sum: App_Mgmt_Interval
}

input App_Mgmt_IntervalBoolExp {
  _and: [App_Mgmt_IntervalBoolExp!]
  _eq: App_Mgmt_Interval
  _gt: App_Mgmt_Interval
  _gte: App_Mgmt_Interval
  _in: [App_Mgmt_Interval!]
  _is_null: Boolean
  _lt: App_Mgmt_Interval
  _lte: App_Mgmt_Interval
  _neq: App_Mgmt_Interval
  _not: App_Mgmt_IntervalBoolExp
  _or: [App_Mgmt_IntervalBoolExp!]
}

scalar App_Mgmt_Numeric

scalar App_Mgmt_Text

type App_Mgmt_TextAggExp {
  _count: Int!
  _count_distinct: Int!
  max: App_Mgmt_Text
  min: App_Mgmt_Text
}

input App_Mgmt_TextBoolExp {
  _and: [App_Mgmt_TextBoolExp!]
  _eq: App_Mgmt_Text
  _gt: App_Mgmt_Text
  _gte: App_Mgmt_Text
  _ilike: App_Mgmt_Text
  _in: [App_Mgmt_Text!]
  _iregex: App_Mgmt_Text
  _is_null: Boolean
  _like: App_Mgmt_Text
  _lt: App_Mgmt_Text
  _lte: App_Mgmt_Text
  _neq: App_Mgmt_Text
  _nilike: App_Mgmt_Text
  _niregex: App_Mgmt_Text
  _nlike: App_Mgmt_Text
  _not: App_Mgmt_TextBoolExp
  _nregex: App_Mgmt_Text
  _or: [App_Mgmt_TextBoolExp!]
  _regex: App_Mgmt_Text
  starts_with: App_Mgmt_Text
  ts_match_tt: App_Mgmt_Text
}

scalar App_Mgmt_Timestamptz

type App_Mgmt_TimestamptzAggExp {
  _count: Int!
  _count_distinct: Int!
  max: App_Mgmt_Timestamptz
  min: App_Mgmt_Timestamptz
}

input App_Mgmt_TimestamptzBoolExp {
  _and: [App_Mgmt_TimestamptzBoolExp!]
  _eq: App_Mgmt_Timestamptz
  _gt: App_Mgmt_Timestamptz
  _gte: App_Mgmt_Timestamptz
  _in: [App_Mgmt_Timestamptz!]
  _is_null: Boolean
  _lt: App_Mgmt_Timestamptz
  _lte: App_Mgmt_Timestamptz
  _neq: App_Mgmt_Timestamptz
  _not: App_Mgmt_TimestamptzBoolExp
  _or: [App_Mgmt_TimestamptzBoolExp!]
}

scalar App_Mgmt_Uuid

type App_Mgmt_UuidAggExp {
  _count: Int!
  _count_distinct: Int!
}

input App_Mgmt_UuidBoolExp {
  _and: [App_Mgmt_UuidBoolExp!]
  _eq: App_Mgmt_Uuid
  _gt: App_Mgmt_Uuid
  _gte: App_Mgmt_Uuid
  _in: [App_Mgmt_Uuid!]
  _is_null: Boolean
  _lt: App_Mgmt_Uuid
  _lte: App_Mgmt_Uuid
  _neq: App_Mgmt_Uuid
  _not: App_Mgmt_UuidBoolExp
  _or: [App_Mgmt_UuidBoolExp!]
}

scalar App_Mgmt_Varchar

type App_Mgmt_VarcharAggExp {
  _count: Int!
  _count_distinct: Int!
  max: App_Mgmt_Text
  min: App_Mgmt_Text
}

input App_Mgmt_VarcharBoolExp {
  _and: [App_Mgmt_VarcharBoolExp!]
  _eq: App_Mgmt_Varchar
  _gt: App_Mgmt_Varchar
  _gte: App_Mgmt_Varchar
  _ilike: App_Mgmt_Varchar
  _in: [App_Mgmt_Varchar!]
  _iregex: App_Mgmt_Varchar
  _is_null: Boolean
  _like: App_Mgmt_Varchar
  _lt: App_Mgmt_Varchar
  _lte: App_Mgmt_Varchar
  _neq: App_Mgmt_Varchar
  _nilike: App_Mgmt_Varchar
  _niregex: App_Mgmt_Varchar
  _nlike: App_Mgmt_Varchar
  _not: App_Mgmt_VarcharBoolExp
  _nregex: App_Mgmt_Varchar
  _or: [App_Mgmt_VarcharBoolExp!]
  _regex: App_Mgmt_Varchar
  starts_with: App_Mgmt_Varchar
  ts_match_tt: App_Mgmt_Varchar
}

scalar ConsumerBanking_Bool

type ConsumerBanking_BoolAggExp {
  _count: Int!
  _count_distinct: Int!
  bool_and: ConsumerBanking_Bool
  bool_or: ConsumerBanking_Bool
  every: ConsumerBanking_Bool
}

input ConsumerBanking_BoolBoolExp {
  _and: [ConsumerBanking_BoolBoolExp!]
  _eq: ConsumerBanking_Bool
  _gt: ConsumerBanking_Bool
  _gte: ConsumerBanking_Bool
  _in: [ConsumerBanking_Bool!]
  _is_null: Boolean
  _lt: ConsumerBanking_Bool
  _lte: ConsumerBanking_Bool
  _neq: ConsumerBanking_Bool
  _not: ConsumerBanking_BoolBoolExp
  _or: [ConsumerBanking_BoolBoolExp!]
}

"""
Stores consent records for account access, tracking when and how third parties
are permitted to access consumer banking account information
"""
type ConsumerBanking_ConsumerBankingAccountAccessConsents {
  consumerBankingAccount: ConsumerBanking_ConsumerBankingAccounts
  consumerBankingAccountAccessConsentsPermissions(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingAccountAccessConsentsPermissionsOrderByExp!], where: ConsumerBanking_ConsumerBankingAccountAccessConsentsPermissionsBoolExp): [ConsumerBanking_ConsumerBankingAccountAccessConsentsPermissions!]
  consumerBankingAccountAccessConsentsPermissionsAggregate(filter_input: ConsumerBanking_ConsumerBankingAccountAccessConsentsPermissionsFilterInput): ConsumerBanking_ConsumerBankingAccountAccessConsentsPermissionsAggExp!

  """References the account that the consent is related to."""
  consumerBankingAccountId: ConsumerBanking_Int4!

  """Unique identifier for each consent record"""
  consumerBankingConsentId: ConsumerBanking_Int4!

  """When the consent was initially created"""
  creationDateTime: ConsumerBanking_Timestamptz!

  """When the consent will expire (if applicable)"""
  expirationDateTime: ConsumerBanking_Timestamptz

  """Current status of the consent (e.g., Active, Revoked)"""
  status: ConsumerBanking_ConsumerBankingConsentStatus!

  """When the status was last changed"""
  statusUpdateDateTime: ConsumerBanking_Timestamptz!
}

type ConsumerBanking_ConsumerBankingAccountAccessConsentsAggExp {
  _count: Int!
  consumerBankingAccountId: ConsumerBanking_Int4AggExp!
  consumerBankingConsentId: ConsumerBanking_Int4AggExp!
  creationDateTime: ConsumerBanking_TimestamptzAggExp!
  expirationDateTime: ConsumerBanking_TimestamptzAggExp!
  status: ConsumerBanking_ConsumerBankingConsentStatusAggExp!
  statusUpdateDateTime: ConsumerBanking_TimestamptzAggExp!
}

input ConsumerBanking_ConsumerBankingAccountAccessConsentsBoolExp {
  _and: [ConsumerBanking_ConsumerBankingAccountAccessConsentsBoolExp!]
  _not: ConsumerBanking_ConsumerBankingAccountAccessConsentsBoolExp
  _or: [ConsumerBanking_ConsumerBankingAccountAccessConsentsBoolExp!]
  consumerBankingAccount: ConsumerBanking_ConsumerBankingAccountsBoolExp
  consumerBankingAccountAccessConsentsPermissions: ConsumerBanking_ConsumerBankingAccountAccessConsentsPermissionsBoolExp
  consumerBankingAccountId: ConsumerBanking_Int4BoolExp
  consumerBankingConsentId: ConsumerBanking_Int4BoolExp
  creationDateTime: ConsumerBanking_TimestamptzBoolExp
  expirationDateTime: ConsumerBanking_TimestamptzBoolExp
  status: ConsumerBanking_ConsumerBankingConsentStatusBoolExp
  statusUpdateDateTime: ConsumerBanking_TimestamptzBoolExp
}

input ConsumerBanking_ConsumerBankingAccountAccessConsentsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingAccountAccessConsentsOrderByExp!]
  where: ConsumerBanking_ConsumerBankingAccountAccessConsentsBoolExp
}

input ConsumerBanking_ConsumerBankingAccountAccessConsentsOrderByExp {
  consumerBankingAccount: ConsumerBanking_ConsumerBankingAccountsOrderByExp
  consumerBankingAccountId: OrderBy
  consumerBankingConsentId: OrderBy
  creationDateTime: OrderBy
  expirationDateTime: OrderBy
  status: OrderBy
  statusUpdateDateTime: OrderBy
}

"""
Junction table linking consents to specific permissions granted, implements a many-to-many relationship
"""
type ConsumerBanking_ConsumerBankingAccountAccessConsentsPermissions {
  consumerBankingAccountAccessConsent: ConsumerBanking_ConsumerBankingAccountAccessConsents

  """References a consent record"""
  consumerBankingConsentId: ConsumerBanking_Int4

  """References a permission record"""
  enterprisePermissionId: ConsumerBanking_Int4
  hasPermissions: Enterprise_EnterprisePermissions
}

type ConsumerBanking_ConsumerBankingAccountAccessConsentsPermissionsAggExp {
  _count: Int!
  consumerBankingConsentId: ConsumerBanking_Int4AggExp!
  enterprisePermissionId: ConsumerBanking_Int4AggExp!
}

input ConsumerBanking_ConsumerBankingAccountAccessConsentsPermissionsBoolExp {
  _and: [ConsumerBanking_ConsumerBankingAccountAccessConsentsPermissionsBoolExp!]
  _not: ConsumerBanking_ConsumerBankingAccountAccessConsentsPermissionsBoolExp
  _or: [ConsumerBanking_ConsumerBankingAccountAccessConsentsPermissionsBoolExp!]
  consumerBankingAccountAccessConsent: ConsumerBanking_ConsumerBankingAccountAccessConsentsBoolExp
  consumerBankingConsentId: ConsumerBanking_Int4BoolExp
  enterprisePermissionId: ConsumerBanking_Int4BoolExp
}

input ConsumerBanking_ConsumerBankingAccountAccessConsentsPermissionsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingAccountAccessConsentsPermissionsOrderByExp!]
  where: ConsumerBanking_ConsumerBankingAccountAccessConsentsPermissionsBoolExp
}

input ConsumerBanking_ConsumerBankingAccountAccessConsentsPermissionsOrderByExp {
  consumerBankingAccountAccessConsent: ConsumerBanking_ConsumerBankingAccountAccessConsentsOrderByExp
  consumerBankingConsentId: OrderBy
  enterprisePermissionId: OrderBy
}

scalar ConsumerBanking_ConsumerBankingAccountFeeSchedule

type ConsumerBanking_ConsumerBankingAccountFeeScheduleAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingAccountFeeSchedule
  min: ConsumerBanking_ConsumerBankingAccountFeeSchedule
}

input ConsumerBanking_ConsumerBankingAccountFeeScheduleBoolExp {
  _and: [ConsumerBanking_ConsumerBankingAccountFeeScheduleBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingAccountFeeSchedule
  _gt: ConsumerBanking_ConsumerBankingAccountFeeSchedule
  _gte: ConsumerBanking_ConsumerBankingAccountFeeSchedule
  _in: [ConsumerBanking_ConsumerBankingAccountFeeSchedule!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingAccountFeeSchedule
  _lte: ConsumerBanking_ConsumerBankingAccountFeeSchedule
  _neq: ConsumerBanking_ConsumerBankingAccountFeeSchedule
  _not: ConsumerBanking_ConsumerBankingAccountFeeScheduleBoolExp
  _or: [ConsumerBanking_ConsumerBankingAccountFeeScheduleBoolExp!]
}

"""
Deposit account linked to enterprise account; always serviced by a this institution
"""
type ConsumerBanking_ConsumerBankingAccounts {
  consumerBankingAccountAccessConsents(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingAccountAccessConsentsOrderByExp!], where: ConsumerBanking_ConsumerBankingAccountAccessConsentsBoolExp): [ConsumerBanking_ConsumerBankingAccountAccessConsents!]
  consumerBankingAccountAccessConsentsAggregate(filter_input: ConsumerBanking_ConsumerBankingAccountAccessConsentsFilterInput): ConsumerBanking_ConsumerBankingAccountAccessConsentsAggExp!

  """Unique ID for the consumer banking account"""
  consumerBankingAccountId: ConsumerBanking_Int4!
  consumerBankingAccountStatementPreferences(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingAccountStatementPreferencesOrderByExp!], where: ConsumerBanking_ConsumerBankingAccountStatementPreferencesBoolExp): [ConsumerBanking_ConsumerBankingAccountStatementPreferences!]
  consumerBankingAccountStatementPreferencesAggregate(filter_input: ConsumerBanking_ConsumerBankingAccountStatementPreferencesFilterInput): ConsumerBanking_ConsumerBankingAccountStatementPreferencesAggExp!
  consumerBankingBalances(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingBalancesOrderByExp!], where: ConsumerBanking_ConsumerBankingBalancesBoolExp): [ConsumerBanking_ConsumerBankingBalances!]
  consumerBankingBalancesAggregate(filter_input: ConsumerBanking_ConsumerBankingBalancesFilterInput): ConsumerBanking_ConsumerBankingBalancesAggExp!
  consumerBankingBeneficiaries(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingBeneficiariesOrderByExp!], where: ConsumerBanking_ConsumerBankingBeneficiariesBoolExp): [ConsumerBanking_ConsumerBankingBeneficiaries!]
  consumerBankingBeneficiariesAggregate(filter_input: ConsumerBanking_ConsumerBankingBeneficiariesFilterInput): ConsumerBanking_ConsumerBankingBeneficiariesAggExp!
  consumerBankingCustomerInteractions(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingCustomerInteractionsOrderByExp!], where: ConsumerBanking_ConsumerBankingCustomerInteractionsBoolExp): [ConsumerBanking_ConsumerBankingCustomerInteractions!]
  consumerBankingCustomerInteractionsAggregate(filter_input: ConsumerBanking_ConsumerBankingCustomerInteractionsFilterInput): ConsumerBanking_ConsumerBankingCustomerInteractionsAggExp!
  consumerBankingDirectDebits(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingDirectDebitsOrderByExp!], where: ConsumerBanking_ConsumerBankingDirectDebitsBoolExp): [ConsumerBanking_ConsumerBankingDirectDebits!]
  consumerBankingDirectDebitsAggregate(filter_input: ConsumerBanking_ConsumerBankingDirectDebitsFilterInput): ConsumerBanking_ConsumerBankingDirectDebitsAggExp!
  consumerBankingOffers(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingOffersOrderByExp!], where: ConsumerBanking_ConsumerBankingOffersBoolExp): [ConsumerBanking_ConsumerBankingOffers!]
  consumerBankingOffersAggregate(filter_input: ConsumerBanking_ConsumerBankingOffersFilterInput): ConsumerBanking_ConsumerBankingOffersAggExp!
  consumerBankingProduct: ConsumerBanking_ConsumerBankingProducts

  """
  References the enterprise account this consumer account belongs to. Required for all consumer accounts
  """
  consumerBankingProductId: ConsumerBanking_Int4
  consumerBankingScheduledPayments(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingScheduledPaymentsOrderByExp!], where: ConsumerBanking_ConsumerBankingScheduledPaymentsBoolExp): [ConsumerBanking_ConsumerBankingScheduledPayments!]
  consumerBankingScheduledPaymentsAggregate(filter_input: ConsumerBanking_ConsumerBankingScheduledPaymentsFilterInput): ConsumerBanking_ConsumerBankingScheduledPaymentsAggExp!
  consumerBankingStandingOrders(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingStandingOrdersOrderByExp!], where: ConsumerBanking_ConsumerBankingStandingOrdersBoolExp): [ConsumerBanking_ConsumerBankingStandingOrders!]
  consumerBankingStandingOrdersAggregate(filter_input: ConsumerBanking_ConsumerBankingStandingOrdersFilterInput): ConsumerBanking_ConsumerBankingStandingOrdersAggExp!
  consumerBankingStatements(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingStatementsOrderByExp!], where: ConsumerBanking_ConsumerBankingStatementsBoolExp): [ConsumerBanking_ConsumerBankingStatements!]
  consumerBankingStatementsAggregate(filter_input: ConsumerBanking_ConsumerBankingStatementsFilterInput): ConsumerBanking_ConsumerBankingStatementsAggExp!
  consumerBankingTransactions(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingTransactionsOrderByExp!], where: ConsumerBanking_ConsumerBankingTransactionsBoolExp): [ConsumerBanking_ConsumerBankingTransactions!]
  consumerBankingTransactionsAggregate(filter_input: ConsumerBanking_ConsumerBankingTransactionsFilterInput): ConsumerBanking_ConsumerBankingTransactionsAggExp!
  enterpriseAccount: Enterprise_EnterpriseAccounts

  """Link to the enterprise-level account bucket"""
  enterpriseAccountId: ConsumerBanking_Int4!

  """Date the account was opened"""
  openedDate: ConsumerBanking_Timestamptz
  servicer: Enterprise_EnterpriseIdentifiers

  """Required reference to this institutions BIC scheme"""
  servicerIdentifierId: ConsumerBanking_Int4!

  """Operational status of the account"""
  status: ConsumerBanking_ConsumerBankingAccountStatus!

  """Last time the status was updated"""
  statusUpdateDateTime: ConsumerBanking_Timestamptz!
}

type ConsumerBanking_ConsumerBankingAccountsAggExp {
  _count: Int!
  consumerBankingAccountId: ConsumerBanking_Int4AggExp!
  consumerBankingProductId: ConsumerBanking_Int4AggExp!
  enterpriseAccountId: ConsumerBanking_Int4AggExp!
  openedDate: ConsumerBanking_TimestamptzAggExp!
  servicerIdentifierId: ConsumerBanking_Int4AggExp!
  status: ConsumerBanking_ConsumerBankingAccountStatusAggExp!
  statusUpdateDateTime: ConsumerBanking_TimestamptzAggExp!
}

input ConsumerBanking_ConsumerBankingAccountsBoolExp {
  _and: [ConsumerBanking_ConsumerBankingAccountsBoolExp!]
  _not: ConsumerBanking_ConsumerBankingAccountsBoolExp
  _or: [ConsumerBanking_ConsumerBankingAccountsBoolExp!]
  consumerBankingAccountAccessConsents: ConsumerBanking_ConsumerBankingAccountAccessConsentsBoolExp
  consumerBankingAccountId: ConsumerBanking_Int4BoolExp
  consumerBankingAccountStatementPreferences: ConsumerBanking_ConsumerBankingAccountStatementPreferencesBoolExp
  consumerBankingBalances: ConsumerBanking_ConsumerBankingBalancesBoolExp
  consumerBankingBeneficiaries: ConsumerBanking_ConsumerBankingBeneficiariesBoolExp
  consumerBankingCustomerInteractions: ConsumerBanking_ConsumerBankingCustomerInteractionsBoolExp
  consumerBankingDirectDebits: ConsumerBanking_ConsumerBankingDirectDebitsBoolExp
  consumerBankingOffers: ConsumerBanking_ConsumerBankingOffersBoolExp
  consumerBankingProduct: ConsumerBanking_ConsumerBankingProductsBoolExp
  consumerBankingProductId: ConsumerBanking_Int4BoolExp
  consumerBankingScheduledPayments: ConsumerBanking_ConsumerBankingScheduledPaymentsBoolExp
  consumerBankingStandingOrders: ConsumerBanking_ConsumerBankingStandingOrdersBoolExp
  consumerBankingStatements: ConsumerBanking_ConsumerBankingStatementsBoolExp
  consumerBankingTransactions: ConsumerBanking_ConsumerBankingTransactionsBoolExp
  enterpriseAccountId: ConsumerBanking_Int4BoolExp
  openedDate: ConsumerBanking_TimestamptzBoolExp
  servicerIdentifierId: ConsumerBanking_Int4BoolExp
  status: ConsumerBanking_ConsumerBankingAccountStatusBoolExp
  statusUpdateDateTime: ConsumerBanking_TimestamptzBoolExp
}

input ConsumerBanking_ConsumerBankingAccountsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingAccountsOrderByExp!]
  where: ConsumerBanking_ConsumerBankingAccountsBoolExp
}

input ConsumerBanking_ConsumerBankingAccountsOrderByExp {
  consumerBankingAccountId: OrderBy
  consumerBankingProduct: ConsumerBanking_ConsumerBankingProductsOrderByExp
  consumerBankingProductId: OrderBy
  enterpriseAccountId: OrderBy
  openedDate: OrderBy
  servicerIdentifierId: OrderBy
  status: OrderBy
  statusUpdateDateTime: OrderBy
}

"""Stores customer preferences for account statements"""
type ConsumerBanking_ConsumerBankingAccountStatementPreferences {
  communicationMethod: ConsumerBanking_ConsumerBankingCommunicationMethod!
  consumerBankingAccount: ConsumerBanking_ConsumerBankingAccounts
  consumerBankingAccountId: ConsumerBanking_Int4!
  consumerBankingStatement: ConsumerBanking_ConsumerBankingStatements

  """
  Fake relationship, to influence data generator and make statements be created before this record.
  """
  consumerBankingStatementId: ConsumerBanking_Int4
  deliveryAddress: Enterprise_EnterpriseAddresses
  enterpriseAddressId: ConsumerBanking_Int4
  format: ConsumerBanking_ConsumerBankingStatementFormat!
  frequency: ConsumerBanking_EnterpriseFrequency!
  lastStatementDate: ConsumerBanking_Date
  nextStatementDate: ConsumerBanking_Date
}

type ConsumerBanking_ConsumerBankingAccountStatementPreferencesAggExp {
  _count: Int!
  communicationMethod: ConsumerBanking_ConsumerBankingCommunicationMethodAggExp!
  consumerBankingAccountId: ConsumerBanking_Int4AggExp!
  consumerBankingStatementId: ConsumerBanking_Int4AggExp!
  enterpriseAddressId: ConsumerBanking_Int4AggExp!
  format: ConsumerBanking_ConsumerBankingStatementFormatAggExp!
  frequency: ConsumerBanking_EnterpriseFrequencyAggExp!
  lastStatementDate: ConsumerBanking_DateAggExp!
  nextStatementDate: ConsumerBanking_DateAggExp!
}

input ConsumerBanking_ConsumerBankingAccountStatementPreferencesBoolExp {
  _and: [ConsumerBanking_ConsumerBankingAccountStatementPreferencesBoolExp!]
  _not: ConsumerBanking_ConsumerBankingAccountStatementPreferencesBoolExp
  _or: [ConsumerBanking_ConsumerBankingAccountStatementPreferencesBoolExp!]
  communicationMethod: ConsumerBanking_ConsumerBankingCommunicationMethodBoolExp
  consumerBankingAccount: ConsumerBanking_ConsumerBankingAccountsBoolExp
  consumerBankingAccountId: ConsumerBanking_Int4BoolExp
  consumerBankingStatement: ConsumerBanking_ConsumerBankingStatementsBoolExp
  consumerBankingStatementId: ConsumerBanking_Int4BoolExp
  enterpriseAddressId: ConsumerBanking_Int4BoolExp
  format: ConsumerBanking_ConsumerBankingStatementFormatBoolExp
  frequency: ConsumerBanking_EnterpriseFrequencyBoolExp
  lastStatementDate: ConsumerBanking_DateBoolExp
  nextStatementDate: ConsumerBanking_DateBoolExp
}

input ConsumerBanking_ConsumerBankingAccountStatementPreferencesFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingAccountStatementPreferencesOrderByExp!]
  where: ConsumerBanking_ConsumerBankingAccountStatementPreferencesBoolExp
}

input ConsumerBanking_ConsumerBankingAccountStatementPreferencesOrderByExp {
  communicationMethod: OrderBy
  consumerBankingAccount: ConsumerBanking_ConsumerBankingAccountsOrderByExp
  consumerBankingAccountId: OrderBy
  consumerBankingStatement: ConsumerBanking_ConsumerBankingStatementsOrderByExp
  consumerBankingStatementId: OrderBy
  enterpriseAddressId: OrderBy
  format: OrderBy
  frequency: OrderBy
  lastStatementDate: OrderBy
  nextStatementDate: OrderBy
}

scalar ConsumerBanking_ConsumerBankingAccountStatus

type ConsumerBanking_ConsumerBankingAccountStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingAccountStatus
  min: ConsumerBanking_ConsumerBankingAccountStatus
}

input ConsumerBanking_ConsumerBankingAccountStatusBoolExp {
  _and: [ConsumerBanking_ConsumerBankingAccountStatusBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingAccountStatus
  _gt: ConsumerBanking_ConsumerBankingAccountStatus
  _gte: ConsumerBanking_ConsumerBankingAccountStatus
  _in: [ConsumerBanking_ConsumerBankingAccountStatus!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingAccountStatus
  _lte: ConsumerBanking_ConsumerBankingAccountStatus
  _neq: ConsumerBanking_ConsumerBankingAccountStatus
  _not: ConsumerBanking_ConsumerBankingAccountStatusBoolExp
  _or: [ConsumerBanking_ConsumerBankingAccountStatusBoolExp!]
}

scalar ConsumerBanking_ConsumerBankingAmountSubType

type ConsumerBanking_ConsumerBankingAmountSubTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingAmountSubType
  min: ConsumerBanking_ConsumerBankingAmountSubType
}

input ConsumerBanking_ConsumerBankingAmountSubTypeBoolExp {
  _and: [ConsumerBanking_ConsumerBankingAmountSubTypeBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingAmountSubType
  _gt: ConsumerBanking_ConsumerBankingAmountSubType
  _gte: ConsumerBanking_ConsumerBankingAmountSubType
  _in: [ConsumerBanking_ConsumerBankingAmountSubType!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingAmountSubType
  _lte: ConsumerBanking_ConsumerBankingAmountSubType
  _neq: ConsumerBanking_ConsumerBankingAmountSubType
  _not: ConsumerBanking_ConsumerBankingAmountSubTypeBoolExp
  _or: [ConsumerBanking_ConsumerBankingAmountSubTypeBoolExp!]
}

scalar ConsumerBanking_ConsumerBankingAmountType

type ConsumerBanking_ConsumerBankingAmountTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingAmountType
  min: ConsumerBanking_ConsumerBankingAmountType
}

input ConsumerBanking_ConsumerBankingAmountTypeBoolExp {
  _and: [ConsumerBanking_ConsumerBankingAmountTypeBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingAmountType
  _gt: ConsumerBanking_ConsumerBankingAmountType
  _gte: ConsumerBanking_ConsumerBankingAmountType
  _in: [ConsumerBanking_ConsumerBankingAmountType!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingAmountType
  _lte: ConsumerBanking_ConsumerBankingAmountType
  _neq: ConsumerBanking_ConsumerBankingAmountType
  _not: ConsumerBanking_ConsumerBankingAmountTypeBoolExp
  _or: [ConsumerBanking_ConsumerBankingAmountTypeBoolExp!]
}

scalar ConsumerBanking_ConsumerBankingAuthorizationType

type ConsumerBanking_ConsumerBankingAuthorizationTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingAuthorizationType
  min: ConsumerBanking_ConsumerBankingAuthorizationType
}

input ConsumerBanking_ConsumerBankingAuthorizationTypeBoolExp {
  _and: [ConsumerBanking_ConsumerBankingAuthorizationTypeBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingAuthorizationType
  _gt: ConsumerBanking_ConsumerBankingAuthorizationType
  _gte: ConsumerBanking_ConsumerBankingAuthorizationType
  _in: [ConsumerBanking_ConsumerBankingAuthorizationType!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingAuthorizationType
  _lte: ConsumerBanking_ConsumerBankingAuthorizationType
  _neq: ConsumerBanking_ConsumerBankingAuthorizationType
  _not: ConsumerBanking_ConsumerBankingAuthorizationTypeBoolExp
  _or: [ConsumerBanking_ConsumerBankingAuthorizationTypeBoolExp!]
}

"""
Tracks account balance information with history, stores different types of balances
"""
type ConsumerBanking_ConsumerBankingBalances {
  """Monetary amount with precision to 5 decimal places"""
  amount: ConsumerBanking_Numeric!
  consumerBankingAccount: ConsumerBanking_ConsumerBankingAccounts

  """References the account this balance belongs to"""
  consumerBankingAccountId: ConsumerBanking_Int4!

  """Auto-incrementing identifier for each balance record"""
  consumerBankingBalanceId: ConsumerBanking_Int4!
  consumerBankingTransactions(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingTransactionsOrderByExp!], where: ConsumerBanking_ConsumerBankingTransactionsBoolExp): [ConsumerBanking_ConsumerBankingTransactions!]
  consumerBankingTransactionsAggregate(filter_input: ConsumerBanking_ConsumerBankingTransactionsFilterInput): ConsumerBanking_ConsumerBankingTransactionsAggExp!

  """Indicates if balance is credit or debit"""
  creditDebitIndicator: ConsumerBanking_EnterpriseCreditDebitIndicator!

  """Currency code (e.g., USD, EUR)"""
  currency: ConsumerBanking_EnterpriseCurrencyCode!

  """When this balance was recorded"""
  dateTime: ConsumerBanking_Timestamptz!

  """Optional further classification of balance type"""
  subType: ConsumerBanking_ConsumerBankingBalanceSubType

  """Primary balance type (e.g., available, closing, etc.)"""
  type: ConsumerBanking_ConsumerBankingBalanceType!
}

type ConsumerBanking_ConsumerBankingBalancesAggExp {
  _count: Int!
  amount: ConsumerBanking_NumericAggExp!
  consumerBankingAccountId: ConsumerBanking_Int4AggExp!
  consumerBankingBalanceId: ConsumerBanking_Int4AggExp!
  creditDebitIndicator: ConsumerBanking_EnterpriseCreditDebitIndicatorAggExp!
  currency: ConsumerBanking_EnterpriseCurrencyCodeAggExp!
  dateTime: ConsumerBanking_TimestamptzAggExp!
  subType: ConsumerBanking_ConsumerBankingBalanceSubTypeAggExp!
  type: ConsumerBanking_ConsumerBankingBalanceTypeAggExp!
}

input ConsumerBanking_ConsumerBankingBalancesBoolExp {
  _and: [ConsumerBanking_ConsumerBankingBalancesBoolExp!]
  _not: ConsumerBanking_ConsumerBankingBalancesBoolExp
  _or: [ConsumerBanking_ConsumerBankingBalancesBoolExp!]
  amount: ConsumerBanking_NumericBoolExp
  consumerBankingAccount: ConsumerBanking_ConsumerBankingAccountsBoolExp
  consumerBankingAccountId: ConsumerBanking_Int4BoolExp
  consumerBankingBalanceId: ConsumerBanking_Int4BoolExp
  consumerBankingTransactions: ConsumerBanking_ConsumerBankingTransactionsBoolExp
  creditDebitIndicator: ConsumerBanking_EnterpriseCreditDebitIndicatorBoolExp
  currency: ConsumerBanking_EnterpriseCurrencyCodeBoolExp
  dateTime: ConsumerBanking_TimestamptzBoolExp
  subType: ConsumerBanking_ConsumerBankingBalanceSubTypeBoolExp
  type: ConsumerBanking_ConsumerBankingBalanceTypeBoolExp
}

input ConsumerBanking_ConsumerBankingBalancesFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingBalancesOrderByExp!]
  where: ConsumerBanking_ConsumerBankingBalancesBoolExp
}

input ConsumerBanking_ConsumerBankingBalancesOrderByExp {
  amount: OrderBy
  consumerBankingAccount: ConsumerBanking_ConsumerBankingAccountsOrderByExp
  consumerBankingAccountId: OrderBy
  consumerBankingBalanceId: OrderBy
  creditDebitIndicator: OrderBy
  currency: OrderBy
  dateTime: OrderBy
  subType: OrderBy
  type: OrderBy
}

scalar ConsumerBanking_ConsumerBankingBalanceSubType

type ConsumerBanking_ConsumerBankingBalanceSubTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingBalanceSubType
  min: ConsumerBanking_ConsumerBankingBalanceSubType
}

input ConsumerBanking_ConsumerBankingBalanceSubTypeBoolExp {
  _and: [ConsumerBanking_ConsumerBankingBalanceSubTypeBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingBalanceSubType
  _gt: ConsumerBanking_ConsumerBankingBalanceSubType
  _gte: ConsumerBanking_ConsumerBankingBalanceSubType
  _in: [ConsumerBanking_ConsumerBankingBalanceSubType!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingBalanceSubType
  _lte: ConsumerBanking_ConsumerBankingBalanceSubType
  _neq: ConsumerBanking_ConsumerBankingBalanceSubType
  _not: ConsumerBanking_ConsumerBankingBalanceSubTypeBoolExp
  _or: [ConsumerBanking_ConsumerBankingBalanceSubTypeBoolExp!]
}

scalar ConsumerBanking_ConsumerBankingBalanceType

type ConsumerBanking_ConsumerBankingBalanceTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingBalanceType
  min: ConsumerBanking_ConsumerBankingBalanceType
}

input ConsumerBanking_ConsumerBankingBalanceTypeBoolExp {
  _and: [ConsumerBanking_ConsumerBankingBalanceTypeBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingBalanceType
  _gt: ConsumerBanking_ConsumerBankingBalanceType
  _gte: ConsumerBanking_ConsumerBankingBalanceType
  _in: [ConsumerBanking_ConsumerBankingBalanceType!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingBalanceType
  _lte: ConsumerBanking_ConsumerBankingBalanceType
  _neq: ConsumerBanking_ConsumerBankingBalanceType
  _not: ConsumerBanking_ConsumerBankingBalanceTypeBoolExp
  _or: [ConsumerBanking_ConsumerBankingBalanceTypeBoolExp!]
}

"""
Stores beneficiary details for account payments, records entities that can receive payments
"""
type ConsumerBanking_ConsumerBankingBeneficiaries {
  """Type of beneficiary (individual, organization, etc.)"""
  beneficiaryType: ConsumerBanking_ConsumerBankingBeneficiaryType!
  consumerBankingAccount: ConsumerBanking_ConsumerBankingAccounts

  """References the account this balance belongs to"""
  consumerBankingAccountId: ConsumerBanking_Int4!
  consumerBankingBeneficiaryCreditorAccounts(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingBeneficiaryCreditorAccountsOrderByExp!], where: ConsumerBanking_ConsumerBankingBeneficiaryCreditorAccountsBoolExp): [ConsumerBanking_ConsumerBankingBeneficiaryCreditorAccounts!]
  consumerBankingBeneficiaryCreditorAccountsAggregate(filter_input: ConsumerBanking_ConsumerBankingBeneficiaryCreditorAccountsFilterInput): ConsumerBanking_ConsumerBankingBeneficiaryCreditorAccountsAggExp!
  consumerBankingBeneficiaryCreditorAgents(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingBeneficiaryCreditorAgentsOrderByExp!], where: ConsumerBanking_ConsumerBankingBeneficiaryCreditorAgentsBoolExp): [ConsumerBanking_ConsumerBankingBeneficiaryCreditorAgents!]
  consumerBankingBeneficiaryCreditorAgentsAggregate(filter_input: ConsumerBanking_ConsumerBankingBeneficiaryCreditorAgentsFilterInput): ConsumerBanking_ConsumerBankingBeneficiaryCreditorAgentsAggExp!

  """Unique identifier for each beneficiary"""
  consumerBankingBeneficiaryId: ConsumerBanking_Int4!

  """Optional reference identifier for the beneficiary"""
  reference: ConsumerBanking_Varchar

  """Additional information in free-text format"""
  supplementaryData: ConsumerBanking_Text
}

type ConsumerBanking_ConsumerBankingBeneficiariesAggExp {
  _count: Int!
  beneficiaryType: ConsumerBanking_ConsumerBankingBeneficiaryTypeAggExp!
  consumerBankingAccountId: ConsumerBanking_Int4AggExp!
  consumerBankingBeneficiaryId: ConsumerBanking_Int4AggExp!
  reference: ConsumerBanking_VarcharAggExp!
  supplementaryData: ConsumerBanking_TextAggExp!
}

input ConsumerBanking_ConsumerBankingBeneficiariesBoolExp {
  _and: [ConsumerBanking_ConsumerBankingBeneficiariesBoolExp!]
  _not: ConsumerBanking_ConsumerBankingBeneficiariesBoolExp
  _or: [ConsumerBanking_ConsumerBankingBeneficiariesBoolExp!]
  beneficiaryType: ConsumerBanking_ConsumerBankingBeneficiaryTypeBoolExp
  consumerBankingAccount: ConsumerBanking_ConsumerBankingAccountsBoolExp
  consumerBankingAccountId: ConsumerBanking_Int4BoolExp
  consumerBankingBeneficiaryCreditorAccounts: ConsumerBanking_ConsumerBankingBeneficiaryCreditorAccountsBoolExp
  consumerBankingBeneficiaryCreditorAgents: ConsumerBanking_ConsumerBankingBeneficiaryCreditorAgentsBoolExp
  consumerBankingBeneficiaryId: ConsumerBanking_Int4BoolExp
  reference: ConsumerBanking_VarcharBoolExp
  supplementaryData: ConsumerBanking_TextBoolExp
}

input ConsumerBanking_ConsumerBankingBeneficiariesFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingBeneficiariesOrderByExp!]
  where: ConsumerBanking_ConsumerBankingBeneficiariesBoolExp
}

input ConsumerBanking_ConsumerBankingBeneficiariesOrderByExp {
  beneficiaryType: OrderBy
  consumerBankingAccount: ConsumerBanking_ConsumerBankingAccountsOrderByExp
  consumerBankingAccountId: OrderBy
  consumerBankingBeneficiaryId: OrderBy
  reference: OrderBy
  supplementaryData: OrderBy
}

"""Stores account details of beneficiaries for payment routing"""
type ConsumerBanking_ConsumerBankingBeneficiaryCreditorAccounts {
  consumerBankingBeneficiary: ConsumerBanking_ConsumerBankingBeneficiaries

  """Auto-incrementing identifier for each creditor account record"""
  consumerBankingBeneficiaryCreditorAccountId: ConsumerBanking_Int4!

  """References the beneficiary this account belongs to"""
  consumerBankingBeneficiaryId: ConsumerBanking_Int4!

  """The actual account identifier value"""
  identification: ConsumerBanking_Varchar!

  """Optional display name for this account"""
  name: ConsumerBanking_Varchar

  """Account identifier scheme (e.g., IBAN, BBAN)"""
  schemeName: ConsumerBanking_EnterpriseIdentifierScheme!

  """Additional account identification information"""
  secondaryIdentification: ConsumerBanking_Varchar
}

type ConsumerBanking_ConsumerBankingBeneficiaryCreditorAccountsAggExp {
  _count: Int!
  consumerBankingBeneficiaryCreditorAccountId: ConsumerBanking_Int4AggExp!
  consumerBankingBeneficiaryId: ConsumerBanking_Int4AggExp!
  identification: ConsumerBanking_VarcharAggExp!
  name: ConsumerBanking_VarcharAggExp!
  schemeName: ConsumerBanking_EnterpriseIdentifierSchemeAggExp!
  secondaryIdentification: ConsumerBanking_VarcharAggExp!
}

input ConsumerBanking_ConsumerBankingBeneficiaryCreditorAccountsBoolExp {
  _and: [ConsumerBanking_ConsumerBankingBeneficiaryCreditorAccountsBoolExp!]
  _not: ConsumerBanking_ConsumerBankingBeneficiaryCreditorAccountsBoolExp
  _or: [ConsumerBanking_ConsumerBankingBeneficiaryCreditorAccountsBoolExp!]
  consumerBankingBeneficiary: ConsumerBanking_ConsumerBankingBeneficiariesBoolExp
  consumerBankingBeneficiaryCreditorAccountId: ConsumerBanking_Int4BoolExp
  consumerBankingBeneficiaryId: ConsumerBanking_Int4BoolExp
  identification: ConsumerBanking_VarcharBoolExp
  name: ConsumerBanking_VarcharBoolExp
  schemeName: ConsumerBanking_EnterpriseIdentifierSchemeBoolExp
  secondaryIdentification: ConsumerBanking_VarcharBoolExp
}

input ConsumerBanking_ConsumerBankingBeneficiaryCreditorAccountsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingBeneficiaryCreditorAccountsOrderByExp!]
  where: ConsumerBanking_ConsumerBankingBeneficiaryCreditorAccountsBoolExp
}

input ConsumerBanking_ConsumerBankingBeneficiaryCreditorAccountsOrderByExp {
  consumerBankingBeneficiary: ConsumerBanking_ConsumerBankingBeneficiariesOrderByExp
  consumerBankingBeneficiaryCreditorAccountId: OrderBy
  consumerBankingBeneficiaryId: OrderBy
  identification: OrderBy
  name: OrderBy
  schemeName: OrderBy
  secondaryIdentification: OrderBy
}

"""
Stores financial institution details for beneficiaries, records information about banks/agents
"""
type ConsumerBanking_ConsumerBankingBeneficiaryCreditorAgents {
  consumerBankingBeneficiary: ConsumerBanking_ConsumerBankingBeneficiaries

  """Auto-incrementing identifier for each agent record"""
  consumerBankingBeneficiaryCreditorAgentId: ConsumerBanking_Int4!

  """References the beneficiary this agent is associated with"""
  consumerBankingBeneficiaryId: ConsumerBanking_Int4!

  """The actual identifier of the institution"""
  identification: ConsumerBanking_Varchar!

  """Legal Entity Identifier of the institution"""
  lei: ConsumerBanking_Varchar

  """Display name of the financial institution"""
  name: ConsumerBanking_Varchar

  """Identifier scheme (e.g., BIC, SORT)"""
  schemeName: ConsumerBanking_EnterpriseIdentifierScheme!
}

type ConsumerBanking_ConsumerBankingBeneficiaryCreditorAgentsAggExp {
  _count: Int!
  consumerBankingBeneficiaryCreditorAgentId: ConsumerBanking_Int4AggExp!
  consumerBankingBeneficiaryId: ConsumerBanking_Int4AggExp!
  identification: ConsumerBanking_VarcharAggExp!
  lei: ConsumerBanking_VarcharAggExp!
  name: ConsumerBanking_VarcharAggExp!
  schemeName: ConsumerBanking_EnterpriseIdentifierSchemeAggExp!
}

input ConsumerBanking_ConsumerBankingBeneficiaryCreditorAgentsBoolExp {
  _and: [ConsumerBanking_ConsumerBankingBeneficiaryCreditorAgentsBoolExp!]
  _not: ConsumerBanking_ConsumerBankingBeneficiaryCreditorAgentsBoolExp
  _or: [ConsumerBanking_ConsumerBankingBeneficiaryCreditorAgentsBoolExp!]
  consumerBankingBeneficiary: ConsumerBanking_ConsumerBankingBeneficiariesBoolExp
  consumerBankingBeneficiaryCreditorAgentId: ConsumerBanking_Int4BoolExp
  consumerBankingBeneficiaryId: ConsumerBanking_Int4BoolExp
  identification: ConsumerBanking_VarcharBoolExp
  lei: ConsumerBanking_VarcharBoolExp
  name: ConsumerBanking_VarcharBoolExp
  schemeName: ConsumerBanking_EnterpriseIdentifierSchemeBoolExp
}

input ConsumerBanking_ConsumerBankingBeneficiaryCreditorAgentsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingBeneficiaryCreditorAgentsOrderByExp!]
  where: ConsumerBanking_ConsumerBankingBeneficiaryCreditorAgentsBoolExp
}

input ConsumerBanking_ConsumerBankingBeneficiaryCreditorAgentsOrderByExp {
  consumerBankingBeneficiary: ConsumerBanking_ConsumerBankingBeneficiariesOrderByExp
  consumerBankingBeneficiaryCreditorAgentId: OrderBy
  consumerBankingBeneficiaryId: OrderBy
  identification: OrderBy
  lei: OrderBy
  name: OrderBy
  schemeName: OrderBy
}

scalar ConsumerBanking_ConsumerBankingBeneficiaryType

type ConsumerBanking_ConsumerBankingBeneficiaryTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingBeneficiaryType
  min: ConsumerBanking_ConsumerBankingBeneficiaryType
}

input ConsumerBanking_ConsumerBankingBeneficiaryTypeBoolExp {
  _and: [ConsumerBanking_ConsumerBankingBeneficiaryTypeBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingBeneficiaryType
  _gt: ConsumerBanking_ConsumerBankingBeneficiaryType
  _gte: ConsumerBanking_ConsumerBankingBeneficiaryType
  _in: [ConsumerBanking_ConsumerBankingBeneficiaryType!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingBeneficiaryType
  _lte: ConsumerBanking_ConsumerBankingBeneficiaryType
  _neq: ConsumerBanking_ConsumerBankingBeneficiaryType
  _not: ConsumerBanking_ConsumerBankingBeneficiaryTypeBoolExp
  _or: [ConsumerBanking_ConsumerBankingBeneficiaryTypeBoolExp!]
}

scalar ConsumerBanking_ConsumerBankingBenefitType

type ConsumerBanking_ConsumerBankingBenefitTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingBenefitType
  min: ConsumerBanking_ConsumerBankingBenefitType
}

input ConsumerBanking_ConsumerBankingBenefitTypeBoolExp {
  _and: [ConsumerBanking_ConsumerBankingBenefitTypeBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingBenefitType
  _gt: ConsumerBanking_ConsumerBankingBenefitType
  _gte: ConsumerBanking_ConsumerBankingBenefitType
  _in: [ConsumerBanking_ConsumerBankingBenefitType!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingBenefitType
  _lte: ConsumerBanking_ConsumerBankingBenefitType
  _neq: ConsumerBanking_ConsumerBankingBenefitType
  _not: ConsumerBanking_ConsumerBankingBenefitTypeBoolExp
  _or: [ConsumerBanking_ConsumerBankingBenefitTypeBoolExp!]
}

scalar ConsumerBanking_ConsumerBankingCardSchemeName

type ConsumerBanking_ConsumerBankingCardSchemeNameAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingCardSchemeName
  min: ConsumerBanking_ConsumerBankingCardSchemeName
}

input ConsumerBanking_ConsumerBankingCardSchemeNameBoolExp {
  _and: [ConsumerBanking_ConsumerBankingCardSchemeNameBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingCardSchemeName
  _gt: ConsumerBanking_ConsumerBankingCardSchemeName
  _gte: ConsumerBanking_ConsumerBankingCardSchemeName
  _in: [ConsumerBanking_ConsumerBankingCardSchemeName!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingCardSchemeName
  _lte: ConsumerBanking_ConsumerBankingCardSchemeName
  _neq: ConsumerBanking_ConsumerBankingCardSchemeName
  _not: ConsumerBanking_ConsumerBankingCardSchemeNameBoolExp
  _or: [ConsumerBanking_ConsumerBankingCardSchemeNameBoolExp!]
}

scalar ConsumerBanking_ConsumerBankingCommunicationMethod

type ConsumerBanking_ConsumerBankingCommunicationMethodAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingCommunicationMethod
  min: ConsumerBanking_ConsumerBankingCommunicationMethod
}

input ConsumerBanking_ConsumerBankingCommunicationMethodBoolExp {
  _and: [ConsumerBanking_ConsumerBankingCommunicationMethodBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingCommunicationMethod
  _gt: ConsumerBanking_ConsumerBankingCommunicationMethod
  _gte: ConsumerBanking_ConsumerBankingCommunicationMethod
  _in: [ConsumerBanking_ConsumerBankingCommunicationMethod!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingCommunicationMethod
  _lte: ConsumerBanking_ConsumerBankingCommunicationMethod
  _neq: ConsumerBanking_ConsumerBankingCommunicationMethod
  _not: ConsumerBanking_ConsumerBankingCommunicationMethodBoolExp
  _or: [ConsumerBanking_ConsumerBankingCommunicationMethodBoolExp!]
}

scalar ConsumerBanking_ConsumerBankingConsentStatus

type ConsumerBanking_ConsumerBankingConsentStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingConsentStatus
  min: ConsumerBanking_ConsumerBankingConsentStatus
}

input ConsumerBanking_ConsumerBankingConsentStatusBoolExp {
  _and: [ConsumerBanking_ConsumerBankingConsentStatusBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingConsentStatus
  _gt: ConsumerBanking_ConsumerBankingConsentStatus
  _gte: ConsumerBanking_ConsumerBankingConsentStatus
  _in: [ConsumerBanking_ConsumerBankingConsentStatus!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingConsentStatus
  _lte: ConsumerBanking_ConsumerBankingConsentStatus
  _neq: ConsumerBanking_ConsumerBankingConsentStatus
  _not: ConsumerBanking_ConsumerBankingConsentStatusBoolExp
  _or: [ConsumerBanking_ConsumerBankingConsentStatusBoolExp!]
}

type ConsumerBanking_ConsumerBankingCustomerInteractions {
  """
  The ID of the specific account related to the interaction. This can be NULL if
  the interaction isn't tied to a specific account (e.g., a general inquiry).
  """
  accountId: ConsumerBanking_Int4
  associate: Enterprise_EnterpriseAssociates

  """
  The channel through which the interaction occurred (e.g., "phone," "email," "web," "branch," "mobile app").
  """
  channel: ConsumerBanking_ConsumerBankingInteractionChannel
  consumerBankingAccount: ConsumerBanking_ConsumerBankingAccounts

  """A unique identifier for each interaction."""
  consumerBankingInteractionId: ConsumerBanking_Int4!
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactions

  """When the interaction record was created."""
  createdAt: ConsumerBanking_Timestamptz

  """The ID of the customer involved in the interaction."""
  customerId: ConsumerBanking_Int4

  """A detailed description of the interaction."""
  description: ConsumerBanking_Text

  """
  The ID of the bank employee who handled the interaction. This can be NULL if it was an automated interaction.
  """
  enterpriseAssociateId: ConsumerBanking_Int4

  """The date and time of the interaction."""
  interactionDateTime: ConsumerBanking_Timestamptz

  """
  The type of interaction (e.g., "phone call," "email," "chat," "in-person," "online form," "ATM interaction").
  """
  interactionType: ConsumerBanking_ConsumerBankingInteractionType

  """The priority of the interaction (e.g., "high," "medium," "low")."""
  priority: ConsumerBanking_ConsumerBankingInteractionPriority

  """
  If the interaction relates to a specific transaction, this can hold that transaction ID.
  """
  relatedTransactionId: ConsumerBanking_Int4

  """Description of how the interaction was resolved."""
  resolution: ConsumerBanking_Text

  """The status of the interaction (e.g., "open," "resolved," "pending")."""
  status: ConsumerBanking_ConsumerBankingInteractionStatus

  """A brief subject or title of the interaction."""
  subject: ConsumerBanking_Varchar

  """When the interaction record was last updated."""
  updatedAt: ConsumerBanking_Timestamptz
}

type ConsumerBanking_ConsumerBankingCustomerInteractionsAggExp {
  _count: Int!
  accountId: ConsumerBanking_Int4AggExp!
  channel: ConsumerBanking_ConsumerBankingInteractionChannelAggExp!
  consumerBankingInteractionId: ConsumerBanking_Int4AggExp!
  createdAt: ConsumerBanking_TimestamptzAggExp!
  customerId: ConsumerBanking_Int4AggExp!
  description: ConsumerBanking_TextAggExp!
  enterpriseAssociateId: ConsumerBanking_Int4AggExp!
  interactionDateTime: ConsumerBanking_TimestamptzAggExp!
  interactionType: ConsumerBanking_ConsumerBankingInteractionTypeAggExp!
  priority: ConsumerBanking_ConsumerBankingInteractionPriorityAggExp!
  relatedTransactionId: ConsumerBanking_Int4AggExp!
  resolution: ConsumerBanking_TextAggExp!
  status: ConsumerBanking_ConsumerBankingInteractionStatusAggExp!
  subject: ConsumerBanking_VarcharAggExp!
  updatedAt: ConsumerBanking_TimestamptzAggExp!
}

input ConsumerBanking_ConsumerBankingCustomerInteractionsBoolExp {
  _and: [ConsumerBanking_ConsumerBankingCustomerInteractionsBoolExp!]
  _not: ConsumerBanking_ConsumerBankingCustomerInteractionsBoolExp
  _or: [ConsumerBanking_ConsumerBankingCustomerInteractionsBoolExp!]
  accountId: ConsumerBanking_Int4BoolExp
  channel: ConsumerBanking_ConsumerBankingInteractionChannelBoolExp
  consumerBankingAccount: ConsumerBanking_ConsumerBankingAccountsBoolExp
  consumerBankingInteractionId: ConsumerBanking_Int4BoolExp
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactionsBoolExp
  createdAt: ConsumerBanking_TimestamptzBoolExp
  customerId: ConsumerBanking_Int4BoolExp
  description: ConsumerBanking_TextBoolExp
  enterpriseAssociateId: ConsumerBanking_Int4BoolExp
  interactionDateTime: ConsumerBanking_TimestamptzBoolExp
  interactionType: ConsumerBanking_ConsumerBankingInteractionTypeBoolExp
  priority: ConsumerBanking_ConsumerBankingInteractionPriorityBoolExp
  relatedTransactionId: ConsumerBanking_Int4BoolExp
  resolution: ConsumerBanking_TextBoolExp
  status: ConsumerBanking_ConsumerBankingInteractionStatusBoolExp
  subject: ConsumerBanking_VarcharBoolExp
  updatedAt: ConsumerBanking_TimestamptzBoolExp
}

input ConsumerBanking_ConsumerBankingCustomerInteractionsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingCustomerInteractionsOrderByExp!]
  where: ConsumerBanking_ConsumerBankingCustomerInteractionsBoolExp
}

input ConsumerBanking_ConsumerBankingCustomerInteractionsOrderByExp {
  accountId: OrderBy
  channel: OrderBy
  consumerBankingAccount: ConsumerBanking_ConsumerBankingAccountsOrderByExp
  consumerBankingInteractionId: OrderBy
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactionsOrderByExp
  createdAt: OrderBy
  customerId: OrderBy
  description: OrderBy
  enterpriseAssociateId: OrderBy
  interactionDateTime: OrderBy
  interactionType: OrderBy
  priority: OrderBy
  relatedTransactionId: OrderBy
  resolution: OrderBy
  status: OrderBy
  subject: OrderBy
  updatedAt: OrderBy
}

scalar ConsumerBanking_ConsumerBankingDirectDebitCategory

type ConsumerBanking_ConsumerBankingDirectDebitCategoryAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingDirectDebitCategory
  min: ConsumerBanking_ConsumerBankingDirectDebitCategory
}

input ConsumerBanking_ConsumerBankingDirectDebitCategoryBoolExp {
  _and: [ConsumerBanking_ConsumerBankingDirectDebitCategoryBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingDirectDebitCategory
  _gt: ConsumerBanking_ConsumerBankingDirectDebitCategory
  _gte: ConsumerBanking_ConsumerBankingDirectDebitCategory
  _in: [ConsumerBanking_ConsumerBankingDirectDebitCategory!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingDirectDebitCategory
  _lte: ConsumerBanking_ConsumerBankingDirectDebitCategory
  _neq: ConsumerBanking_ConsumerBankingDirectDebitCategory
  _not: ConsumerBanking_ConsumerBankingDirectDebitCategoryBoolExp
  _or: [ConsumerBanking_ConsumerBankingDirectDebitCategoryBoolExp!]
}

scalar ConsumerBanking_ConsumerBankingDirectDebitClassification

type ConsumerBanking_ConsumerBankingDirectDebitClassificationAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingDirectDebitClassification
  min: ConsumerBanking_ConsumerBankingDirectDebitClassification
}

input ConsumerBanking_ConsumerBankingDirectDebitClassificationBoolExp {
  _and: [ConsumerBanking_ConsumerBankingDirectDebitClassificationBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingDirectDebitClassification
  _gt: ConsumerBanking_ConsumerBankingDirectDebitClassification
  _gte: ConsumerBanking_ConsumerBankingDirectDebitClassification
  _in: [ConsumerBanking_ConsumerBankingDirectDebitClassification!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingDirectDebitClassification
  _lte: ConsumerBanking_ConsumerBankingDirectDebitClassification
  _neq: ConsumerBanking_ConsumerBankingDirectDebitClassification
  _not: ConsumerBanking_ConsumerBankingDirectDebitClassificationBoolExp
  _or: [ConsumerBanking_ConsumerBankingDirectDebitClassificationBoolExp!]
}

"""Stores information about direct debit arrangements set up on accounts"""
type ConsumerBanking_ConsumerBankingDirectDebits {
  consumerBankingAccount: ConsumerBanking_ConsumerBankingAccounts

  """References the account this direct debit belongs to"""
  consumerBankingAccountId: ConsumerBanking_Int4!

  """Unique identifier for each direct debit mandate"""
  consumerBankingDirectDebitId: ConsumerBanking_Int4!
  consumerBankingMandateRelatedInformations(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingMandateRelatedInformationOrderByExp!], where: ConsumerBanking_ConsumerBankingMandateRelatedInformationBoolExp): [ConsumerBanking_ConsumerBankingMandateRelatedInformation!]
  consumerBankingMandateRelatedInformationsAggregate(filter_input: ConsumerBanking_ConsumerBankingMandateRelatedInformationFilterInput): ConsumerBanking_ConsumerBankingMandateRelatedInformationAggExp!

  """Status code of the direct debit (e.g., active, canceled)"""
  directDebitStatusCode: ConsumerBanking_ConsumerBankingDirectDebitStatusCode!

  """Name of the merchant/organization collecting the direct debit"""
  name: ConsumerBanking_Varchar!

  """Amount of the last payment"""
  previousPaymentAmount: ConsumerBanking_Numeric

  """Currency of the last payment"""
  previousPaymentCurrency: ConsumerBanking_Varchar

  """When the last payment was made"""
  previousPaymentDateTime: ConsumerBanking_Timestamptz
}

type ConsumerBanking_ConsumerBankingDirectDebitsAggExp {
  _count: Int!
  consumerBankingAccountId: ConsumerBanking_Int4AggExp!
  consumerBankingDirectDebitId: ConsumerBanking_Int4AggExp!
  directDebitStatusCode: ConsumerBanking_ConsumerBankingDirectDebitStatusCodeAggExp!
  name: ConsumerBanking_VarcharAggExp!
  previousPaymentAmount: ConsumerBanking_NumericAggExp!
  previousPaymentCurrency: ConsumerBanking_VarcharAggExp!
  previousPaymentDateTime: ConsumerBanking_TimestamptzAggExp!
}

input ConsumerBanking_ConsumerBankingDirectDebitsBoolExp {
  _and: [ConsumerBanking_ConsumerBankingDirectDebitsBoolExp!]
  _not: ConsumerBanking_ConsumerBankingDirectDebitsBoolExp
  _or: [ConsumerBanking_ConsumerBankingDirectDebitsBoolExp!]
  consumerBankingAccount: ConsumerBanking_ConsumerBankingAccountsBoolExp
  consumerBankingAccountId: ConsumerBanking_Int4BoolExp
  consumerBankingDirectDebitId: ConsumerBanking_Int4BoolExp
  consumerBankingMandateRelatedInformations: ConsumerBanking_ConsumerBankingMandateRelatedInformationBoolExp
  directDebitStatusCode: ConsumerBanking_ConsumerBankingDirectDebitStatusCodeBoolExp
  name: ConsumerBanking_VarcharBoolExp
  previousPaymentAmount: ConsumerBanking_NumericBoolExp
  previousPaymentCurrency: ConsumerBanking_VarcharBoolExp
  previousPaymentDateTime: ConsumerBanking_TimestamptzBoolExp
}

input ConsumerBanking_ConsumerBankingDirectDebitsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingDirectDebitsOrderByExp!]
  where: ConsumerBanking_ConsumerBankingDirectDebitsBoolExp
}

input ConsumerBanking_ConsumerBankingDirectDebitsOrderByExp {
  consumerBankingAccount: ConsumerBanking_ConsumerBankingAccountsOrderByExp
  consumerBankingAccountId: OrderBy
  consumerBankingDirectDebitId: OrderBy
  directDebitStatusCode: OrderBy
  name: OrderBy
  previousPaymentAmount: OrderBy
  previousPaymentCurrency: OrderBy
  previousPaymentDateTime: OrderBy
}

scalar ConsumerBanking_ConsumerBankingDirectDebitStatusCode

type ConsumerBanking_ConsumerBankingDirectDebitStatusCodeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingDirectDebitStatusCode
  min: ConsumerBanking_ConsumerBankingDirectDebitStatusCode
}

input ConsumerBanking_ConsumerBankingDirectDebitStatusCodeBoolExp {
  _and: [ConsumerBanking_ConsumerBankingDirectDebitStatusCodeBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingDirectDebitStatusCode
  _gt: ConsumerBanking_ConsumerBankingDirectDebitStatusCode
  _gte: ConsumerBanking_ConsumerBankingDirectDebitStatusCode
  _in: [ConsumerBanking_ConsumerBankingDirectDebitStatusCode!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingDirectDebitStatusCode
  _lte: ConsumerBanking_ConsumerBankingDirectDebitStatusCode
  _neq: ConsumerBanking_ConsumerBankingDirectDebitStatusCode
  _not: ConsumerBanking_ConsumerBankingDirectDebitStatusCodeBoolExp
  _or: [ConsumerBanking_ConsumerBankingDirectDebitStatusCodeBoolExp!]
}

scalar ConsumerBanking_ConsumerBankingFeeFrequency

type ConsumerBanking_ConsumerBankingFeeFrequencyAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingFeeFrequency
  min: ConsumerBanking_ConsumerBankingFeeFrequency
}

input ConsumerBanking_ConsumerBankingFeeFrequencyBoolExp {
  _and: [ConsumerBanking_ConsumerBankingFeeFrequencyBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingFeeFrequency
  _gt: ConsumerBanking_ConsumerBankingFeeFrequency
  _gte: ConsumerBanking_ConsumerBankingFeeFrequency
  _in: [ConsumerBanking_ConsumerBankingFeeFrequency!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingFeeFrequency
  _lte: ConsumerBanking_ConsumerBankingFeeFrequency
  _neq: ConsumerBanking_ConsumerBankingFeeFrequency
  _not: ConsumerBanking_ConsumerBankingFeeFrequencyBoolExp
  _or: [ConsumerBanking_ConsumerBankingFeeFrequencyBoolExp!]
}

scalar ConsumerBanking_ConsumerBankingFeeType

type ConsumerBanking_ConsumerBankingFeeTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingFeeType
  min: ConsumerBanking_ConsumerBankingFeeType
}

input ConsumerBanking_ConsumerBankingFeeTypeBoolExp {
  _and: [ConsumerBanking_ConsumerBankingFeeTypeBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingFeeType
  _gt: ConsumerBanking_ConsumerBankingFeeType
  _gte: ConsumerBanking_ConsumerBankingFeeType
  _in: [ConsumerBanking_ConsumerBankingFeeType!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingFeeType
  _lte: ConsumerBanking_ConsumerBankingFeeType
  _neq: ConsumerBanking_ConsumerBankingFeeType
  _not: ConsumerBanking_ConsumerBankingFeeTypeBoolExp
  _or: [ConsumerBanking_ConsumerBankingFeeTypeBoolExp!]
}

scalar ConsumerBanking_ConsumerBankingInteractionChannel

type ConsumerBanking_ConsumerBankingInteractionChannelAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingInteractionChannel
  min: ConsumerBanking_ConsumerBankingInteractionChannel
}

input ConsumerBanking_ConsumerBankingInteractionChannelBoolExp {
  _and: [ConsumerBanking_ConsumerBankingInteractionChannelBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingInteractionChannel
  _gt: ConsumerBanking_ConsumerBankingInteractionChannel
  _gte: ConsumerBanking_ConsumerBankingInteractionChannel
  _in: [ConsumerBanking_ConsumerBankingInteractionChannel!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingInteractionChannel
  _lte: ConsumerBanking_ConsumerBankingInteractionChannel
  _neq: ConsumerBanking_ConsumerBankingInteractionChannel
  _not: ConsumerBanking_ConsumerBankingInteractionChannelBoolExp
  _or: [ConsumerBanking_ConsumerBankingInteractionChannelBoolExp!]
}

scalar ConsumerBanking_ConsumerBankingInteractionPriority

type ConsumerBanking_ConsumerBankingInteractionPriorityAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingInteractionPriority
  min: ConsumerBanking_ConsumerBankingInteractionPriority
}

input ConsumerBanking_ConsumerBankingInteractionPriorityBoolExp {
  _and: [ConsumerBanking_ConsumerBankingInteractionPriorityBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingInteractionPriority
  _gt: ConsumerBanking_ConsumerBankingInteractionPriority
  _gte: ConsumerBanking_ConsumerBankingInteractionPriority
  _in: [ConsumerBanking_ConsumerBankingInteractionPriority!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingInteractionPriority
  _lte: ConsumerBanking_ConsumerBankingInteractionPriority
  _neq: ConsumerBanking_ConsumerBankingInteractionPriority
  _not: ConsumerBanking_ConsumerBankingInteractionPriorityBoolExp
  _or: [ConsumerBanking_ConsumerBankingInteractionPriorityBoolExp!]
}

scalar ConsumerBanking_ConsumerBankingInteractionStatus

type ConsumerBanking_ConsumerBankingInteractionStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingInteractionStatus
  min: ConsumerBanking_ConsumerBankingInteractionStatus
}

input ConsumerBanking_ConsumerBankingInteractionStatusBoolExp {
  _and: [ConsumerBanking_ConsumerBankingInteractionStatusBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingInteractionStatus
  _gt: ConsumerBanking_ConsumerBankingInteractionStatus
  _gte: ConsumerBanking_ConsumerBankingInteractionStatus
  _in: [ConsumerBanking_ConsumerBankingInteractionStatus!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingInteractionStatus
  _lte: ConsumerBanking_ConsumerBankingInteractionStatus
  _neq: ConsumerBanking_ConsumerBankingInteractionStatus
  _not: ConsumerBanking_ConsumerBankingInteractionStatusBoolExp
  _or: [ConsumerBanking_ConsumerBankingInteractionStatusBoolExp!]
}

scalar ConsumerBanking_ConsumerBankingInteractionType

type ConsumerBanking_ConsumerBankingInteractionTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingInteractionType
  min: ConsumerBanking_ConsumerBankingInteractionType
}

input ConsumerBanking_ConsumerBankingInteractionTypeBoolExp {
  _and: [ConsumerBanking_ConsumerBankingInteractionTypeBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingInteractionType
  _gt: ConsumerBanking_ConsumerBankingInteractionType
  _gte: ConsumerBanking_ConsumerBankingInteractionType
  _in: [ConsumerBanking_ConsumerBankingInteractionType!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingInteractionType
  _lte: ConsumerBanking_ConsumerBankingInteractionType
  _neq: ConsumerBanking_ConsumerBankingInteractionType
  _not: ConsumerBanking_ConsumerBankingInteractionTypeBoolExp
  _or: [ConsumerBanking_ConsumerBankingInteractionTypeBoolExp!]
}

scalar ConsumerBanking_ConsumerBankingInterestCalculationMethod

type ConsumerBanking_ConsumerBankingInterestCalculationMethodAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingInterestCalculationMethod
  min: ConsumerBanking_ConsumerBankingInterestCalculationMethod
}

input ConsumerBanking_ConsumerBankingInterestCalculationMethodBoolExp {
  _and: [ConsumerBanking_ConsumerBankingInterestCalculationMethodBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingInterestCalculationMethod
  _gt: ConsumerBanking_ConsumerBankingInterestCalculationMethod
  _gte: ConsumerBanking_ConsumerBankingInterestCalculationMethod
  _in: [ConsumerBanking_ConsumerBankingInterestCalculationMethod!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingInterestCalculationMethod
  _lte: ConsumerBanking_ConsumerBankingInterestCalculationMethod
  _neq: ConsumerBanking_ConsumerBankingInterestCalculationMethod
  _not: ConsumerBanking_ConsumerBankingInterestCalculationMethodBoolExp
  _or: [ConsumerBanking_ConsumerBankingInterestCalculationMethodBoolExp!]
}

scalar ConsumerBanking_ConsumerBankingInterestType

type ConsumerBanking_ConsumerBankingInterestTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingInterestType
  min: ConsumerBanking_ConsumerBankingInterestType
}

input ConsumerBanking_ConsumerBankingInterestTypeBoolExp {
  _and: [ConsumerBanking_ConsumerBankingInterestTypeBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingInterestType
  _gt: ConsumerBanking_ConsumerBankingInterestType
  _gte: ConsumerBanking_ConsumerBankingInterestType
  _in: [ConsumerBanking_ConsumerBankingInterestType!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingInterestType
  _lte: ConsumerBanking_ConsumerBankingInterestType
  _neq: ConsumerBanking_ConsumerBankingInterestType
  _not: ConsumerBanking_ConsumerBankingInterestTypeBoolExp
  _or: [ConsumerBanking_ConsumerBankingInterestTypeBoolExp!]
}

"""
Stores detailed information about direct debit mandates including payment schedules
"""
type ConsumerBanking_ConsumerBankingMandateRelatedInformation {
  """Purpose code for categorizing the payment type"""
  category: ConsumerBanking_ConsumerBankingDirectDebitCategory

  """Classification of the mandate (e.g., personal, business)"""
  classification: ConsumerBanking_ConsumerBankingDirectDebitClassification
  consumerBankingDirectDebit: ConsumerBanking_ConsumerBankingDirectDebits

  """References the direct debit this mandate belongs to"""
  consumerBankingDirectDebitId: ConsumerBanking_Int4!

  """Auto-incrementing identifier for mandate information"""
  consumerBankingMandateRelatedInformationId: ConsumerBanking_Int4!

  """When the final payment is scheduled (if applicable)"""
  finalPaymentDateTime: ConsumerBanking_Timestamptz

  """When the first payment is scheduled"""
  firstPaymentDateTime: ConsumerBanking_Timestamptz

  """Number of payments in each period"""
  frequencyCountPerPeriod: ConsumerBanking_Int4

  """Specific day or time point for payments"""
  frequencyPointInTime: ConsumerBanking_Varchar

  """How often payments occur (e.g., monthly, weekly)"""
  frequencyType: ConsumerBanking_EnterpriseFrequency!

  """Unique reference for the direct debit mandate"""
  mandateId: ConsumerBanking_Int4!

  """Reason or purpose for the mandate"""
  reason: ConsumerBanking_Varchar

  """When recurring payments are scheduled"""
  recurringPaymentDateTime: ConsumerBanking_Timestamptz
}

type ConsumerBanking_ConsumerBankingMandateRelatedInformationAggExp {
  _count: Int!
  category: ConsumerBanking_ConsumerBankingDirectDebitCategoryAggExp!
  classification: ConsumerBanking_ConsumerBankingDirectDebitClassificationAggExp!
  consumerBankingDirectDebitId: ConsumerBanking_Int4AggExp!
  consumerBankingMandateRelatedInformationId: ConsumerBanking_Int4AggExp!
  finalPaymentDateTime: ConsumerBanking_TimestamptzAggExp!
  firstPaymentDateTime: ConsumerBanking_TimestamptzAggExp!
  frequencyCountPerPeriod: ConsumerBanking_Int4AggExp!
  frequencyPointInTime: ConsumerBanking_VarcharAggExp!
  frequencyType: ConsumerBanking_EnterpriseFrequencyAggExp!
  mandateId: ConsumerBanking_Int4AggExp!
  reason: ConsumerBanking_VarcharAggExp!
  recurringPaymentDateTime: ConsumerBanking_TimestamptzAggExp!
}

input ConsumerBanking_ConsumerBankingMandateRelatedInformationBoolExp {
  _and: [ConsumerBanking_ConsumerBankingMandateRelatedInformationBoolExp!]
  _not: ConsumerBanking_ConsumerBankingMandateRelatedInformationBoolExp
  _or: [ConsumerBanking_ConsumerBankingMandateRelatedInformationBoolExp!]
  category: ConsumerBanking_ConsumerBankingDirectDebitCategoryBoolExp
  classification: ConsumerBanking_ConsumerBankingDirectDebitClassificationBoolExp
  consumerBankingDirectDebit: ConsumerBanking_ConsumerBankingDirectDebitsBoolExp
  consumerBankingDirectDebitId: ConsumerBanking_Int4BoolExp
  consumerBankingMandateRelatedInformationId: ConsumerBanking_Int4BoolExp
  finalPaymentDateTime: ConsumerBanking_TimestamptzBoolExp
  firstPaymentDateTime: ConsumerBanking_TimestamptzBoolExp
  frequencyCountPerPeriod: ConsumerBanking_Int4BoolExp
  frequencyPointInTime: ConsumerBanking_VarcharBoolExp
  frequencyType: ConsumerBanking_EnterpriseFrequencyBoolExp
  mandateId: ConsumerBanking_Int4BoolExp
  reason: ConsumerBanking_VarcharBoolExp
  recurringPaymentDateTime: ConsumerBanking_TimestamptzBoolExp
}

input ConsumerBanking_ConsumerBankingMandateRelatedInformationFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingMandateRelatedInformationOrderByExp!]
  where: ConsumerBanking_ConsumerBankingMandateRelatedInformationBoolExp
}

input ConsumerBanking_ConsumerBankingMandateRelatedInformationOrderByExp {
  category: OrderBy
  classification: OrderBy
  consumerBankingDirectDebit: ConsumerBanking_ConsumerBankingDirectDebitsOrderByExp
  consumerBankingDirectDebitId: OrderBy
  consumerBankingMandateRelatedInformationId: OrderBy
  finalPaymentDateTime: OrderBy
  firstPaymentDateTime: OrderBy
  frequencyCountPerPeriod: OrderBy
  frequencyPointInTime: OrderBy
  frequencyType: OrderBy
  mandateId: OrderBy
  reason: OrderBy
  recurringPaymentDateTime: OrderBy
}

"""Stores promotional offers made to account holders"""
type ConsumerBanking_ConsumerBankingOffers {
  """Monetary amount of the offer"""
  amount: ConsumerBanking_Numeric

  """Currency of the offer amount"""
  amountCurrency: ConsumerBanking_EnterpriseCurrencyCode
  consumerBankingAccount: ConsumerBanking_ConsumerBankingAccounts

  """References the account this offer belongs to"""
  consumerBankingAccountId: ConsumerBanking_Int4!

  """Unique identifier for each offer"""
  consumerBankingOfferId: ConsumerBanking_Int4!

  """Detailed description of the offer"""
  description: ConsumerBanking_Varchar

  """When the offer expires"""
  endDateTime: ConsumerBanking_Timestamptz

  """Any fee associated with accepting the offer"""
  fee: ConsumerBanking_Numeric

  """Currency of the fee"""
  feeCurrency: ConsumerBanking_EnterpriseCurrencyCode

  """Type of offer (e.g., loan, investment, balance transfer)"""
  offerType: ConsumerBanking_ConsumerBankingOfferType!

  """Interest rate associated with the offer"""
  rate: ConsumerBanking_Numeric

  """When the offer becomes available"""
  startDateTime: ConsumerBanking_Timestamptz

  """Terms and conditions of the offer"""
  term: ConsumerBanking_Varchar

  """Web link for more information about the offer"""
  url: ConsumerBanking_Varchar

  """Numerical value related to the offer (e.g., reward points)"""
  value: ConsumerBanking_Int4
}

type ConsumerBanking_ConsumerBankingOffersAggExp {
  _count: Int!
  amount: ConsumerBanking_NumericAggExp!
  amountCurrency: ConsumerBanking_EnterpriseCurrencyCodeAggExp!
  consumerBankingAccountId: ConsumerBanking_Int4AggExp!
  consumerBankingOfferId: ConsumerBanking_Int4AggExp!
  description: ConsumerBanking_VarcharAggExp!
  endDateTime: ConsumerBanking_TimestamptzAggExp!
  fee: ConsumerBanking_NumericAggExp!
  feeCurrency: ConsumerBanking_EnterpriseCurrencyCodeAggExp!
  offerType: ConsumerBanking_ConsumerBankingOfferTypeAggExp!
  rate: ConsumerBanking_NumericAggExp!
  startDateTime: ConsumerBanking_TimestamptzAggExp!
  term: ConsumerBanking_VarcharAggExp!
  url: ConsumerBanking_VarcharAggExp!
  value: ConsumerBanking_Int4AggExp!
}

input ConsumerBanking_ConsumerBankingOffersBoolExp {
  _and: [ConsumerBanking_ConsumerBankingOffersBoolExp!]
  _not: ConsumerBanking_ConsumerBankingOffersBoolExp
  _or: [ConsumerBanking_ConsumerBankingOffersBoolExp!]
  amount: ConsumerBanking_NumericBoolExp
  amountCurrency: ConsumerBanking_EnterpriseCurrencyCodeBoolExp
  consumerBankingAccount: ConsumerBanking_ConsumerBankingAccountsBoolExp
  consumerBankingAccountId: ConsumerBanking_Int4BoolExp
  consumerBankingOfferId: ConsumerBanking_Int4BoolExp
  description: ConsumerBanking_VarcharBoolExp
  endDateTime: ConsumerBanking_TimestamptzBoolExp
  fee: ConsumerBanking_NumericBoolExp
  feeCurrency: ConsumerBanking_EnterpriseCurrencyCodeBoolExp
  offerType: ConsumerBanking_ConsumerBankingOfferTypeBoolExp
  rate: ConsumerBanking_NumericBoolExp
  startDateTime: ConsumerBanking_TimestamptzBoolExp
  term: ConsumerBanking_VarcharBoolExp
  url: ConsumerBanking_VarcharBoolExp
  value: ConsumerBanking_Int4BoolExp
}

input ConsumerBanking_ConsumerBankingOffersFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingOffersOrderByExp!]
  where: ConsumerBanking_ConsumerBankingOffersBoolExp
}

input ConsumerBanking_ConsumerBankingOffersOrderByExp {
  amount: OrderBy
  amountCurrency: OrderBy
  consumerBankingAccount: ConsumerBanking_ConsumerBankingAccountsOrderByExp
  consumerBankingAccountId: OrderBy
  consumerBankingOfferId: OrderBy
  description: OrderBy
  endDateTime: OrderBy
  fee: OrderBy
  feeCurrency: OrderBy
  offerType: OrderBy
  rate: OrderBy
  startDateTime: OrderBy
  term: OrderBy
  url: OrderBy
  value: OrderBy
}

scalar ConsumerBanking_ConsumerBankingOfferType

type ConsumerBanking_ConsumerBankingOfferTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingOfferType
  min: ConsumerBanking_ConsumerBankingOfferType
}

input ConsumerBanking_ConsumerBankingOfferTypeBoolExp {
  _and: [ConsumerBanking_ConsumerBankingOfferTypeBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingOfferType
  _gt: ConsumerBanking_ConsumerBankingOfferType
  _gte: ConsumerBanking_ConsumerBankingOfferType
  _in: [ConsumerBanking_ConsumerBankingOfferType!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingOfferType
  _lte: ConsumerBanking_ConsumerBankingOfferType
  _neq: ConsumerBanking_ConsumerBankingOfferType
  _not: ConsumerBanking_ConsumerBankingOfferTypeBoolExp
  _or: [ConsumerBanking_ConsumerBankingOfferTypeBoolExp!]
}

"""
Stores information about non-standard product types not covered in main categories
"""
type ConsumerBanking_ConsumerBankingOtherProductTypes {
  """Auto-incrementing identifier for each custom product type"""
  consumerBankingOtherProductTypeId: ConsumerBanking_Int4!
  consumerBankingProduct: ConsumerBanking_ConsumerBankingProducts

  """References the related product record"""
  consumerBankingProductId: ConsumerBanking_Int4!

  """Detailed description of the custom product type"""
  description: ConsumerBanking_Varchar!

  """Name of the custom product type"""
  name: ConsumerBanking_Varchar!
}

type ConsumerBanking_ConsumerBankingOtherProductTypesAggExp {
  _count: Int!
  consumerBankingOtherProductTypeId: ConsumerBanking_Int4AggExp!
  consumerBankingProductId: ConsumerBanking_Int4AggExp!
  description: ConsumerBanking_VarcharAggExp!
  name: ConsumerBanking_VarcharAggExp!
}

input ConsumerBanking_ConsumerBankingOtherProductTypesBoolExp {
  _and: [ConsumerBanking_ConsumerBankingOtherProductTypesBoolExp!]
  _not: ConsumerBanking_ConsumerBankingOtherProductTypesBoolExp
  _or: [ConsumerBanking_ConsumerBankingOtherProductTypesBoolExp!]
  consumerBankingOtherProductTypeId: ConsumerBanking_Int4BoolExp
  consumerBankingProduct: ConsumerBanking_ConsumerBankingProductsBoolExp
  consumerBankingProductId: ConsumerBanking_Int4BoolExp
  description: ConsumerBanking_VarcharBoolExp
  name: ConsumerBanking_VarcharBoolExp
}

input ConsumerBanking_ConsumerBankingOtherProductTypesFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingOtherProductTypesOrderByExp!]
  where: ConsumerBanking_ConsumerBankingOtherProductTypesBoolExp
}

input ConsumerBanking_ConsumerBankingOtherProductTypesOrderByExp {
  consumerBankingOtherProductTypeId: OrderBy
  consumerBankingProduct: ConsumerBanking_ConsumerBankingProductsOrderByExp
  consumerBankingProductId: OrderBy
  description: OrderBy
  name: OrderBy
}

scalar ConsumerBanking_ConsumerBankingPaymentMethod

type ConsumerBanking_ConsumerBankingPaymentMethodAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingPaymentMethod
  min: ConsumerBanking_ConsumerBankingPaymentMethod
}

input ConsumerBanking_ConsumerBankingPaymentMethodBoolExp {
  _and: [ConsumerBanking_ConsumerBankingPaymentMethodBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingPaymentMethod
  _gt: ConsumerBanking_ConsumerBankingPaymentMethod
  _gte: ConsumerBanking_ConsumerBankingPaymentMethod
  _in: [ConsumerBanking_ConsumerBankingPaymentMethod!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingPaymentMethod
  _lte: ConsumerBanking_ConsumerBankingPaymentMethod
  _neq: ConsumerBanking_ConsumerBankingPaymentMethod
  _not: ConsumerBanking_ConsumerBankingPaymentMethodBoolExp
  _or: [ConsumerBanking_ConsumerBankingPaymentMethodBoolExp!]
}

"""Defines the financial products offered to customers"""
type ConsumerBanking_ConsumerBankingProducts {
  """Standard interest rate for the product (if applicable)"""
  baseInterestRate: ConsumerBanking_Numeric
  consumerBankingAccounts(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingAccountsOrderByExp!], where: ConsumerBanking_ConsumerBankingAccountsBoolExp): [ConsumerBanking_ConsumerBankingAccounts!]
  consumerBankingAccountsAggregate(filter_input: ConsumerBanking_ConsumerBankingAccountsFilterInput): ConsumerBanking_ConsumerBankingAccountsAggExp!
  consumerBankingOtherProductTypes(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingOtherProductTypesOrderByExp!], where: ConsumerBanking_ConsumerBankingOtherProductTypesBoolExp): [ConsumerBanking_ConsumerBankingOtherProductTypes!]
  consumerBankingOtherProductTypesAggregate(filter_input: ConsumerBanking_ConsumerBankingOtherProductTypesFilterInput): ConsumerBanking_ConsumerBankingOtherProductTypesAggExp!

  """Unique identifier for each product"""
  consumerBankingProductId: ConsumerBanking_Int4!

  """Detailed product description"""
  description: ConsumerBanking_Text

  """Date when product was discontinued if applicable"""
  discontinueDate: ConsumerBanking_Date

  """Type of fee structure applicable to this product"""
  feeSchedule: ConsumerBanking_ConsumerBankingAccountFeeSchedule!

  """Method used to calculate interest on the account"""
  interestCalculationMethod: ConsumerBanking_ConsumerBankingInterestCalculationMethod

  """Indicates if the product earns interest"""
  isInterestBearing: ConsumerBanking_Bool!

  """Date when product was first offered"""
  launchDate: ConsumerBanking_Date

  """Minimum balance to avoid fees"""
  minBalance: ConsumerBanking_Numeric

  """Minimum amount required to open an account of this product type"""
  minOpeningDeposit: ConsumerBanking_Numeric

  """Standard monthly maintenance fee"""
  monthlyFee: ConsumerBanking_Numeric

  """Internal code for the product"""
  productCode: ConsumerBanking_Varchar!

  """Display name for the product"""
  productName: ConsumerBanking_Varchar!

  """Type of product (checking, savings, money market, etc.)"""
  productType: ConsumerBanking_ConsumerBankingProductType!

  """Current availability status of the product"""
  status: ConsumerBanking_ConsumerBankingProductStatus!

  """Term in months (for term products)"""
  termLength: ConsumerBanking_Int4

  """Fee charged per transaction beyond the limit"""
  transactionFee: ConsumerBanking_Numeric

  """Number of free transactions per statement period"""
  transactionLimit: ConsumerBanking_Int4
}

type ConsumerBanking_ConsumerBankingProductsAggExp {
  _count: Int!
  baseInterestRate: ConsumerBanking_NumericAggExp!
  consumerBankingProductId: ConsumerBanking_Int4AggExp!
  description: ConsumerBanking_TextAggExp!
  discontinueDate: ConsumerBanking_DateAggExp!
  feeSchedule: ConsumerBanking_ConsumerBankingAccountFeeScheduleAggExp!
  interestCalculationMethod: ConsumerBanking_ConsumerBankingInterestCalculationMethodAggExp!
  isInterestBearing: ConsumerBanking_BoolAggExp!
  launchDate: ConsumerBanking_DateAggExp!
  minBalance: ConsumerBanking_NumericAggExp!
  minOpeningDeposit: ConsumerBanking_NumericAggExp!
  monthlyFee: ConsumerBanking_NumericAggExp!
  productCode: ConsumerBanking_VarcharAggExp!
  productName: ConsumerBanking_VarcharAggExp!
  productType: ConsumerBanking_ConsumerBankingProductTypeAggExp!
  status: ConsumerBanking_ConsumerBankingProductStatusAggExp!
  termLength: ConsumerBanking_Int4AggExp!
  transactionFee: ConsumerBanking_NumericAggExp!
  transactionLimit: ConsumerBanking_Int4AggExp!
}

input ConsumerBanking_ConsumerBankingProductsBoolExp {
  _and: [ConsumerBanking_ConsumerBankingProductsBoolExp!]
  _not: ConsumerBanking_ConsumerBankingProductsBoolExp
  _or: [ConsumerBanking_ConsumerBankingProductsBoolExp!]
  baseInterestRate: ConsumerBanking_NumericBoolExp
  consumerBankingAccounts: ConsumerBanking_ConsumerBankingAccountsBoolExp
  consumerBankingOtherProductTypes: ConsumerBanking_ConsumerBankingOtherProductTypesBoolExp
  consumerBankingProductId: ConsumerBanking_Int4BoolExp
  description: ConsumerBanking_TextBoolExp
  discontinueDate: ConsumerBanking_DateBoolExp
  feeSchedule: ConsumerBanking_ConsumerBankingAccountFeeScheduleBoolExp
  interestCalculationMethod: ConsumerBanking_ConsumerBankingInterestCalculationMethodBoolExp
  isInterestBearing: ConsumerBanking_BoolBoolExp
  launchDate: ConsumerBanking_DateBoolExp
  minBalance: ConsumerBanking_NumericBoolExp
  minOpeningDeposit: ConsumerBanking_NumericBoolExp
  monthlyFee: ConsumerBanking_NumericBoolExp
  productCode: ConsumerBanking_VarcharBoolExp
  productName: ConsumerBanking_VarcharBoolExp
  productType: ConsumerBanking_ConsumerBankingProductTypeBoolExp
  status: ConsumerBanking_ConsumerBankingProductStatusBoolExp
  termLength: ConsumerBanking_Int4BoolExp
  transactionFee: ConsumerBanking_NumericBoolExp
  transactionLimit: ConsumerBanking_Int4BoolExp
}

input ConsumerBanking_ConsumerBankingProductsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingProductsOrderByExp!]
  where: ConsumerBanking_ConsumerBankingProductsBoolExp
}

input ConsumerBanking_ConsumerBankingProductsOrderByExp {
  baseInterestRate: OrderBy
  consumerBankingProductId: OrderBy
  description: OrderBy
  discontinueDate: OrderBy
  feeSchedule: OrderBy
  interestCalculationMethod: OrderBy
  isInterestBearing: OrderBy
  launchDate: OrderBy
  minBalance: OrderBy
  minOpeningDeposit: OrderBy
  monthlyFee: OrderBy
  productCode: OrderBy
  productName: OrderBy
  productType: OrderBy
  status: OrderBy
  termLength: OrderBy
  transactionFee: OrderBy
  transactionLimit: OrderBy
}

scalar ConsumerBanking_ConsumerBankingProductStatus

type ConsumerBanking_ConsumerBankingProductStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingProductStatus
  min: ConsumerBanking_ConsumerBankingProductStatus
}

input ConsumerBanking_ConsumerBankingProductStatusBoolExp {
  _and: [ConsumerBanking_ConsumerBankingProductStatusBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingProductStatus
  _gt: ConsumerBanking_ConsumerBankingProductStatus
  _gte: ConsumerBanking_ConsumerBankingProductStatus
  _in: [ConsumerBanking_ConsumerBankingProductStatus!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingProductStatus
  _lte: ConsumerBanking_ConsumerBankingProductStatus
  _neq: ConsumerBanking_ConsumerBankingProductStatus
  _not: ConsumerBanking_ConsumerBankingProductStatusBoolExp
  _or: [ConsumerBanking_ConsumerBankingProductStatusBoolExp!]
}

scalar ConsumerBanking_ConsumerBankingProductType

type ConsumerBanking_ConsumerBankingProductTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingProductType
  min: ConsumerBanking_ConsumerBankingProductType
}

input ConsumerBanking_ConsumerBankingProductTypeBoolExp {
  _and: [ConsumerBanking_ConsumerBankingProductTypeBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingProductType
  _gt: ConsumerBanking_ConsumerBankingProductType
  _gte: ConsumerBanking_ConsumerBankingProductType
  _in: [ConsumerBanking_ConsumerBankingProductType!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingProductType
  _lte: ConsumerBanking_ConsumerBankingProductType
  _neq: ConsumerBanking_ConsumerBankingProductType
  _not: ConsumerBanking_ConsumerBankingProductTypeBoolExp
  _or: [ConsumerBanking_ConsumerBankingProductTypeBoolExp!]
}

"""Stores non-standard proprietary codes for transaction categorization"""
type ConsumerBanking_ConsumerBankingProprietaryTransactionCodes {
  """Custom transaction code defined by the issuer"""
  code: ConsumerBanking_Varchar!

  """Auto-incrementing identifier for each proprietary code record"""
  consumerBankingProprietaryTransactionCodeId: ConsumerBanking_Int4!
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactions

  """References the transaction this code belongs to"""
  consumerBankingTransactionId: ConsumerBanking_Int4!

  """Organization that defined the proprietary code"""
  issuer: ConsumerBanking_Varchar
}

type ConsumerBanking_ConsumerBankingProprietaryTransactionCodesAggExp {
  _count: Int!
  code: ConsumerBanking_VarcharAggExp!
  consumerBankingProprietaryTransactionCodeId: ConsumerBanking_Int4AggExp!
  consumerBankingTransactionId: ConsumerBanking_Int4AggExp!
  issuer: ConsumerBanking_VarcharAggExp!
}

input ConsumerBanking_ConsumerBankingProprietaryTransactionCodesBoolExp {
  _and: [ConsumerBanking_ConsumerBankingProprietaryTransactionCodesBoolExp!]
  _not: ConsumerBanking_ConsumerBankingProprietaryTransactionCodesBoolExp
  _or: [ConsumerBanking_ConsumerBankingProprietaryTransactionCodesBoolExp!]
  code: ConsumerBanking_VarcharBoolExp
  consumerBankingProprietaryTransactionCodeId: ConsumerBanking_Int4BoolExp
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactionsBoolExp
  consumerBankingTransactionId: ConsumerBanking_Int4BoolExp
  issuer: ConsumerBanking_VarcharBoolExp
}

input ConsumerBanking_ConsumerBankingProprietaryTransactionCodesFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingProprietaryTransactionCodesOrderByExp!]
  where: ConsumerBanking_ConsumerBankingProprietaryTransactionCodesBoolExp
}

input ConsumerBanking_ConsumerBankingProprietaryTransactionCodesOrderByExp {
  code: OrderBy
  consumerBankingProprietaryTransactionCodeId: OrderBy
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactionsOrderByExp
  consumerBankingTransactionId: OrderBy
  issuer: OrderBy
}

scalar ConsumerBanking_ConsumerBankingRateType

type ConsumerBanking_ConsumerBankingRateTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingRateType
  min: ConsumerBanking_ConsumerBankingRateType
}

input ConsumerBanking_ConsumerBankingRateTypeBoolExp {
  _and: [ConsumerBanking_ConsumerBankingRateTypeBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingRateType
  _gt: ConsumerBanking_ConsumerBankingRateType
  _gte: ConsumerBanking_ConsumerBankingRateType
  _in: [ConsumerBanking_ConsumerBankingRateType!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingRateType
  _lte: ConsumerBanking_ConsumerBankingRateType
  _neq: ConsumerBanking_ConsumerBankingRateType
  _not: ConsumerBanking_ConsumerBankingRateTypeBoolExp
  _or: [ConsumerBanking_ConsumerBankingRateTypeBoolExp!]
}

"""Stores information about accounts receiving scheduled payments"""
type ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAccounts {
  consumerBankingScheduledPayment: ConsumerBanking_ConsumerBankingScheduledPayments

  """Auto-incrementing identifier for each creditor account"""
  consumerBankingScheduledPaymentCreditorAccountId: ConsumerBanking_Int4!

  """References the scheduled payment"""
  consumerBankingScheduledPaymentId: ConsumerBanking_Int4!

  """Account identifier for receiving the payment"""
  identification: ConsumerBanking_Varchar!

  """Name associated with the receiving account"""
  name: ConsumerBanking_Varchar

  """Account identifier scheme (e.g., IBAN)"""
  schemeName: ConsumerBanking_EnterpriseIdentifierScheme!

  """Additional identification for the receiving account"""
  secondaryIdentification: ConsumerBanking_Varchar
}

type ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAccountsAggExp {
  _count: Int!
  consumerBankingScheduledPaymentCreditorAccountId: ConsumerBanking_Int4AggExp!
  consumerBankingScheduledPaymentId: ConsumerBanking_Int4AggExp!
  identification: ConsumerBanking_VarcharAggExp!
  name: ConsumerBanking_VarcharAggExp!
  schemeName: ConsumerBanking_EnterpriseIdentifierSchemeAggExp!
  secondaryIdentification: ConsumerBanking_VarcharAggExp!
}

input ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAccountsBoolExp {
  _and: [ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAccountsBoolExp!]
  _not: ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAccountsBoolExp
  _or: [ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAccountsBoolExp!]
  consumerBankingScheduledPayment: ConsumerBanking_ConsumerBankingScheduledPaymentsBoolExp
  consumerBankingScheduledPaymentCreditorAccountId: ConsumerBanking_Int4BoolExp
  consumerBankingScheduledPaymentId: ConsumerBanking_Int4BoolExp
  identification: ConsumerBanking_VarcharBoolExp
  name: ConsumerBanking_VarcharBoolExp
  schemeName: ConsumerBanking_EnterpriseIdentifierSchemeBoolExp
  secondaryIdentification: ConsumerBanking_VarcharBoolExp
}

input ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAccountsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAccountsOrderByExp!]
  where: ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAccountsBoolExp
}

input ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAccountsOrderByExp {
  consumerBankingScheduledPayment: ConsumerBanking_ConsumerBankingScheduledPaymentsOrderByExp
  consumerBankingScheduledPaymentCreditorAccountId: OrderBy
  consumerBankingScheduledPaymentId: OrderBy
  identification: OrderBy
  name: OrderBy
  schemeName: OrderBy
  secondaryIdentification: OrderBy
}

"""
Stores information about financial institutions receiving scheduled payments
"""
type ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAgents {
  consumerBankingScheduledPayment: ConsumerBanking_ConsumerBankingScheduledPayments

  """Auto-incrementing identifier for each agent record"""
  consumerBankingScheduledPaymentCreditorAgentId: ConsumerBanking_Int4!

  """References the scheduled payment"""
  consumerBankingScheduledPaymentId: ConsumerBanking_Int4!

  """Identifier of the receiving financial institution"""
  identification: ConsumerBanking_Varchar!

  """Legal Entity Identifier of the receiving institution"""
  lei: ConsumerBanking_Varchar

  """Name of the receiving financial institution"""
  name: ConsumerBanking_Varchar

  """Identifier scheme for the receiving institution (e.g., BIC)"""
  schemeName: ConsumerBanking_EnterpriseIdentifierScheme!
}

type ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAgentsAggExp {
  _count: Int!
  consumerBankingScheduledPaymentCreditorAgentId: ConsumerBanking_Int4AggExp!
  consumerBankingScheduledPaymentId: ConsumerBanking_Int4AggExp!
  identification: ConsumerBanking_VarcharAggExp!
  lei: ConsumerBanking_VarcharAggExp!
  name: ConsumerBanking_VarcharAggExp!
  schemeName: ConsumerBanking_EnterpriseIdentifierSchemeAggExp!
}

input ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAgentsBoolExp {
  _and: [ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAgentsBoolExp!]
  _not: ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAgentsBoolExp
  _or: [ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAgentsBoolExp!]
  consumerBankingScheduledPayment: ConsumerBanking_ConsumerBankingScheduledPaymentsBoolExp
  consumerBankingScheduledPaymentCreditorAgentId: ConsumerBanking_Int4BoolExp
  consumerBankingScheduledPaymentId: ConsumerBanking_Int4BoolExp
  identification: ConsumerBanking_VarcharBoolExp
  lei: ConsumerBanking_VarcharBoolExp
  name: ConsumerBanking_VarcharBoolExp
  schemeName: ConsumerBanking_EnterpriseIdentifierSchemeBoolExp
}

input ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAgentsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAgentsOrderByExp!]
  where: ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAgentsBoolExp
}

input ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAgentsOrderByExp {
  consumerBankingScheduledPayment: ConsumerBanking_ConsumerBankingScheduledPaymentsOrderByExp
  consumerBankingScheduledPaymentCreditorAgentId: OrderBy
  consumerBankingScheduledPaymentId: OrderBy
  identification: OrderBy
  lei: OrderBy
  name: OrderBy
  schemeName: OrderBy
}

"""Stores information about one-time and recurring scheduled payments"""
type ConsumerBanking_ConsumerBankingScheduledPayments {
  consumerBankingAccount: ConsumerBanking_ConsumerBankingAccounts

  """References the account this balance belongs to"""
  consumerBankingAccountId: ConsumerBanking_Int4!
  consumerBankingScheduledPaymentCreditorAccounts(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAccountsOrderByExp!], where: ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAccountsBoolExp): [ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAccounts!]
  consumerBankingScheduledPaymentCreditorAccountsAggregate(filter_input: ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAccountsFilterInput): ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAccountsAggExp!
  consumerBankingScheduledPaymentCreditorAgents(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAgentsOrderByExp!], where: ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAgentsBoolExp): [ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAgents!]
  consumerBankingScheduledPaymentCreditorAgentsAggregate(filter_input: ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAgentsFilterInput): ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAgentsAggExp!

  """Unique identifier for each scheduled payment"""
  consumerBankingScheduledPaymentId: ConsumerBanking_Int4!

  """Reference identifier for the payer"""
  debtorReference: ConsumerBanking_Varchar

  """End date for recurring payments"""
  endDate: ConsumerBanking_Date

  """Number of times recurring payment has executed"""
  executionCount: ConsumerBanking_Int4

  """Frequency of recurring payments if applicable"""
  frequency: ConsumerBanking_EnterpriseFrequency

  """Amount to be paid"""
  instructedAmount: ConsumerBanking_Numeric!

  """Currency of the payment amount"""
  instructedAmountCurrency: ConsumerBanking_EnterpriseCurrencyCode!

  """Maximum number of executions for recurring payment"""
  maxExecutions: ConsumerBanking_Int4

  """Method of payment execution"""
  paymentMethod: ConsumerBanking_ConsumerBankingPaymentMethod!

  """Current status of the scheduled payment"""
  paymentStatus: ConsumerBanking_ConsumerBankingScheduledPaymentStatus!

  """Reference identifier for the payment"""
  reference: ConsumerBanking_Varchar

  """When the payment is scheduled to occur"""
  scheduledPaymentDateTime: ConsumerBanking_Timestamptz!

  """Type of scheduled payment"""
  scheduledType: ConsumerBanking_ConsumerBankingScheduledPaymentType!
}

type ConsumerBanking_ConsumerBankingScheduledPaymentsAggExp {
  _count: Int!
  consumerBankingAccountId: ConsumerBanking_Int4AggExp!
  consumerBankingScheduledPaymentId: ConsumerBanking_Int4AggExp!
  debtorReference: ConsumerBanking_VarcharAggExp!
  endDate: ConsumerBanking_DateAggExp!
  executionCount: ConsumerBanking_Int4AggExp!
  frequency: ConsumerBanking_EnterpriseFrequencyAggExp!
  instructedAmount: ConsumerBanking_NumericAggExp!
  instructedAmountCurrency: ConsumerBanking_EnterpriseCurrencyCodeAggExp!
  maxExecutions: ConsumerBanking_Int4AggExp!
  paymentMethod: ConsumerBanking_ConsumerBankingPaymentMethodAggExp!
  paymentStatus: ConsumerBanking_ConsumerBankingScheduledPaymentStatusAggExp!
  reference: ConsumerBanking_VarcharAggExp!
  scheduledPaymentDateTime: ConsumerBanking_TimestamptzAggExp!
  scheduledType: ConsumerBanking_ConsumerBankingScheduledPaymentTypeAggExp!
}

input ConsumerBanking_ConsumerBankingScheduledPaymentsBoolExp {
  _and: [ConsumerBanking_ConsumerBankingScheduledPaymentsBoolExp!]
  _not: ConsumerBanking_ConsumerBankingScheduledPaymentsBoolExp
  _or: [ConsumerBanking_ConsumerBankingScheduledPaymentsBoolExp!]
  consumerBankingAccount: ConsumerBanking_ConsumerBankingAccountsBoolExp
  consumerBankingAccountId: ConsumerBanking_Int4BoolExp
  consumerBankingScheduledPaymentCreditorAccounts: ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAccountsBoolExp
  consumerBankingScheduledPaymentCreditorAgents: ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAgentsBoolExp
  consumerBankingScheduledPaymentId: ConsumerBanking_Int4BoolExp
  debtorReference: ConsumerBanking_VarcharBoolExp
  endDate: ConsumerBanking_DateBoolExp
  executionCount: ConsumerBanking_Int4BoolExp
  frequency: ConsumerBanking_EnterpriseFrequencyBoolExp
  instructedAmount: ConsumerBanking_NumericBoolExp
  instructedAmountCurrency: ConsumerBanking_EnterpriseCurrencyCodeBoolExp
  maxExecutions: ConsumerBanking_Int4BoolExp
  paymentMethod: ConsumerBanking_ConsumerBankingPaymentMethodBoolExp
  paymentStatus: ConsumerBanking_ConsumerBankingScheduledPaymentStatusBoolExp
  reference: ConsumerBanking_VarcharBoolExp
  scheduledPaymentDateTime: ConsumerBanking_TimestamptzBoolExp
  scheduledType: ConsumerBanking_ConsumerBankingScheduledPaymentTypeBoolExp
}

input ConsumerBanking_ConsumerBankingScheduledPaymentsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingScheduledPaymentsOrderByExp!]
  where: ConsumerBanking_ConsumerBankingScheduledPaymentsBoolExp
}

input ConsumerBanking_ConsumerBankingScheduledPaymentsOrderByExp {
  consumerBankingAccount: ConsumerBanking_ConsumerBankingAccountsOrderByExp
  consumerBankingAccountId: OrderBy
  consumerBankingScheduledPaymentId: OrderBy
  debtorReference: OrderBy
  endDate: OrderBy
  executionCount: OrderBy
  frequency: OrderBy
  instructedAmount: OrderBy
  instructedAmountCurrency: OrderBy
  maxExecutions: OrderBy
  paymentMethod: OrderBy
  paymentStatus: OrderBy
  reference: OrderBy
  scheduledPaymentDateTime: OrderBy
  scheduledType: OrderBy
}

scalar ConsumerBanking_ConsumerBankingScheduledPaymentStatus

type ConsumerBanking_ConsumerBankingScheduledPaymentStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingScheduledPaymentStatus
  min: ConsumerBanking_ConsumerBankingScheduledPaymentStatus
}

input ConsumerBanking_ConsumerBankingScheduledPaymentStatusBoolExp {
  _and: [ConsumerBanking_ConsumerBankingScheduledPaymentStatusBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingScheduledPaymentStatus
  _gt: ConsumerBanking_ConsumerBankingScheduledPaymentStatus
  _gte: ConsumerBanking_ConsumerBankingScheduledPaymentStatus
  _in: [ConsumerBanking_ConsumerBankingScheduledPaymentStatus!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingScheduledPaymentStatus
  _lte: ConsumerBanking_ConsumerBankingScheduledPaymentStatus
  _neq: ConsumerBanking_ConsumerBankingScheduledPaymentStatus
  _not: ConsumerBanking_ConsumerBankingScheduledPaymentStatusBoolExp
  _or: [ConsumerBanking_ConsumerBankingScheduledPaymentStatusBoolExp!]
}

scalar ConsumerBanking_ConsumerBankingScheduledPaymentType

type ConsumerBanking_ConsumerBankingScheduledPaymentTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingScheduledPaymentType
  min: ConsumerBanking_ConsumerBankingScheduledPaymentType
}

input ConsumerBanking_ConsumerBankingScheduledPaymentTypeBoolExp {
  _and: [ConsumerBanking_ConsumerBankingScheduledPaymentTypeBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingScheduledPaymentType
  _gt: ConsumerBanking_ConsumerBankingScheduledPaymentType
  _gte: ConsumerBanking_ConsumerBankingScheduledPaymentType
  _in: [ConsumerBanking_ConsumerBankingScheduledPaymentType!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingScheduledPaymentType
  _lte: ConsumerBanking_ConsumerBankingScheduledPaymentType
  _neq: ConsumerBanking_ConsumerBankingScheduledPaymentType
  _not: ConsumerBanking_ConsumerBankingScheduledPaymentTypeBoolExp
  _or: [ConsumerBanking_ConsumerBankingScheduledPaymentTypeBoolExp!]
}

scalar ConsumerBanking_ConsumerBankingStandingOrderCategory

type ConsumerBanking_ConsumerBankingStandingOrderCategoryAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingStandingOrderCategory
  min: ConsumerBanking_ConsumerBankingStandingOrderCategory
}

input ConsumerBanking_ConsumerBankingStandingOrderCategoryBoolExp {
  _and: [ConsumerBanking_ConsumerBankingStandingOrderCategoryBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingStandingOrderCategory
  _gt: ConsumerBanking_ConsumerBankingStandingOrderCategory
  _gte: ConsumerBanking_ConsumerBankingStandingOrderCategory
  _in: [ConsumerBanking_ConsumerBankingStandingOrderCategory!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingStandingOrderCategory
  _lte: ConsumerBanking_ConsumerBankingStandingOrderCategory
  _neq: ConsumerBanking_ConsumerBankingStandingOrderCategory
  _not: ConsumerBanking_ConsumerBankingStandingOrderCategoryBoolExp
  _or: [ConsumerBanking_ConsumerBankingStandingOrderCategoryBoolExp!]
}

"""Stores information about accounts receiving standing order payments"""
type ConsumerBanking_ConsumerBankingStandingOrderCreditorAccounts {
  consumerBankingStandingOrder: ConsumerBanking_ConsumerBankingStandingOrders

  """Auto-incrementing identifier for each creditor account"""
  consumerBankingStandingOrderCreditorAccountId: ConsumerBanking_Int4!

  """References the standing order"""
  consumerBankingStandingOrderId: ConsumerBanking_Int4!

  """Account identifier for receiving the payments"""
  identification: ConsumerBanking_Varchar!

  """Name associated with the receiving account"""
  name: ConsumerBanking_Varchar

  """Account identifier scheme (e.g., IBAN)"""
  schemeName: ConsumerBanking_EnterpriseIdentifierScheme!

  """Additional identification for the receiving account"""
  secondaryIdentification: ConsumerBanking_Varchar
}

type ConsumerBanking_ConsumerBankingStandingOrderCreditorAccountsAggExp {
  _count: Int!
  consumerBankingStandingOrderCreditorAccountId: ConsumerBanking_Int4AggExp!
  consumerBankingStandingOrderId: ConsumerBanking_Int4AggExp!
  identification: ConsumerBanking_VarcharAggExp!
  name: ConsumerBanking_VarcharAggExp!
  schemeName: ConsumerBanking_EnterpriseIdentifierSchemeAggExp!
  secondaryIdentification: ConsumerBanking_VarcharAggExp!
}

input ConsumerBanking_ConsumerBankingStandingOrderCreditorAccountsBoolExp {
  _and: [ConsumerBanking_ConsumerBankingStandingOrderCreditorAccountsBoolExp!]
  _not: ConsumerBanking_ConsumerBankingStandingOrderCreditorAccountsBoolExp
  _or: [ConsumerBanking_ConsumerBankingStandingOrderCreditorAccountsBoolExp!]
  consumerBankingStandingOrder: ConsumerBanking_ConsumerBankingStandingOrdersBoolExp
  consumerBankingStandingOrderCreditorAccountId: ConsumerBanking_Int4BoolExp
  consumerBankingStandingOrderId: ConsumerBanking_Int4BoolExp
  identification: ConsumerBanking_VarcharBoolExp
  name: ConsumerBanking_VarcharBoolExp
  schemeName: ConsumerBanking_EnterpriseIdentifierSchemeBoolExp
  secondaryIdentification: ConsumerBanking_VarcharBoolExp
}

input ConsumerBanking_ConsumerBankingStandingOrderCreditorAccountsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingStandingOrderCreditorAccountsOrderByExp!]
  where: ConsumerBanking_ConsumerBankingStandingOrderCreditorAccountsBoolExp
}

input ConsumerBanking_ConsumerBankingStandingOrderCreditorAccountsOrderByExp {
  consumerBankingStandingOrder: ConsumerBanking_ConsumerBankingStandingOrdersOrderByExp
  consumerBankingStandingOrderCreditorAccountId: OrderBy
  consumerBankingStandingOrderId: OrderBy
  identification: OrderBy
  name: OrderBy
  schemeName: OrderBy
  secondaryIdentification: OrderBy
}

"""
Stores information about financial institutions receiving standing order payments
"""
type ConsumerBanking_ConsumerBankingStandingOrderCreditorAgents {
  consumerBankingStandingOrder: ConsumerBanking_ConsumerBankingStandingOrders

  """Auto-incrementing identifier for each agent record"""
  consumerBankingStandingOrderCreditorAgentId: ConsumerBanking_Int4!

  """References the standing order"""
  consumerBankingStandingOrderId: ConsumerBanking_Int4!

  """Identifier of the receiving financial institution"""
  identification: ConsumerBanking_Varchar!

  """Legal Entity Identifier of the receiving institution"""
  lei: ConsumerBanking_Varchar

  """Name of the receiving financial institution"""
  name: ConsumerBanking_Varchar

  """Identifier scheme for the receiving institution"""
  schemeName: ConsumerBanking_EnterpriseIdentifierScheme!
}

type ConsumerBanking_ConsumerBankingStandingOrderCreditorAgentsAggExp {
  _count: Int!
  consumerBankingStandingOrderCreditorAgentId: ConsumerBanking_Int4AggExp!
  consumerBankingStandingOrderId: ConsumerBanking_Int4AggExp!
  identification: ConsumerBanking_VarcharAggExp!
  lei: ConsumerBanking_VarcharAggExp!
  name: ConsumerBanking_VarcharAggExp!
  schemeName: ConsumerBanking_EnterpriseIdentifierSchemeAggExp!
}

input ConsumerBanking_ConsumerBankingStandingOrderCreditorAgentsBoolExp {
  _and: [ConsumerBanking_ConsumerBankingStandingOrderCreditorAgentsBoolExp!]
  _not: ConsumerBanking_ConsumerBankingStandingOrderCreditorAgentsBoolExp
  _or: [ConsumerBanking_ConsumerBankingStandingOrderCreditorAgentsBoolExp!]
  consumerBankingStandingOrder: ConsumerBanking_ConsumerBankingStandingOrdersBoolExp
  consumerBankingStandingOrderCreditorAgentId: ConsumerBanking_Int4BoolExp
  consumerBankingStandingOrderId: ConsumerBanking_Int4BoolExp
  identification: ConsumerBanking_VarcharBoolExp
  lei: ConsumerBanking_VarcharBoolExp
  name: ConsumerBanking_VarcharBoolExp
  schemeName: ConsumerBanking_EnterpriseIdentifierSchemeBoolExp
}

input ConsumerBanking_ConsumerBankingStandingOrderCreditorAgentsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingStandingOrderCreditorAgentsOrderByExp!]
  where: ConsumerBanking_ConsumerBankingStandingOrderCreditorAgentsBoolExp
}

input ConsumerBanking_ConsumerBankingStandingOrderCreditorAgentsOrderByExp {
  consumerBankingStandingOrder: ConsumerBanking_ConsumerBankingStandingOrdersOrderByExp
  consumerBankingStandingOrderCreditorAgentId: OrderBy
  consumerBankingStandingOrderId: OrderBy
  identification: OrderBy
  lei: OrderBy
  name: OrderBy
  schemeName: OrderBy
}

"""
Stores information about recurring payment instructions (standing orders)
"""
type ConsumerBanking_ConsumerBankingStandingOrders {
  """Category or purpose of the standing order"""
  category: ConsumerBanking_ConsumerBankingStandingOrderCategory
  consumerBankingAccount: ConsumerBanking_ConsumerBankingAccounts

  """References the account this standing order belongs to"""
  consumerBankingAccountId: ConsumerBanking_Int4!
  consumerBankingStandingOrderCreditorAccounts(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingStandingOrderCreditorAccountsOrderByExp!], where: ConsumerBanking_ConsumerBankingStandingOrderCreditorAccountsBoolExp): [ConsumerBanking_ConsumerBankingStandingOrderCreditorAccounts!]
  consumerBankingStandingOrderCreditorAccountsAggregate(filter_input: ConsumerBanking_ConsumerBankingStandingOrderCreditorAccountsFilterInput): ConsumerBanking_ConsumerBankingStandingOrderCreditorAccountsAggExp!
  consumerBankingStandingOrderCreditorAgents(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingStandingOrderCreditorAgentsOrderByExp!], where: ConsumerBanking_ConsumerBankingStandingOrderCreditorAgentsBoolExp): [ConsumerBanking_ConsumerBankingStandingOrderCreditorAgents!]
  consumerBankingStandingOrderCreditorAgentsAggregate(filter_input: ConsumerBanking_ConsumerBankingStandingOrderCreditorAgentsFilterInput): ConsumerBanking_ConsumerBankingStandingOrderCreditorAgentsAggExp!

  """Unique identifier for each standing order"""
  consumerBankingStandingOrderId: ConsumerBanking_Int4!

  """Who or what created the standing order"""
  createdBy: ConsumerBanking_Varchar

  """When the standing order was created"""
  createdDate: ConsumerBanking_Timestamptz!

  """Day of month for payments (for monthly/quarterly frequencies)"""
  dayOfMonth: ConsumerBanking_Int4

  """Day of week for payments (for weekly frequencies)"""
  dayOfWeek: ConsumerBanking_Int4

  """Description of the standing order purpose"""
  description: ConsumerBanking_Varchar

  """Date when the standing order expires (if specified)"""
  endDate: ConsumerBanking_Date

  """Amount of the final payment (if different)"""
  finalPaymentAmount: ConsumerBanking_Numeric

  """Currency of the final payment"""
  finalPaymentCurrency: ConsumerBanking_EnterpriseCurrencyCode

  """Amount of the first payment (if different)"""
  firstPaymentAmount: ConsumerBanking_Numeric

  """Currency of the first payment"""
  firstPaymentCurrency: ConsumerBanking_EnterpriseCurrencyCode

  """Frequency of standing order payments"""
  frequency: ConsumerBanking_EnterpriseFrequency!

  """Amount of the most recent payment"""
  lastPaymentAmount: ConsumerBanking_Numeric

  """Currency of the most recent payment"""
  lastPaymentCurrency: ConsumerBanking_EnterpriseCurrencyCode

  """When the most recent payment was made"""
  lastPaymentDateTime: ConsumerBanking_Timestamptz

  """When the standing order was last modified"""
  modifiedDate: ConsumerBanking_Timestamptz

  """Amount of the next scheduled payment"""
  nextPaymentAmount: ConsumerBanking_Numeric

  """Currency of the next payment"""
  nextPaymentCurrency: ConsumerBanking_EnterpriseCurrencyCode

  """When the next payment is scheduled"""
  nextPaymentDateTime: ConsumerBanking_Timestamptz

  """Type of payment (fixed, variable, etc.)"""
  paymentType: ConsumerBanking_ConsumerBankingStandingOrderType!

  """Payment reference shown to the recipient"""
  reference: ConsumerBanking_Varchar

  """Status code of the standing order (e.g., active, canceled)"""
  standingOrderStatusCode: ConsumerBanking_ConsumerBankingStandingOrderStatusCode!

  """Date when the first payment should be made"""
  startDate: ConsumerBanking_Date!

  """Additional information about the standing order in JSON format"""
  supplementaryData: ConsumerBanking_Text
}

type ConsumerBanking_ConsumerBankingStandingOrdersAggExp {
  _count: Int!
  category: ConsumerBanking_ConsumerBankingStandingOrderCategoryAggExp!
  consumerBankingAccountId: ConsumerBanking_Int4AggExp!
  consumerBankingStandingOrderId: ConsumerBanking_Int4AggExp!
  createdBy: ConsumerBanking_VarcharAggExp!
  createdDate: ConsumerBanking_TimestamptzAggExp!
  dayOfMonth: ConsumerBanking_Int4AggExp!
  dayOfWeek: ConsumerBanking_Int4AggExp!
  description: ConsumerBanking_VarcharAggExp!
  endDate: ConsumerBanking_DateAggExp!
  finalPaymentAmount: ConsumerBanking_NumericAggExp!
  finalPaymentCurrency: ConsumerBanking_EnterpriseCurrencyCodeAggExp!
  firstPaymentAmount: ConsumerBanking_NumericAggExp!
  firstPaymentCurrency: ConsumerBanking_EnterpriseCurrencyCodeAggExp!
  frequency: ConsumerBanking_EnterpriseFrequencyAggExp!
  lastPaymentAmount: ConsumerBanking_NumericAggExp!
  lastPaymentCurrency: ConsumerBanking_EnterpriseCurrencyCodeAggExp!
  lastPaymentDateTime: ConsumerBanking_TimestamptzAggExp!
  modifiedDate: ConsumerBanking_TimestamptzAggExp!
  nextPaymentAmount: ConsumerBanking_NumericAggExp!
  nextPaymentCurrency: ConsumerBanking_EnterpriseCurrencyCodeAggExp!
  nextPaymentDateTime: ConsumerBanking_TimestamptzAggExp!
  paymentType: ConsumerBanking_ConsumerBankingStandingOrderTypeAggExp!
  reference: ConsumerBanking_VarcharAggExp!
  standingOrderStatusCode: ConsumerBanking_ConsumerBankingStandingOrderStatusCodeAggExp!
  startDate: ConsumerBanking_DateAggExp!
  supplementaryData: ConsumerBanking_TextAggExp!
}

input ConsumerBanking_ConsumerBankingStandingOrdersBoolExp {
  _and: [ConsumerBanking_ConsumerBankingStandingOrdersBoolExp!]
  _not: ConsumerBanking_ConsumerBankingStandingOrdersBoolExp
  _or: [ConsumerBanking_ConsumerBankingStandingOrdersBoolExp!]
  category: ConsumerBanking_ConsumerBankingStandingOrderCategoryBoolExp
  consumerBankingAccount: ConsumerBanking_ConsumerBankingAccountsBoolExp
  consumerBankingAccountId: ConsumerBanking_Int4BoolExp
  consumerBankingStandingOrderCreditorAccounts: ConsumerBanking_ConsumerBankingStandingOrderCreditorAccountsBoolExp
  consumerBankingStandingOrderCreditorAgents: ConsumerBanking_ConsumerBankingStandingOrderCreditorAgentsBoolExp
  consumerBankingStandingOrderId: ConsumerBanking_Int4BoolExp
  createdBy: ConsumerBanking_VarcharBoolExp
  createdDate: ConsumerBanking_TimestamptzBoolExp
  dayOfMonth: ConsumerBanking_Int4BoolExp
  dayOfWeek: ConsumerBanking_Int4BoolExp
  description: ConsumerBanking_VarcharBoolExp
  endDate: ConsumerBanking_DateBoolExp
  finalPaymentAmount: ConsumerBanking_NumericBoolExp
  finalPaymentCurrency: ConsumerBanking_EnterpriseCurrencyCodeBoolExp
  firstPaymentAmount: ConsumerBanking_NumericBoolExp
  firstPaymentCurrency: ConsumerBanking_EnterpriseCurrencyCodeBoolExp
  frequency: ConsumerBanking_EnterpriseFrequencyBoolExp
  lastPaymentAmount: ConsumerBanking_NumericBoolExp
  lastPaymentCurrency: ConsumerBanking_EnterpriseCurrencyCodeBoolExp
  lastPaymentDateTime: ConsumerBanking_TimestamptzBoolExp
  modifiedDate: ConsumerBanking_TimestamptzBoolExp
  nextPaymentAmount: ConsumerBanking_NumericBoolExp
  nextPaymentCurrency: ConsumerBanking_EnterpriseCurrencyCodeBoolExp
  nextPaymentDateTime: ConsumerBanking_TimestamptzBoolExp
  paymentType: ConsumerBanking_ConsumerBankingStandingOrderTypeBoolExp
  reference: ConsumerBanking_VarcharBoolExp
  standingOrderStatusCode: ConsumerBanking_ConsumerBankingStandingOrderStatusCodeBoolExp
  startDate: ConsumerBanking_DateBoolExp
  supplementaryData: ConsumerBanking_TextBoolExp
}

input ConsumerBanking_ConsumerBankingStandingOrdersFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingStandingOrdersOrderByExp!]
  where: ConsumerBanking_ConsumerBankingStandingOrdersBoolExp
}

input ConsumerBanking_ConsumerBankingStandingOrdersOrderByExp {
  category: OrderBy
  consumerBankingAccount: ConsumerBanking_ConsumerBankingAccountsOrderByExp
  consumerBankingAccountId: OrderBy
  consumerBankingStandingOrderId: OrderBy
  createdBy: OrderBy
  createdDate: OrderBy
  dayOfMonth: OrderBy
  dayOfWeek: OrderBy
  description: OrderBy
  endDate: OrderBy
  finalPaymentAmount: OrderBy
  finalPaymentCurrency: OrderBy
  firstPaymentAmount: OrderBy
  firstPaymentCurrency: OrderBy
  frequency: OrderBy
  lastPaymentAmount: OrderBy
  lastPaymentCurrency: OrderBy
  lastPaymentDateTime: OrderBy
  modifiedDate: OrderBy
  nextPaymentAmount: OrderBy
  nextPaymentCurrency: OrderBy
  nextPaymentDateTime: OrderBy
  paymentType: OrderBy
  reference: OrderBy
  standingOrderStatusCode: OrderBy
  startDate: OrderBy
  supplementaryData: OrderBy
}

scalar ConsumerBanking_ConsumerBankingStandingOrderStatusCode

type ConsumerBanking_ConsumerBankingStandingOrderStatusCodeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingStandingOrderStatusCode
  min: ConsumerBanking_ConsumerBankingStandingOrderStatusCode
}

input ConsumerBanking_ConsumerBankingStandingOrderStatusCodeBoolExp {
  _and: [ConsumerBanking_ConsumerBankingStandingOrderStatusCodeBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingStandingOrderStatusCode
  _gt: ConsumerBanking_ConsumerBankingStandingOrderStatusCode
  _gte: ConsumerBanking_ConsumerBankingStandingOrderStatusCode
  _in: [ConsumerBanking_ConsumerBankingStandingOrderStatusCode!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingStandingOrderStatusCode
  _lte: ConsumerBanking_ConsumerBankingStandingOrderStatusCode
  _neq: ConsumerBanking_ConsumerBankingStandingOrderStatusCode
  _not: ConsumerBanking_ConsumerBankingStandingOrderStatusCodeBoolExp
  _or: [ConsumerBanking_ConsumerBankingStandingOrderStatusCodeBoolExp!]
}

scalar ConsumerBanking_ConsumerBankingStandingOrderType

type ConsumerBanking_ConsumerBankingStandingOrderTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingStandingOrderType
  min: ConsumerBanking_ConsumerBankingStandingOrderType
}

input ConsumerBanking_ConsumerBankingStandingOrderTypeBoolExp {
  _and: [ConsumerBanking_ConsumerBankingStandingOrderTypeBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingStandingOrderType
  _gt: ConsumerBanking_ConsumerBankingStandingOrderType
  _gte: ConsumerBanking_ConsumerBankingStandingOrderType
  _in: [ConsumerBanking_ConsumerBankingStandingOrderType!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingStandingOrderType
  _lte: ConsumerBanking_ConsumerBankingStandingOrderType
  _neq: ConsumerBanking_ConsumerBankingStandingOrderType
  _not: ConsumerBanking_ConsumerBankingStandingOrderTypeBoolExp
  _or: [ConsumerBanking_ConsumerBankingStandingOrderTypeBoolExp!]
}

"""Stores various monetary amount totals associated with a statement"""
type ConsumerBanking_ConsumerBankingStatementAmounts {
  """Monetary value"""
  amount: ConsumerBanking_Numeric!
  consumerBankingStatement: ConsumerBanking_ConsumerBankingStatements

  """Auto-incrementing identifier for each amount record"""
  consumerBankingStatementAmountId: ConsumerBanking_Int4!

  """References the statement this amount belongs to"""
  consumerBankingStatementId: ConsumerBanking_Int4!

  """Indicates if amount is a credit or debit"""
  creditDebitIndicator: ConsumerBanking_EnterpriseCreditDebitIndicator!

  """Currency code for the amount"""
  currency: ConsumerBanking_EnterpriseCurrencyCode!

  """Further classification of the amount type"""
  subType: ConsumerBanking_ConsumerBankingAmountSubType

  """Type of amount (e.g., opening balance, closing balance, payments)"""
  type: ConsumerBanking_ConsumerBankingAmountType!
}

type ConsumerBanking_ConsumerBankingStatementAmountsAggExp {
  _count: Int!
  amount: ConsumerBanking_NumericAggExp!
  consumerBankingStatementAmountId: ConsumerBanking_Int4AggExp!
  consumerBankingStatementId: ConsumerBanking_Int4AggExp!
  creditDebitIndicator: ConsumerBanking_EnterpriseCreditDebitIndicatorAggExp!
  currency: ConsumerBanking_EnterpriseCurrencyCodeAggExp!
  subType: ConsumerBanking_ConsumerBankingAmountSubTypeAggExp!
  type: ConsumerBanking_ConsumerBankingAmountTypeAggExp!
}

input ConsumerBanking_ConsumerBankingStatementAmountsBoolExp {
  _and: [ConsumerBanking_ConsumerBankingStatementAmountsBoolExp!]
  _not: ConsumerBanking_ConsumerBankingStatementAmountsBoolExp
  _or: [ConsumerBanking_ConsumerBankingStatementAmountsBoolExp!]
  amount: ConsumerBanking_NumericBoolExp
  consumerBankingStatement: ConsumerBanking_ConsumerBankingStatementsBoolExp
  consumerBankingStatementAmountId: ConsumerBanking_Int4BoolExp
  consumerBankingStatementId: ConsumerBanking_Int4BoolExp
  creditDebitIndicator: ConsumerBanking_EnterpriseCreditDebitIndicatorBoolExp
  currency: ConsumerBanking_EnterpriseCurrencyCodeBoolExp
  subType: ConsumerBanking_ConsumerBankingAmountSubTypeBoolExp
  type: ConsumerBanking_ConsumerBankingAmountTypeBoolExp
}

input ConsumerBanking_ConsumerBankingStatementAmountsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingStatementAmountsOrderByExp!]
  where: ConsumerBanking_ConsumerBankingStatementAmountsBoolExp
}

input ConsumerBanking_ConsumerBankingStatementAmountsOrderByExp {
  amount: OrderBy
  consumerBankingStatement: ConsumerBanking_ConsumerBankingStatementsOrderByExp
  consumerBankingStatementAmountId: OrderBy
  consumerBankingStatementId: OrderBy
  creditDebitIndicator: OrderBy
  currency: OrderBy
  subType: OrderBy
  type: OrderBy
}

"""Stores information about benefits received during a statement period"""
type ConsumerBanking_ConsumerBankingStatementBenefits {
  """Monetary value of the benefit"""
  amount: ConsumerBanking_Numeric!
  consumerBankingStatement: ConsumerBanking_ConsumerBankingStatements

  """Auto-incrementing identifier for each benefit record"""
  consumerBankingStatementBenefitId: ConsumerBanking_Int4!

  """References the statement this benefit belongs to"""
  consumerBankingStatementId: ConsumerBanking_Int4!

  """Currency code for the benefit amount"""
  currency: ConsumerBanking_Varchar!

  """Type of benefit (e.g., cashback, rewards, insurance)"""
  type: ConsumerBanking_ConsumerBankingBenefitType!
}

type ConsumerBanking_ConsumerBankingStatementBenefitsAggExp {
  _count: Int!
  amount: ConsumerBanking_NumericAggExp!
  consumerBankingStatementBenefitId: ConsumerBanking_Int4AggExp!
  consumerBankingStatementId: ConsumerBanking_Int4AggExp!
  currency: ConsumerBanking_VarcharAggExp!
  type: ConsumerBanking_ConsumerBankingBenefitTypeAggExp!
}

input ConsumerBanking_ConsumerBankingStatementBenefitsBoolExp {
  _and: [ConsumerBanking_ConsumerBankingStatementBenefitsBoolExp!]
  _not: ConsumerBanking_ConsumerBankingStatementBenefitsBoolExp
  _or: [ConsumerBanking_ConsumerBankingStatementBenefitsBoolExp!]
  amount: ConsumerBanking_NumericBoolExp
  consumerBankingStatement: ConsumerBanking_ConsumerBankingStatementsBoolExp
  consumerBankingStatementBenefitId: ConsumerBanking_Int4BoolExp
  consumerBankingStatementId: ConsumerBanking_Int4BoolExp
  currency: ConsumerBanking_VarcharBoolExp
  type: ConsumerBanking_ConsumerBankingBenefitTypeBoolExp
}

input ConsumerBanking_ConsumerBankingStatementBenefitsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingStatementBenefitsOrderByExp!]
  where: ConsumerBanking_ConsumerBankingStatementBenefitsBoolExp
}

input ConsumerBanking_ConsumerBankingStatementBenefitsOrderByExp {
  amount: OrderBy
  consumerBankingStatement: ConsumerBanking_ConsumerBankingStatementsOrderByExp
  consumerBankingStatementBenefitId: OrderBy
  consumerBankingStatementId: OrderBy
  currency: OrderBy
  type: OrderBy
}

"""Stores important dates associated with a statement"""
type ConsumerBanking_ConsumerBankingStatementDateTimes {
  consumerBankingStatement: ConsumerBanking_ConsumerBankingStatements

  """Auto-incrementing identifier for each date record"""
  consumerBankingStatementDateTimeId: ConsumerBanking_Int4!

  """References the statement this date belongs to"""
  consumerBankingStatementId: ConsumerBanking_Int4!

  """Date and time value"""
  dateTime: ConsumerBanking_Timestamptz!

  """Type of date (e.g., payment due, minimum payment, cycle end)"""
  type: ConsumerBanking_ConsumerBankingStatementDateType!
}

type ConsumerBanking_ConsumerBankingStatementDateTimesAggExp {
  _count: Int!
  consumerBankingStatementDateTimeId: ConsumerBanking_Int4AggExp!
  consumerBankingStatementId: ConsumerBanking_Int4AggExp!
  dateTime: ConsumerBanking_TimestamptzAggExp!
  type: ConsumerBanking_ConsumerBankingStatementDateTypeAggExp!
}

input ConsumerBanking_ConsumerBankingStatementDateTimesBoolExp {
  _and: [ConsumerBanking_ConsumerBankingStatementDateTimesBoolExp!]
  _not: ConsumerBanking_ConsumerBankingStatementDateTimesBoolExp
  _or: [ConsumerBanking_ConsumerBankingStatementDateTimesBoolExp!]
  consumerBankingStatement: ConsumerBanking_ConsumerBankingStatementsBoolExp
  consumerBankingStatementDateTimeId: ConsumerBanking_Int4BoolExp
  consumerBankingStatementId: ConsumerBanking_Int4BoolExp
  dateTime: ConsumerBanking_TimestamptzBoolExp
  type: ConsumerBanking_ConsumerBankingStatementDateTypeBoolExp
}

input ConsumerBanking_ConsumerBankingStatementDateTimesFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingStatementDateTimesOrderByExp!]
  where: ConsumerBanking_ConsumerBankingStatementDateTimesBoolExp
}

input ConsumerBanking_ConsumerBankingStatementDateTimesOrderByExp {
  consumerBankingStatement: ConsumerBanking_ConsumerBankingStatementsOrderByExp
  consumerBankingStatementDateTimeId: OrderBy
  consumerBankingStatementId: OrderBy
  dateTime: OrderBy
  type: OrderBy
}

scalar ConsumerBanking_ConsumerBankingStatementDateType

type ConsumerBanking_ConsumerBankingStatementDateTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingStatementDateType
  min: ConsumerBanking_ConsumerBankingStatementDateType
}

input ConsumerBanking_ConsumerBankingStatementDateTypeBoolExp {
  _and: [ConsumerBanking_ConsumerBankingStatementDateTypeBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingStatementDateType
  _gt: ConsumerBanking_ConsumerBankingStatementDateType
  _gte: ConsumerBanking_ConsumerBankingStatementDateType
  _in: [ConsumerBanking_ConsumerBankingStatementDateType!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingStatementDateType
  _lte: ConsumerBanking_ConsumerBankingStatementDateType
  _neq: ConsumerBanking_ConsumerBankingStatementDateType
  _not: ConsumerBanking_ConsumerBankingStatementDateTypeBoolExp
  _or: [ConsumerBanking_ConsumerBankingStatementDateTypeBoolExp!]
}

"""Stores additional descriptive information for statements"""
type ConsumerBanking_ConsumerBankingStatementDescriptions {
  consumerBankingStatement: ConsumerBanking_ConsumerBankingStatements

  """Auto-incrementing identifier for each description entry"""
  consumerBankingStatementDescriptionId: ConsumerBanking_Int4!

  """References the statement this description belongs to"""
  consumerBankingStatementId: ConsumerBanking_Int4!

  """Descriptive text about the statement"""
  description: ConsumerBanking_Varchar!
}

type ConsumerBanking_ConsumerBankingStatementDescriptionsAggExp {
  _count: Int!
  consumerBankingStatementDescriptionId: ConsumerBanking_Int4AggExp!
  consumerBankingStatementId: ConsumerBanking_Int4AggExp!
  description: ConsumerBanking_VarcharAggExp!
}

input ConsumerBanking_ConsumerBankingStatementDescriptionsBoolExp {
  _and: [ConsumerBanking_ConsumerBankingStatementDescriptionsBoolExp!]
  _not: ConsumerBanking_ConsumerBankingStatementDescriptionsBoolExp
  _or: [ConsumerBanking_ConsumerBankingStatementDescriptionsBoolExp!]
  consumerBankingStatement: ConsumerBanking_ConsumerBankingStatementsBoolExp
  consumerBankingStatementDescriptionId: ConsumerBanking_Int4BoolExp
  consumerBankingStatementId: ConsumerBanking_Int4BoolExp
  description: ConsumerBanking_VarcharBoolExp
}

input ConsumerBanking_ConsumerBankingStatementDescriptionsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingStatementDescriptionsOrderByExp!]
  where: ConsumerBanking_ConsumerBankingStatementDescriptionsBoolExp
}

input ConsumerBanking_ConsumerBankingStatementDescriptionsOrderByExp {
  consumerBankingStatement: ConsumerBanking_ConsumerBankingStatementsOrderByExp
  consumerBankingStatementDescriptionId: OrderBy
  consumerBankingStatementId: OrderBy
  description: OrderBy
}

"""Stores information about fees charged during a statement period"""
type ConsumerBanking_ConsumerBankingStatementFees {
  """Monetary amount of the fee"""
  amount: ConsumerBanking_Numeric!
  consumerBankingStatement: ConsumerBanking_ConsumerBankingStatements

  """Auto-incrementing identifier for each fee record"""
  consumerBankingStatementFeeId: ConsumerBanking_Int4!

  """References the statement this fee belongs to"""
  consumerBankingStatementId: ConsumerBanking_Int4!

  """Indicates if fee is a credit or debit"""
  creditDebitIndicator: ConsumerBanking_EnterpriseCreditDebitIndicator!

  """Currency code for the fee amount"""
  currency: ConsumerBanking_EnterpriseCurrencyCode!

  """Description of the fee"""
  description: ConsumerBanking_Varchar

  """How often the fee is applied (e.g., monthly, per transaction)"""
  frequency: ConsumerBanking_ConsumerBankingFeeFrequency

  """Rate applied if fee is percentage-based"""
  rate: ConsumerBanking_Numeric

  """Type of rate (e.g., fixed, variable)"""
  rateType: ConsumerBanking_ConsumerBankingRateType

  """Type of fee (e.g., service, transaction, late payment)"""
  type: ConsumerBanking_ConsumerBankingFeeType!
}

type ConsumerBanking_ConsumerBankingStatementFeesAggExp {
  _count: Int!
  amount: ConsumerBanking_NumericAggExp!
  consumerBankingStatementFeeId: ConsumerBanking_Int4AggExp!
  consumerBankingStatementId: ConsumerBanking_Int4AggExp!
  creditDebitIndicator: ConsumerBanking_EnterpriseCreditDebitIndicatorAggExp!
  currency: ConsumerBanking_EnterpriseCurrencyCodeAggExp!
  description: ConsumerBanking_VarcharAggExp!
  frequency: ConsumerBanking_ConsumerBankingFeeFrequencyAggExp!
  rate: ConsumerBanking_NumericAggExp!
  rateType: ConsumerBanking_ConsumerBankingRateTypeAggExp!
  type: ConsumerBanking_ConsumerBankingFeeTypeAggExp!
}

input ConsumerBanking_ConsumerBankingStatementFeesBoolExp {
  _and: [ConsumerBanking_ConsumerBankingStatementFeesBoolExp!]
  _not: ConsumerBanking_ConsumerBankingStatementFeesBoolExp
  _or: [ConsumerBanking_ConsumerBankingStatementFeesBoolExp!]
  amount: ConsumerBanking_NumericBoolExp
  consumerBankingStatement: ConsumerBanking_ConsumerBankingStatementsBoolExp
  consumerBankingStatementFeeId: ConsumerBanking_Int4BoolExp
  consumerBankingStatementId: ConsumerBanking_Int4BoolExp
  creditDebitIndicator: ConsumerBanking_EnterpriseCreditDebitIndicatorBoolExp
  currency: ConsumerBanking_EnterpriseCurrencyCodeBoolExp
  description: ConsumerBanking_VarcharBoolExp
  frequency: ConsumerBanking_ConsumerBankingFeeFrequencyBoolExp
  rate: ConsumerBanking_NumericBoolExp
  rateType: ConsumerBanking_ConsumerBankingRateTypeBoolExp
  type: ConsumerBanking_ConsumerBankingFeeTypeBoolExp
}

input ConsumerBanking_ConsumerBankingStatementFeesFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingStatementFeesOrderByExp!]
  where: ConsumerBanking_ConsumerBankingStatementFeesBoolExp
}

input ConsumerBanking_ConsumerBankingStatementFeesOrderByExp {
  amount: OrderBy
  consumerBankingStatement: ConsumerBanking_ConsumerBankingStatementsOrderByExp
  consumerBankingStatementFeeId: OrderBy
  consumerBankingStatementId: OrderBy
  creditDebitIndicator: OrderBy
  currency: OrderBy
  description: OrderBy
  frequency: OrderBy
  rate: OrderBy
  rateType: OrderBy
  type: OrderBy
}

scalar ConsumerBanking_ConsumerBankingStatementFormat

type ConsumerBanking_ConsumerBankingStatementFormatAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingStatementFormat
  min: ConsumerBanking_ConsumerBankingStatementFormat
}

input ConsumerBanking_ConsumerBankingStatementFormatBoolExp {
  _and: [ConsumerBanking_ConsumerBankingStatementFormatBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingStatementFormat
  _gt: ConsumerBanking_ConsumerBankingStatementFormat
  _gte: ConsumerBanking_ConsumerBankingStatementFormat
  _in: [ConsumerBanking_ConsumerBankingStatementFormat!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingStatementFormat
  _lte: ConsumerBanking_ConsumerBankingStatementFormat
  _neq: ConsumerBanking_ConsumerBankingStatementFormat
  _not: ConsumerBanking_ConsumerBankingStatementFormatBoolExp
  _or: [ConsumerBanking_ConsumerBankingStatementFormatBoolExp!]
}

"""
Stores information about interest earned or charged during a statement period
"""
type ConsumerBanking_ConsumerBankingStatementInterests {
  """Monetary amount of interest earned or charged"""
  amount: ConsumerBanking_Numeric!
  consumerBankingStatement: ConsumerBanking_ConsumerBankingStatements

  """References the statement this interest belongs to"""
  consumerBankingStatementId: ConsumerBanking_Int4!

  """Auto-incrementing identifier for each interest record"""
  consumerBankingStatementInterestId: ConsumerBanking_Int4!

  """Indicates if interest is earned (credit) or charged (debit)"""
  creditDebitIndicator: ConsumerBanking_EnterpriseCreditDebitIndicator!

  """Currency code for the interest amount"""
  currency: ConsumerBanking_EnterpriseCurrencyCode!

  """Description of the interest"""
  description: ConsumerBanking_Varchar

  """How often interest is calculated (e.g., daily, monthly)"""
  frequency: ConsumerBanking_EnterpriseFrequency

  """Interest rate applied"""
  rate: ConsumerBanking_Numeric

  """Type of rate (e.g., fixed, variable, promotional)"""
  rateType: ConsumerBanking_ConsumerBankingRateType

  """Type of interest (e.g., deposit, loan, credit card)"""
  type: ConsumerBanking_ConsumerBankingInterestType!
}

type ConsumerBanking_ConsumerBankingStatementInterestsAggExp {
  _count: Int!
  amount: ConsumerBanking_NumericAggExp!
  consumerBankingStatementId: ConsumerBanking_Int4AggExp!
  consumerBankingStatementInterestId: ConsumerBanking_Int4AggExp!
  creditDebitIndicator: ConsumerBanking_EnterpriseCreditDebitIndicatorAggExp!
  currency: ConsumerBanking_EnterpriseCurrencyCodeAggExp!
  description: ConsumerBanking_VarcharAggExp!
  frequency: ConsumerBanking_EnterpriseFrequencyAggExp!
  rate: ConsumerBanking_NumericAggExp!
  rateType: ConsumerBanking_ConsumerBankingRateTypeAggExp!
  type: ConsumerBanking_ConsumerBankingInterestTypeAggExp!
}

input ConsumerBanking_ConsumerBankingStatementInterestsBoolExp {
  _and: [ConsumerBanking_ConsumerBankingStatementInterestsBoolExp!]
  _not: ConsumerBanking_ConsumerBankingStatementInterestsBoolExp
  _or: [ConsumerBanking_ConsumerBankingStatementInterestsBoolExp!]
  amount: ConsumerBanking_NumericBoolExp
  consumerBankingStatement: ConsumerBanking_ConsumerBankingStatementsBoolExp
  consumerBankingStatementId: ConsumerBanking_Int4BoolExp
  consumerBankingStatementInterestId: ConsumerBanking_Int4BoolExp
  creditDebitIndicator: ConsumerBanking_EnterpriseCreditDebitIndicatorBoolExp
  currency: ConsumerBanking_EnterpriseCurrencyCodeBoolExp
  description: ConsumerBanking_VarcharBoolExp
  frequency: ConsumerBanking_EnterpriseFrequencyBoolExp
  rate: ConsumerBanking_NumericBoolExp
  rateType: ConsumerBanking_ConsumerBankingRateTypeBoolExp
  type: ConsumerBanking_ConsumerBankingInterestTypeBoolExp
}

input ConsumerBanking_ConsumerBankingStatementInterestsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingStatementInterestsOrderByExp!]
  where: ConsumerBanking_ConsumerBankingStatementInterestsBoolExp
}

input ConsumerBanking_ConsumerBankingStatementInterestsOrderByExp {
  amount: OrderBy
  consumerBankingStatement: ConsumerBanking_ConsumerBankingStatementsOrderByExp
  consumerBankingStatementId: OrderBy
  consumerBankingStatementInterestId: OrderBy
  creditDebitIndicator: OrderBy
  currency: OrderBy
  description: OrderBy
  frequency: OrderBy
  rate: OrderBy
  rateType: OrderBy
  type: OrderBy
}

"""
Stores various rate information associated with statements, including interest rates, promotional rates, and exchange rates
"""
type ConsumerBanking_ConsumerBankingStatementRates {
  """Balance amount subject to this rate"""
  balanceSubjectToRate: ConsumerBanking_Numeric
  consumerBankingStatement: ConsumerBanking_ConsumerBankingStatements

  """References the statement this rate belongs to"""
  consumerBankingStatementId: ConsumerBanking_Int4!

  """Auto-incrementing identifier for each rate record"""
  consumerBankingStatementRateId: ConsumerBanking_Int4!

  """When this record was created"""
  createdAt: ConsumerBanking_Timestamptz!

  """Additional description of the rate's applicability"""
  description: ConsumerBanking_Varchar

  """Date when this rate became effective"""
  effectiveDate: ConsumerBanking_Date

  """Date when this rate expires (if applicable)"""
  expirationDate: ConsumerBanking_Date

  """Base index rate for variable rates"""
  indexRate: ConsumerBanking_Numeric

  """Whether this is a variable rate"""
  isVariable: ConsumerBanking_Bool!

  """Margin added to index for variable rates"""
  margin: ConsumerBanking_Numeric

  """Rate value (e.g., interest rate, exchange rate)"""
  rate: ConsumerBanking_Numeric!

  """Type of rate (e.g., APR, promotional rate)"""
  type: ConsumerBanking_ConsumerBankingStatementRateType!

  """When this record was last updated"""
  updatedAt: ConsumerBanking_Timestamptz!
}

type ConsumerBanking_ConsumerBankingStatementRatesAggExp {
  _count: Int!
  balanceSubjectToRate: ConsumerBanking_NumericAggExp!
  consumerBankingStatementId: ConsumerBanking_Int4AggExp!
  consumerBankingStatementRateId: ConsumerBanking_Int4AggExp!
  createdAt: ConsumerBanking_TimestamptzAggExp!
  description: ConsumerBanking_VarcharAggExp!
  effectiveDate: ConsumerBanking_DateAggExp!
  expirationDate: ConsumerBanking_DateAggExp!
  indexRate: ConsumerBanking_NumericAggExp!
  isVariable: ConsumerBanking_BoolAggExp!
  margin: ConsumerBanking_NumericAggExp!
  rate: ConsumerBanking_NumericAggExp!
  type: ConsumerBanking_ConsumerBankingStatementRateTypeAggExp!
  updatedAt: ConsumerBanking_TimestamptzAggExp!
}

input ConsumerBanking_ConsumerBankingStatementRatesBoolExp {
  _and: [ConsumerBanking_ConsumerBankingStatementRatesBoolExp!]
  _not: ConsumerBanking_ConsumerBankingStatementRatesBoolExp
  _or: [ConsumerBanking_ConsumerBankingStatementRatesBoolExp!]
  balanceSubjectToRate: ConsumerBanking_NumericBoolExp
  consumerBankingStatement: ConsumerBanking_ConsumerBankingStatementsBoolExp
  consumerBankingStatementId: ConsumerBanking_Int4BoolExp
  consumerBankingStatementRateId: ConsumerBanking_Int4BoolExp
  createdAt: ConsumerBanking_TimestamptzBoolExp
  description: ConsumerBanking_VarcharBoolExp
  effectiveDate: ConsumerBanking_DateBoolExp
  expirationDate: ConsumerBanking_DateBoolExp
  indexRate: ConsumerBanking_NumericBoolExp
  isVariable: ConsumerBanking_BoolBoolExp
  margin: ConsumerBanking_NumericBoolExp
  rate: ConsumerBanking_NumericBoolExp
  type: ConsumerBanking_ConsumerBankingStatementRateTypeBoolExp
  updatedAt: ConsumerBanking_TimestamptzBoolExp
}

input ConsumerBanking_ConsumerBankingStatementRatesFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingStatementRatesOrderByExp!]
  where: ConsumerBanking_ConsumerBankingStatementRatesBoolExp
}

input ConsumerBanking_ConsumerBankingStatementRatesOrderByExp {
  balanceSubjectToRate: OrderBy
  consumerBankingStatement: ConsumerBanking_ConsumerBankingStatementsOrderByExp
  consumerBankingStatementId: OrderBy
  consumerBankingStatementRateId: OrderBy
  createdAt: OrderBy
  description: OrderBy
  effectiveDate: OrderBy
  expirationDate: OrderBy
  indexRate: OrderBy
  isVariable: OrderBy
  margin: OrderBy
  rate: OrderBy
  type: OrderBy
  updatedAt: OrderBy
}

scalar ConsumerBanking_ConsumerBankingStatementRateType

type ConsumerBanking_ConsumerBankingStatementRateTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingStatementRateType
  min: ConsumerBanking_ConsumerBankingStatementRateType
}

input ConsumerBanking_ConsumerBankingStatementRateTypeBoolExp {
  _and: [ConsumerBanking_ConsumerBankingStatementRateTypeBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingStatementRateType
  _gt: ConsumerBanking_ConsumerBankingStatementRateType
  _gte: ConsumerBanking_ConsumerBankingStatementRateType
  _in: [ConsumerBanking_ConsumerBankingStatementRateType!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingStatementRateType
  _lte: ConsumerBanking_ConsumerBankingStatementRateType
  _neq: ConsumerBanking_ConsumerBankingStatementRateType
  _not: ConsumerBanking_ConsumerBankingStatementRateTypeBoolExp
  _or: [ConsumerBanking_ConsumerBankingStatementRateTypeBoolExp!]
}

"""Stores information about account statements"""
type ConsumerBanking_ConsumerBankingStatements {
  consumerBankingAccount: ConsumerBanking_ConsumerBankingAccounts

  """References the account this balance belongs to"""
  consumerBankingAccountId: ConsumerBanking_Int4!
  consumerBankingAccountStatementPreferences(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingAccountStatementPreferencesOrderByExp!], where: ConsumerBanking_ConsumerBankingAccountStatementPreferencesBoolExp): [ConsumerBanking_ConsumerBankingAccountStatementPreferences!]
  consumerBankingAccountStatementPreferencesAggregate(filter_input: ConsumerBanking_ConsumerBankingAccountStatementPreferencesFilterInput): ConsumerBanking_ConsumerBankingAccountStatementPreferencesAggExp!
  consumerBankingStatementAmounts(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingStatementAmountsOrderByExp!], where: ConsumerBanking_ConsumerBankingStatementAmountsBoolExp): [ConsumerBanking_ConsumerBankingStatementAmounts!]
  consumerBankingStatementAmountsAggregate(filter_input: ConsumerBanking_ConsumerBankingStatementAmountsFilterInput): ConsumerBanking_ConsumerBankingStatementAmountsAggExp!
  consumerBankingStatementBenefits(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingStatementBenefitsOrderByExp!], where: ConsumerBanking_ConsumerBankingStatementBenefitsBoolExp): [ConsumerBanking_ConsumerBankingStatementBenefits!]
  consumerBankingStatementBenefitsAggregate(filter_input: ConsumerBanking_ConsumerBankingStatementBenefitsFilterInput): ConsumerBanking_ConsumerBankingStatementBenefitsAggExp!
  consumerBankingStatementDateTimes(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingStatementDateTimesOrderByExp!], where: ConsumerBanking_ConsumerBankingStatementDateTimesBoolExp): [ConsumerBanking_ConsumerBankingStatementDateTimes!]
  consumerBankingStatementDateTimesAggregate(filter_input: ConsumerBanking_ConsumerBankingStatementDateTimesFilterInput): ConsumerBanking_ConsumerBankingStatementDateTimesAggExp!
  consumerBankingStatementDescriptions(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingStatementDescriptionsOrderByExp!], where: ConsumerBanking_ConsumerBankingStatementDescriptionsBoolExp): [ConsumerBanking_ConsumerBankingStatementDescriptions!]
  consumerBankingStatementDescriptionsAggregate(filter_input: ConsumerBanking_ConsumerBankingStatementDescriptionsFilterInput): ConsumerBanking_ConsumerBankingStatementDescriptionsAggExp!
  consumerBankingStatementFees(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingStatementFeesOrderByExp!], where: ConsumerBanking_ConsumerBankingStatementFeesBoolExp): [ConsumerBanking_ConsumerBankingStatementFees!]
  consumerBankingStatementFeesAggregate(filter_input: ConsumerBanking_ConsumerBankingStatementFeesFilterInput): ConsumerBanking_ConsumerBankingStatementFeesAggExp!

  """Unique identifier for each statement"""
  consumerBankingStatementId: ConsumerBanking_Int4!
  consumerBankingStatementInterests(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingStatementInterestsOrderByExp!], where: ConsumerBanking_ConsumerBankingStatementInterestsBoolExp): [ConsumerBanking_ConsumerBankingStatementInterests!]
  consumerBankingStatementInterestsAggregate(filter_input: ConsumerBanking_ConsumerBankingStatementInterestsFilterInput): ConsumerBanking_ConsumerBankingStatementInterestsAggExp!
  consumerBankingStatementRates(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingStatementRatesOrderByExp!], where: ConsumerBanking_ConsumerBankingStatementRatesBoolExp): [ConsumerBanking_ConsumerBankingStatementRates!]
  consumerBankingStatementRatesAggregate(filter_input: ConsumerBanking_ConsumerBankingStatementRatesFilterInput): ConsumerBanking_ConsumerBankingStatementRatesAggExp!
  consumerBankingStatementValues(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingStatementValuesOrderByExp!], where: ConsumerBanking_ConsumerBankingStatementValuesBoolExp): [ConsumerBanking_ConsumerBankingStatementValues!]
  consumerBankingStatementValuesAggregate(filter_input: ConsumerBanking_ConsumerBankingStatementValuesFilterInput): ConsumerBanking_ConsumerBankingStatementValuesAggExp!

  """When the statement was generated"""
  creationDateTime: ConsumerBanking_Timestamptz!

  """End of the period covered by the statement"""
  endDateTime: ConsumerBanking_Timestamptz!

  """Start of the period covered by the statement"""
  startDateTime: ConsumerBanking_Timestamptz!

  """Reference number for the statement"""
  statementReference: ConsumerBanking_Varchar

  """Type of statement (e.g., regular, interim, final)"""
  type: ConsumerBanking_ConsumerBankingStatementType!
}

type ConsumerBanking_ConsumerBankingStatementsAggExp {
  _count: Int!
  consumerBankingAccountId: ConsumerBanking_Int4AggExp!
  consumerBankingStatementId: ConsumerBanking_Int4AggExp!
  creationDateTime: ConsumerBanking_TimestamptzAggExp!
  endDateTime: ConsumerBanking_TimestamptzAggExp!
  startDateTime: ConsumerBanking_TimestamptzAggExp!
  statementReference: ConsumerBanking_VarcharAggExp!
  type: ConsumerBanking_ConsumerBankingStatementTypeAggExp!
}

input ConsumerBanking_ConsumerBankingStatementsBoolExp {
  _and: [ConsumerBanking_ConsumerBankingStatementsBoolExp!]
  _not: ConsumerBanking_ConsumerBankingStatementsBoolExp
  _or: [ConsumerBanking_ConsumerBankingStatementsBoolExp!]
  consumerBankingAccount: ConsumerBanking_ConsumerBankingAccountsBoolExp
  consumerBankingAccountId: ConsumerBanking_Int4BoolExp
  consumerBankingAccountStatementPreferences: ConsumerBanking_ConsumerBankingAccountStatementPreferencesBoolExp
  consumerBankingStatementAmounts: ConsumerBanking_ConsumerBankingStatementAmountsBoolExp
  consumerBankingStatementBenefits: ConsumerBanking_ConsumerBankingStatementBenefitsBoolExp
  consumerBankingStatementDateTimes: ConsumerBanking_ConsumerBankingStatementDateTimesBoolExp
  consumerBankingStatementDescriptions: ConsumerBanking_ConsumerBankingStatementDescriptionsBoolExp
  consumerBankingStatementFees: ConsumerBanking_ConsumerBankingStatementFeesBoolExp
  consumerBankingStatementId: ConsumerBanking_Int4BoolExp
  consumerBankingStatementInterests: ConsumerBanking_ConsumerBankingStatementInterestsBoolExp
  consumerBankingStatementRates: ConsumerBanking_ConsumerBankingStatementRatesBoolExp
  consumerBankingStatementValues: ConsumerBanking_ConsumerBankingStatementValuesBoolExp
  creationDateTime: ConsumerBanking_TimestamptzBoolExp
  endDateTime: ConsumerBanking_TimestamptzBoolExp
  startDateTime: ConsumerBanking_TimestamptzBoolExp
  statementReference: ConsumerBanking_VarcharBoolExp
  type: ConsumerBanking_ConsumerBankingStatementTypeBoolExp
}

input ConsumerBanking_ConsumerBankingStatementsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingStatementsOrderByExp!]
  where: ConsumerBanking_ConsumerBankingStatementsBoolExp
}

input ConsumerBanking_ConsumerBankingStatementsOrderByExp {
  consumerBankingAccount: ConsumerBanking_ConsumerBankingAccountsOrderByExp
  consumerBankingAccountId: OrderBy
  consumerBankingStatementId: OrderBy
  creationDateTime: OrderBy
  endDateTime: OrderBy
  startDateTime: OrderBy
  statementReference: OrderBy
  type: OrderBy
}

scalar ConsumerBanking_ConsumerBankingStatementType

type ConsumerBanking_ConsumerBankingStatementTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingStatementType
  min: ConsumerBanking_ConsumerBankingStatementType
}

input ConsumerBanking_ConsumerBankingStatementTypeBoolExp {
  _and: [ConsumerBanking_ConsumerBankingStatementTypeBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingStatementType
  _gt: ConsumerBanking_ConsumerBankingStatementType
  _gte: ConsumerBanking_ConsumerBankingStatementType
  _in: [ConsumerBanking_ConsumerBankingStatementType!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingStatementType
  _lte: ConsumerBanking_ConsumerBankingStatementType
  _neq: ConsumerBanking_ConsumerBankingStatementType
  _not: ConsumerBanking_ConsumerBankingStatementTypeBoolExp
  _or: [ConsumerBanking_ConsumerBankingStatementTypeBoolExp!]
}

"""
Stores miscellaneous values associated with a statement that aren't monetary
amounts, such as loyalty points, credit scores, or tier levels
"""
type ConsumerBanking_ConsumerBankingStatementValues {
  """Percentage change from previous statement"""
  changePercentage: ConsumerBanking_Numeric
  consumerBankingStatement: ConsumerBanking_ConsumerBankingStatements

  """References the statement this value belongs to"""
  consumerBankingStatementId: ConsumerBanking_Int4!

  """Auto-incrementing identifier for each value record"""
  consumerBankingStatementValueId: ConsumerBanking_Int4!

  """When this record was created"""
  createdAt: ConsumerBanking_Timestamptz!

  """Additional description or context for the value"""
  description: ConsumerBanking_Varchar

  """Whether this value is estimated rather than confirmed"""
  isEstimated: ConsumerBanking_Bool!

  """Previous statement's value of the same type, for comparison"""
  previousValue: ConsumerBanking_Varchar

  """
  End of the period this value refers to, if different from statement period
  """
  referencePeriodEnd: ConsumerBanking_Date

  """
  Start of the period this value refers to, if different from statement period
  """
  referencePeriodStart: ConsumerBanking_Date

  """Type of value stored"""
  type: ConsumerBanking_ConsumerBankingStatementValueType!

  """When this record was last updated"""
  updatedAt: ConsumerBanking_Timestamptz!

  """Value content (e.g., loyalty points, tier level, credit score)"""
  value: ConsumerBanking_Varchar!
}

type ConsumerBanking_ConsumerBankingStatementValuesAggExp {
  _count: Int!
  changePercentage: ConsumerBanking_NumericAggExp!
  consumerBankingStatementId: ConsumerBanking_Int4AggExp!
  consumerBankingStatementValueId: ConsumerBanking_Int4AggExp!
  createdAt: ConsumerBanking_TimestamptzAggExp!
  description: ConsumerBanking_VarcharAggExp!
  isEstimated: ConsumerBanking_BoolAggExp!
  previousValue: ConsumerBanking_VarcharAggExp!
  referencePeriodEnd: ConsumerBanking_DateAggExp!
  referencePeriodStart: ConsumerBanking_DateAggExp!
  type: ConsumerBanking_ConsumerBankingStatementValueTypeAggExp!
  updatedAt: ConsumerBanking_TimestamptzAggExp!
  value: ConsumerBanking_VarcharAggExp!
}

input ConsumerBanking_ConsumerBankingStatementValuesBoolExp {
  _and: [ConsumerBanking_ConsumerBankingStatementValuesBoolExp!]
  _not: ConsumerBanking_ConsumerBankingStatementValuesBoolExp
  _or: [ConsumerBanking_ConsumerBankingStatementValuesBoolExp!]
  changePercentage: ConsumerBanking_NumericBoolExp
  consumerBankingStatement: ConsumerBanking_ConsumerBankingStatementsBoolExp
  consumerBankingStatementId: ConsumerBanking_Int4BoolExp
  consumerBankingStatementValueId: ConsumerBanking_Int4BoolExp
  createdAt: ConsumerBanking_TimestamptzBoolExp
  description: ConsumerBanking_VarcharBoolExp
  isEstimated: ConsumerBanking_BoolBoolExp
  previousValue: ConsumerBanking_VarcharBoolExp
  referencePeriodEnd: ConsumerBanking_DateBoolExp
  referencePeriodStart: ConsumerBanking_DateBoolExp
  type: ConsumerBanking_ConsumerBankingStatementValueTypeBoolExp
  updatedAt: ConsumerBanking_TimestamptzBoolExp
  value: ConsumerBanking_VarcharBoolExp
}

input ConsumerBanking_ConsumerBankingStatementValuesFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingStatementValuesOrderByExp!]
  where: ConsumerBanking_ConsumerBankingStatementValuesBoolExp
}

input ConsumerBanking_ConsumerBankingStatementValuesOrderByExp {
  changePercentage: OrderBy
  consumerBankingStatement: ConsumerBanking_ConsumerBankingStatementsOrderByExp
  consumerBankingStatementId: OrderBy
  consumerBankingStatementValueId: OrderBy
  createdAt: OrderBy
  description: OrderBy
  isEstimated: OrderBy
  previousValue: OrderBy
  referencePeriodEnd: OrderBy
  referencePeriodStart: OrderBy
  type: OrderBy
  updatedAt: OrderBy
  value: OrderBy
}

scalar ConsumerBanking_ConsumerBankingStatementValueType

type ConsumerBanking_ConsumerBankingStatementValueTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingStatementValueType
  min: ConsumerBanking_ConsumerBankingStatementValueType
}

input ConsumerBanking_ConsumerBankingStatementValueTypeBoolExp {
  _and: [ConsumerBanking_ConsumerBankingStatementValueTypeBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingStatementValueType
  _gt: ConsumerBanking_ConsumerBankingStatementValueType
  _gte: ConsumerBanking_ConsumerBankingStatementValueType
  _in: [ConsumerBanking_ConsumerBankingStatementValueType!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingStatementValueType
  _lte: ConsumerBanking_ConsumerBankingStatementValueType
  _neq: ConsumerBanking_ConsumerBankingStatementValueType
  _not: ConsumerBanking_ConsumerBankingStatementValueTypeBoolExp
  _or: [ConsumerBanking_ConsumerBankingStatementValueTypeBoolExp!]
}

"""Stores account balance information at the time of each transaction"""
type ConsumerBanking_ConsumerBankingTransactionBalances {
  """Balance amount after the transaction"""
  amount: ConsumerBanking_Numeric!
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactions

  """Auto-incrementing identifier for each transaction balance record"""
  consumerBankingTransactionBalanceId: ConsumerBanking_Int4!

  """References the transaction this balance belongs to"""
  consumerBankingTransactionId: ConsumerBanking_Int4!

  """Indicates if balance is credit or debit"""
  creditDebitIndicator: ConsumerBanking_EnterpriseCreditDebitIndicator!

  """Currency code for the balance amount"""
  currency: ConsumerBanking_EnterpriseCurrencyCode!

  """Type of balance (e.g., available, booked)"""
  type: ConsumerBanking_ConsumerBankingBalanceType!
}

type ConsumerBanking_ConsumerBankingTransactionBalancesAggExp {
  _count: Int!
  amount: ConsumerBanking_NumericAggExp!
  consumerBankingTransactionBalanceId: ConsumerBanking_Int4AggExp!
  consumerBankingTransactionId: ConsumerBanking_Int4AggExp!
  creditDebitIndicator: ConsumerBanking_EnterpriseCreditDebitIndicatorAggExp!
  currency: ConsumerBanking_EnterpriseCurrencyCodeAggExp!
  type: ConsumerBanking_ConsumerBankingBalanceTypeAggExp!
}

input ConsumerBanking_ConsumerBankingTransactionBalancesBoolExp {
  _and: [ConsumerBanking_ConsumerBankingTransactionBalancesBoolExp!]
  _not: ConsumerBanking_ConsumerBankingTransactionBalancesBoolExp
  _or: [ConsumerBanking_ConsumerBankingTransactionBalancesBoolExp!]
  amount: ConsumerBanking_NumericBoolExp
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactionsBoolExp
  consumerBankingTransactionBalanceId: ConsumerBanking_Int4BoolExp
  consumerBankingTransactionId: ConsumerBanking_Int4BoolExp
  creditDebitIndicator: ConsumerBanking_EnterpriseCreditDebitIndicatorBoolExp
  currency: ConsumerBanking_EnterpriseCurrencyCodeBoolExp
  type: ConsumerBanking_ConsumerBankingBalanceTypeBoolExp
}

input ConsumerBanking_ConsumerBankingTransactionBalancesFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingTransactionBalancesOrderByExp!]
  where: ConsumerBanking_ConsumerBankingTransactionBalancesBoolExp
}

input ConsumerBanking_ConsumerBankingTransactionBalancesOrderByExp {
  amount: OrderBy
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactionsOrderByExp
  consumerBankingTransactionBalanceId: OrderBy
  consumerBankingTransactionId: OrderBy
  creditDebitIndicator: OrderBy
  currency: OrderBy
  type: OrderBy
}

scalar ConsumerBanking_ConsumerBankingTransactionBankCode

type ConsumerBanking_ConsumerBankingTransactionBankCodeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingTransactionBankCode
  min: ConsumerBanking_ConsumerBankingTransactionBankCode
}

input ConsumerBanking_ConsumerBankingTransactionBankCodeBoolExp {
  _and: [ConsumerBanking_ConsumerBankingTransactionBankCodeBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingTransactionBankCode
  _gt: ConsumerBanking_ConsumerBankingTransactionBankCode
  _gte: ConsumerBanking_ConsumerBankingTransactionBankCode
  _in: [ConsumerBanking_ConsumerBankingTransactionBankCode!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingTransactionBankCode
  _lte: ConsumerBanking_ConsumerBankingTransactionBankCode
  _neq: ConsumerBanking_ConsumerBankingTransactionBankCode
  _not: ConsumerBanking_ConsumerBankingTransactionBankCodeBoolExp
  _or: [ConsumerBanking_ConsumerBankingTransactionBankCodeBoolExp!]
}

"""
Stores standardized bank transaction codes that categorize transactions with detailed hierarchical classification
"""
type ConsumerBanking_ConsumerBankingTransactionBankTransactionCodes {
  """Detailed bank-specific transaction classification code"""
  code: ConsumerBanking_ConsumerBankingTransactionBankCode!
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactions

  """Auto-incrementing identifier for each transaction code record"""
  consumerBankingTransactionBankTransactionCodeId: ConsumerBanking_Int4!

  """References the transaction this code belongs to"""
  consumerBankingTransactionId: ConsumerBanking_Int4!
}

type ConsumerBanking_ConsumerBankingTransactionBankTransactionCodesAggExp {
  _count: Int!
  code: ConsumerBanking_ConsumerBankingTransactionBankCodeAggExp!
  consumerBankingTransactionBankTransactionCodeId: ConsumerBanking_Int4AggExp!
  consumerBankingTransactionId: ConsumerBanking_Int4AggExp!
}

input ConsumerBanking_ConsumerBankingTransactionBankTransactionCodesBoolExp {
  _and: [ConsumerBanking_ConsumerBankingTransactionBankTransactionCodesBoolExp!]
  _not: ConsumerBanking_ConsumerBankingTransactionBankTransactionCodesBoolExp
  _or: [ConsumerBanking_ConsumerBankingTransactionBankTransactionCodesBoolExp!]
  code: ConsumerBanking_ConsumerBankingTransactionBankCodeBoolExp
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactionsBoolExp
  consumerBankingTransactionBankTransactionCodeId: ConsumerBanking_Int4BoolExp
  consumerBankingTransactionId: ConsumerBanking_Int4BoolExp
}

input ConsumerBanking_ConsumerBankingTransactionBankTransactionCodesFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingTransactionBankTransactionCodesOrderByExp!]
  where: ConsumerBanking_ConsumerBankingTransactionBankTransactionCodesBoolExp
}

input ConsumerBanking_ConsumerBankingTransactionBankTransactionCodesOrderByExp {
  code: OrderBy
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactionsOrderByExp
  consumerBankingTransactionBankTransactionCodeId: OrderBy
  consumerBankingTransactionId: OrderBy
}

"""Stores information about payment cards used in transactions"""
type ConsumerBanking_ConsumerBankingTransactionCardInstruments {
  """Type of authorization (e.g., PIN, signature, contactless)"""
  authorisationType: ConsumerBanking_ConsumerBankingAuthorizationType

  """Card network (e.g., Visa, Mastercard, Amex)"""
  cardSchemeName: ConsumerBanking_ConsumerBankingCardSchemeName!
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactions

  """Auto-incrementing identifier for each card instrument record"""
  consumerBankingTransactionCardInstrumentId: ConsumerBanking_Int4!

  """References the transaction this card instrument belongs to"""
  consumerBankingTransactionId: ConsumerBanking_Int4!

  """Masked card number or other identifier"""
  identification: ConsumerBanking_Varchar

  """Name of the cardholder as printed on the card"""
  name: ConsumerBanking_Varchar
}

type ConsumerBanking_ConsumerBankingTransactionCardInstrumentsAggExp {
  _count: Int!
  authorisationType: ConsumerBanking_ConsumerBankingAuthorizationTypeAggExp!
  cardSchemeName: ConsumerBanking_ConsumerBankingCardSchemeNameAggExp!
  consumerBankingTransactionCardInstrumentId: ConsumerBanking_Int4AggExp!
  consumerBankingTransactionId: ConsumerBanking_Int4AggExp!
  identification: ConsumerBanking_VarcharAggExp!
  name: ConsumerBanking_VarcharAggExp!
}

input ConsumerBanking_ConsumerBankingTransactionCardInstrumentsBoolExp {
  _and: [ConsumerBanking_ConsumerBankingTransactionCardInstrumentsBoolExp!]
  _not: ConsumerBanking_ConsumerBankingTransactionCardInstrumentsBoolExp
  _or: [ConsumerBanking_ConsumerBankingTransactionCardInstrumentsBoolExp!]
  authorisationType: ConsumerBanking_ConsumerBankingAuthorizationTypeBoolExp
  cardSchemeName: ConsumerBanking_ConsumerBankingCardSchemeNameBoolExp
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactionsBoolExp
  consumerBankingTransactionCardInstrumentId: ConsumerBanking_Int4BoolExp
  consumerBankingTransactionId: ConsumerBanking_Int4BoolExp
  identification: ConsumerBanking_VarcharBoolExp
  name: ConsumerBanking_VarcharBoolExp
}

input ConsumerBanking_ConsumerBankingTransactionCardInstrumentsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingTransactionCardInstrumentsOrderByExp!]
  where: ConsumerBanking_ConsumerBankingTransactionCardInstrumentsBoolExp
}

input ConsumerBanking_ConsumerBankingTransactionCardInstrumentsOrderByExp {
  authorisationType: OrderBy
  cardSchemeName: OrderBy
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactionsOrderByExp
  consumerBankingTransactionCardInstrumentId: OrderBy
  consumerBankingTransactionId: OrderBy
  identification: OrderBy
  name: OrderBy
}

scalar ConsumerBanking_ConsumerBankingTransactionCategory

type ConsumerBanking_ConsumerBankingTransactionCategoryAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingTransactionCategory
  min: ConsumerBanking_ConsumerBankingTransactionCategory
}

input ConsumerBanking_ConsumerBankingTransactionCategoryBoolExp {
  _and: [ConsumerBanking_ConsumerBankingTransactionCategoryBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingTransactionCategory
  _gt: ConsumerBanking_ConsumerBankingTransactionCategory
  _gte: ConsumerBanking_ConsumerBankingTransactionCategory
  _in: [ConsumerBanking_ConsumerBankingTransactionCategory!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingTransactionCategory
  _lte: ConsumerBanking_ConsumerBankingTransactionCategory
  _neq: ConsumerBanking_ConsumerBankingTransactionCategory
  _not: ConsumerBanking_ConsumerBankingTransactionCategoryBoolExp
  _or: [ConsumerBanking_ConsumerBankingTransactionCategoryBoolExp!]
}

"""Stores information about accounts receiving funds in transactions"""
type ConsumerBanking_ConsumerBankingTransactionCreditorAccounts {
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactions

  """Auto-incrementing identifier for each creditor account record"""
  consumerBankingTransactionCreditorAccountId: ConsumerBanking_Int4!

  """References the transaction this creditor account belongs to"""
  consumerBankingTransactionId: ConsumerBanking_Int4!

  """Account identifier receiving the funds"""
  identification: ConsumerBanking_Varchar!

  """Name associated with the receiving account"""
  name: ConsumerBanking_Varchar

  """Account identifier scheme (e.g., IBAN, BBAN)"""
  schemeName: ConsumerBanking_EnterpriseIdentifierScheme!

  """Additional identification for the receiving account"""
  secondaryIdentification: ConsumerBanking_Varchar
}

type ConsumerBanking_ConsumerBankingTransactionCreditorAccountsAggExp {
  _count: Int!
  consumerBankingTransactionCreditorAccountId: ConsumerBanking_Int4AggExp!
  consumerBankingTransactionId: ConsumerBanking_Int4AggExp!
  identification: ConsumerBanking_VarcharAggExp!
  name: ConsumerBanking_VarcharAggExp!
  schemeName: ConsumerBanking_EnterpriseIdentifierSchemeAggExp!
  secondaryIdentification: ConsumerBanking_VarcharAggExp!
}

input ConsumerBanking_ConsumerBankingTransactionCreditorAccountsBoolExp {
  _and: [ConsumerBanking_ConsumerBankingTransactionCreditorAccountsBoolExp!]
  _not: ConsumerBanking_ConsumerBankingTransactionCreditorAccountsBoolExp
  _or: [ConsumerBanking_ConsumerBankingTransactionCreditorAccountsBoolExp!]
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactionsBoolExp
  consumerBankingTransactionCreditorAccountId: ConsumerBanking_Int4BoolExp
  consumerBankingTransactionId: ConsumerBanking_Int4BoolExp
  identification: ConsumerBanking_VarcharBoolExp
  name: ConsumerBanking_VarcharBoolExp
  schemeName: ConsumerBanking_EnterpriseIdentifierSchemeBoolExp
  secondaryIdentification: ConsumerBanking_VarcharBoolExp
}

input ConsumerBanking_ConsumerBankingTransactionCreditorAccountsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingTransactionCreditorAccountsOrderByExp!]
  where: ConsumerBanking_ConsumerBankingTransactionCreditorAccountsBoolExp
}

input ConsumerBanking_ConsumerBankingTransactionCreditorAccountsOrderByExp {
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactionsOrderByExp
  consumerBankingTransactionCreditorAccountId: OrderBy
  consumerBankingTransactionId: OrderBy
  identification: OrderBy
  name: OrderBy
  schemeName: OrderBy
  secondaryIdentification: OrderBy
}

"""
Stores information about financial institutions receiving funds in transactions
"""
type ConsumerBanking_ConsumerBankingTransactionCreditorAgents {
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactions

  """Auto-incrementing identifier for each creditor agent record"""
  consumerBankingTransactionCreditorAgentId: ConsumerBanking_Int4!

  """References the transaction this creditor agent belongs to"""
  consumerBankingTransactionId: ConsumerBanking_Int4!

  """Identifier of the receiving financial institution"""
  identification: ConsumerBanking_Varchar!

  """Legal Entity Identifier of the receiving institution"""
  lei: ConsumerBanking_Varchar

  """Name of the receiving financial institution"""
  name: ConsumerBanking_Varchar

  """Identifier scheme for the receiving institution (e.g., BIC)"""
  schemeName: ConsumerBanking_EnterpriseIdentifierScheme!
}

type ConsumerBanking_ConsumerBankingTransactionCreditorAgentsAggExp {
  _count: Int!
  consumerBankingTransactionCreditorAgentId: ConsumerBanking_Int4AggExp!
  consumerBankingTransactionId: ConsumerBanking_Int4AggExp!
  identification: ConsumerBanking_VarcharAggExp!
  lei: ConsumerBanking_VarcharAggExp!
  name: ConsumerBanking_VarcharAggExp!
  schemeName: ConsumerBanking_EnterpriseIdentifierSchemeAggExp!
}

input ConsumerBanking_ConsumerBankingTransactionCreditorAgentsBoolExp {
  _and: [ConsumerBanking_ConsumerBankingTransactionCreditorAgentsBoolExp!]
  _not: ConsumerBanking_ConsumerBankingTransactionCreditorAgentsBoolExp
  _or: [ConsumerBanking_ConsumerBankingTransactionCreditorAgentsBoolExp!]
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactionsBoolExp
  consumerBankingTransactionCreditorAgentId: ConsumerBanking_Int4BoolExp
  consumerBankingTransactionId: ConsumerBanking_Int4BoolExp
  identification: ConsumerBanking_VarcharBoolExp
  lei: ConsumerBanking_VarcharBoolExp
  name: ConsumerBanking_VarcharBoolExp
  schemeName: ConsumerBanking_EnterpriseIdentifierSchemeBoolExp
}

input ConsumerBanking_ConsumerBankingTransactionCreditorAgentsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingTransactionCreditorAgentsOrderByExp!]
  where: ConsumerBanking_ConsumerBankingTransactionCreditorAgentsBoolExp
}

input ConsumerBanking_ConsumerBankingTransactionCreditorAgentsOrderByExp {
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactionsOrderByExp
  consumerBankingTransactionCreditorAgentId: OrderBy
  consumerBankingTransactionId: OrderBy
  identification: OrderBy
  lei: OrderBy
  name: OrderBy
  schemeName: OrderBy
}

"""Stores currency exchange details for cross-currency transactions"""
type ConsumerBanking_ConsumerBankingTransactionCurrencyExchanges {
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactions

  """Auto-incrementing identifier for each currency exchange record"""
  consumerBankingTransactionCurrencyExchangeId: ConsumerBanking_Int4!

  """References the transaction this currency exchange belongs to"""
  consumerBankingTransactionId: ConsumerBanking_Int4!

  """Identifier for any forex contract used"""
  contractIdentification: ConsumerBanking_Varchar

  """Rate used for the currency conversion"""
  exchangeRate: ConsumerBanking_Numeric!

  """Original amount before conversion"""
  instructedAmount: ConsumerBanking_Numeric

  """Currency of the original instructed amount"""
  instructedAmountCurrency: ConsumerBanking_EnterpriseCurrencyCode

  """When the exchange rate was quoted"""
  quotationDate: ConsumerBanking_Timestamptz

  """Original currency of the transaction"""
  sourceCurrency: ConsumerBanking_EnterpriseCurrencyCode!

  """Destination currency after conversion"""
  targetCurrency: ConsumerBanking_EnterpriseCurrencyCode

  """Currency used as the unit for the exchange rate"""
  unitCurrency: ConsumerBanking_EnterpriseCurrencyCode
}

type ConsumerBanking_ConsumerBankingTransactionCurrencyExchangesAggExp {
  _count: Int!
  consumerBankingTransactionCurrencyExchangeId: ConsumerBanking_Int4AggExp!
  consumerBankingTransactionId: ConsumerBanking_Int4AggExp!
  contractIdentification: ConsumerBanking_VarcharAggExp!
  exchangeRate: ConsumerBanking_NumericAggExp!
  instructedAmount: ConsumerBanking_NumericAggExp!
  instructedAmountCurrency: ConsumerBanking_EnterpriseCurrencyCodeAggExp!
  quotationDate: ConsumerBanking_TimestamptzAggExp!
  sourceCurrency: ConsumerBanking_EnterpriseCurrencyCodeAggExp!
  targetCurrency: ConsumerBanking_EnterpriseCurrencyCodeAggExp!
  unitCurrency: ConsumerBanking_EnterpriseCurrencyCodeAggExp!
}

input ConsumerBanking_ConsumerBankingTransactionCurrencyExchangesBoolExp {
  _and: [ConsumerBanking_ConsumerBankingTransactionCurrencyExchangesBoolExp!]
  _not: ConsumerBanking_ConsumerBankingTransactionCurrencyExchangesBoolExp
  _or: [ConsumerBanking_ConsumerBankingTransactionCurrencyExchangesBoolExp!]
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactionsBoolExp
  consumerBankingTransactionCurrencyExchangeId: ConsumerBanking_Int4BoolExp
  consumerBankingTransactionId: ConsumerBanking_Int4BoolExp
  contractIdentification: ConsumerBanking_VarcharBoolExp
  exchangeRate: ConsumerBanking_NumericBoolExp
  instructedAmount: ConsumerBanking_NumericBoolExp
  instructedAmountCurrency: ConsumerBanking_EnterpriseCurrencyCodeBoolExp
  quotationDate: ConsumerBanking_TimestamptzBoolExp
  sourceCurrency: ConsumerBanking_EnterpriseCurrencyCodeBoolExp
  targetCurrency: ConsumerBanking_EnterpriseCurrencyCodeBoolExp
  unitCurrency: ConsumerBanking_EnterpriseCurrencyCodeBoolExp
}

input ConsumerBanking_ConsumerBankingTransactionCurrencyExchangesFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingTransactionCurrencyExchangesOrderByExp!]
  where: ConsumerBanking_ConsumerBankingTransactionCurrencyExchangesBoolExp
}

input ConsumerBanking_ConsumerBankingTransactionCurrencyExchangesOrderByExp {
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactionsOrderByExp
  consumerBankingTransactionCurrencyExchangeId: OrderBy
  consumerBankingTransactionId: OrderBy
  contractIdentification: OrderBy
  exchangeRate: OrderBy
  instructedAmount: OrderBy
  instructedAmountCurrency: OrderBy
  quotationDate: OrderBy
  sourceCurrency: OrderBy
  targetCurrency: OrderBy
  unitCurrency: OrderBy
}

"""Stores information about accounts sending funds in transactions"""
type ConsumerBanking_ConsumerBankingTransactionDebtorAccounts {
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactions

  """Auto-incrementing identifier for each debtor account record"""
  consumerBankingTransactionDebtorAccountId: ConsumerBanking_Int4!

  """References the transaction this debtor account belongs to"""
  consumerBankingTransactionId: ConsumerBanking_Int4!

  """Account identifier sending the funds"""
  identification: ConsumerBanking_Varchar!

  """Name associated with the sending account"""
  name: ConsumerBanking_Varchar

  """Account identifier scheme (e.g., IBAN, BBAN)"""
  schemeName: ConsumerBanking_EnterpriseIdentifierScheme!

  """Additional identification for the sending account"""
  secondaryIdentification: ConsumerBanking_Varchar
}

type ConsumerBanking_ConsumerBankingTransactionDebtorAccountsAggExp {
  _count: Int!
  consumerBankingTransactionDebtorAccountId: ConsumerBanking_Int4AggExp!
  consumerBankingTransactionId: ConsumerBanking_Int4AggExp!
  identification: ConsumerBanking_VarcharAggExp!
  name: ConsumerBanking_VarcharAggExp!
  schemeName: ConsumerBanking_EnterpriseIdentifierSchemeAggExp!
  secondaryIdentification: ConsumerBanking_VarcharAggExp!
}

input ConsumerBanking_ConsumerBankingTransactionDebtorAccountsBoolExp {
  _and: [ConsumerBanking_ConsumerBankingTransactionDebtorAccountsBoolExp!]
  _not: ConsumerBanking_ConsumerBankingTransactionDebtorAccountsBoolExp
  _or: [ConsumerBanking_ConsumerBankingTransactionDebtorAccountsBoolExp!]
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactionsBoolExp
  consumerBankingTransactionDebtorAccountId: ConsumerBanking_Int4BoolExp
  consumerBankingTransactionId: ConsumerBanking_Int4BoolExp
  identification: ConsumerBanking_VarcharBoolExp
  name: ConsumerBanking_VarcharBoolExp
  schemeName: ConsumerBanking_EnterpriseIdentifierSchemeBoolExp
  secondaryIdentification: ConsumerBanking_VarcharBoolExp
}

input ConsumerBanking_ConsumerBankingTransactionDebtorAccountsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingTransactionDebtorAccountsOrderByExp!]
  where: ConsumerBanking_ConsumerBankingTransactionDebtorAccountsBoolExp
}

input ConsumerBanking_ConsumerBankingTransactionDebtorAccountsOrderByExp {
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactionsOrderByExp
  consumerBankingTransactionDebtorAccountId: OrderBy
  consumerBankingTransactionId: OrderBy
  identification: OrderBy
  name: OrderBy
  schemeName: OrderBy
  secondaryIdentification: OrderBy
}

"""
Stores information about financial institutions sending funds in transactions
"""
type ConsumerBanking_ConsumerBankingTransactionDebtorAgents {
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactions

  """Auto-incrementing identifier for each debtor agent record"""
  consumerBankingTransactionDebtorAgentId: ConsumerBanking_Int4!

  """References the transaction this debtor agent belongs to"""
  consumerBankingTransactionId: ConsumerBanking_Int4!

  """Identifier of the sending financial institution"""
  identification: ConsumerBanking_Varchar!

  """Legal Entity Identifier of the sending institution"""
  lei: ConsumerBanking_Varchar

  """Name of the sending financial institution"""
  name: ConsumerBanking_Varchar

  """Identifier scheme for the sending institution (e.g., BIC)"""
  schemeName: ConsumerBanking_EnterpriseIdentifierScheme!
}

type ConsumerBanking_ConsumerBankingTransactionDebtorAgentsAggExp {
  _count: Int!
  consumerBankingTransactionDebtorAgentId: ConsumerBanking_Int4AggExp!
  consumerBankingTransactionId: ConsumerBanking_Int4AggExp!
  identification: ConsumerBanking_VarcharAggExp!
  lei: ConsumerBanking_VarcharAggExp!
  name: ConsumerBanking_VarcharAggExp!
  schemeName: ConsumerBanking_EnterpriseIdentifierSchemeAggExp!
}

input ConsumerBanking_ConsumerBankingTransactionDebtorAgentsBoolExp {
  _and: [ConsumerBanking_ConsumerBankingTransactionDebtorAgentsBoolExp!]
  _not: ConsumerBanking_ConsumerBankingTransactionDebtorAgentsBoolExp
  _or: [ConsumerBanking_ConsumerBankingTransactionDebtorAgentsBoolExp!]
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactionsBoolExp
  consumerBankingTransactionDebtorAgentId: ConsumerBanking_Int4BoolExp
  consumerBankingTransactionId: ConsumerBanking_Int4BoolExp
  identification: ConsumerBanking_VarcharBoolExp
  lei: ConsumerBanking_VarcharBoolExp
  name: ConsumerBanking_VarcharBoolExp
  schemeName: ConsumerBanking_EnterpriseIdentifierSchemeBoolExp
}

input ConsumerBanking_ConsumerBankingTransactionDebtorAgentsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingTransactionDebtorAgentsOrderByExp!]
  where: ConsumerBanking_ConsumerBankingTransactionDebtorAgentsBoolExp
}

input ConsumerBanking_ConsumerBankingTransactionDebtorAgentsOrderByExp {
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactionsOrderByExp
  consumerBankingTransactionDebtorAgentId: OrderBy
  consumerBankingTransactionId: OrderBy
  identification: OrderBy
  lei: OrderBy
  name: OrderBy
  schemeName: OrderBy
}

"""Stores information about merchants involved in transactions"""
type ConsumerBanking_ConsumerBankingTransactionMerchantDetails {
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactions

  """References the transaction this merchant detail belongs to"""
  consumerBankingTransactionId: ConsumerBanking_Int4!

  """Auto-incrementing identifier for each merchant detail record"""
  consumerBankingTransactionMerchantDetailId: ConsumerBanking_Int4!

  """Standard code identifying the merchant's business category"""
  merchantCategoryCode: ConsumerBanking_Varchar!

  """Name of the merchant involved in the transaction"""
  merchantName: ConsumerBanking_Varchar!
}

type ConsumerBanking_ConsumerBankingTransactionMerchantDetailsAggExp {
  _count: Int!
  consumerBankingTransactionId: ConsumerBanking_Int4AggExp!
  consumerBankingTransactionMerchantDetailId: ConsumerBanking_Int4AggExp!
  merchantCategoryCode: ConsumerBanking_VarcharAggExp!
  merchantName: ConsumerBanking_VarcharAggExp!
}

input ConsumerBanking_ConsumerBankingTransactionMerchantDetailsBoolExp {
  _and: [ConsumerBanking_ConsumerBankingTransactionMerchantDetailsBoolExp!]
  _not: ConsumerBanking_ConsumerBankingTransactionMerchantDetailsBoolExp
  _or: [ConsumerBanking_ConsumerBankingTransactionMerchantDetailsBoolExp!]
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactionsBoolExp
  consumerBankingTransactionId: ConsumerBanking_Int4BoolExp
  consumerBankingTransactionMerchantDetailId: ConsumerBanking_Int4BoolExp
  merchantCategoryCode: ConsumerBanking_VarcharBoolExp
  merchantName: ConsumerBanking_VarcharBoolExp
}

input ConsumerBanking_ConsumerBankingTransactionMerchantDetailsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingTransactionMerchantDetailsOrderByExp!]
  where: ConsumerBanking_ConsumerBankingTransactionMerchantDetailsBoolExp
}

input ConsumerBanking_ConsumerBankingTransactionMerchantDetailsOrderByExp {
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactionsOrderByExp
  consumerBankingTransactionId: OrderBy
  consumerBankingTransactionMerchantDetailId: OrderBy
  merchantCategoryCode: OrderBy
  merchantName: OrderBy
}

scalar ConsumerBanking_ConsumerBankingTransactionMutability

type ConsumerBanking_ConsumerBankingTransactionMutabilityAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingTransactionMutability
  min: ConsumerBanking_ConsumerBankingTransactionMutability
}

input ConsumerBanking_ConsumerBankingTransactionMutabilityBoolExp {
  _and: [ConsumerBanking_ConsumerBankingTransactionMutabilityBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingTransactionMutability
  _gt: ConsumerBanking_ConsumerBankingTransactionMutability
  _gte: ConsumerBanking_ConsumerBankingTransactionMutability
  _in: [ConsumerBanking_ConsumerBankingTransactionMutability!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingTransactionMutability
  _lte: ConsumerBanking_ConsumerBankingTransactionMutability
  _neq: ConsumerBanking_ConsumerBankingTransactionMutability
  _not: ConsumerBanking_ConsumerBankingTransactionMutabilityBoolExp
  _or: [ConsumerBanking_ConsumerBankingTransactionMutabilityBoolExp!]
}

"""Stores detailed information about account transactions"""
type ConsumerBanking_ConsumerBankingTransactions {
  """Monetary amount of the transaction"""
  amount: ConsumerBanking_Numeric!

  """High-level categorization of the transaction"""
  category: ConsumerBanking_ConsumerBankingTransactionCategory

  """Any fees associated with the transaction"""
  chargeAmount: ConsumerBanking_Numeric

  """Currency code for the transaction fee"""
  chargeCurrency: ConsumerBanking_EnterpriseCurrencyCode
  consumerBankingAccount: ConsumerBanking_ConsumerBankingAccounts

  """References the account this transaction belongs to"""
  consumerBankingAccountId: ConsumerBanking_Int4!
  consumerBankingBalance: ConsumerBanking_ConsumerBankingBalances

  """
  No meaningful relationship, just guarantees that balances must exist before a transaction can be created.
  """
  consumerBankingBalanceId: ConsumerBanking_Int4
  consumerBankingCustomerInteractions(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingCustomerInteractionsOrderByExp!], where: ConsumerBanking_ConsumerBankingCustomerInteractionsBoolExp): [ConsumerBanking_ConsumerBankingCustomerInteractions!]
  consumerBankingCustomerInteractionsAggregate(filter_input: ConsumerBanking_ConsumerBankingCustomerInteractionsFilterInput): ConsumerBanking_ConsumerBankingCustomerInteractionsAggExp!
  consumerBankingProprietaryTransactionCodes(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingProprietaryTransactionCodesOrderByExp!], where: ConsumerBanking_ConsumerBankingProprietaryTransactionCodesBoolExp): [ConsumerBanking_ConsumerBankingProprietaryTransactionCodes!]
  consumerBankingProprietaryTransactionCodesAggregate(filter_input: ConsumerBanking_ConsumerBankingProprietaryTransactionCodesFilterInput): ConsumerBanking_ConsumerBankingProprietaryTransactionCodesAggExp!
  consumerBankingTransactionBalances(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingTransactionBalancesOrderByExp!], where: ConsumerBanking_ConsumerBankingTransactionBalancesBoolExp): [ConsumerBanking_ConsumerBankingTransactionBalances!]
  consumerBankingTransactionBalancesAggregate(filter_input: ConsumerBanking_ConsumerBankingTransactionBalancesFilterInput): ConsumerBanking_ConsumerBankingTransactionBalancesAggExp!
  consumerBankingTransactionBankTransactionCodes(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingTransactionBankTransactionCodesOrderByExp!], where: ConsumerBanking_ConsumerBankingTransactionBankTransactionCodesBoolExp): [ConsumerBanking_ConsumerBankingTransactionBankTransactionCodes!]
  consumerBankingTransactionBankTransactionCodesAggregate(filter_input: ConsumerBanking_ConsumerBankingTransactionBankTransactionCodesFilterInput): ConsumerBanking_ConsumerBankingTransactionBankTransactionCodesAggExp!
  consumerBankingTransactionCardInstruments(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingTransactionCardInstrumentsOrderByExp!], where: ConsumerBanking_ConsumerBankingTransactionCardInstrumentsBoolExp): [ConsumerBanking_ConsumerBankingTransactionCardInstruments!]
  consumerBankingTransactionCardInstrumentsAggregate(filter_input: ConsumerBanking_ConsumerBankingTransactionCardInstrumentsFilterInput): ConsumerBanking_ConsumerBankingTransactionCardInstrumentsAggExp!
  consumerBankingTransactionCreditorAccounts(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingTransactionCreditorAccountsOrderByExp!], where: ConsumerBanking_ConsumerBankingTransactionCreditorAccountsBoolExp): [ConsumerBanking_ConsumerBankingTransactionCreditorAccounts!]
  consumerBankingTransactionCreditorAccountsAggregate(filter_input: ConsumerBanking_ConsumerBankingTransactionCreditorAccountsFilterInput): ConsumerBanking_ConsumerBankingTransactionCreditorAccountsAggExp!
  consumerBankingTransactionCreditorAgents(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingTransactionCreditorAgentsOrderByExp!], where: ConsumerBanking_ConsumerBankingTransactionCreditorAgentsBoolExp): [ConsumerBanking_ConsumerBankingTransactionCreditorAgents!]
  consumerBankingTransactionCreditorAgentsAggregate(filter_input: ConsumerBanking_ConsumerBankingTransactionCreditorAgentsFilterInput): ConsumerBanking_ConsumerBankingTransactionCreditorAgentsAggExp!
  consumerBankingTransactionCurrencyExchanges(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingTransactionCurrencyExchangesOrderByExp!], where: ConsumerBanking_ConsumerBankingTransactionCurrencyExchangesBoolExp): [ConsumerBanking_ConsumerBankingTransactionCurrencyExchanges!]
  consumerBankingTransactionCurrencyExchangesAggregate(filter_input: ConsumerBanking_ConsumerBankingTransactionCurrencyExchangesFilterInput): ConsumerBanking_ConsumerBankingTransactionCurrencyExchangesAggExp!
  consumerBankingTransactionDebtorAccounts(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingTransactionDebtorAccountsOrderByExp!], where: ConsumerBanking_ConsumerBankingTransactionDebtorAccountsBoolExp): [ConsumerBanking_ConsumerBankingTransactionDebtorAccounts!]
  consumerBankingTransactionDebtorAccountsAggregate(filter_input: ConsumerBanking_ConsumerBankingTransactionDebtorAccountsFilterInput): ConsumerBanking_ConsumerBankingTransactionDebtorAccountsAggExp!
  consumerBankingTransactionDebtorAgents(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingTransactionDebtorAgentsOrderByExp!], where: ConsumerBanking_ConsumerBankingTransactionDebtorAgentsBoolExp): [ConsumerBanking_ConsumerBankingTransactionDebtorAgents!]
  consumerBankingTransactionDebtorAgentsAggregate(filter_input: ConsumerBanking_ConsumerBankingTransactionDebtorAgentsFilterInput): ConsumerBanking_ConsumerBankingTransactionDebtorAgentsAggExp!

  """Unique identifier for each transaction"""
  consumerBankingTransactionId: ConsumerBanking_Int4!
  consumerBankingTransactionMerchantDetails(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingTransactionMerchantDetailsOrderByExp!], where: ConsumerBanking_ConsumerBankingTransactionMerchantDetailsBoolExp): [ConsumerBanking_ConsumerBankingTransactionMerchantDetails!]
  consumerBankingTransactionMerchantDetailsAggregate(filter_input: ConsumerBanking_ConsumerBankingTransactionMerchantDetailsFilterInput): ConsumerBanking_ConsumerBankingTransactionMerchantDetailsAggExp!
  consumerBankingTransactionStatementReferences(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingTransactionStatementReferencesOrderByExp!], where: ConsumerBanking_ConsumerBankingTransactionStatementReferencesBoolExp): [ConsumerBanking_ConsumerBankingTransactionStatementReferences!]
  consumerBankingTransactionStatementReferencesAggregate(filter_input: ConsumerBanking_ConsumerBankingTransactionStatementReferencesFilterInput): ConsumerBanking_ConsumerBankingTransactionStatementReferencesAggExp!
  consumerBankingTransactionUltimateCreditors(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingTransactionUltimateCreditorsOrderByExp!], where: ConsumerBanking_ConsumerBankingTransactionUltimateCreditorsBoolExp): [ConsumerBanking_ConsumerBankingTransactionUltimateCreditors!]
  consumerBankingTransactionUltimateCreditorsAggregate(filter_input: ConsumerBanking_ConsumerBankingTransactionUltimateCreditorsFilterInput): ConsumerBanking_ConsumerBankingTransactionUltimateCreditorsAggExp!
  consumerBankingTransactionUltimateDebtors(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingTransactionUltimateDebtorsOrderByExp!], where: ConsumerBanking_ConsumerBankingTransactionUltimateDebtorsBoolExp): [ConsumerBanking_ConsumerBankingTransactionUltimateDebtors!]
  consumerBankingTransactionUltimateDebtorsAggregate(filter_input: ConsumerBanking_ConsumerBankingTransactionUltimateDebtorsFilterInput): ConsumerBanking_ConsumerBankingTransactionUltimateDebtorsAggExp!

  """Indicates if transaction is a credit or debit"""
  creditDebitIndicator: ConsumerBanking_EnterpriseCreditDebitIndicator!

  """Currency code for the transaction amount"""
  currency: ConsumerBanking_EnterpriseCurrencyCode!

  """Additional information about the transaction"""
  description: ConsumerBanking_Varchar

  """Address associated with the transaction, if applicable"""
  merchantAddress: ConsumerBanking_Varchar

  """Status of the transaction (e.g., pending, booked, rejected)"""
  status: ConsumerBanking_ConsumerBankingTransactionStatus!

  """When the transaction was recorded in the books"""
  transactionDate: ConsumerBanking_Timestamptz!

  """Whether the transaction can be changed (e.g., mutable, immutable)"""
  transactionMutability: ConsumerBanking_ConsumerBankingTransactionMutability

  """Reference code for the transaction"""
  transactionReference: ConsumerBanking_Varchar

  """Specific type of transaction with more detail"""
  transactionType: ConsumerBanking_ConsumerBankingTransactionType

  """When the transaction affects the account balance"""
  valueDate: ConsumerBanking_Timestamptz
}

type ConsumerBanking_ConsumerBankingTransactionsAggExp {
  _count: Int!
  amount: ConsumerBanking_NumericAggExp!
  category: ConsumerBanking_ConsumerBankingTransactionCategoryAggExp!
  chargeAmount: ConsumerBanking_NumericAggExp!
  chargeCurrency: ConsumerBanking_EnterpriseCurrencyCodeAggExp!
  consumerBankingAccountId: ConsumerBanking_Int4AggExp!
  consumerBankingBalanceId: ConsumerBanking_Int4AggExp!
  consumerBankingTransactionId: ConsumerBanking_Int4AggExp!
  creditDebitIndicator: ConsumerBanking_EnterpriseCreditDebitIndicatorAggExp!
  currency: ConsumerBanking_EnterpriseCurrencyCodeAggExp!
  description: ConsumerBanking_VarcharAggExp!
  merchantAddress: ConsumerBanking_VarcharAggExp!
  status: ConsumerBanking_ConsumerBankingTransactionStatusAggExp!
  transactionDate: ConsumerBanking_TimestamptzAggExp!
  transactionMutability: ConsumerBanking_ConsumerBankingTransactionMutabilityAggExp!
  transactionReference: ConsumerBanking_VarcharAggExp!
  transactionType: ConsumerBanking_ConsumerBankingTransactionTypeAggExp!
  valueDate: ConsumerBanking_TimestamptzAggExp!
}

input ConsumerBanking_ConsumerBankingTransactionsBoolExp {
  _and: [ConsumerBanking_ConsumerBankingTransactionsBoolExp!]
  _not: ConsumerBanking_ConsumerBankingTransactionsBoolExp
  _or: [ConsumerBanking_ConsumerBankingTransactionsBoolExp!]
  amount: ConsumerBanking_NumericBoolExp
  category: ConsumerBanking_ConsumerBankingTransactionCategoryBoolExp
  chargeAmount: ConsumerBanking_NumericBoolExp
  chargeCurrency: ConsumerBanking_EnterpriseCurrencyCodeBoolExp
  consumerBankingAccount: ConsumerBanking_ConsumerBankingAccountsBoolExp
  consumerBankingAccountId: ConsumerBanking_Int4BoolExp
  consumerBankingBalance: ConsumerBanking_ConsumerBankingBalancesBoolExp
  consumerBankingBalanceId: ConsumerBanking_Int4BoolExp
  consumerBankingCustomerInteractions: ConsumerBanking_ConsumerBankingCustomerInteractionsBoolExp
  consumerBankingProprietaryTransactionCodes: ConsumerBanking_ConsumerBankingProprietaryTransactionCodesBoolExp
  consumerBankingTransactionBalances: ConsumerBanking_ConsumerBankingTransactionBalancesBoolExp
  consumerBankingTransactionBankTransactionCodes: ConsumerBanking_ConsumerBankingTransactionBankTransactionCodesBoolExp
  consumerBankingTransactionCardInstruments: ConsumerBanking_ConsumerBankingTransactionCardInstrumentsBoolExp
  consumerBankingTransactionCreditorAccounts: ConsumerBanking_ConsumerBankingTransactionCreditorAccountsBoolExp
  consumerBankingTransactionCreditorAgents: ConsumerBanking_ConsumerBankingTransactionCreditorAgentsBoolExp
  consumerBankingTransactionCurrencyExchanges: ConsumerBanking_ConsumerBankingTransactionCurrencyExchangesBoolExp
  consumerBankingTransactionDebtorAccounts: ConsumerBanking_ConsumerBankingTransactionDebtorAccountsBoolExp
  consumerBankingTransactionDebtorAgents: ConsumerBanking_ConsumerBankingTransactionDebtorAgentsBoolExp
  consumerBankingTransactionId: ConsumerBanking_Int4BoolExp
  consumerBankingTransactionMerchantDetails: ConsumerBanking_ConsumerBankingTransactionMerchantDetailsBoolExp
  consumerBankingTransactionStatementReferences: ConsumerBanking_ConsumerBankingTransactionStatementReferencesBoolExp
  consumerBankingTransactionUltimateCreditors: ConsumerBanking_ConsumerBankingTransactionUltimateCreditorsBoolExp
  consumerBankingTransactionUltimateDebtors: ConsumerBanking_ConsumerBankingTransactionUltimateDebtorsBoolExp
  creditDebitIndicator: ConsumerBanking_EnterpriseCreditDebitIndicatorBoolExp
  currency: ConsumerBanking_EnterpriseCurrencyCodeBoolExp
  description: ConsumerBanking_VarcharBoolExp
  merchantAddress: ConsumerBanking_VarcharBoolExp
  status: ConsumerBanking_ConsumerBankingTransactionStatusBoolExp
  transactionDate: ConsumerBanking_TimestamptzBoolExp
  transactionMutability: ConsumerBanking_ConsumerBankingTransactionMutabilityBoolExp
  transactionReference: ConsumerBanking_VarcharBoolExp
  transactionType: ConsumerBanking_ConsumerBankingTransactionTypeBoolExp
  valueDate: ConsumerBanking_TimestamptzBoolExp
}

input ConsumerBanking_ConsumerBankingTransactionsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingTransactionsOrderByExp!]
  where: ConsumerBanking_ConsumerBankingTransactionsBoolExp
}

input ConsumerBanking_ConsumerBankingTransactionsOrderByExp {
  amount: OrderBy
  category: OrderBy
  chargeAmount: OrderBy
  chargeCurrency: OrderBy
  consumerBankingAccount: ConsumerBanking_ConsumerBankingAccountsOrderByExp
  consumerBankingAccountId: OrderBy
  consumerBankingBalance: ConsumerBanking_ConsumerBankingBalancesOrderByExp
  consumerBankingBalanceId: OrderBy
  consumerBankingTransactionId: OrderBy
  creditDebitIndicator: OrderBy
  currency: OrderBy
  description: OrderBy
  merchantAddress: OrderBy
  status: OrderBy
  transactionDate: OrderBy
  transactionMutability: OrderBy
  transactionReference: OrderBy
  transactionType: OrderBy
  valueDate: OrderBy
}

"""Links transactions to specific statements they appear on"""
type ConsumerBanking_ConsumerBankingTransactionStatementReferences {
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactions

  """References the transaction this reference belongs to"""
  consumerBankingTransactionId: ConsumerBanking_Int4!

  """
  Auto-incrementing identifier for each transaction-statement reference record
  """
  consumerBankingTransactionStatementReferenceId: ConsumerBanking_Int4!

  """Statement reference n"""
  statementReference: ConsumerBanking_Varchar
}

type ConsumerBanking_ConsumerBankingTransactionStatementReferencesAggExp {
  _count: Int!
  consumerBankingTransactionId: ConsumerBanking_Int4AggExp!
  consumerBankingTransactionStatementReferenceId: ConsumerBanking_Int4AggExp!
  statementReference: ConsumerBanking_VarcharAggExp!
}

input ConsumerBanking_ConsumerBankingTransactionStatementReferencesBoolExp {
  _and: [ConsumerBanking_ConsumerBankingTransactionStatementReferencesBoolExp!]
  _not: ConsumerBanking_ConsumerBankingTransactionStatementReferencesBoolExp
  _or: [ConsumerBanking_ConsumerBankingTransactionStatementReferencesBoolExp!]
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactionsBoolExp
  consumerBankingTransactionId: ConsumerBanking_Int4BoolExp
  consumerBankingTransactionStatementReferenceId: ConsumerBanking_Int4BoolExp
  statementReference: ConsumerBanking_VarcharBoolExp
}

input ConsumerBanking_ConsumerBankingTransactionStatementReferencesFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingTransactionStatementReferencesOrderByExp!]
  where: ConsumerBanking_ConsumerBankingTransactionStatementReferencesBoolExp
}

input ConsumerBanking_ConsumerBankingTransactionStatementReferencesOrderByExp {
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactionsOrderByExp
  consumerBankingTransactionId: OrderBy
  consumerBankingTransactionStatementReferenceId: OrderBy
  statementReference: OrderBy
}

scalar ConsumerBanking_ConsumerBankingTransactionStatus

type ConsumerBanking_ConsumerBankingTransactionStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingTransactionStatus
  min: ConsumerBanking_ConsumerBankingTransactionStatus
}

input ConsumerBanking_ConsumerBankingTransactionStatusBoolExp {
  _and: [ConsumerBanking_ConsumerBankingTransactionStatusBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingTransactionStatus
  _gt: ConsumerBanking_ConsumerBankingTransactionStatus
  _gte: ConsumerBanking_ConsumerBankingTransactionStatus
  _in: [ConsumerBanking_ConsumerBankingTransactionStatus!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingTransactionStatus
  _lte: ConsumerBanking_ConsumerBankingTransactionStatus
  _neq: ConsumerBanking_ConsumerBankingTransactionStatus
  _not: ConsumerBanking_ConsumerBankingTransactionStatusBoolExp
  _or: [ConsumerBanking_ConsumerBankingTransactionStatusBoolExp!]
}

scalar ConsumerBanking_ConsumerBankingTransactionType

type ConsumerBanking_ConsumerBankingTransactionTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_ConsumerBankingTransactionType
  min: ConsumerBanking_ConsumerBankingTransactionType
}

input ConsumerBanking_ConsumerBankingTransactionTypeBoolExp {
  _and: [ConsumerBanking_ConsumerBankingTransactionTypeBoolExp!]
  _eq: ConsumerBanking_ConsumerBankingTransactionType
  _gt: ConsumerBanking_ConsumerBankingTransactionType
  _gte: ConsumerBanking_ConsumerBankingTransactionType
  _in: [ConsumerBanking_ConsumerBankingTransactionType!]
  _is_null: Boolean
  _lt: ConsumerBanking_ConsumerBankingTransactionType
  _lte: ConsumerBanking_ConsumerBankingTransactionType
  _neq: ConsumerBanking_ConsumerBankingTransactionType
  _not: ConsumerBanking_ConsumerBankingTransactionTypeBoolExp
  _or: [ConsumerBanking_ConsumerBankingTransactionTypeBoolExp!]
}

"""
Stores information about the final recipient of funds in a transaction chain
"""
type ConsumerBanking_ConsumerBankingTransactionUltimateCreditors {
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactions

  """References the transaction this ultimate creditor belongs to"""
  consumerBankingTransactionId: ConsumerBanking_Int4!

  """Auto-incrementing identifier for each ultimate creditor record"""
  consumerBankingTransactionUltimateCreditorId: ConsumerBanking_Int4!

  """Identification code for the ultimate creditor"""
  identification: ConsumerBanking_Varchar

  """Legal Entity Identifier if the ultimate creditor is an organization"""
  lei: ConsumerBanking_Varchar

  """Name of the final beneficiary/recipient of the funds"""
  name: ConsumerBanking_Varchar!

  """Identification scheme for the creditor's identifier"""
  schemeName: ConsumerBanking_Varchar
}

type ConsumerBanking_ConsumerBankingTransactionUltimateCreditorsAggExp {
  _count: Int!
  consumerBankingTransactionId: ConsumerBanking_Int4AggExp!
  consumerBankingTransactionUltimateCreditorId: ConsumerBanking_Int4AggExp!
  identification: ConsumerBanking_VarcharAggExp!
  lei: ConsumerBanking_VarcharAggExp!
  name: ConsumerBanking_VarcharAggExp!
  schemeName: ConsumerBanking_VarcharAggExp!
}

input ConsumerBanking_ConsumerBankingTransactionUltimateCreditorsBoolExp {
  _and: [ConsumerBanking_ConsumerBankingTransactionUltimateCreditorsBoolExp!]
  _not: ConsumerBanking_ConsumerBankingTransactionUltimateCreditorsBoolExp
  _or: [ConsumerBanking_ConsumerBankingTransactionUltimateCreditorsBoolExp!]
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactionsBoolExp
  consumerBankingTransactionId: ConsumerBanking_Int4BoolExp
  consumerBankingTransactionUltimateCreditorId: ConsumerBanking_Int4BoolExp
  identification: ConsumerBanking_VarcharBoolExp
  lei: ConsumerBanking_VarcharBoolExp
  name: ConsumerBanking_VarcharBoolExp
  schemeName: ConsumerBanking_VarcharBoolExp
}

input ConsumerBanking_ConsumerBankingTransactionUltimateCreditorsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingTransactionUltimateCreditorsOrderByExp!]
  where: ConsumerBanking_ConsumerBankingTransactionUltimateCreditorsBoolExp
}

input ConsumerBanking_ConsumerBankingTransactionUltimateCreditorsOrderByExp {
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactionsOrderByExp
  consumerBankingTransactionId: OrderBy
  consumerBankingTransactionUltimateCreditorId: OrderBy
  identification: OrderBy
  lei: OrderBy
  name: OrderBy
  schemeName: OrderBy
}

"""
Stores information about the original party that initiated the payment in a transaction chain
"""
type ConsumerBanking_ConsumerBankingTransactionUltimateDebtors {
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactions

  """References the transaction this ultimate debtor belongs to"""
  consumerBankingTransactionId: ConsumerBanking_Int4!

  """Auto-incrementing identifier for each ultimate debtor record"""
  consumerBankingTransactionUltimateDebtorId: ConsumerBanking_Int4!

  """Identification code for the ultimate debtor"""
  identification: ConsumerBanking_Varchar

  """Legal Entity Identifier if the ultimate debtor is an organization"""
  lei: ConsumerBanking_Varchar

  """Name of the original party initiating the payment"""
  name: ConsumerBanking_Varchar!

  """Identification scheme for the debtor's identifier"""
  schemeName: ConsumerBanking_Varchar
}

type ConsumerBanking_ConsumerBankingTransactionUltimateDebtorsAggExp {
  _count: Int!
  consumerBankingTransactionId: ConsumerBanking_Int4AggExp!
  consumerBankingTransactionUltimateDebtorId: ConsumerBanking_Int4AggExp!
  identification: ConsumerBanking_VarcharAggExp!
  lei: ConsumerBanking_VarcharAggExp!
  name: ConsumerBanking_VarcharAggExp!
  schemeName: ConsumerBanking_VarcharAggExp!
}

input ConsumerBanking_ConsumerBankingTransactionUltimateDebtorsBoolExp {
  _and: [ConsumerBanking_ConsumerBankingTransactionUltimateDebtorsBoolExp!]
  _not: ConsumerBanking_ConsumerBankingTransactionUltimateDebtorsBoolExp
  _or: [ConsumerBanking_ConsumerBankingTransactionUltimateDebtorsBoolExp!]
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactionsBoolExp
  consumerBankingTransactionId: ConsumerBanking_Int4BoolExp
  consumerBankingTransactionUltimateDebtorId: ConsumerBanking_Int4BoolExp
  identification: ConsumerBanking_VarcharBoolExp
  lei: ConsumerBanking_VarcharBoolExp
  name: ConsumerBanking_VarcharBoolExp
  schemeName: ConsumerBanking_VarcharBoolExp
}

input ConsumerBanking_ConsumerBankingTransactionUltimateDebtorsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerBanking_ConsumerBankingTransactionUltimateDebtorsOrderByExp!]
  where: ConsumerBanking_ConsumerBankingTransactionUltimateDebtorsBoolExp
}

input ConsumerBanking_ConsumerBankingTransactionUltimateDebtorsOrderByExp {
  consumerBankingTransaction: ConsumerBanking_ConsumerBankingTransactionsOrderByExp
  consumerBankingTransactionId: OrderBy
  consumerBankingTransactionUltimateDebtorId: OrderBy
  identification: OrderBy
  lei: OrderBy
  name: OrderBy
  schemeName: OrderBy
}

scalar ConsumerBanking_Date

type ConsumerBanking_DateAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_Date
  min: ConsumerBanking_Date
}

input ConsumerBanking_DateBoolExp {
  _and: [ConsumerBanking_DateBoolExp!]
  _eq: ConsumerBanking_Date
  _gt: ConsumerBanking_Date
  _gte: ConsumerBanking_Date
  _in: [ConsumerBanking_Date!]
  _is_null: Boolean
  _lt: ConsumerBanking_Date
  _lte: ConsumerBanking_Date
  _neq: ConsumerBanking_Date
  _not: ConsumerBanking_DateBoolExp
  _or: [ConsumerBanking_DateBoolExp!]
}

scalar ConsumerBanking_EnterpriseCreditDebitIndicator

type ConsumerBanking_EnterpriseCreditDebitIndicatorAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_EnterpriseCreditDebitIndicator
  min: ConsumerBanking_EnterpriseCreditDebitIndicator
}

input ConsumerBanking_EnterpriseCreditDebitIndicatorBoolExp {
  _and: [ConsumerBanking_EnterpriseCreditDebitIndicatorBoolExp!]
  _eq: ConsumerBanking_EnterpriseCreditDebitIndicator
  _gt: ConsumerBanking_EnterpriseCreditDebitIndicator
  _gte: ConsumerBanking_EnterpriseCreditDebitIndicator
  _in: [ConsumerBanking_EnterpriseCreditDebitIndicator!]
  _is_null: Boolean
  _lt: ConsumerBanking_EnterpriseCreditDebitIndicator
  _lte: ConsumerBanking_EnterpriseCreditDebitIndicator
  _neq: ConsumerBanking_EnterpriseCreditDebitIndicator
  _not: ConsumerBanking_EnterpriseCreditDebitIndicatorBoolExp
  _or: [ConsumerBanking_EnterpriseCreditDebitIndicatorBoolExp!]
}

scalar ConsumerBanking_EnterpriseCurrencyCode

type ConsumerBanking_EnterpriseCurrencyCodeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_EnterpriseCurrencyCode
  min: ConsumerBanking_EnterpriseCurrencyCode
}

input ConsumerBanking_EnterpriseCurrencyCodeBoolExp {
  _and: [ConsumerBanking_EnterpriseCurrencyCodeBoolExp!]
  _eq: ConsumerBanking_EnterpriseCurrencyCode
  _gt: ConsumerBanking_EnterpriseCurrencyCode
  _gte: ConsumerBanking_EnterpriseCurrencyCode
  _in: [ConsumerBanking_EnterpriseCurrencyCode!]
  _is_null: Boolean
  _lt: ConsumerBanking_EnterpriseCurrencyCode
  _lte: ConsumerBanking_EnterpriseCurrencyCode
  _neq: ConsumerBanking_EnterpriseCurrencyCode
  _not: ConsumerBanking_EnterpriseCurrencyCodeBoolExp
  _or: [ConsumerBanking_EnterpriseCurrencyCodeBoolExp!]
}

scalar ConsumerBanking_EnterpriseFrequency

type ConsumerBanking_EnterpriseFrequencyAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_EnterpriseFrequency
  min: ConsumerBanking_EnterpriseFrequency
}

input ConsumerBanking_EnterpriseFrequencyBoolExp {
  _and: [ConsumerBanking_EnterpriseFrequencyBoolExp!]
  _eq: ConsumerBanking_EnterpriseFrequency
  _gt: ConsumerBanking_EnterpriseFrequency
  _gte: ConsumerBanking_EnterpriseFrequency
  _in: [ConsumerBanking_EnterpriseFrequency!]
  _is_null: Boolean
  _lt: ConsumerBanking_EnterpriseFrequency
  _lte: ConsumerBanking_EnterpriseFrequency
  _neq: ConsumerBanking_EnterpriseFrequency
  _not: ConsumerBanking_EnterpriseFrequencyBoolExp
  _or: [ConsumerBanking_EnterpriseFrequencyBoolExp!]
}

scalar ConsumerBanking_EnterpriseIdentifierScheme

type ConsumerBanking_EnterpriseIdentifierSchemeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_EnterpriseIdentifierScheme
  min: ConsumerBanking_EnterpriseIdentifierScheme
}

input ConsumerBanking_EnterpriseIdentifierSchemeBoolExp {
  _and: [ConsumerBanking_EnterpriseIdentifierSchemeBoolExp!]
  _eq: ConsumerBanking_EnterpriseIdentifierScheme
  _gt: ConsumerBanking_EnterpriseIdentifierScheme
  _gte: ConsumerBanking_EnterpriseIdentifierScheme
  _in: [ConsumerBanking_EnterpriseIdentifierScheme!]
  _is_null: Boolean
  _lt: ConsumerBanking_EnterpriseIdentifierScheme
  _lte: ConsumerBanking_EnterpriseIdentifierScheme
  _neq: ConsumerBanking_EnterpriseIdentifierScheme
  _not: ConsumerBanking_EnterpriseIdentifierSchemeBoolExp
  _or: [ConsumerBanking_EnterpriseIdentifierSchemeBoolExp!]
}

scalar ConsumerBanking_Int4

type ConsumerBanking_Int4AggExp {
  _count: Int!
  _count_distinct: Int!
  avg: ConsumerBanking_Numeric
  bit_and: ConsumerBanking_Int4
  bit_or: ConsumerBanking_Int4
  bit_xor: ConsumerBanking_Int4
  max: ConsumerBanking_Int4
  min: ConsumerBanking_Int4
  stddev: ConsumerBanking_Numeric
  stddev_pop: ConsumerBanking_Numeric
  stddev_samp: ConsumerBanking_Numeric
  sum: ConsumerBanking_Int8
  var_pop: ConsumerBanking_Numeric
  var_samp: ConsumerBanking_Numeric
  variance: ConsumerBanking_Numeric
}

input ConsumerBanking_Int4BoolExp {
  _and: [ConsumerBanking_Int4BoolExp!]
  _eq: ConsumerBanking_Int4
  _gt: ConsumerBanking_Int4
  _gte: ConsumerBanking_Int4
  _in: [ConsumerBanking_Int4!]
  _is_null: Boolean
  _lt: ConsumerBanking_Int4
  _lte: ConsumerBanking_Int4
  _neq: ConsumerBanking_Int4
  _not: ConsumerBanking_Int4BoolExp
  _or: [ConsumerBanking_Int4BoolExp!]
}

scalar ConsumerBanking_Int8

scalar ConsumerBanking_Numeric

type ConsumerBanking_NumericAggExp {
  _count: Int!
  _count_distinct: Int!
  avg: ConsumerBanking_Numeric
  max: ConsumerBanking_Numeric
  min: ConsumerBanking_Numeric
  stddev: ConsumerBanking_Numeric
  stddev_pop: ConsumerBanking_Numeric
  stddev_samp: ConsumerBanking_Numeric
  sum: ConsumerBanking_Numeric
  var_pop: ConsumerBanking_Numeric
  var_samp: ConsumerBanking_Numeric
  variance: ConsumerBanking_Numeric
}

input ConsumerBanking_NumericBoolExp {
  _and: [ConsumerBanking_NumericBoolExp!]
  _eq: ConsumerBanking_Numeric
  _gt: ConsumerBanking_Numeric
  _gte: ConsumerBanking_Numeric
  _in: [ConsumerBanking_Numeric!]
  _is_null: Boolean
  _lt: ConsumerBanking_Numeric
  _lte: ConsumerBanking_Numeric
  _neq: ConsumerBanking_Numeric
  _not: ConsumerBanking_NumericBoolExp
  _or: [ConsumerBanking_NumericBoolExp!]
}

scalar ConsumerBanking_Text

type ConsumerBanking_TextAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_Text
  min: ConsumerBanking_Text
}

input ConsumerBanking_TextBoolExp {
  _and: [ConsumerBanking_TextBoolExp!]
  _eq: ConsumerBanking_Text
  _gt: ConsumerBanking_Text
  _gte: ConsumerBanking_Text
  _ilike: ConsumerBanking_Text
  _in: [ConsumerBanking_Text!]
  _iregex: ConsumerBanking_Text
  _is_null: Boolean
  _like: ConsumerBanking_Text
  _lt: ConsumerBanking_Text
  _lte: ConsumerBanking_Text
  _neq: ConsumerBanking_Text
  _nilike: ConsumerBanking_Text
  _niregex: ConsumerBanking_Text
  _nlike: ConsumerBanking_Text
  _not: ConsumerBanking_TextBoolExp
  _nregex: ConsumerBanking_Text
  _or: [ConsumerBanking_TextBoolExp!]
  _regex: ConsumerBanking_Text
  starts_with: ConsumerBanking_Text
  ts_match_tt: ConsumerBanking_Text
}

scalar ConsumerBanking_Timestamptz

type ConsumerBanking_TimestamptzAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_Timestamptz
  min: ConsumerBanking_Timestamptz
}

input ConsumerBanking_TimestamptzBoolExp {
  _and: [ConsumerBanking_TimestamptzBoolExp!]
  _eq: ConsumerBanking_Timestamptz
  _gt: ConsumerBanking_Timestamptz
  _gte: ConsumerBanking_Timestamptz
  _in: [ConsumerBanking_Timestamptz!]
  _is_null: Boolean
  _lt: ConsumerBanking_Timestamptz
  _lte: ConsumerBanking_Timestamptz
  _neq: ConsumerBanking_Timestamptz
  _not: ConsumerBanking_TimestamptzBoolExp
  _or: [ConsumerBanking_TimestamptzBoolExp!]
}

scalar ConsumerBanking_Varchar

type ConsumerBanking_VarcharAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerBanking_Text
  min: ConsumerBanking_Text
}

input ConsumerBanking_VarcharBoolExp {
  _and: [ConsumerBanking_VarcharBoolExp!]
  _eq: ConsumerBanking_Varchar
  _gt: ConsumerBanking_Varchar
  _gte: ConsumerBanking_Varchar
  _ilike: ConsumerBanking_Varchar
  _in: [ConsumerBanking_Varchar!]
  _iregex: ConsumerBanking_Varchar
  _is_null: Boolean
  _like: ConsumerBanking_Varchar
  _lt: ConsumerBanking_Varchar
  _lte: ConsumerBanking_Varchar
  _neq: ConsumerBanking_Varchar
  _nilike: ConsumerBanking_Varchar
  _niregex: ConsumerBanking_Varchar
  _nlike: ConsumerBanking_Varchar
  _not: ConsumerBanking_VarcharBoolExp
  _nregex: ConsumerBanking_Varchar
  _or: [ConsumerBanking_VarcharBoolExp!]
  _regex: ConsumerBanking_Varchar
  starts_with: ConsumerBanking_Varchar
  ts_match_tt: ConsumerBanking_Varchar
}

scalar ConsumerLending_Bool

type ConsumerLending_BoolAggExp {
  _count: Int!
  _count_distinct: Int!
  bool_and: ConsumerLending_Bool
  bool_or: ConsumerLending_Bool
  every: ConsumerLending_Bool
}

input ConsumerLending_BoolBoolExp {
  _and: [ConsumerLending_BoolBoolExp!]
  _eq: ConsumerLending_Bool
  _gt: ConsumerLending_Bool
  _gte: ConsumerLending_Bool
  _in: [ConsumerLending_Bool!]
  _is_null: Boolean
  _lt: ConsumerLending_Bool
  _lte: ConsumerLending_Bool
  _neq: ConsumerLending_Bool
  _not: ConsumerLending_BoolBoolExp
  _or: [ConsumerLending_BoolBoolExp!]
}

scalar ConsumerLending_ConsumerLendingAccountType

type ConsumerLending_ConsumerLendingAccountTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingAccountType
  min: ConsumerLending_ConsumerLendingAccountType
}

input ConsumerLending_ConsumerLendingAccountTypeBoolExp {
  _and: [ConsumerLending_ConsumerLendingAccountTypeBoolExp!]
  _eq: ConsumerLending_ConsumerLendingAccountType
  _gt: ConsumerLending_ConsumerLendingAccountType
  _gte: ConsumerLending_ConsumerLendingAccountType
  _in: [ConsumerLending_ConsumerLendingAccountType!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingAccountType
  _lte: ConsumerLending_ConsumerLendingAccountType
  _neq: ConsumerLending_ConsumerLendingAccountType
  _not: ConsumerLending_ConsumerLendingAccountTypeBoolExp
  _or: [ConsumerLending_ConsumerLendingAccountTypeBoolExp!]
}

scalar ConsumerLending_ConsumerLendingActionTaken

type ConsumerLending_ConsumerLendingActionTakenAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingActionTaken
  min: ConsumerLending_ConsumerLendingActionTaken
}

input ConsumerLending_ConsumerLendingActionTakenBoolExp {
  _and: [ConsumerLending_ConsumerLendingActionTakenBoolExp!]
  _eq: ConsumerLending_ConsumerLendingActionTaken
  _gt: ConsumerLending_ConsumerLendingActionTaken
  _gte: ConsumerLending_ConsumerLendingActionTaken
  _in: [ConsumerLending_ConsumerLendingActionTaken!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingActionTaken
  _lte: ConsumerLending_ConsumerLendingActionTaken
  _neq: ConsumerLending_ConsumerLendingActionTaken
  _not: ConsumerLending_ConsumerLendingActionTakenBoolExp
  _or: [ConsumerLending_ConsumerLendingActionTakenBoolExp!]
}

"""
Provides detailed information about adverse action taken on loan applications, including reasons and credit information.
"""
type ConsumerLending_ConsumerLendingAdverseActionDetails {
  """Unique identifier for adverse action record"""
  consumerLendingAdverseActionId: ConsumerLending_Int4!
  consumerLendingAdverseActionNotice: ConsumerLending_ConsumerLendingAdverseActionNotices

  """Reference to adverse_action_notices"""
  consumerLendingNoticeId: ConsumerLending_Int4!

  """Credit bureau providing the report"""
  creditBureauName: ConsumerLending_ConsumerLendingCreditBureau

  """Credit score disclosed to applicant"""
  creditScoreDisclosed: ConsumerLending_Int4

  """Key factors affecting score"""
  creditScoreFactors: ConsumerLending_Text

  """Maximum score in range"""
  creditScoreRangeMax: ConsumerLending_Int4

  """Minimum score in range"""
  creditScoreRangeMin: ConsumerLending_Int4

  """Standard ECOA reason code"""
  ecoaReasonCode: ConsumerLending_ConsumerLendingEcoaReasonCode!

  """Standard FCRA reason code if applicable"""
  fcraReasonCode: ConsumerLending_ConsumerLendingFcraReasonCode

  """Date details were generated"""
  generatedDate: ConsumerLending_Timestamptz!

  """Description of reason for adverse action"""
  reasonDescription: ConsumerLending_Varchar!

  """Order of importance for reason"""
  sequence: ConsumerLending_Int4!
  user: Enterprise_EnterpriseAssociates

  """User who generated adverse action"""
  userId: ConsumerLending_Int4
}

type ConsumerLending_ConsumerLendingAdverseActionDetailsAggExp {
  _count: Int!
  consumerLendingAdverseActionId: ConsumerLending_Int4AggExp!
  consumerLendingNoticeId: ConsumerLending_Int4AggExp!
  creditBureauName: ConsumerLending_ConsumerLendingCreditBureauAggExp!
  creditScoreDisclosed: ConsumerLending_Int4AggExp!
  creditScoreFactors: ConsumerLending_TextAggExp!
  creditScoreRangeMax: ConsumerLending_Int4AggExp!
  creditScoreRangeMin: ConsumerLending_Int4AggExp!
  ecoaReasonCode: ConsumerLending_ConsumerLendingEcoaReasonCodeAggExp!
  fcraReasonCode: ConsumerLending_ConsumerLendingFcraReasonCodeAggExp!
  generatedDate: ConsumerLending_TimestamptzAggExp!
  reasonDescription: ConsumerLending_VarcharAggExp!
  sequence: ConsumerLending_Int4AggExp!
  userId: ConsumerLending_Int4AggExp!
}

input ConsumerLending_ConsumerLendingAdverseActionDetailsBoolExp {
  _and: [ConsumerLending_ConsumerLendingAdverseActionDetailsBoolExp!]
  _not: ConsumerLending_ConsumerLendingAdverseActionDetailsBoolExp
  _or: [ConsumerLending_ConsumerLendingAdverseActionDetailsBoolExp!]
  consumerLendingAdverseActionId: ConsumerLending_Int4BoolExp
  consumerLendingAdverseActionNotice: ConsumerLending_ConsumerLendingAdverseActionNoticesBoolExp
  consumerLendingNoticeId: ConsumerLending_Int4BoolExp
  creditBureauName: ConsumerLending_ConsumerLendingCreditBureauBoolExp
  creditScoreDisclosed: ConsumerLending_Int4BoolExp
  creditScoreFactors: ConsumerLending_TextBoolExp
  creditScoreRangeMax: ConsumerLending_Int4BoolExp
  creditScoreRangeMin: ConsumerLending_Int4BoolExp
  ecoaReasonCode: ConsumerLending_ConsumerLendingEcoaReasonCodeBoolExp
  fcraReasonCode: ConsumerLending_ConsumerLendingFcraReasonCodeBoolExp
  generatedDate: ConsumerLending_TimestamptzBoolExp
  reasonDescription: ConsumerLending_VarcharBoolExp
  sequence: ConsumerLending_Int4BoolExp
  userId: ConsumerLending_Int4BoolExp
}

input ConsumerLending_ConsumerLendingAdverseActionDetailsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingAdverseActionDetailsOrderByExp!]
  where: ConsumerLending_ConsumerLendingAdverseActionDetailsBoolExp
}

input ConsumerLending_ConsumerLendingAdverseActionDetailsOrderByExp {
  consumerLendingAdverseActionId: OrderBy
  consumerLendingAdverseActionNotice: ConsumerLending_ConsumerLendingAdverseActionNoticesOrderByExp
  consumerLendingNoticeId: OrderBy
  creditBureauName: OrderBy
  creditScoreDisclosed: OrderBy
  creditScoreFactors: OrderBy
  creditScoreRangeMax: OrderBy
  creditScoreRangeMin: OrderBy
  ecoaReasonCode: OrderBy
  fcraReasonCode: OrderBy
  generatedDate: OrderBy
  reasonDescription: OrderBy
  sequence: OrderBy
  userId: OrderBy
}

"""
Tracks adverse action notices sent to applicants when their loan applications are denied.
"""
type ConsumerLending_ConsumerLendingAdverseActionNotices {
  consumerLendingAdverseActionDetails(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingAdverseActionDetailsOrderByExp!], where: ConsumerLending_ConsumerLendingAdverseActionDetailsBoolExp): [ConsumerLending_ConsumerLendingAdverseActionDetails!]
  consumerLendingAdverseActionDetailsAggregate(filter_input: ConsumerLending_ConsumerLendingAdverseActionDetailsFilterInput): ConsumerLending_ConsumerLendingAdverseActionDetailsAggExp!

  """Reference to loan application"""
  consumerLendingApplicationId: ConsumerLending_Int4!
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplications

  """Unique identifier for notice"""
  consumerLendingNoticeId: ConsumerLending_Int4!

  """Method of delivering the notice"""
  deliveryMethod: ConsumerLending_ConsumerLendingDeliveryMethod!

  """When notice was generated"""
  generatedDate: ConsumerLending_Timestamptz!

  """Path to stored notice document"""
  noticePath: ConsumerLending_Varchar

  """When notice was sent to applicant"""
  sentDate: ConsumerLending_Timestamptz

  """Current status of the notice"""
  status: ConsumerLending_ConsumerLendingAdverseActionNoticeStatus!
}

type ConsumerLending_ConsumerLendingAdverseActionNoticesAggExp {
  _count: Int!
  consumerLendingApplicationId: ConsumerLending_Int4AggExp!
  consumerLendingNoticeId: ConsumerLending_Int4AggExp!
  deliveryMethod: ConsumerLending_ConsumerLendingDeliveryMethodAggExp!
  generatedDate: ConsumerLending_TimestamptzAggExp!
  noticePath: ConsumerLending_VarcharAggExp!
  sentDate: ConsumerLending_TimestamptzAggExp!
  status: ConsumerLending_ConsumerLendingAdverseActionNoticeStatusAggExp!
}

input ConsumerLending_ConsumerLendingAdverseActionNoticesBoolExp {
  _and: [ConsumerLending_ConsumerLendingAdverseActionNoticesBoolExp!]
  _not: ConsumerLending_ConsumerLendingAdverseActionNoticesBoolExp
  _or: [ConsumerLending_ConsumerLendingAdverseActionNoticesBoolExp!]
  consumerLendingAdverseActionDetails: ConsumerLending_ConsumerLendingAdverseActionDetailsBoolExp
  consumerLendingApplicationId: ConsumerLending_Int4BoolExp
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplicationsBoolExp
  consumerLendingNoticeId: ConsumerLending_Int4BoolExp
  deliveryMethod: ConsumerLending_ConsumerLendingDeliveryMethodBoolExp
  generatedDate: ConsumerLending_TimestamptzBoolExp
  noticePath: ConsumerLending_VarcharBoolExp
  sentDate: ConsumerLending_TimestamptzBoolExp
  status: ConsumerLending_ConsumerLendingAdverseActionNoticeStatusBoolExp
}

input ConsumerLending_ConsumerLendingAdverseActionNoticesFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingAdverseActionNoticesOrderByExp!]
  where: ConsumerLending_ConsumerLendingAdverseActionNoticesBoolExp
}

input ConsumerLending_ConsumerLendingAdverseActionNoticesOrderByExp {
  consumerLendingApplicationId: OrderBy
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplicationsOrderByExp
  consumerLendingNoticeId: OrderBy
  deliveryMethod: OrderBy
  generatedDate: OrderBy
  noticePath: OrderBy
  sentDate: OrderBy
  status: OrderBy
}

scalar ConsumerLending_ConsumerLendingAdverseActionNoticeStatus

type ConsumerLending_ConsumerLendingAdverseActionNoticeStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingAdverseActionNoticeStatus
  min: ConsumerLending_ConsumerLendingAdverseActionNoticeStatus
}

input ConsumerLending_ConsumerLendingAdverseActionNoticeStatusBoolExp {
  _and: [ConsumerLending_ConsumerLendingAdverseActionNoticeStatusBoolExp!]
  _eq: ConsumerLending_ConsumerLendingAdverseActionNoticeStatus
  _gt: ConsumerLending_ConsumerLendingAdverseActionNoticeStatus
  _gte: ConsumerLending_ConsumerLendingAdverseActionNoticeStatus
  _in: [ConsumerLending_ConsumerLendingAdverseActionNoticeStatus!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingAdverseActionNoticeStatus
  _lte: ConsumerLending_ConsumerLendingAdverseActionNoticeStatus
  _neq: ConsumerLending_ConsumerLendingAdverseActionNoticeStatus
  _not: ConsumerLending_ConsumerLendingAdverseActionNoticeStatusBoolExp
  _or: [ConsumerLending_ConsumerLendingAdverseActionNoticeStatusBoolExp!]
}

scalar ConsumerLending_ConsumerLendingAnalysisType

type ConsumerLending_ConsumerLendingAnalysisTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingAnalysisType
  min: ConsumerLending_ConsumerLendingAnalysisType
}

input ConsumerLending_ConsumerLendingAnalysisTypeBoolExp {
  _and: [ConsumerLending_ConsumerLendingAnalysisTypeBoolExp!]
  _eq: ConsumerLending_ConsumerLendingAnalysisType
  _gt: ConsumerLending_ConsumerLendingAnalysisType
  _gte: ConsumerLending_ConsumerLendingAnalysisType
  _in: [ConsumerLending_ConsumerLendingAnalysisType!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingAnalysisType
  _lte: ConsumerLending_ConsumerLendingAnalysisType
  _neq: ConsumerLending_ConsumerLendingAnalysisType
  _not: ConsumerLending_ConsumerLendingAnalysisTypeBoolExp
  _or: [ConsumerLending_ConsumerLendingAnalysisTypeBoolExp!]
}

"""
Records assets owned by loan applicants, including financial accounts and property.
"""
type ConsumerLending_ConsumerLendingApplicantAssets {
  """Account number, stored encrypted"""
  accountNumber: ConsumerLending_Varchar

  """Type of asset"""
  assetType: ConsumerLending_ConsumerLendingAssetType!
  consumerLendingApplicant: ConsumerLending_ConsumerLendingApplicants

  """Reference to applicant"""
  consumerLendingApplicantId: ConsumerLending_Int4!

  """Unique identifier for asset record"""
  consumerLendingAssetId: ConsumerLending_Int4!

  """Current market value of asset"""
  currentValue: ConsumerLending_Numeric!

  """Financial institution holding the asset"""
  institutionName: ConsumerLending_Varchar
  propertyAddress: Enterprise_EnterpriseAddresses

  """Reference to enterprise.addresses if asset is property"""
  propertyAddressId: ConsumerLending_Int4

  """Date asset was verified"""
  verificationDate: ConsumerLending_Date

  """Self-reported, Verified, Failed"""
  verificationStatus: ConsumerLending_ConsumerLendingVerificationStatus!
}

type ConsumerLending_ConsumerLendingApplicantAssetsAggExp {
  _count: Int!
  accountNumber: ConsumerLending_VarcharAggExp!
  assetType: ConsumerLending_ConsumerLendingAssetTypeAggExp!
  consumerLendingApplicantId: ConsumerLending_Int4AggExp!
  consumerLendingAssetId: ConsumerLending_Int4AggExp!
  currentValue: ConsumerLending_NumericAggExp!
  institutionName: ConsumerLending_VarcharAggExp!
  propertyAddressId: ConsumerLending_Int4AggExp!
  verificationDate: ConsumerLending_DateAggExp!
  verificationStatus: ConsumerLending_ConsumerLendingVerificationStatusAggExp!
}

input ConsumerLending_ConsumerLendingApplicantAssetsBoolExp {
  _and: [ConsumerLending_ConsumerLendingApplicantAssetsBoolExp!]
  _not: ConsumerLending_ConsumerLendingApplicantAssetsBoolExp
  _or: [ConsumerLending_ConsumerLendingApplicantAssetsBoolExp!]
  accountNumber: ConsumerLending_VarcharBoolExp
  assetType: ConsumerLending_ConsumerLendingAssetTypeBoolExp
  consumerLendingApplicant: ConsumerLending_ConsumerLendingApplicantsBoolExp
  consumerLendingApplicantId: ConsumerLending_Int4BoolExp
  consumerLendingAssetId: ConsumerLending_Int4BoolExp
  currentValue: ConsumerLending_NumericBoolExp
  institutionName: ConsumerLending_VarcharBoolExp
  propertyAddressId: ConsumerLending_Int4BoolExp
  verificationDate: ConsumerLending_DateBoolExp
  verificationStatus: ConsumerLending_ConsumerLendingVerificationStatusBoolExp
}

input ConsumerLending_ConsumerLendingApplicantAssetsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingApplicantAssetsOrderByExp!]
  where: ConsumerLending_ConsumerLendingApplicantAssetsBoolExp
}

input ConsumerLending_ConsumerLendingApplicantAssetsOrderByExp {
  accountNumber: OrderBy
  assetType: OrderBy
  consumerLendingApplicant: ConsumerLending_ConsumerLendingApplicantsOrderByExp
  consumerLendingApplicantId: OrderBy
  consumerLendingAssetId: OrderBy
  currentValue: OrderBy
  institutionName: OrderBy
  propertyAddressId: OrderBy
  verificationDate: OrderBy
  verificationStatus: OrderBy
}

"""Stores employment history and income details for loan applicants."""
type ConsumerLending_ConsumerLendingApplicantEmployments {
  consumerLendingApplicant: ConsumerLending_ConsumerLendingApplicants

  """Reference to applicant"""
  consumerLendingApplicantId: ConsumerLending_Int4!

  """Unique identifier for employment record"""
  consumerLendingEmploymentId: ConsumerLending_Int4!
  employerAddress: Enterprise_EnterpriseAddresses

  """Name of employer"""
  employerName: ConsumerLending_Varchar!

  """Full-time, Part-time, Self-employed"""
  employmentType: ConsumerLending_Varchar!

  """Employment end date if applicable"""
  endDate: ConsumerLending_Date

  """Reference to enterprise.addresses for employer location"""
  enterpriseAddressId: ConsumerLending_Int4

  """Indicates if this is current employer"""
  isCurrent: ConsumerLending_Bool!

  """Gross monthly income"""
  monthlyIncome: ConsumerLending_Numeric!

  """Employer phone number"""
  phone: ConsumerLending_Varchar

  """Job title or position"""
  position: ConsumerLending_Varchar!

  """Employment start date"""
  startDate: ConsumerLending_Date!

  """Total years in this profession/industry"""
  yearsInProfession: ConsumerLending_Int4
}

type ConsumerLending_ConsumerLendingApplicantEmploymentsAggExp {
  _count: Int!
  consumerLendingApplicantId: ConsumerLending_Int4AggExp!
  consumerLendingEmploymentId: ConsumerLending_Int4AggExp!
  employerName: ConsumerLending_VarcharAggExp!
  employmentType: ConsumerLending_VarcharAggExp!
  endDate: ConsumerLending_DateAggExp!
  enterpriseAddressId: ConsumerLending_Int4AggExp!
  isCurrent: ConsumerLending_BoolAggExp!
  monthlyIncome: ConsumerLending_NumericAggExp!
  phone: ConsumerLending_VarcharAggExp!
  position: ConsumerLending_VarcharAggExp!
  startDate: ConsumerLending_DateAggExp!
  yearsInProfession: ConsumerLending_Int4AggExp!
}

input ConsumerLending_ConsumerLendingApplicantEmploymentsBoolExp {
  _and: [ConsumerLending_ConsumerLendingApplicantEmploymentsBoolExp!]
  _not: ConsumerLending_ConsumerLendingApplicantEmploymentsBoolExp
  _or: [ConsumerLending_ConsumerLendingApplicantEmploymentsBoolExp!]
  consumerLendingApplicant: ConsumerLending_ConsumerLendingApplicantsBoolExp
  consumerLendingApplicantId: ConsumerLending_Int4BoolExp
  consumerLendingEmploymentId: ConsumerLending_Int4BoolExp
  employerName: ConsumerLending_VarcharBoolExp
  employmentType: ConsumerLending_VarcharBoolExp
  endDate: ConsumerLending_DateBoolExp
  enterpriseAddressId: ConsumerLending_Int4BoolExp
  isCurrent: ConsumerLending_BoolBoolExp
  monthlyIncome: ConsumerLending_NumericBoolExp
  phone: ConsumerLending_VarcharBoolExp
  position: ConsumerLending_VarcharBoolExp
  startDate: ConsumerLending_DateBoolExp
  yearsInProfession: ConsumerLending_Int4BoolExp
}

input ConsumerLending_ConsumerLendingApplicantEmploymentsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingApplicantEmploymentsOrderByExp!]
  where: ConsumerLending_ConsumerLendingApplicantEmploymentsBoolExp
}

input ConsumerLending_ConsumerLendingApplicantEmploymentsOrderByExp {
  consumerLendingApplicant: ConsumerLending_ConsumerLendingApplicantsOrderByExp
  consumerLendingApplicantId: OrderBy
  consumerLendingEmploymentId: OrderBy
  employerName: OrderBy
  employmentType: OrderBy
  endDate: OrderBy
  enterpriseAddressId: OrderBy
  isCurrent: OrderBy
  monthlyIncome: OrderBy
  phone: OrderBy
  position: OrderBy
  startDate: OrderBy
  yearsInProfession: OrderBy
}

"""
Tracks various income sources for loan applicants, including employment and other income types.
"""
type ConsumerLending_ConsumerLendingApplicantIncomes {
  """Income amount"""
  amount: ConsumerLending_Numeric!
  consumerLendingApplicant: ConsumerLending_ConsumerLendingApplicants

  """Reference to applicant"""
  consumerLendingApplicantId: ConsumerLending_Int4!

  """Unique identifier for income record"""
  consumerLendingIncomeId: ConsumerLending_Int4!

  """Monthly, Annual, etc."""
  frequency: ConsumerLending_Varchar!

  """Type of income source"""
  incomeType: ConsumerLending_ConsumerLendingIncomeType!

  """Date income was verified"""
  verificationDate: ConsumerLending_Date

  """Self-reported, Verified, Failed"""
  verificationStatus: ConsumerLending_Varchar!
}

type ConsumerLending_ConsumerLendingApplicantIncomesAggExp {
  _count: Int!
  amount: ConsumerLending_NumericAggExp!
  consumerLendingApplicantId: ConsumerLending_Int4AggExp!
  consumerLendingIncomeId: ConsumerLending_Int4AggExp!
  frequency: ConsumerLending_VarcharAggExp!
  incomeType: ConsumerLending_ConsumerLendingIncomeTypeAggExp!
  verificationDate: ConsumerLending_DateAggExp!
  verificationStatus: ConsumerLending_VarcharAggExp!
}

input ConsumerLending_ConsumerLendingApplicantIncomesBoolExp {
  _and: [ConsumerLending_ConsumerLendingApplicantIncomesBoolExp!]
  _not: ConsumerLending_ConsumerLendingApplicantIncomesBoolExp
  _or: [ConsumerLending_ConsumerLendingApplicantIncomesBoolExp!]
  amount: ConsumerLending_NumericBoolExp
  consumerLendingApplicant: ConsumerLending_ConsumerLendingApplicantsBoolExp
  consumerLendingApplicantId: ConsumerLending_Int4BoolExp
  consumerLendingIncomeId: ConsumerLending_Int4BoolExp
  frequency: ConsumerLending_VarcharBoolExp
  incomeType: ConsumerLending_ConsumerLendingIncomeTypeBoolExp
  verificationDate: ConsumerLending_DateBoolExp
  verificationStatus: ConsumerLending_VarcharBoolExp
}

input ConsumerLending_ConsumerLendingApplicantIncomesFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingApplicantIncomesOrderByExp!]
  where: ConsumerLending_ConsumerLendingApplicantIncomesBoolExp
}

input ConsumerLending_ConsumerLendingApplicantIncomesOrderByExp {
  amount: OrderBy
  consumerLendingApplicant: ConsumerLending_ConsumerLendingApplicantsOrderByExp
  consumerLendingApplicantId: OrderBy
  consumerLendingIncomeId: OrderBy
  frequency: OrderBy
  incomeType: OrderBy
  verificationDate: OrderBy
  verificationStatus: OrderBy
}

"""Tracks liabilities and debt obligations of loan applicants."""
type ConsumerLending_ConsumerLendingApplicantLiabilities {
  """Account number, stored encrypted"""
  accountNumber: ConsumerLending_Varchar
  consumerLendingApplicant: ConsumerLending_ConsumerLendingApplicants

  """Reference to applicant"""
  consumerLendingApplicantId: ConsumerLending_Int4!

  """Unique identifier for liability record"""
  consumerLendingLiabilityId: ConsumerLending_Int4!

  """Name of creditor"""
  creditorName: ConsumerLending_Varchar!

  """Current outstanding balance"""
  currentBalance: ConsumerLending_Numeric!

  """Current interest rate percentage"""
  interestRate: ConsumerLending_Numeric

  """Type of liability"""
  liabilityType: ConsumerLending_ConsumerLendingLiabilityType!

  """When debt will be paid off"""
  maturityDate: ConsumerLending_Date

  """Required monthly payment amount"""
  monthlyPayment: ConsumerLending_Numeric!

  """Original loan or credit amount"""
  originalAmount: ConsumerLending_Numeric

  """When debt was originated"""
  originationDate: ConsumerLending_Date

  """Date liability was verified"""
  verificationDate: ConsumerLending_Date

  """Status of liability verification"""
  verificationStatus: ConsumerLending_ConsumerLendingVerificationStatus!

  """Indicates if debt will be paid off with loan"""
  willBePaidOff: ConsumerLending_Bool
}

type ConsumerLending_ConsumerLendingApplicantLiabilitiesAggExp {
  _count: Int!
  accountNumber: ConsumerLending_VarcharAggExp!
  consumerLendingApplicantId: ConsumerLending_Int4AggExp!
  consumerLendingLiabilityId: ConsumerLending_Int4AggExp!
  creditorName: ConsumerLending_VarcharAggExp!
  currentBalance: ConsumerLending_NumericAggExp!
  interestRate: ConsumerLending_NumericAggExp!
  liabilityType: ConsumerLending_ConsumerLendingLiabilityTypeAggExp!
  maturityDate: ConsumerLending_DateAggExp!
  monthlyPayment: ConsumerLending_NumericAggExp!
  originalAmount: ConsumerLending_NumericAggExp!
  originationDate: ConsumerLending_DateAggExp!
  verificationDate: ConsumerLending_DateAggExp!
  verificationStatus: ConsumerLending_ConsumerLendingVerificationStatusAggExp!
  willBePaidOff: ConsumerLending_BoolAggExp!
}

input ConsumerLending_ConsumerLendingApplicantLiabilitiesBoolExp {
  _and: [ConsumerLending_ConsumerLendingApplicantLiabilitiesBoolExp!]
  _not: ConsumerLending_ConsumerLendingApplicantLiabilitiesBoolExp
  _or: [ConsumerLending_ConsumerLendingApplicantLiabilitiesBoolExp!]
  accountNumber: ConsumerLending_VarcharBoolExp
  consumerLendingApplicant: ConsumerLending_ConsumerLendingApplicantsBoolExp
  consumerLendingApplicantId: ConsumerLending_Int4BoolExp
  consumerLendingLiabilityId: ConsumerLending_Int4BoolExp
  creditorName: ConsumerLending_VarcharBoolExp
  currentBalance: ConsumerLending_NumericBoolExp
  interestRate: ConsumerLending_NumericBoolExp
  liabilityType: ConsumerLending_ConsumerLendingLiabilityTypeBoolExp
  maturityDate: ConsumerLending_DateBoolExp
  monthlyPayment: ConsumerLending_NumericBoolExp
  originalAmount: ConsumerLending_NumericBoolExp
  originationDate: ConsumerLending_DateBoolExp
  verificationDate: ConsumerLending_DateBoolExp
  verificationStatus: ConsumerLending_ConsumerLendingVerificationStatusBoolExp
  willBePaidOff: ConsumerLending_BoolBoolExp
}

input ConsumerLending_ConsumerLendingApplicantLiabilitiesFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingApplicantLiabilitiesOrderByExp!]
  where: ConsumerLending_ConsumerLendingApplicantLiabilitiesBoolExp
}

input ConsumerLending_ConsumerLendingApplicantLiabilitiesOrderByExp {
  accountNumber: OrderBy
  consumerLendingApplicant: ConsumerLending_ConsumerLendingApplicantsOrderByExp
  consumerLendingApplicantId: OrderBy
  consumerLendingLiabilityId: OrderBy
  creditorName: OrderBy
  currentBalance: OrderBy
  interestRate: OrderBy
  liabilityType: OrderBy
  maturityDate: OrderBy
  monthlyPayment: OrderBy
  originalAmount: OrderBy
  originationDate: OrderBy
  verificationDate: OrderBy
  verificationStatus: OrderBy
  willBePaidOff: OrderBy
}

"""Stores personal and contact information for loan applicants."""
type ConsumerLending_ConsumerLendingApplicants {
  """US Citizen, Permanent Resident, etc."""
  citizenshipStatus: ConsumerLending_EnterpriseCitizenshipStatus!
  consumerLendingApplicantAssets(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingApplicantAssetsOrderByExp!], where: ConsumerLending_ConsumerLendingApplicantAssetsBoolExp): [ConsumerLending_ConsumerLendingApplicantAssets!]
  consumerLendingApplicantAssetsAggregate(filter_input: ConsumerLending_ConsumerLendingApplicantAssetsFilterInput): ConsumerLending_ConsumerLendingApplicantAssetsAggExp!
  consumerLendingApplicantEmployments(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingApplicantEmploymentsOrderByExp!], where: ConsumerLending_ConsumerLendingApplicantEmploymentsBoolExp): [ConsumerLending_ConsumerLendingApplicantEmployments!]
  consumerLendingApplicantEmploymentsAggregate(filter_input: ConsumerLending_ConsumerLendingApplicantEmploymentsFilterInput): ConsumerLending_ConsumerLendingApplicantEmploymentsAggExp!

  """Unique identifier for applicant, may link to parties table"""
  consumerLendingApplicantId: ConsumerLending_Int4!
  consumerLendingApplicantIncomes(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingApplicantIncomesOrderByExp!], where: ConsumerLending_ConsumerLendingApplicantIncomesBoolExp): [ConsumerLending_ConsumerLendingApplicantIncomes!]
  consumerLendingApplicantIncomesAggregate(filter_input: ConsumerLending_ConsumerLendingApplicantIncomesFilterInput): ConsumerLending_ConsumerLendingApplicantIncomesAggExp!
  consumerLendingApplicantLiabilities(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingApplicantLiabilitiesOrderByExp!], where: ConsumerLending_ConsumerLendingApplicantLiabilitiesBoolExp): [ConsumerLending_ConsumerLendingApplicantLiabilities!]
  consumerLendingApplicantLiabilitiesAggregate(filter_input: ConsumerLending_ConsumerLendingApplicantLiabilitiesFilterInput): ConsumerLending_ConsumerLendingApplicantLiabilitiesAggExp!
  consumerLendingApplicationApplicants(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingApplicationApplicantsOrderByExp!], where: ConsumerLending_ConsumerLendingApplicationApplicantsBoolExp): [ConsumerLending_ConsumerLendingApplicationApplicants!]
  consumerLendingApplicationApplicantsAggregate(filter_input: ConsumerLending_ConsumerLendingApplicationApplicantsFilterInput): ConsumerLending_ConsumerLendingApplicationApplicantsAggExp!
  consumerLendingCreditReports(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingCreditReportsOrderByExp!], where: ConsumerLending_ConsumerLendingCreditReportsBoolExp): [ConsumerLending_ConsumerLendingCreditReports!]
  consumerLendingCreditReportsAggregate(filter_input: ConsumerLending_ConsumerLendingCreditReportsFilterInput): ConsumerLending_ConsumerLendingCreditReportsAggExp!
  consumerLendingEcoaMonitorings(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingEcoaMonitoringOrderByExp!], where: ConsumerLending_ConsumerLendingEcoaMonitoringBoolExp): [ConsumerLending_ConsumerLendingEcoaMonitoring!]
  consumerLendingEcoaMonitoringsAggregate(filter_input: ConsumerLending_ConsumerLendingEcoaMonitoringFilterInput): ConsumerLending_ConsumerLendingEcoaMonitoringAggExp!
  consumerLendingMilitaryLendingChecks(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingMilitaryLendingChecksOrderByExp!], where: ConsumerLending_ConsumerLendingMilitaryLendingChecksBoolExp): [ConsumerLending_ConsumerLendingMilitaryLendingChecks!]
  consumerLendingMilitaryLendingChecksAggregate(filter_input: ConsumerLending_ConsumerLendingMilitaryLendingChecksFilterInput): ConsumerLending_ConsumerLendingMilitaryLendingChecksAggExp!
  currentAddress: Enterprise_EnterpriseAddresses

  """Reference to enterprise.addresses"""
  currentAddressId: ConsumerLending_Int4

  """Applicant's date of birth"""
  dateOfBirth: ConsumerLending_Date!

  """Primary email address"""
  email: ConsumerLending_Varchar!

  """Applicant's legal first name"""
  firstName: ConsumerLending_Varchar!

  """Current housing situation"""
  housingStatus: ConsumerLending_ConsumerLendingHousingStatus!

  """Applicant's legal last name"""
  lastName: ConsumerLending_Varchar!
  mailingAddress: Enterprise_EnterpriseAddresses

  """Reference to enterprise.addresses if different from current"""
  mailingAddressId: ConsumerLending_Int4

  """Married, Single, Divorced, etc."""
  maritalStatus: ConsumerLending_EnterpriseMaritalStatus

  """Applicant's middle name"""
  middleName: ConsumerLending_Varchar

  """Mobile phone number if different from primary"""
  mobilePhone: ConsumerLending_Varchar

  """Monthly housing payment amount"""
  monthlyHousingExpense: ConsumerLending_Numeric

  """Primary phone number"""
  phone: ConsumerLending_Varchar!
  previousAddress: Enterprise_EnterpriseAddresses

  """Reference to enterprise.addresses for previous residence"""
  previousAddressId: ConsumerLending_Int4

  """Social Security Number, stored encrypted"""
  ssn: ConsumerLending_Varchar!

  """Years at current residence"""
  yearsAtCurrentAddress: ConsumerLending_Int4
}

type ConsumerLending_ConsumerLendingApplicantsAggExp {
  _count: Int!
  citizenshipStatus: ConsumerLending_EnterpriseCitizenshipStatusAggExp!
  consumerLendingApplicantId: ConsumerLending_Int4AggExp!
  currentAddressId: ConsumerLending_Int4AggExp!
  dateOfBirth: ConsumerLending_DateAggExp!
  email: ConsumerLending_VarcharAggExp!
  firstName: ConsumerLending_VarcharAggExp!
  housingStatus: ConsumerLending_ConsumerLendingHousingStatusAggExp!
  lastName: ConsumerLending_VarcharAggExp!
  mailingAddressId: ConsumerLending_Int4AggExp!
  maritalStatus: ConsumerLending_EnterpriseMaritalStatusAggExp!
  middleName: ConsumerLending_VarcharAggExp!
  mobilePhone: ConsumerLending_VarcharAggExp!
  monthlyHousingExpense: ConsumerLending_NumericAggExp!
  phone: ConsumerLending_VarcharAggExp!
  previousAddressId: ConsumerLending_Int4AggExp!
  ssn: ConsumerLending_VarcharAggExp!
  yearsAtCurrentAddress: ConsumerLending_Int4AggExp!
}

input ConsumerLending_ConsumerLendingApplicantsBoolExp {
  _and: [ConsumerLending_ConsumerLendingApplicantsBoolExp!]
  _not: ConsumerLending_ConsumerLendingApplicantsBoolExp
  _or: [ConsumerLending_ConsumerLendingApplicantsBoolExp!]
  citizenshipStatus: ConsumerLending_EnterpriseCitizenshipStatusBoolExp
  consumerLendingApplicantAssets: ConsumerLending_ConsumerLendingApplicantAssetsBoolExp
  consumerLendingApplicantEmployments: ConsumerLending_ConsumerLendingApplicantEmploymentsBoolExp
  consumerLendingApplicantId: ConsumerLending_Int4BoolExp
  consumerLendingApplicantIncomes: ConsumerLending_ConsumerLendingApplicantIncomesBoolExp
  consumerLendingApplicantLiabilities: ConsumerLending_ConsumerLendingApplicantLiabilitiesBoolExp
  consumerLendingApplicationApplicants: ConsumerLending_ConsumerLendingApplicationApplicantsBoolExp
  consumerLendingCreditReports: ConsumerLending_ConsumerLendingCreditReportsBoolExp
  consumerLendingEcoaMonitorings: ConsumerLending_ConsumerLendingEcoaMonitoringBoolExp
  consumerLendingMilitaryLendingChecks: ConsumerLending_ConsumerLendingMilitaryLendingChecksBoolExp
  currentAddressId: ConsumerLending_Int4BoolExp
  dateOfBirth: ConsumerLending_DateBoolExp
  email: ConsumerLending_VarcharBoolExp
  firstName: ConsumerLending_VarcharBoolExp
  housingStatus: ConsumerLending_ConsumerLendingHousingStatusBoolExp
  lastName: ConsumerLending_VarcharBoolExp
  mailingAddressId: ConsumerLending_Int4BoolExp
  maritalStatus: ConsumerLending_EnterpriseMaritalStatusBoolExp
  middleName: ConsumerLending_VarcharBoolExp
  mobilePhone: ConsumerLending_VarcharBoolExp
  monthlyHousingExpense: ConsumerLending_NumericBoolExp
  phone: ConsumerLending_VarcharBoolExp
  previousAddressId: ConsumerLending_Int4BoolExp
  ssn: ConsumerLending_VarcharBoolExp
  yearsAtCurrentAddress: ConsumerLending_Int4BoolExp
}

input ConsumerLending_ConsumerLendingApplicantsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingApplicantsOrderByExp!]
  where: ConsumerLending_ConsumerLendingApplicantsBoolExp
}

input ConsumerLending_ConsumerLendingApplicantsOrderByExp {
  citizenshipStatus: OrderBy
  consumerLendingApplicantId: OrderBy
  currentAddressId: OrderBy
  dateOfBirth: OrderBy
  email: OrderBy
  firstName: OrderBy
  housingStatus: OrderBy
  lastName: OrderBy
  mailingAddressId: OrderBy
  maritalStatus: OrderBy
  middleName: OrderBy
  mobilePhone: OrderBy
  monthlyHousingExpense: OrderBy
  phone: OrderBy
  previousAddressId: OrderBy
  ssn: OrderBy
  yearsAtCurrentAddress: OrderBy
}

"""
Links loan applications to individual applicants, allowing for multiple applicants per application.
"""
type ConsumerLending_ConsumerLendingApplicationApplicants {
  """Primary, Co-Applicant, Guarantor"""
  applicantType: ConsumerLending_Varchar!
  consumerLendingApplicant: ConsumerLending_ConsumerLendingApplicants

  """Reference to applicant"""
  consumerLendingApplicantId: ConsumerLending_Int4!

  """Unique identifier for application-applicant relationship"""
  consumerLendingApplicationApplicantId: ConsumerLending_Int4!

  """Reference to loan application"""
  consumerLendingApplicationId: ConsumerLending_Int4!
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplications

  """Percentage of loan responsibility"""
  contributionPercentage: ConsumerLending_Numeric

  """Spouse, Relative, Friend, etc."""
  relationshipToPrimary: ConsumerLending_Varchar
}

type ConsumerLending_ConsumerLendingApplicationApplicantsAggExp {
  _count: Int!
  applicantType: ConsumerLending_VarcharAggExp!
  consumerLendingApplicantId: ConsumerLending_Int4AggExp!
  consumerLendingApplicationApplicantId: ConsumerLending_Int4AggExp!
  consumerLendingApplicationId: ConsumerLending_Int4AggExp!
  contributionPercentage: ConsumerLending_NumericAggExp!
  relationshipToPrimary: ConsumerLending_VarcharAggExp!
}

input ConsumerLending_ConsumerLendingApplicationApplicantsBoolExp {
  _and: [ConsumerLending_ConsumerLendingApplicationApplicantsBoolExp!]
  _not: ConsumerLending_ConsumerLendingApplicationApplicantsBoolExp
  _or: [ConsumerLending_ConsumerLendingApplicationApplicantsBoolExp!]
  applicantType: ConsumerLending_VarcharBoolExp
  consumerLendingApplicant: ConsumerLending_ConsumerLendingApplicantsBoolExp
  consumerLendingApplicantId: ConsumerLending_Int4BoolExp
  consumerLendingApplicationApplicantId: ConsumerLending_Int4BoolExp
  consumerLendingApplicationId: ConsumerLending_Int4BoolExp
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplicationsBoolExp
  contributionPercentage: ConsumerLending_NumericBoolExp
  relationshipToPrimary: ConsumerLending_VarcharBoolExp
}

input ConsumerLending_ConsumerLendingApplicationApplicantsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingApplicationApplicantsOrderByExp!]
  where: ConsumerLending_ConsumerLendingApplicationApplicantsBoolExp
}

input ConsumerLending_ConsumerLendingApplicationApplicantsOrderByExp {
  applicantType: OrderBy
  consumerLendingApplicant: ConsumerLending_ConsumerLendingApplicantsOrderByExp
  consumerLendingApplicantId: OrderBy
  consumerLendingApplicationApplicantId: OrderBy
  consumerLendingApplicationId: OrderBy
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplicationsOrderByExp
  contributionPercentage: OrderBy
  relationshipToPrimary: OrderBy
}

"""
Records the decisions made on loan applications, including approvals, denials, and pre-qualifications.
"""
type ConsumerLending_ConsumerLendingApplicationDecisions {
  """Approved loan amount"""
  approvedAmount: ConsumerLending_Numeric

  """Approved interest rate"""
  approvedInterestRate: ConsumerLending_Numeric

  """Estimated monthly payment"""
  approvedMonthlyPayment: ConsumerLending_Numeric

  """Approved loan term in months"""
  approvedTermMonths: ConsumerLending_Int4

  """Whether approval has conditions"""
  conditionalApproval: ConsumerLending_Bool

  """Reference to loan application"""
  consumerLendingApplicationId: ConsumerLending_Int4!

  """Unique identifier for decision"""
  consumerLendingDecisionId: ConsumerLending_Int4!
  consumerLendingDecisionModel: ConsumerLending_ConsumerLendingDecisionModels
  consumerLendingDecisionReasons(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingDecisionReasonsOrderByExp!], where: ConsumerLending_ConsumerLendingDecisionReasonsBoolExp): [ConsumerLending_ConsumerLendingDecisionReasons!]
  consumerLendingDecisionReasonsAggregate(filter_input: ConsumerLending_ConsumerLendingDecisionReasonsFilterInput): ConsumerLending_ConsumerLendingDecisionReasonsAggExp!
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplications

  """Reference to decision model used"""
  consumerLendingModelId: ConsumerLending_Int4

  """Reference to pricing tier if approved"""
  consumerLendingPricingTierId: ConsumerLending_Int4
  consumerLendingRiskBasedPricingTier: ConsumerLending_ConsumerLendingRiskBasedPricingTiers

  """User that made decision"""
  decisionById: ConsumerLending_Int4

  """When decision was made"""
  decisionDateTime: ConsumerLending_Timestamptz!

  """Result of the decision"""
  decisionResult: ConsumerLending_ConsumerLendingDecisionResult!

  """Numeric score from decision model"""
  decisionScore: ConsumerLending_Numeric

  """Type of decision"""
  decisionType: ConsumerLending_ConsumerLendingDecisionType!

  """When approval or prequalification expires"""
  expiresDate: ConsumerLending_Date

  """Additional decision notes"""
  notes: ConsumerLending_Text
}

type ConsumerLending_ConsumerLendingApplicationDecisionsAggExp {
  _count: Int!
  approvedAmount: ConsumerLending_NumericAggExp!
  approvedInterestRate: ConsumerLending_NumericAggExp!
  approvedMonthlyPayment: ConsumerLending_NumericAggExp!
  approvedTermMonths: ConsumerLending_Int4AggExp!
  conditionalApproval: ConsumerLending_BoolAggExp!
  consumerLendingApplicationId: ConsumerLending_Int4AggExp!
  consumerLendingDecisionId: ConsumerLending_Int4AggExp!
  consumerLendingModelId: ConsumerLending_Int4AggExp!
  consumerLendingPricingTierId: ConsumerLending_Int4AggExp!
  decisionById: ConsumerLending_Int4AggExp!
  decisionDateTime: ConsumerLending_TimestamptzAggExp!
  decisionResult: ConsumerLending_ConsumerLendingDecisionResultAggExp!
  decisionScore: ConsumerLending_NumericAggExp!
  decisionType: ConsumerLending_ConsumerLendingDecisionTypeAggExp!
  expiresDate: ConsumerLending_DateAggExp!
  notes: ConsumerLending_TextAggExp!
}

input ConsumerLending_ConsumerLendingApplicationDecisionsBoolExp {
  _and: [ConsumerLending_ConsumerLendingApplicationDecisionsBoolExp!]
  _not: ConsumerLending_ConsumerLendingApplicationDecisionsBoolExp
  _or: [ConsumerLending_ConsumerLendingApplicationDecisionsBoolExp!]
  approvedAmount: ConsumerLending_NumericBoolExp
  approvedInterestRate: ConsumerLending_NumericBoolExp
  approvedMonthlyPayment: ConsumerLending_NumericBoolExp
  approvedTermMonths: ConsumerLending_Int4BoolExp
  conditionalApproval: ConsumerLending_BoolBoolExp
  consumerLendingApplicationId: ConsumerLending_Int4BoolExp
  consumerLendingDecisionId: ConsumerLending_Int4BoolExp
  consumerLendingDecisionModel: ConsumerLending_ConsumerLendingDecisionModelsBoolExp
  consumerLendingDecisionReasons: ConsumerLending_ConsumerLendingDecisionReasonsBoolExp
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplicationsBoolExp
  consumerLendingModelId: ConsumerLending_Int4BoolExp
  consumerLendingPricingTierId: ConsumerLending_Int4BoolExp
  consumerLendingRiskBasedPricingTier: ConsumerLending_ConsumerLendingRiskBasedPricingTiersBoolExp
  decisionById: ConsumerLending_Int4BoolExp
  decisionDateTime: ConsumerLending_TimestamptzBoolExp
  decisionResult: ConsumerLending_ConsumerLendingDecisionResultBoolExp
  decisionScore: ConsumerLending_NumericBoolExp
  decisionType: ConsumerLending_ConsumerLendingDecisionTypeBoolExp
  expiresDate: ConsumerLending_DateBoolExp
  notes: ConsumerLending_TextBoolExp
}

input ConsumerLending_ConsumerLendingApplicationDecisionsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingApplicationDecisionsOrderByExp!]
  where: ConsumerLending_ConsumerLendingApplicationDecisionsBoolExp
}

input ConsumerLending_ConsumerLendingApplicationDecisionsOrderByExp {
  approvedAmount: OrderBy
  approvedInterestRate: OrderBy
  approvedMonthlyPayment: OrderBy
  approvedTermMonths: OrderBy
  conditionalApproval: OrderBy
  consumerLendingApplicationId: OrderBy
  consumerLendingDecisionId: OrderBy
  consumerLendingDecisionModel: ConsumerLending_ConsumerLendingDecisionModelsOrderByExp
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplicationsOrderByExp
  consumerLendingModelId: OrderBy
  consumerLendingPricingTierId: OrderBy
  consumerLendingRiskBasedPricingTier: ConsumerLending_ConsumerLendingRiskBasedPricingTiersOrderByExp
  decisionById: OrderBy
  decisionDateTime: OrderBy
  decisionResult: OrderBy
  decisionScore: OrderBy
  decisionType: OrderBy
  expiresDate: OrderBy
  notes: OrderBy
}

"""
Manages appraisal disclosures provided to loan applicants, including the type of appraisal and its value.
"""
type ConsumerLending_ConsumerLendingAppraisalDisclosures {
  """Date appraisal was ordered"""
  appraisalOrderedDate: ConsumerLending_Date

  """Date appraisal was provided to applicant"""
  appraisalProvidedDate: ConsumerLending_Date

  """Date appraisal was received"""
  appraisalReceivedDate: ConsumerLending_Date

  """Full Appraisal, AVM, BPO, etc."""
  appraisalType: ConsumerLending_Varchar

  """Appraised value if known"""
  appraisalValue: ConsumerLending_Numeric

  """Whether appraisal was waived"""
  appraisalWaiver: ConsumerLending_Bool!

  """Reference to loan application"""
  consumerLendingApplicationId: ConsumerLending_Int4!

  """Unique identifier for appraisal disclosure"""
  consumerLendingDisclosureId: ConsumerLending_Int4!
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplications

  """Email, Mail, Electronic"""
  deliveryMethod: ConsumerLending_Varchar!

  """Date disclosure was generated"""
  disclosureDate: ConsumerLending_Timestamptz!

  """Initial Disclosure, Final Disclosure"""
  disclosureType: ConsumerLending_Varchar!
  disclosureUser: Enterprise_EnterpriseAssociates

  """Path to stored disclosure document"""
  documentPath: ConsumerLending_Varchar
  propertyAddress: Enterprise_EnterpriseAddresses

  """Reference to enterprise.addresses"""
  propertyAddressId: ConsumerLending_Int4!

  """Date disclosure was sent"""
  sentDate: ConsumerLending_Timestamptz!

  """User who generated disclosure"""
  userId: ConsumerLending_Int4

  """Reason for waiver if applicable"""
  waiverReason: ConsumerLending_Varchar
}

type ConsumerLending_ConsumerLendingAppraisalDisclosuresAggExp {
  _count: Int!
  appraisalOrderedDate: ConsumerLending_DateAggExp!
  appraisalProvidedDate: ConsumerLending_DateAggExp!
  appraisalReceivedDate: ConsumerLending_DateAggExp!
  appraisalType: ConsumerLending_VarcharAggExp!
  appraisalValue: ConsumerLending_NumericAggExp!
  appraisalWaiver: ConsumerLending_BoolAggExp!
  consumerLendingApplicationId: ConsumerLending_Int4AggExp!
  consumerLendingDisclosureId: ConsumerLending_Int4AggExp!
  deliveryMethod: ConsumerLending_VarcharAggExp!
  disclosureDate: ConsumerLending_TimestamptzAggExp!
  disclosureType: ConsumerLending_VarcharAggExp!
  documentPath: ConsumerLending_VarcharAggExp!
  propertyAddressId: ConsumerLending_Int4AggExp!
  sentDate: ConsumerLending_TimestamptzAggExp!
  userId: ConsumerLending_Int4AggExp!
  waiverReason: ConsumerLending_VarcharAggExp!
}

input ConsumerLending_ConsumerLendingAppraisalDisclosuresBoolExp {
  _and: [ConsumerLending_ConsumerLendingAppraisalDisclosuresBoolExp!]
  _not: ConsumerLending_ConsumerLendingAppraisalDisclosuresBoolExp
  _or: [ConsumerLending_ConsumerLendingAppraisalDisclosuresBoolExp!]
  appraisalOrderedDate: ConsumerLending_DateBoolExp
  appraisalProvidedDate: ConsumerLending_DateBoolExp
  appraisalReceivedDate: ConsumerLending_DateBoolExp
  appraisalType: ConsumerLending_VarcharBoolExp
  appraisalValue: ConsumerLending_NumericBoolExp
  appraisalWaiver: ConsumerLending_BoolBoolExp
  consumerLendingApplicationId: ConsumerLending_Int4BoolExp
  consumerLendingDisclosureId: ConsumerLending_Int4BoolExp
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplicationsBoolExp
  deliveryMethod: ConsumerLending_VarcharBoolExp
  disclosureDate: ConsumerLending_TimestamptzBoolExp
  disclosureType: ConsumerLending_VarcharBoolExp
  documentPath: ConsumerLending_VarcharBoolExp
  propertyAddressId: ConsumerLending_Int4BoolExp
  sentDate: ConsumerLending_TimestamptzBoolExp
  userId: ConsumerLending_Int4BoolExp
  waiverReason: ConsumerLending_VarcharBoolExp
}

input ConsumerLending_ConsumerLendingAppraisalDisclosuresFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingAppraisalDisclosuresOrderByExp!]
  where: ConsumerLending_ConsumerLendingAppraisalDisclosuresBoolExp
}

input ConsumerLending_ConsumerLendingAppraisalDisclosuresOrderByExp {
  appraisalOrderedDate: OrderBy
  appraisalProvidedDate: OrderBy
  appraisalReceivedDate: OrderBy
  appraisalType: OrderBy
  appraisalValue: OrderBy
  appraisalWaiver: OrderBy
  consumerLendingApplicationId: OrderBy
  consumerLendingDisclosureId: OrderBy
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplicationsOrderByExp
  deliveryMethod: OrderBy
  disclosureDate: OrderBy
  disclosureType: OrderBy
  documentPath: OrderBy
  propertyAddressId: OrderBy
  sentDate: OrderBy
  userId: OrderBy
  waiverReason: OrderBy
}

scalar ConsumerLending_ConsumerLendingAssetType

type ConsumerLending_ConsumerLendingAssetTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingAssetType
  min: ConsumerLending_ConsumerLendingAssetType
}

input ConsumerLending_ConsumerLendingAssetTypeBoolExp {
  _and: [ConsumerLending_ConsumerLendingAssetTypeBoolExp!]
  _eq: ConsumerLending_ConsumerLendingAssetType
  _gt: ConsumerLending_ConsumerLendingAssetType
  _gte: ConsumerLending_ConsumerLendingAssetType
  _in: [ConsumerLending_ConsumerLendingAssetType!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingAssetType
  _lte: ConsumerLending_ConsumerLendingAssetType
  _neq: ConsumerLending_ConsumerLendingAssetType
  _not: ConsumerLending_ConsumerLendingAssetTypeBoolExp
  _or: [ConsumerLending_ConsumerLendingAssetTypeBoolExp!]
}

scalar ConsumerLending_ConsumerLendingCollateralType

type ConsumerLending_ConsumerLendingCollateralTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingCollateralType
  min: ConsumerLending_ConsumerLendingCollateralType
}

input ConsumerLending_ConsumerLendingCollateralTypeBoolExp {
  _and: [ConsumerLending_ConsumerLendingCollateralTypeBoolExp!]
  _eq: ConsumerLending_ConsumerLendingCollateralType
  _gt: ConsumerLending_ConsumerLendingCollateralType
  _gte: ConsumerLending_ConsumerLendingCollateralType
  _in: [ConsumerLending_ConsumerLendingCollateralType!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingCollateralType
  _lte: ConsumerLending_ConsumerLendingCollateralType
  _neq: ConsumerLending_ConsumerLendingCollateralType
  _not: ConsumerLending_ConsumerLendingCollateralTypeBoolExp
  _or: [ConsumerLending_ConsumerLendingCollateralTypeBoolExp!]
}

"""
Tracks accounts that have been placed in collections, including delinquency details and collection actions.
"""
type ConsumerLending_ConsumerLendingCollectionAccounts {
  """Total amount past due"""
  amountPastDue: ConsumerLending_Numeric!

  """Date account was placed in collections"""
  assignedDate: ConsumerLending_Date!

  """Collector assigned to account"""
  assignedTo: ConsumerLending_Varchar
  consumerLendingCollectionActions(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingCollectionActionsOrderByExp!], where: ConsumerLending_ConsumerLendingCollectionActionsBoolExp): [ConsumerLending_ConsumerLendingCollectionActions!]
  consumerLendingCollectionActionsAggregate(filter_input: ConsumerLending_ConsumerLendingCollectionActionsFilterInput): ConsumerLending_ConsumerLendingCollectionActionsAggExp!

  """Unique identifier for collection record"""
  consumerLendingCollectionId: ConsumerLending_Int4!
  consumerLendingLoanAccount: ConsumerLending_ConsumerLendingLoanAccounts
  consumerLendingPaymentArrangements(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingPaymentArrangementsOrderByExp!], where: ConsumerLending_ConsumerLendingPaymentArrangementsBoolExp): [ConsumerLending_ConsumerLendingPaymentArrangements!]
  consumerLendingPaymentArrangementsAggregate(filter_input: ConsumerLending_ConsumerLendingPaymentArrangementsFilterInput): ConsumerLending_ConsumerLendingPaymentArrangementsAggExp!

  """Current days delinquent"""
  daysDelinquent: ConsumerLending_Int4!

  """First date of delinquency"""
  delinquencyDate: ConsumerLending_Date!

  """Customer-provided reason for delinquency"""
  delinquencyReason: ConsumerLending_Varchar

  """Date of most recent action taken"""
  lastActionDate: ConsumerLending_Date

  """Reference to loan account"""
  loanAccountId: ConsumerLending_Int4!

  """Date of next scheduled action"""
  nextActionDate: ConsumerLending_Date

  """Priority level of the collection account"""
  priority: ConsumerLending_ConsumerLendingCollectionPriority

  """Date collection was resolved"""
  resolutionDate: ConsumerLending_Date

  """Type of resolution for the collection account"""
  resolutionType: ConsumerLending_ConsumerLendingCollectionResolutionType

  """Current status of collection account"""
  status: ConsumerLending_ConsumerLendingCollectionStatus!
}

type ConsumerLending_ConsumerLendingCollectionAccountsAggExp {
  _count: Int!
  amountPastDue: ConsumerLending_NumericAggExp!
  assignedDate: ConsumerLending_DateAggExp!
  assignedTo: ConsumerLending_VarcharAggExp!
  consumerLendingCollectionId: ConsumerLending_Int4AggExp!
  daysDelinquent: ConsumerLending_Int4AggExp!
  delinquencyDate: ConsumerLending_DateAggExp!
  delinquencyReason: ConsumerLending_VarcharAggExp!
  lastActionDate: ConsumerLending_DateAggExp!
  loanAccountId: ConsumerLending_Int4AggExp!
  nextActionDate: ConsumerLending_DateAggExp!
  priority: ConsumerLending_ConsumerLendingCollectionPriorityAggExp!
  resolutionDate: ConsumerLending_DateAggExp!
  resolutionType: ConsumerLending_ConsumerLendingCollectionResolutionTypeAggExp!
  status: ConsumerLending_ConsumerLendingCollectionStatusAggExp!
}

input ConsumerLending_ConsumerLendingCollectionAccountsBoolExp {
  _and: [ConsumerLending_ConsumerLendingCollectionAccountsBoolExp!]
  _not: ConsumerLending_ConsumerLendingCollectionAccountsBoolExp
  _or: [ConsumerLending_ConsumerLendingCollectionAccountsBoolExp!]
  amountPastDue: ConsumerLending_NumericBoolExp
  assignedDate: ConsumerLending_DateBoolExp
  assignedTo: ConsumerLending_VarcharBoolExp
  consumerLendingCollectionActions: ConsumerLending_ConsumerLendingCollectionActionsBoolExp
  consumerLendingCollectionId: ConsumerLending_Int4BoolExp
  consumerLendingLoanAccount: ConsumerLending_ConsumerLendingLoanAccountsBoolExp
  consumerLendingPaymentArrangements: ConsumerLending_ConsumerLendingPaymentArrangementsBoolExp
  daysDelinquent: ConsumerLending_Int4BoolExp
  delinquencyDate: ConsumerLending_DateBoolExp
  delinquencyReason: ConsumerLending_VarcharBoolExp
  lastActionDate: ConsumerLending_DateBoolExp
  loanAccountId: ConsumerLending_Int4BoolExp
  nextActionDate: ConsumerLending_DateBoolExp
  priority: ConsumerLending_ConsumerLendingCollectionPriorityBoolExp
  resolutionDate: ConsumerLending_DateBoolExp
  resolutionType: ConsumerLending_ConsumerLendingCollectionResolutionTypeBoolExp
  status: ConsumerLending_ConsumerLendingCollectionStatusBoolExp
}

input ConsumerLending_ConsumerLendingCollectionAccountsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingCollectionAccountsOrderByExp!]
  where: ConsumerLending_ConsumerLendingCollectionAccountsBoolExp
}

input ConsumerLending_ConsumerLendingCollectionAccountsOrderByExp {
  amountPastDue: OrderBy
  assignedDate: OrderBy
  assignedTo: OrderBy
  consumerLendingCollectionId: OrderBy
  consumerLendingLoanAccount: ConsumerLending_ConsumerLendingLoanAccountsOrderByExp
  daysDelinquent: OrderBy
  delinquencyDate: OrderBy
  delinquencyReason: OrderBy
  lastActionDate: OrderBy
  loanAccountId: OrderBy
  nextActionDate: OrderBy
  priority: OrderBy
  resolutionDate: OrderBy
  resolutionType: OrderBy
  status: OrderBy
}

scalar ConsumerLending_ConsumerLendingCollectionActionResult

type ConsumerLending_ConsumerLendingCollectionActionResultAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingCollectionActionResult
  min: ConsumerLending_ConsumerLendingCollectionActionResult
}

input ConsumerLending_ConsumerLendingCollectionActionResultBoolExp {
  _and: [ConsumerLending_ConsumerLendingCollectionActionResultBoolExp!]
  _eq: ConsumerLending_ConsumerLendingCollectionActionResult
  _gt: ConsumerLending_ConsumerLendingCollectionActionResult
  _gte: ConsumerLending_ConsumerLendingCollectionActionResult
  _in: [ConsumerLending_ConsumerLendingCollectionActionResult!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingCollectionActionResult
  _lte: ConsumerLending_ConsumerLendingCollectionActionResult
  _neq: ConsumerLending_ConsumerLendingCollectionActionResult
  _not: ConsumerLending_ConsumerLendingCollectionActionResultBoolExp
  _or: [ConsumerLending_ConsumerLendingCollectionActionResultBoolExp!]
}

"""
Logs specific actions taken to collect on delinquent loan accounts, such as calls, letters, and emails.
"""
type ConsumerLending_ConsumerLendingCollectionActions {
  """User who performed action"""
  actionById: ConsumerLending_Int4!

  """Date/time action was taken"""
  actionDate: ConsumerLending_Timestamptz!

  """Result of the collection action"""
  actionResult: ConsumerLending_ConsumerLendingCollectionActionResult

  """Type of collection action"""
  actionType: ConsumerLending_ConsumerLendingCollectionActionType!

  """Unique identifier for collection action"""
  consumerLendingActionId: ConsumerLending_Int4!
  consumerLendingCollectionAccount: ConsumerLending_ConsumerLendingCollectionAccounts

  """Reference to collection account"""
  consumerLendingCollectionId: ConsumerLending_Int4!

  """Date for next planned action"""
  nextActionDate: ConsumerLending_Date

  """Type of next planned action"""
  nextActionType: ConsumerLending_ConsumerLendingNextCollectionActionType

  """Details of action and outcome"""
  notes: ConsumerLending_Text

  """Amount customer promised to pay"""
  promiseToPayAmount: ConsumerLending_Numeric

  """Date customer promised to pay by"""
  promiseToPayDate: ConsumerLending_Date
}

type ConsumerLending_ConsumerLendingCollectionActionsAggExp {
  _count: Int!
  actionById: ConsumerLending_Int4AggExp!
  actionDate: ConsumerLending_TimestamptzAggExp!
  actionResult: ConsumerLending_ConsumerLendingCollectionActionResultAggExp!
  actionType: ConsumerLending_ConsumerLendingCollectionActionTypeAggExp!
  consumerLendingActionId: ConsumerLending_Int4AggExp!
  consumerLendingCollectionId: ConsumerLending_Int4AggExp!
  nextActionDate: ConsumerLending_DateAggExp!
  nextActionType: ConsumerLending_ConsumerLendingNextCollectionActionTypeAggExp!
  notes: ConsumerLending_TextAggExp!
  promiseToPayAmount: ConsumerLending_NumericAggExp!
  promiseToPayDate: ConsumerLending_DateAggExp!
}

input ConsumerLending_ConsumerLendingCollectionActionsBoolExp {
  _and: [ConsumerLending_ConsumerLendingCollectionActionsBoolExp!]
  _not: ConsumerLending_ConsumerLendingCollectionActionsBoolExp
  _or: [ConsumerLending_ConsumerLendingCollectionActionsBoolExp!]
  actionById: ConsumerLending_Int4BoolExp
  actionDate: ConsumerLending_TimestamptzBoolExp
  actionResult: ConsumerLending_ConsumerLendingCollectionActionResultBoolExp
  actionType: ConsumerLending_ConsumerLendingCollectionActionTypeBoolExp
  consumerLendingActionId: ConsumerLending_Int4BoolExp
  consumerLendingCollectionAccount: ConsumerLending_ConsumerLendingCollectionAccountsBoolExp
  consumerLendingCollectionId: ConsumerLending_Int4BoolExp
  nextActionDate: ConsumerLending_DateBoolExp
  nextActionType: ConsumerLending_ConsumerLendingNextCollectionActionTypeBoolExp
  notes: ConsumerLending_TextBoolExp
  promiseToPayAmount: ConsumerLending_NumericBoolExp
  promiseToPayDate: ConsumerLending_DateBoolExp
}

input ConsumerLending_ConsumerLendingCollectionActionsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingCollectionActionsOrderByExp!]
  where: ConsumerLending_ConsumerLendingCollectionActionsBoolExp
}

input ConsumerLending_ConsumerLendingCollectionActionsOrderByExp {
  actionById: OrderBy
  actionDate: OrderBy
  actionResult: OrderBy
  actionType: OrderBy
  consumerLendingActionId: OrderBy
  consumerLendingCollectionAccount: ConsumerLending_ConsumerLendingCollectionAccountsOrderByExp
  consumerLendingCollectionId: OrderBy
  nextActionDate: OrderBy
  nextActionType: OrderBy
  notes: OrderBy
  promiseToPayAmount: OrderBy
  promiseToPayDate: OrderBy
}

scalar ConsumerLending_ConsumerLendingCollectionActionType

type ConsumerLending_ConsumerLendingCollectionActionTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingCollectionActionType
  min: ConsumerLending_ConsumerLendingCollectionActionType
}

input ConsumerLending_ConsumerLendingCollectionActionTypeBoolExp {
  _and: [ConsumerLending_ConsumerLendingCollectionActionTypeBoolExp!]
  _eq: ConsumerLending_ConsumerLendingCollectionActionType
  _gt: ConsumerLending_ConsumerLendingCollectionActionType
  _gte: ConsumerLending_ConsumerLendingCollectionActionType
  _in: [ConsumerLending_ConsumerLendingCollectionActionType!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingCollectionActionType
  _lte: ConsumerLending_ConsumerLendingCollectionActionType
  _neq: ConsumerLending_ConsumerLendingCollectionActionType
  _not: ConsumerLending_ConsumerLendingCollectionActionTypeBoolExp
  _or: [ConsumerLending_ConsumerLendingCollectionActionTypeBoolExp!]
}

scalar ConsumerLending_ConsumerLendingCollectionPriority

type ConsumerLending_ConsumerLendingCollectionPriorityAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingCollectionPriority
  min: ConsumerLending_ConsumerLendingCollectionPriority
}

input ConsumerLending_ConsumerLendingCollectionPriorityBoolExp {
  _and: [ConsumerLending_ConsumerLendingCollectionPriorityBoolExp!]
  _eq: ConsumerLending_ConsumerLendingCollectionPriority
  _gt: ConsumerLending_ConsumerLendingCollectionPriority
  _gte: ConsumerLending_ConsumerLendingCollectionPriority
  _in: [ConsumerLending_ConsumerLendingCollectionPriority!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingCollectionPriority
  _lte: ConsumerLending_ConsumerLendingCollectionPriority
  _neq: ConsumerLending_ConsumerLendingCollectionPriority
  _not: ConsumerLending_ConsumerLendingCollectionPriorityBoolExp
  _or: [ConsumerLending_ConsumerLendingCollectionPriorityBoolExp!]
}

scalar ConsumerLending_ConsumerLendingCollectionResolutionType

type ConsumerLending_ConsumerLendingCollectionResolutionTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingCollectionResolutionType
  min: ConsumerLending_ConsumerLendingCollectionResolutionType
}

input ConsumerLending_ConsumerLendingCollectionResolutionTypeBoolExp {
  _and: [ConsumerLending_ConsumerLendingCollectionResolutionTypeBoolExp!]
  _eq: ConsumerLending_ConsumerLendingCollectionResolutionType
  _gt: ConsumerLending_ConsumerLendingCollectionResolutionType
  _gte: ConsumerLending_ConsumerLendingCollectionResolutionType
  _in: [ConsumerLending_ConsumerLendingCollectionResolutionType!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingCollectionResolutionType
  _lte: ConsumerLending_ConsumerLendingCollectionResolutionType
  _neq: ConsumerLending_ConsumerLendingCollectionResolutionType
  _not: ConsumerLending_ConsumerLendingCollectionResolutionTypeBoolExp
  _or: [ConsumerLending_ConsumerLendingCollectionResolutionTypeBoolExp!]
}

scalar ConsumerLending_ConsumerLendingCollectionStatus

type ConsumerLending_ConsumerLendingCollectionStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingCollectionStatus
  min: ConsumerLending_ConsumerLendingCollectionStatus
}

input ConsumerLending_ConsumerLendingCollectionStatusBoolExp {
  _and: [ConsumerLending_ConsumerLendingCollectionStatusBoolExp!]
  _eq: ConsumerLending_ConsumerLendingCollectionStatus
  _gt: ConsumerLending_ConsumerLendingCollectionStatus
  _gte: ConsumerLending_ConsumerLendingCollectionStatus
  _in: [ConsumerLending_ConsumerLendingCollectionStatus!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingCollectionStatus
  _lte: ConsumerLending_ConsumerLendingCollectionStatus
  _neq: ConsumerLending_ConsumerLendingCollectionStatus
  _not: ConsumerLending_ConsumerLendingCollectionStatusBoolExp
  _or: [ConsumerLending_ConsumerLendingCollectionStatusBoolExp!]
}

scalar ConsumerLending_ConsumerLendingCommunicationContext

type ConsumerLending_ConsumerLendingCommunicationContextAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingCommunicationContext
  min: ConsumerLending_ConsumerLendingCommunicationContext
}

input ConsumerLending_ConsumerLendingCommunicationContextBoolExp {
  _and: [ConsumerLending_ConsumerLendingCommunicationContextBoolExp!]
  _eq: ConsumerLending_ConsumerLendingCommunicationContext
  _gt: ConsumerLending_ConsumerLendingCommunicationContext
  _gte: ConsumerLending_ConsumerLendingCommunicationContext
  _in: [ConsumerLending_ConsumerLendingCommunicationContext!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingCommunicationContext
  _lte: ConsumerLending_ConsumerLendingCommunicationContext
  _neq: ConsumerLending_ConsumerLendingCommunicationContext
  _not: ConsumerLending_ConsumerLendingCommunicationContextBoolExp
  _or: [ConsumerLending_ConsumerLendingCommunicationContextBoolExp!]
}

scalar ConsumerLending_ConsumerLendingCommunicationDirection

type ConsumerLending_ConsumerLendingCommunicationDirectionAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingCommunicationDirection
  min: ConsumerLending_ConsumerLendingCommunicationDirection
}

input ConsumerLending_ConsumerLendingCommunicationDirectionBoolExp {
  _and: [ConsumerLending_ConsumerLendingCommunicationDirectionBoolExp!]
  _eq: ConsumerLending_ConsumerLendingCommunicationDirection
  _gt: ConsumerLending_ConsumerLendingCommunicationDirection
  _gte: ConsumerLending_ConsumerLendingCommunicationDirection
  _in: [ConsumerLending_ConsumerLendingCommunicationDirection!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingCommunicationDirection
  _lte: ConsumerLending_ConsumerLendingCommunicationDirection
  _neq: ConsumerLending_ConsumerLendingCommunicationDirection
  _not: ConsumerLending_ConsumerLendingCommunicationDirectionBoolExp
  _or: [ConsumerLending_ConsumerLendingCommunicationDirectionBoolExp!]
}

scalar ConsumerLending_ConsumerLendingCommunicationStatus

type ConsumerLending_ConsumerLendingCommunicationStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingCommunicationStatus
  min: ConsumerLending_ConsumerLendingCommunicationStatus
}

input ConsumerLending_ConsumerLendingCommunicationStatusBoolExp {
  _and: [ConsumerLending_ConsumerLendingCommunicationStatusBoolExp!]
  _eq: ConsumerLending_ConsumerLendingCommunicationStatus
  _gt: ConsumerLending_ConsumerLendingCommunicationStatus
  _gte: ConsumerLending_ConsumerLendingCommunicationStatus
  _in: [ConsumerLending_ConsumerLendingCommunicationStatus!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingCommunicationStatus
  _lte: ConsumerLending_ConsumerLendingCommunicationStatus
  _neq: ConsumerLending_ConsumerLendingCommunicationStatus
  _not: ConsumerLending_ConsumerLendingCommunicationStatusBoolExp
  _or: [ConsumerLending_ConsumerLendingCommunicationStatusBoolExp!]
}

scalar ConsumerLending_ConsumerLendingCommunicationType

type ConsumerLending_ConsumerLendingCommunicationTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingCommunicationType
  min: ConsumerLending_ConsumerLendingCommunicationType
}

input ConsumerLending_ConsumerLendingCommunicationTypeBoolExp {
  _and: [ConsumerLending_ConsumerLendingCommunicationTypeBoolExp!]
  _eq: ConsumerLending_ConsumerLendingCommunicationType
  _gt: ConsumerLending_ConsumerLendingCommunicationType
  _gte: ConsumerLending_ConsumerLendingCommunicationType
  _in: [ConsumerLending_ConsumerLendingCommunicationType!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingCommunicationType
  _lte: ConsumerLending_ConsumerLendingCommunicationType
  _neq: ConsumerLending_ConsumerLendingCommunicationType
  _not: ConsumerLending_ConsumerLendingCommunicationTypeBoolExp
  _or: [ConsumerLending_ConsumerLendingCommunicationTypeBoolExp!]
}

"""
Tracks compliance exceptions and issues encountered during the lending process, including remediation efforts.
"""
type ConsumerLending_ConsumerLendingComplianceExceptions {
  """Reference to loan application if applicable"""
  consumerLendingApplicationId: ConsumerLending_Int4

  """Unique identifier for exception"""
  consumerLendingExceptionId: ConsumerLending_Int4!
  consumerLendingLoanAccount: ConsumerLending_ConsumerLendingLoanAccounts
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplications

  """Detailed description of exception"""
  description: ConsumerLending_Text!

  """Date exception was identified"""
  exceptionDate: ConsumerLending_Timestamptz!
  exceptionRemediatedBy: Enterprise_EnterpriseAssociates

  """Documentation, Disclosure, Timing, etc."""
  exceptionType: ConsumerLending_Varchar!

  """Person that identified exception"""
  identifiedById: ConsumerLending_Int4!

  """Reference to loan account if applicable"""
  loanAccountId: ConsumerLending_Int4

  """Additional exception notes"""
  notes: ConsumerLending_Text

  """Action to prevent recurrence"""
  preventiveAction: ConsumerLending_Text

  """Reg Z, Reg B, FCRA, etc."""
  regulation: ConsumerLending_Varchar!

  """Person who remediated exception"""
  remediatedById: ConsumerLending_Int4

  """Date remediation completed"""
  remediationDate: ConsumerLending_Date

  """Plan to address exception"""
  remediationPlan: ConsumerLending_Text

  """Identified root cause"""
  rootCause: ConsumerLending_Text

  """High, Medium, Low"""
  severity: ConsumerLending_Varchar!

  """Open, In Remediation, Closed"""
  status: ConsumerLending_Varchar!
}

type ConsumerLending_ConsumerLendingComplianceExceptionsAggExp {
  _count: Int!
  consumerLendingApplicationId: ConsumerLending_Int4AggExp!
  consumerLendingExceptionId: ConsumerLending_Int4AggExp!
  description: ConsumerLending_TextAggExp!
  exceptionDate: ConsumerLending_TimestamptzAggExp!
  exceptionType: ConsumerLending_VarcharAggExp!
  identifiedById: ConsumerLending_Int4AggExp!
  loanAccountId: ConsumerLending_Int4AggExp!
  notes: ConsumerLending_TextAggExp!
  preventiveAction: ConsumerLending_TextAggExp!
  regulation: ConsumerLending_VarcharAggExp!
  remediatedById: ConsumerLending_Int4AggExp!
  remediationDate: ConsumerLending_DateAggExp!
  remediationPlan: ConsumerLending_TextAggExp!
  rootCause: ConsumerLending_TextAggExp!
  severity: ConsumerLending_VarcharAggExp!
  status: ConsumerLending_VarcharAggExp!
}

input ConsumerLending_ConsumerLendingComplianceExceptionsBoolExp {
  _and: [ConsumerLending_ConsumerLendingComplianceExceptionsBoolExp!]
  _not: ConsumerLending_ConsumerLendingComplianceExceptionsBoolExp
  _or: [ConsumerLending_ConsumerLendingComplianceExceptionsBoolExp!]
  consumerLendingApplicationId: ConsumerLending_Int4BoolExp
  consumerLendingExceptionId: ConsumerLending_Int4BoolExp
  consumerLendingLoanAccount: ConsumerLending_ConsumerLendingLoanAccountsBoolExp
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplicationsBoolExp
  description: ConsumerLending_TextBoolExp
  exceptionDate: ConsumerLending_TimestamptzBoolExp
  exceptionType: ConsumerLending_VarcharBoolExp
  identifiedById: ConsumerLending_Int4BoolExp
  loanAccountId: ConsumerLending_Int4BoolExp
  notes: ConsumerLending_TextBoolExp
  preventiveAction: ConsumerLending_TextBoolExp
  regulation: ConsumerLending_VarcharBoolExp
  remediatedById: ConsumerLending_Int4BoolExp
  remediationDate: ConsumerLending_DateBoolExp
  remediationPlan: ConsumerLending_TextBoolExp
  rootCause: ConsumerLending_TextBoolExp
  severity: ConsumerLending_VarcharBoolExp
  status: ConsumerLending_VarcharBoolExp
}

input ConsumerLending_ConsumerLendingComplianceExceptionsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingComplianceExceptionsOrderByExp!]
  where: ConsumerLending_ConsumerLendingComplianceExceptionsBoolExp
}

input ConsumerLending_ConsumerLendingComplianceExceptionsOrderByExp {
  consumerLendingApplicationId: OrderBy
  consumerLendingExceptionId: OrderBy
  consumerLendingLoanAccount: ConsumerLending_ConsumerLendingLoanAccountsOrderByExp
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplicationsOrderByExp
  description: OrderBy
  exceptionDate: OrderBy
  exceptionType: OrderBy
  identifiedById: OrderBy
  loanAccountId: OrderBy
  notes: OrderBy
  preventiveAction: OrderBy
  regulation: OrderBy
  remediatedById: OrderBy
  remediationDate: OrderBy
  remediationPlan: OrderBy
  rootCause: OrderBy
  severity: OrderBy
  status: OrderBy
}

scalar ConsumerLending_ConsumerLendingCreditBureau

type ConsumerLending_ConsumerLendingCreditBureauAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingCreditBureau
  min: ConsumerLending_ConsumerLendingCreditBureau
}

input ConsumerLending_ConsumerLendingCreditBureauBoolExp {
  _and: [ConsumerLending_ConsumerLendingCreditBureauBoolExp!]
  _eq: ConsumerLending_ConsumerLendingCreditBureau
  _gt: ConsumerLending_ConsumerLendingCreditBureau
  _gte: ConsumerLending_ConsumerLendingCreditBureau
  _in: [ConsumerLending_ConsumerLendingCreditBureau!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingCreditBureau
  _lte: ConsumerLending_ConsumerLendingCreditBureau
  _neq: ConsumerLending_ConsumerLendingCreditBureau
  _not: ConsumerLending_ConsumerLendingCreditBureauBoolExp
  _or: [ConsumerLending_ConsumerLendingCreditBureauBoolExp!]
}

"""
Records inquiries made on a credit report, indicating potential credit applications or checks.
"""
type ConsumerLending_ConsumerLendingCreditInquiries {
  consumerLendingCreditReport: ConsumerLending_ConsumerLendingCreditReports

  """Reference to credit report"""
  consumerLendingCreditReportId: ConsumerLending_Int4!

  """Unique identifier for inquiry record"""
  consumerLendingInquiryId: ConsumerLending_Int4!

  """Institution that made inquiry"""
  creditorName: ConsumerLending_Varchar!

  """Date of credit inquiry"""
  inquiryDate: ConsumerLending_Date!

  """Type of credit inquiry"""
  inquiryType: ConsumerLending_ConsumerLendingInquiryType
}

type ConsumerLending_ConsumerLendingCreditInquiriesAggExp {
  _count: Int!
  consumerLendingCreditReportId: ConsumerLending_Int4AggExp!
  consumerLendingInquiryId: ConsumerLending_Int4AggExp!
  creditorName: ConsumerLending_VarcharAggExp!
  inquiryDate: ConsumerLending_DateAggExp!
  inquiryType: ConsumerLending_ConsumerLendingInquiryTypeAggExp!
}

input ConsumerLending_ConsumerLendingCreditInquiriesBoolExp {
  _and: [ConsumerLending_ConsumerLendingCreditInquiriesBoolExp!]
  _not: ConsumerLending_ConsumerLendingCreditInquiriesBoolExp
  _or: [ConsumerLending_ConsumerLendingCreditInquiriesBoolExp!]
  consumerLendingCreditReport: ConsumerLending_ConsumerLendingCreditReportsBoolExp
  consumerLendingCreditReportId: ConsumerLending_Int4BoolExp
  consumerLendingInquiryId: ConsumerLending_Int4BoolExp
  creditorName: ConsumerLending_VarcharBoolExp
  inquiryDate: ConsumerLending_DateBoolExp
  inquiryType: ConsumerLending_ConsumerLendingInquiryTypeBoolExp
}

input ConsumerLending_ConsumerLendingCreditInquiriesFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingCreditInquiriesOrderByExp!]
  where: ConsumerLending_ConsumerLendingCreditInquiriesBoolExp
}

input ConsumerLending_ConsumerLendingCreditInquiriesOrderByExp {
  consumerLendingCreditReport: ConsumerLending_ConsumerLendingCreditReportsOrderByExp
  consumerLendingCreditReportId: OrderBy
  consumerLendingInquiryId: OrderBy
  creditorName: OrderBy
  inquiryDate: OrderBy
  inquiryType: OrderBy
}

"""
Stores credit reports obtained for loan applicants, including credit scores and other relevant information.
"""
type ConsumerLending_ConsumerLendingCreditReports {
  """Credit bureau providing the report"""
  bureauName: ConsumerLending_ConsumerLendingCreditBureau
  consumerLendingApplicant: ConsumerLending_ConsumerLendingApplicants

  """Reference to applicant"""
  consumerLendingApplicantId: ConsumerLending_Int4!

  """Reference to loan application"""
  consumerLendingApplicationId: ConsumerLending_Int4!
  consumerLendingCreditInquiries(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingCreditInquiriesOrderByExp!], where: ConsumerLending_ConsumerLendingCreditInquiriesBoolExp): [ConsumerLending_ConsumerLendingCreditInquiries!]
  consumerLendingCreditInquiriesAggregate(filter_input: ConsumerLending_ConsumerLendingCreditInquiriesFilterInput): ConsumerLending_ConsumerLendingCreditInquiriesAggExp!

  """Unique identifier for credit report"""
  consumerLendingCreditReportId: ConsumerLending_Int4!
  consumerLendingCreditReportTradelines(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingCreditReportTradelinesOrderByExp!], where: ConsumerLending_ConsumerLendingCreditReportTradelinesBoolExp): [ConsumerLending_ConsumerLendingCreditReportTradelines!]
  consumerLendingCreditReportTradelinesAggregate(filter_input: ConsumerLending_ConsumerLendingCreditReportTradelinesFilterInput): ConsumerLending_ConsumerLendingCreditReportTradelinesAggExp!
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplications
  consumerLendingPublicRecords(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingPublicRecordsOrderByExp!], where: ConsumerLending_ConsumerLendingPublicRecordsBoolExp): [ConsumerLending_ConsumerLendingPublicRecords!]
  consumerLendingPublicRecordsAggregate(filter_input: ConsumerLending_ConsumerLendingPublicRecordsFilterInput): ConsumerLending_ConsumerLendingPublicRecordsAggExp!

  """Primary credit score from report"""
  creditScore: ConsumerLending_Int4

  """When report expires"""
  expirationDate: ConsumerLending_Date!

  """When report was pulled"""
  reportDate: ConsumerLending_Timestamptz!

  """Path to stored report file"""
  reportPath: ConsumerLending_Varchar

  """External reference ID from bureau"""
  reportReference: ConsumerLending_Varchar

  """Type of credit report"""
  reportType: ConsumerLending_ConsumerLendingCreditReportType!

  """Status of credit report retrieval"""
  status: ConsumerLending_ConsumerLendingCreditReportStatus!
}

type ConsumerLending_ConsumerLendingCreditReportsAggExp {
  _count: Int!
  bureauName: ConsumerLending_ConsumerLendingCreditBureauAggExp!
  consumerLendingApplicantId: ConsumerLending_Int4AggExp!
  consumerLendingApplicationId: ConsumerLending_Int4AggExp!
  consumerLendingCreditReportId: ConsumerLending_Int4AggExp!
  creditScore: ConsumerLending_Int4AggExp!
  expirationDate: ConsumerLending_DateAggExp!
  reportDate: ConsumerLending_TimestamptzAggExp!
  reportPath: ConsumerLending_VarcharAggExp!
  reportReference: ConsumerLending_VarcharAggExp!
  reportType: ConsumerLending_ConsumerLendingCreditReportTypeAggExp!
  status: ConsumerLending_ConsumerLendingCreditReportStatusAggExp!
}

input ConsumerLending_ConsumerLendingCreditReportsBoolExp {
  _and: [ConsumerLending_ConsumerLendingCreditReportsBoolExp!]
  _not: ConsumerLending_ConsumerLendingCreditReportsBoolExp
  _or: [ConsumerLending_ConsumerLendingCreditReportsBoolExp!]
  bureauName: ConsumerLending_ConsumerLendingCreditBureauBoolExp
  consumerLendingApplicant: ConsumerLending_ConsumerLendingApplicantsBoolExp
  consumerLendingApplicantId: ConsumerLending_Int4BoolExp
  consumerLendingApplicationId: ConsumerLending_Int4BoolExp
  consumerLendingCreditInquiries: ConsumerLending_ConsumerLendingCreditInquiriesBoolExp
  consumerLendingCreditReportId: ConsumerLending_Int4BoolExp
  consumerLendingCreditReportTradelines: ConsumerLending_ConsumerLendingCreditReportTradelinesBoolExp
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplicationsBoolExp
  consumerLendingPublicRecords: ConsumerLending_ConsumerLendingPublicRecordsBoolExp
  creditScore: ConsumerLending_Int4BoolExp
  expirationDate: ConsumerLending_DateBoolExp
  reportDate: ConsumerLending_TimestamptzBoolExp
  reportPath: ConsumerLending_VarcharBoolExp
  reportReference: ConsumerLending_VarcharBoolExp
  reportType: ConsumerLending_ConsumerLendingCreditReportTypeBoolExp
  status: ConsumerLending_ConsumerLendingCreditReportStatusBoolExp
}

input ConsumerLending_ConsumerLendingCreditReportsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingCreditReportsOrderByExp!]
  where: ConsumerLending_ConsumerLendingCreditReportsBoolExp
}

input ConsumerLending_ConsumerLendingCreditReportsOrderByExp {
  bureauName: OrderBy
  consumerLendingApplicant: ConsumerLending_ConsumerLendingApplicantsOrderByExp
  consumerLendingApplicantId: OrderBy
  consumerLendingApplicationId: OrderBy
  consumerLendingCreditReportId: OrderBy
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplicationsOrderByExp
  creditScore: OrderBy
  expirationDate: OrderBy
  reportDate: OrderBy
  reportPath: OrderBy
  reportReference: OrderBy
  reportType: OrderBy
  status: OrderBy
}

scalar ConsumerLending_ConsumerLendingCreditReportStatus

type ConsumerLending_ConsumerLendingCreditReportStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingCreditReportStatus
  min: ConsumerLending_ConsumerLendingCreditReportStatus
}

input ConsumerLending_ConsumerLendingCreditReportStatusBoolExp {
  _and: [ConsumerLending_ConsumerLendingCreditReportStatusBoolExp!]
  _eq: ConsumerLending_ConsumerLendingCreditReportStatus
  _gt: ConsumerLending_ConsumerLendingCreditReportStatus
  _gte: ConsumerLending_ConsumerLendingCreditReportStatus
  _in: [ConsumerLending_ConsumerLendingCreditReportStatus!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingCreditReportStatus
  _lte: ConsumerLending_ConsumerLendingCreditReportStatus
  _neq: ConsumerLending_ConsumerLendingCreditReportStatus
  _not: ConsumerLending_ConsumerLendingCreditReportStatusBoolExp
  _or: [ConsumerLending_ConsumerLendingCreditReportStatusBoolExp!]
}

"""
Contains details of individual tradelines (credit accounts) reported on a credit report.
"""
type ConsumerLending_ConsumerLendingCreditReportTradelines {
  """Masked account number"""
  accountNumber: ConsumerLending_Varchar

  """Type of credit account"""
  accountType: ConsumerLending_ConsumerLendingAccountType!
  consumerLendingCreditReport: ConsumerLending_ConsumerLendingCreditReports

  """Reference to credit report"""
  consumerLendingCreditReportId: ConsumerLending_Int4!

  """Unique identifier for tradeline"""
  consumerLendingTradelineId: ConsumerLending_Int4!

  """Credit limit if applicable"""
  creditLimit: ConsumerLending_Numeric

  """Name of creditor"""
  creditorName: ConsumerLending_Varchar!

  """Current balance on account"""
  currentBalance: ConsumerLending_Numeric

  """Current days past due"""
  daysPastDue: ConsumerLending_Int4

  """Highest balance or credit limit"""
  highCredit: ConsumerLending_Numeric

  """Monthly payment amount"""
  monthlyPayment: ConsumerLending_Numeric

  """When account was opened"""
  openDate: ConsumerLending_Date

  """Current status of account payments"""
  paymentStatus: ConsumerLending_ConsumerLendingPaymentStatus

  """Worst historical delinquency"""
  worstDelinquency: ConsumerLending_ConsumerLendingDelinquencySeverity

  """Date of worst delinquency"""
  worstDelinquencyDate: ConsumerLending_Date
}

type ConsumerLending_ConsumerLendingCreditReportTradelinesAggExp {
  _count: Int!
  accountNumber: ConsumerLending_VarcharAggExp!
  accountType: ConsumerLending_ConsumerLendingAccountTypeAggExp!
  consumerLendingCreditReportId: ConsumerLending_Int4AggExp!
  consumerLendingTradelineId: ConsumerLending_Int4AggExp!
  creditLimit: ConsumerLending_NumericAggExp!
  creditorName: ConsumerLending_VarcharAggExp!
  currentBalance: ConsumerLending_NumericAggExp!
  daysPastDue: ConsumerLending_Int4AggExp!
  highCredit: ConsumerLending_NumericAggExp!
  monthlyPayment: ConsumerLending_NumericAggExp!
  openDate: ConsumerLending_DateAggExp!
  paymentStatus: ConsumerLending_ConsumerLendingPaymentStatusAggExp!
  worstDelinquency: ConsumerLending_ConsumerLendingDelinquencySeverityAggExp!
  worstDelinquencyDate: ConsumerLending_DateAggExp!
}

input ConsumerLending_ConsumerLendingCreditReportTradelinesBoolExp {
  _and: [ConsumerLending_ConsumerLendingCreditReportTradelinesBoolExp!]
  _not: ConsumerLending_ConsumerLendingCreditReportTradelinesBoolExp
  _or: [ConsumerLending_ConsumerLendingCreditReportTradelinesBoolExp!]
  accountNumber: ConsumerLending_VarcharBoolExp
  accountType: ConsumerLending_ConsumerLendingAccountTypeBoolExp
  consumerLendingCreditReport: ConsumerLending_ConsumerLendingCreditReportsBoolExp
  consumerLendingCreditReportId: ConsumerLending_Int4BoolExp
  consumerLendingTradelineId: ConsumerLending_Int4BoolExp
  creditLimit: ConsumerLending_NumericBoolExp
  creditorName: ConsumerLending_VarcharBoolExp
  currentBalance: ConsumerLending_NumericBoolExp
  daysPastDue: ConsumerLending_Int4BoolExp
  highCredit: ConsumerLending_NumericBoolExp
  monthlyPayment: ConsumerLending_NumericBoolExp
  openDate: ConsumerLending_DateBoolExp
  paymentStatus: ConsumerLending_ConsumerLendingPaymentStatusBoolExp
  worstDelinquency: ConsumerLending_ConsumerLendingDelinquencySeverityBoolExp
  worstDelinquencyDate: ConsumerLending_DateBoolExp
}

input ConsumerLending_ConsumerLendingCreditReportTradelinesFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingCreditReportTradelinesOrderByExp!]
  where: ConsumerLending_ConsumerLendingCreditReportTradelinesBoolExp
}

input ConsumerLending_ConsumerLendingCreditReportTradelinesOrderByExp {
  accountNumber: OrderBy
  accountType: OrderBy
  consumerLendingCreditReport: ConsumerLending_ConsumerLendingCreditReportsOrderByExp
  consumerLendingCreditReportId: OrderBy
  consumerLendingTradelineId: OrderBy
  creditLimit: OrderBy
  creditorName: OrderBy
  currentBalance: OrderBy
  daysPastDue: OrderBy
  highCredit: OrderBy
  monthlyPayment: OrderBy
  openDate: OrderBy
  paymentStatus: OrderBy
  worstDelinquency: OrderBy
  worstDelinquencyDate: OrderBy
}

scalar ConsumerLending_ConsumerLendingCreditReportType

type ConsumerLending_ConsumerLendingCreditReportTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingCreditReportType
  min: ConsumerLending_ConsumerLendingCreditReportType
}

input ConsumerLending_ConsumerLendingCreditReportTypeBoolExp {
  _and: [ConsumerLending_ConsumerLendingCreditReportTypeBoolExp!]
  _eq: ConsumerLending_ConsumerLendingCreditReportType
  _gt: ConsumerLending_ConsumerLendingCreditReportType
  _gte: ConsumerLending_ConsumerLendingCreditReportType
  _in: [ConsumerLending_ConsumerLendingCreditReportType!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingCreditReportType
  _lte: ConsumerLending_ConsumerLendingCreditReportType
  _neq: ConsumerLending_ConsumerLendingCreditReportType
  _not: ConsumerLending_ConsumerLendingCreditReportTypeBoolExp
  _or: [ConsumerLending_ConsumerLendingCreditReportTypeBoolExp!]
}

"""
Contains information about the decision models used to evaluate loan
applications, including credit scoring, income verification, and fraud detection models.
"""
type ConsumerLending_ConsumerLendingDecisionModels {
  consumerLendingApplicationDecisions(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingApplicationDecisionsOrderByExp!], where: ConsumerLending_ConsumerLendingApplicationDecisionsBoolExp): [ConsumerLending_ConsumerLendingApplicationDecisions!]
  consumerLendingApplicationDecisionsAggregate(filter_input: ConsumerLending_ConsumerLendingApplicationDecisionsFilterInput): ConsumerLending_ConsumerLendingApplicationDecisionsAggExp!

  """Unique identifier for decision model"""
  consumerLendingModelId: ConsumerLending_Int4!

  """Description of the model and its purpose"""
  description: ConsumerLending_Text

  """When model became effective"""
  effectiveDate: ConsumerLending_Date!

  """When model expires"""
  expirationDate: ConsumerLending_Date

  """Whether model is in active use"""
  isActive: ConsumerLending_Bool!

  """Name of the model"""
  modelName: ConsumerLending_Varchar!

  """Type of decision model"""
  modelType: ConsumerLending_ConsumerLendingDecisionModelType!

  """Version of the model"""
  modelVersion: ConsumerLending_Varchar!
}

type ConsumerLending_ConsumerLendingDecisionModelsAggExp {
  _count: Int!
  consumerLendingModelId: ConsumerLending_Int4AggExp!
  description: ConsumerLending_TextAggExp!
  effectiveDate: ConsumerLending_DateAggExp!
  expirationDate: ConsumerLending_DateAggExp!
  isActive: ConsumerLending_BoolAggExp!
  modelName: ConsumerLending_VarcharAggExp!
  modelType: ConsumerLending_ConsumerLendingDecisionModelTypeAggExp!
  modelVersion: ConsumerLending_VarcharAggExp!
}

input ConsumerLending_ConsumerLendingDecisionModelsBoolExp {
  _and: [ConsumerLending_ConsumerLendingDecisionModelsBoolExp!]
  _not: ConsumerLending_ConsumerLendingDecisionModelsBoolExp
  _or: [ConsumerLending_ConsumerLendingDecisionModelsBoolExp!]
  consumerLendingApplicationDecisions: ConsumerLending_ConsumerLendingApplicationDecisionsBoolExp
  consumerLendingModelId: ConsumerLending_Int4BoolExp
  description: ConsumerLending_TextBoolExp
  effectiveDate: ConsumerLending_DateBoolExp
  expirationDate: ConsumerLending_DateBoolExp
  isActive: ConsumerLending_BoolBoolExp
  modelName: ConsumerLending_VarcharBoolExp
  modelType: ConsumerLending_ConsumerLendingDecisionModelTypeBoolExp
  modelVersion: ConsumerLending_VarcharBoolExp
}

input ConsumerLending_ConsumerLendingDecisionModelsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingDecisionModelsOrderByExp!]
  where: ConsumerLending_ConsumerLendingDecisionModelsBoolExp
}

input ConsumerLending_ConsumerLendingDecisionModelsOrderByExp {
  consumerLendingModelId: OrderBy
  description: OrderBy
  effectiveDate: OrderBy
  expirationDate: OrderBy
  isActive: OrderBy
  modelName: OrderBy
  modelType: OrderBy
  modelVersion: OrderBy
}

scalar ConsumerLending_ConsumerLendingDecisionModelType

type ConsumerLending_ConsumerLendingDecisionModelTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingDecisionModelType
  min: ConsumerLending_ConsumerLendingDecisionModelType
}

input ConsumerLending_ConsumerLendingDecisionModelTypeBoolExp {
  _and: [ConsumerLending_ConsumerLendingDecisionModelTypeBoolExp!]
  _eq: ConsumerLending_ConsumerLendingDecisionModelType
  _gt: ConsumerLending_ConsumerLendingDecisionModelType
  _gte: ConsumerLending_ConsumerLendingDecisionModelType
  _in: [ConsumerLending_ConsumerLendingDecisionModelType!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingDecisionModelType
  _lte: ConsumerLending_ConsumerLendingDecisionModelType
  _neq: ConsumerLending_ConsumerLendingDecisionModelType
  _not: ConsumerLending_ConsumerLendingDecisionModelTypeBoolExp
  _or: [ConsumerLending_ConsumerLendingDecisionModelTypeBoolExp!]
}

scalar ConsumerLending_ConsumerLendingDecisionReasonCode

type ConsumerLending_ConsumerLendingDecisionReasonCodeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingDecisionReasonCode
  min: ConsumerLending_ConsumerLendingDecisionReasonCode
}

input ConsumerLending_ConsumerLendingDecisionReasonCodeBoolExp {
  _and: [ConsumerLending_ConsumerLendingDecisionReasonCodeBoolExp!]
  _eq: ConsumerLending_ConsumerLendingDecisionReasonCode
  _gt: ConsumerLending_ConsumerLendingDecisionReasonCode
  _gte: ConsumerLending_ConsumerLendingDecisionReasonCode
  _in: [ConsumerLending_ConsumerLendingDecisionReasonCode!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingDecisionReasonCode
  _lte: ConsumerLending_ConsumerLendingDecisionReasonCode
  _neq: ConsumerLending_ConsumerLendingDecisionReasonCode
  _not: ConsumerLending_ConsumerLendingDecisionReasonCodeBoolExp
  _or: [ConsumerLending_ConsumerLendingDecisionReasonCodeBoolExp!]
}

"""
Provides specific reasons for the decisions made on loan applications, linked to the application_decisions table.
"""
type ConsumerLending_ConsumerLendingDecisionReasons {
  consumerLendingApplicationDecision: ConsumerLending_ConsumerLendingApplicationDecisions

  """Reference to application decision"""
  consumerLendingDecisionId: ConsumerLending_Int4!

  """Unique identifier for decision reason"""
  consumerLendingDecisionReasonId: ConsumerLending_Int4!

  """Standard reason code for decision"""
  reasonCode: ConsumerLending_ConsumerLendingDecisionReasonCode!

  """Description of reason"""
  reasonDescription: ConsumerLending_Varchar!

  """Order of importance for reason"""
  sequence: ConsumerLending_Int4!
}

type ConsumerLending_ConsumerLendingDecisionReasonsAggExp {
  _count: Int!
  consumerLendingDecisionId: ConsumerLending_Int4AggExp!
  consumerLendingDecisionReasonId: ConsumerLending_Int4AggExp!
  reasonCode: ConsumerLending_ConsumerLendingDecisionReasonCodeAggExp!
  reasonDescription: ConsumerLending_VarcharAggExp!
  sequence: ConsumerLending_Int4AggExp!
}

input ConsumerLending_ConsumerLendingDecisionReasonsBoolExp {
  _and: [ConsumerLending_ConsumerLendingDecisionReasonsBoolExp!]
  _not: ConsumerLending_ConsumerLendingDecisionReasonsBoolExp
  _or: [ConsumerLending_ConsumerLendingDecisionReasonsBoolExp!]
  consumerLendingApplicationDecision: ConsumerLending_ConsumerLendingApplicationDecisionsBoolExp
  consumerLendingDecisionId: ConsumerLending_Int4BoolExp
  consumerLendingDecisionReasonId: ConsumerLending_Int4BoolExp
  reasonCode: ConsumerLending_ConsumerLendingDecisionReasonCodeBoolExp
  reasonDescription: ConsumerLending_VarcharBoolExp
  sequence: ConsumerLending_Int4BoolExp
}

input ConsumerLending_ConsumerLendingDecisionReasonsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingDecisionReasonsOrderByExp!]
  where: ConsumerLending_ConsumerLendingDecisionReasonsBoolExp
}

input ConsumerLending_ConsumerLendingDecisionReasonsOrderByExp {
  consumerLendingApplicationDecision: ConsumerLending_ConsumerLendingApplicationDecisionsOrderByExp
  consumerLendingDecisionId: OrderBy
  consumerLendingDecisionReasonId: OrderBy
  reasonCode: OrderBy
  reasonDescription: OrderBy
  sequence: OrderBy
}

scalar ConsumerLending_ConsumerLendingDecisionResult

type ConsumerLending_ConsumerLendingDecisionResultAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingDecisionResult
  min: ConsumerLending_ConsumerLendingDecisionResult
}

input ConsumerLending_ConsumerLendingDecisionResultBoolExp {
  _and: [ConsumerLending_ConsumerLendingDecisionResultBoolExp!]
  _eq: ConsumerLending_ConsumerLendingDecisionResult
  _gt: ConsumerLending_ConsumerLendingDecisionResult
  _gte: ConsumerLending_ConsumerLendingDecisionResult
  _in: [ConsumerLending_ConsumerLendingDecisionResult!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingDecisionResult
  _lte: ConsumerLending_ConsumerLendingDecisionResult
  _neq: ConsumerLending_ConsumerLendingDecisionResult
  _not: ConsumerLending_ConsumerLendingDecisionResultBoolExp
  _or: [ConsumerLending_ConsumerLendingDecisionResultBoolExp!]
}

scalar ConsumerLending_ConsumerLendingDecisionType

type ConsumerLending_ConsumerLendingDecisionTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingDecisionType
  min: ConsumerLending_ConsumerLendingDecisionType
}

input ConsumerLending_ConsumerLendingDecisionTypeBoolExp {
  _and: [ConsumerLending_ConsumerLendingDecisionTypeBoolExp!]
  _eq: ConsumerLending_ConsumerLendingDecisionType
  _gt: ConsumerLending_ConsumerLendingDecisionType
  _gte: ConsumerLending_ConsumerLendingDecisionType
  _in: [ConsumerLending_ConsumerLendingDecisionType!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingDecisionType
  _lte: ConsumerLending_ConsumerLendingDecisionType
  _neq: ConsumerLending_ConsumerLendingDecisionType
  _not: ConsumerLending_ConsumerLendingDecisionTypeBoolExp
  _or: [ConsumerLending_ConsumerLendingDecisionTypeBoolExp!]
}

scalar ConsumerLending_ConsumerLendingDelinquencySeverity

type ConsumerLending_ConsumerLendingDelinquencySeverityAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingDelinquencySeverity
  min: ConsumerLending_ConsumerLendingDelinquencySeverity
}

input ConsumerLending_ConsumerLendingDelinquencySeverityBoolExp {
  _and: [ConsumerLending_ConsumerLendingDelinquencySeverityBoolExp!]
  _eq: ConsumerLending_ConsumerLendingDelinquencySeverity
  _gt: ConsumerLending_ConsumerLendingDelinquencySeverity
  _gte: ConsumerLending_ConsumerLendingDelinquencySeverity
  _in: [ConsumerLending_ConsumerLendingDelinquencySeverity!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingDelinquencySeverity
  _lte: ConsumerLending_ConsumerLendingDelinquencySeverity
  _neq: ConsumerLending_ConsumerLendingDelinquencySeverity
  _not: ConsumerLending_ConsumerLendingDelinquencySeverityBoolExp
  _or: [ConsumerLending_ConsumerLendingDelinquencySeverityBoolExp!]
}

scalar ConsumerLending_ConsumerLendingDeliveryMethod

type ConsumerLending_ConsumerLendingDeliveryMethodAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingDeliveryMethod
  min: ConsumerLending_ConsumerLendingDeliveryMethod
}

input ConsumerLending_ConsumerLendingDeliveryMethodBoolExp {
  _and: [ConsumerLending_ConsumerLendingDeliveryMethodBoolExp!]
  _eq: ConsumerLending_ConsumerLendingDeliveryMethod
  _gt: ConsumerLending_ConsumerLendingDeliveryMethod
  _gte: ConsumerLending_ConsumerLendingDeliveryMethod
  _in: [ConsumerLending_ConsumerLendingDeliveryMethod!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingDeliveryMethod
  _lte: ConsumerLending_ConsumerLendingDeliveryMethod
  _neq: ConsumerLending_ConsumerLendingDeliveryMethod
  _not: ConsumerLending_ConsumerLendingDeliveryMethodBoolExp
  _or: [ConsumerLending_ConsumerLendingDeliveryMethodBoolExp!]
}

scalar ConsumerLending_ConsumerLendingDisbursementOption

type ConsumerLending_ConsumerLendingDisbursementOptionAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingDisbursementOption
  min: ConsumerLending_ConsumerLendingDisbursementOption
}

input ConsumerLending_ConsumerLendingDisbursementOptionBoolExp {
  _and: [ConsumerLending_ConsumerLendingDisbursementOptionBoolExp!]
  _eq: ConsumerLending_ConsumerLendingDisbursementOption
  _gt: ConsumerLending_ConsumerLendingDisbursementOption
  _gte: ConsumerLending_ConsumerLendingDisbursementOption
  _in: [ConsumerLending_ConsumerLendingDisbursementOption!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingDisbursementOption
  _lte: ConsumerLending_ConsumerLendingDisbursementOption
  _neq: ConsumerLending_ConsumerLendingDisbursementOption
  _not: ConsumerLending_ConsumerLendingDisbursementOptionBoolExp
  _or: [ConsumerLending_ConsumerLendingDisbursementOptionBoolExp!]
}

"""
Tracks the disbursement of funds for loan accounts, including the date, amount, method, and recipient information.
"""
type ConsumerLending_ConsumerLendingDisbursements {
  """Check number if applicable"""
  checkNumber: ConsumerLending_Varchar
  consumerLendingLoanAccount: ConsumerLending_ConsumerLendingLoanAccounts

  """Reference to loan account"""
  consumerLendingLoanAccountId: ConsumerLending_Int4!

  """Amount disbursed"""
  disbursementAmount: ConsumerLending_Numeric!

  """Date funds were disbursed"""
  disbursementDate: ConsumerLending_Date!

  """Unique identifier for disbursement"""
  disbursementId: ConsumerLending_Int4!

  """ACH, Check, Wire"""
  disbursementMethod: ConsumerLending_Varchar!

  """Pending, Completed, Failed"""
  disbursementStatus: ConsumerLending_Varchar!

  """Additional disbursement notes"""
  notes: ConsumerLending_Text

  """Recipient account number, encrypted"""
  recipientAccountNumber: ConsumerLending_Varchar

  """Checking, Savings"""
  recipientAccountType: ConsumerLending_Varchar

  """Name of recipient"""
  recipientName: ConsumerLending_Varchar!

  """Recipient routing number"""
  recipientRoutingNumber: ConsumerLending_Varchar

  """Tracking or reference number"""
  trackingNumber: ConsumerLending_Varchar
}

type ConsumerLending_ConsumerLendingDisbursementsAggExp {
  _count: Int!
  checkNumber: ConsumerLending_VarcharAggExp!
  consumerLendingLoanAccountId: ConsumerLending_Int4AggExp!
  disbursementAmount: ConsumerLending_NumericAggExp!
  disbursementDate: ConsumerLending_DateAggExp!
  disbursementId: ConsumerLending_Int4AggExp!
  disbursementMethod: ConsumerLending_VarcharAggExp!
  disbursementStatus: ConsumerLending_VarcharAggExp!
  notes: ConsumerLending_TextAggExp!
  recipientAccountNumber: ConsumerLending_VarcharAggExp!
  recipientAccountType: ConsumerLending_VarcharAggExp!
  recipientName: ConsumerLending_VarcharAggExp!
  recipientRoutingNumber: ConsumerLending_VarcharAggExp!
  trackingNumber: ConsumerLending_VarcharAggExp!
}

input ConsumerLending_ConsumerLendingDisbursementsBoolExp {
  _and: [ConsumerLending_ConsumerLendingDisbursementsBoolExp!]
  _not: ConsumerLending_ConsumerLendingDisbursementsBoolExp
  _or: [ConsumerLending_ConsumerLendingDisbursementsBoolExp!]
  checkNumber: ConsumerLending_VarcharBoolExp
  consumerLendingLoanAccount: ConsumerLending_ConsumerLendingLoanAccountsBoolExp
  consumerLendingLoanAccountId: ConsumerLending_Int4BoolExp
  disbursementAmount: ConsumerLending_NumericBoolExp
  disbursementDate: ConsumerLending_DateBoolExp
  disbursementId: ConsumerLending_Int4BoolExp
  disbursementMethod: ConsumerLending_VarcharBoolExp
  disbursementStatus: ConsumerLending_VarcharBoolExp
  notes: ConsumerLending_TextBoolExp
  recipientAccountNumber: ConsumerLending_VarcharBoolExp
  recipientAccountType: ConsumerLending_VarcharBoolExp
  recipientName: ConsumerLending_VarcharBoolExp
  recipientRoutingNumber: ConsumerLending_VarcharBoolExp
  trackingNumber: ConsumerLending_VarcharBoolExp
}

input ConsumerLending_ConsumerLendingDisbursementsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingDisbursementsOrderByExp!]
  where: ConsumerLending_ConsumerLendingDisbursementsBoolExp
}

input ConsumerLending_ConsumerLendingDisbursementsOrderByExp {
  checkNumber: OrderBy
  consumerLendingLoanAccount: ConsumerLending_ConsumerLendingLoanAccountsOrderByExp
  consumerLendingLoanAccountId: OrderBy
  disbursementAmount: OrderBy
  disbursementDate: OrderBy
  disbursementId: OrderBy
  disbursementMethod: OrderBy
  disbursementStatus: OrderBy
  notes: OrderBy
  recipientAccountNumber: OrderBy
  recipientAccountType: OrderBy
  recipientName: OrderBy
  recipientRoutingNumber: OrderBy
  trackingNumber: OrderBy
}

scalar ConsumerLending_ConsumerLendingDisclosureDeliveryMethod

type ConsumerLending_ConsumerLendingDisclosureDeliveryMethodAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingDisclosureDeliveryMethod
  min: ConsumerLending_ConsumerLendingDisclosureDeliveryMethod
}

input ConsumerLending_ConsumerLendingDisclosureDeliveryMethodBoolExp {
  _and: [ConsumerLending_ConsumerLendingDisclosureDeliveryMethodBoolExp!]
  _eq: ConsumerLending_ConsumerLendingDisclosureDeliveryMethod
  _gt: ConsumerLending_ConsumerLendingDisclosureDeliveryMethod
  _gte: ConsumerLending_ConsumerLendingDisclosureDeliveryMethod
  _in: [ConsumerLending_ConsumerLendingDisclosureDeliveryMethod!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingDisclosureDeliveryMethod
  _lte: ConsumerLending_ConsumerLendingDisclosureDeliveryMethod
  _neq: ConsumerLending_ConsumerLendingDisclosureDeliveryMethod
  _not: ConsumerLending_ConsumerLendingDisclosureDeliveryMethodBoolExp
  _or: [ConsumerLending_ConsumerLendingDisclosureDeliveryMethodBoolExp!]
}

scalar ConsumerLending_ConsumerLendingDisclosureType

type ConsumerLending_ConsumerLendingDisclosureTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingDisclosureType
  min: ConsumerLending_ConsumerLendingDisclosureType
}

input ConsumerLending_ConsumerLendingDisclosureTypeBoolExp {
  _and: [ConsumerLending_ConsumerLendingDisclosureTypeBoolExp!]
  _eq: ConsumerLending_ConsumerLendingDisclosureType
  _gt: ConsumerLending_ConsumerLendingDisclosureType
  _gte: ConsumerLending_ConsumerLendingDisclosureType
  _in: [ConsumerLending_ConsumerLendingDisclosureType!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingDisclosureType
  _lte: ConsumerLending_ConsumerLendingDisclosureType
  _neq: ConsumerLending_ConsumerLendingDisclosureType
  _not: ConsumerLending_ConsumerLendingDisclosureTypeBoolExp
  _or: [ConsumerLending_ConsumerLendingDisclosureTypeBoolExp!]
}

scalar ConsumerLending_ConsumerLendingDocumentStatus

type ConsumerLending_ConsumerLendingDocumentStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingDocumentStatus
  min: ConsumerLending_ConsumerLendingDocumentStatus
}

input ConsumerLending_ConsumerLendingDocumentStatusBoolExp {
  _and: [ConsumerLending_ConsumerLendingDocumentStatusBoolExp!]
  _eq: ConsumerLending_ConsumerLendingDocumentStatus
  _gt: ConsumerLending_ConsumerLendingDocumentStatus
  _gte: ConsumerLending_ConsumerLendingDocumentStatus
  _in: [ConsumerLending_ConsumerLendingDocumentStatus!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingDocumentStatus
  _lte: ConsumerLending_ConsumerLendingDocumentStatus
  _neq: ConsumerLending_ConsumerLendingDocumentStatus
  _not: ConsumerLending_ConsumerLendingDocumentStatusBoolExp
  _or: [ConsumerLending_ConsumerLendingDocumentStatusBoolExp!]
}

scalar ConsumerLending_ConsumerLendingDocumentType

type ConsumerLending_ConsumerLendingDocumentTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingDocumentType
  min: ConsumerLending_ConsumerLendingDocumentType
}

input ConsumerLending_ConsumerLendingDocumentTypeBoolExp {
  _and: [ConsumerLending_ConsumerLendingDocumentTypeBoolExp!]
  _eq: ConsumerLending_ConsumerLendingDocumentType
  _gt: ConsumerLending_ConsumerLendingDocumentType
  _gte: ConsumerLending_ConsumerLendingDocumentType
  _in: [ConsumerLending_ConsumerLendingDocumentType!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingDocumentType
  _lte: ConsumerLending_ConsumerLendingDocumentType
  _neq: ConsumerLending_ConsumerLendingDocumentType
  _not: ConsumerLending_ConsumerLendingDocumentTypeBoolExp
  _or: [ConsumerLending_ConsumerLendingDocumentTypeBoolExp!]
}

"""
Tracks information related to the Equal Credit Opportunity Act (ECOA) for monitoring and compliance purposes.
"""
type ConsumerLending_ConsumerLendingEcoaMonitoring {
  """Date of action"""
  actionDate: ConsumerLending_Date!

  """Action taken on the loan application"""
  actionTaken: ConsumerLending_ConsumerLendingActionTaken!

  """Applicant age"""
  age: ConsumerLending_Int4
  consumerLendingApplicant: ConsumerLending_ConsumerLendingApplicants

  """Reference to applicant"""
  consumerLendingApplicantId: ConsumerLending_Int4!

  """Reference to loan application"""
  consumerLendingApplicationId: ConsumerLending_Int4!
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplications

  """Unique identifier for monitoring record"""
  consumerLendingMonitoringId: ConsumerLending_Int4!

  """Self-reported ethnicity"""
  ethnicity: ConsumerLending_Varchar

  """Income used for decision"""
  incomeMonitored: ConsumerLending_Numeric

  """Method of obtaining information"""
  informationMethod: ConsumerLending_ConsumerLendingInformationMethod!

  """Marital status"""
  maritalStatus: ConsumerLending_EnterpriseMaritalStatus

  """Self-reported race"""
  race: ConsumerLending_Varchar

  """Self-reported sex"""
  sex: ConsumerLending_Varchar

  """Date monitoring info submitted"""
  submissionDate: ConsumerLending_Date!

  """User who submitted monitoring info"""
  submittedById: ConsumerLending_Int4
  wasSubmittedBy: Enterprise_EnterpriseAssociates
}

type ConsumerLending_ConsumerLendingEcoaMonitoringAggExp {
  _count: Int!
  actionDate: ConsumerLending_DateAggExp!
  actionTaken: ConsumerLending_ConsumerLendingActionTakenAggExp!
  age: ConsumerLending_Int4AggExp!
  consumerLendingApplicantId: ConsumerLending_Int4AggExp!
  consumerLendingApplicationId: ConsumerLending_Int4AggExp!
  consumerLendingMonitoringId: ConsumerLending_Int4AggExp!
  ethnicity: ConsumerLending_VarcharAggExp!
  incomeMonitored: ConsumerLending_NumericAggExp!
  informationMethod: ConsumerLending_ConsumerLendingInformationMethodAggExp!
  maritalStatus: ConsumerLending_EnterpriseMaritalStatusAggExp!
  race: ConsumerLending_VarcharAggExp!
  sex: ConsumerLending_VarcharAggExp!
  submissionDate: ConsumerLending_DateAggExp!
  submittedById: ConsumerLending_Int4AggExp!
}

input ConsumerLending_ConsumerLendingEcoaMonitoringBoolExp {
  _and: [ConsumerLending_ConsumerLendingEcoaMonitoringBoolExp!]
  _not: ConsumerLending_ConsumerLendingEcoaMonitoringBoolExp
  _or: [ConsumerLending_ConsumerLendingEcoaMonitoringBoolExp!]
  actionDate: ConsumerLending_DateBoolExp
  actionTaken: ConsumerLending_ConsumerLendingActionTakenBoolExp
  age: ConsumerLending_Int4BoolExp
  consumerLendingApplicant: ConsumerLending_ConsumerLendingApplicantsBoolExp
  consumerLendingApplicantId: ConsumerLending_Int4BoolExp
  consumerLendingApplicationId: ConsumerLending_Int4BoolExp
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplicationsBoolExp
  consumerLendingMonitoringId: ConsumerLending_Int4BoolExp
  ethnicity: ConsumerLending_VarcharBoolExp
  incomeMonitored: ConsumerLending_NumericBoolExp
  informationMethod: ConsumerLending_ConsumerLendingInformationMethodBoolExp
  maritalStatus: ConsumerLending_EnterpriseMaritalStatusBoolExp
  race: ConsumerLending_VarcharBoolExp
  sex: ConsumerLending_VarcharBoolExp
  submissionDate: ConsumerLending_DateBoolExp
  submittedById: ConsumerLending_Int4BoolExp
}

input ConsumerLending_ConsumerLendingEcoaMonitoringFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingEcoaMonitoringOrderByExp!]
  where: ConsumerLending_ConsumerLendingEcoaMonitoringBoolExp
}

input ConsumerLending_ConsumerLendingEcoaMonitoringOrderByExp {
  actionDate: OrderBy
  actionTaken: OrderBy
  age: OrderBy
  consumerLendingApplicant: ConsumerLending_ConsumerLendingApplicantsOrderByExp
  consumerLendingApplicantId: OrderBy
  consumerLendingApplicationId: OrderBy
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplicationsOrderByExp
  consumerLendingMonitoringId: OrderBy
  ethnicity: OrderBy
  incomeMonitored: OrderBy
  informationMethod: OrderBy
  maritalStatus: OrderBy
  race: OrderBy
  sex: OrderBy
  submissionDate: OrderBy
  submittedById: OrderBy
}

scalar ConsumerLending_ConsumerLendingEcoaReasonCode

type ConsumerLending_ConsumerLendingEcoaReasonCodeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingEcoaReasonCode
  min: ConsumerLending_ConsumerLendingEcoaReasonCode
}

input ConsumerLending_ConsumerLendingEcoaReasonCodeBoolExp {
  _and: [ConsumerLending_ConsumerLendingEcoaReasonCodeBoolExp!]
  _eq: ConsumerLending_ConsumerLendingEcoaReasonCode
  _gt: ConsumerLending_ConsumerLendingEcoaReasonCode
  _gte: ConsumerLending_ConsumerLendingEcoaReasonCode
  _in: [ConsumerLending_ConsumerLendingEcoaReasonCode!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingEcoaReasonCode
  _lte: ConsumerLending_ConsumerLendingEcoaReasonCode
  _neq: ConsumerLending_ConsumerLendingEcoaReasonCode
  _not: ConsumerLending_ConsumerLendingEcoaReasonCodeBoolExp
  _or: [ConsumerLending_ConsumerLendingEcoaReasonCodeBoolExp!]
}

scalar ConsumerLending_ConsumerLendingEligibilityCriteriaType

type ConsumerLending_ConsumerLendingEligibilityCriteriaTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingEligibilityCriteriaType
  min: ConsumerLending_ConsumerLendingEligibilityCriteriaType
}

input ConsumerLending_ConsumerLendingEligibilityCriteriaTypeBoolExp {
  _and: [ConsumerLending_ConsumerLendingEligibilityCriteriaTypeBoolExp!]
  _eq: ConsumerLending_ConsumerLendingEligibilityCriteriaType
  _gt: ConsumerLending_ConsumerLendingEligibilityCriteriaType
  _gte: ConsumerLending_ConsumerLendingEligibilityCriteriaType
  _in: [ConsumerLending_ConsumerLendingEligibilityCriteriaType!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingEligibilityCriteriaType
  _lte: ConsumerLending_ConsumerLendingEligibilityCriteriaType
  _neq: ConsumerLending_ConsumerLendingEligibilityCriteriaType
  _not: ConsumerLending_ConsumerLendingEligibilityCriteriaTypeBoolExp
  _or: [ConsumerLending_ConsumerLendingEligibilityCriteriaTypeBoolExp!]
}

"""
Records fair lending analysis conducted to identify and address potential disparities in lending practices.
"""
type ConsumerLending_ConsumerLendingFairlendingAnalysis {
  """Recommended actions based on findings"""
  actionRecommended: ConsumerLending_Text
  analysisBy: Enterprise_EnterpriseAssociates

  """Date analysis was performed"""
  analysisDate: ConsumerLending_Date!
  analysisReviewedBy: Enterprise_EnterpriseAssociates

  """Type of fair lending analysis"""
  analysisType: ConsumerLending_ConsumerLendingAnalysisType!

  """Person who performed analysis"""
  analyst: ConsumerLending_Int4

  """Unique identifier for analysis record"""
  consumerLendingAnalysisId: ConsumerLending_Int4!
  consumerLendingLoanProduct: ConsumerLending_ConsumerLendingLoanProducts

  """Loan product analyzed if specific product"""
  consumerLendingLoanProductId: ConsumerLending_Int4!

  """Reference group for comparison"""
  controlGroup: ConsumerLending_Varchar!

  """Variables controlled for in analysis"""
  controlsApplied: ConsumerLending_Text

  """Ratio of outcomes between groups"""
  disparityRatio: ConsumerLending_Numeric

  """Summary of findings"""
  findings: ConsumerLending_Text

  """Outcome being measured"""
  outcomeVariable: ConsumerLending_ConsumerLendingOutcomeVariable!

  """Statistical significance level"""
  pValue: ConsumerLending_Numeric

  """Protected class being analyzed"""
  protectedClass: ConsumerLending_ConsumerLendingProtectedClass!

  """Path to full analysis report"""
  reportPath: ConsumerLending_Varchar

  """Person who reviewed analysis"""
  reviewer: ConsumerLending_Int4

  """Number in control group"""
  sampleSizeControl: ConsumerLending_Int4!

  """Number in test group"""
  sampleSizeTest: ConsumerLending_Int4!

  """Statistical method used"""
  statisticalTest: ConsumerLending_ConsumerLendingStatisticalTest

  """Whether result is statistically significant"""
  statisticallySignificant: ConsumerLending_Bool

  """Group being tested for disparities"""
  testGroup: ConsumerLending_Varchar!

  """End of analysis period"""
  timePeriodEnd: ConsumerLending_Date!

  """Start of analysis period"""
  timePeriodStart: ConsumerLending_Date!
}

type ConsumerLending_ConsumerLendingFairlendingAnalysisAggExp {
  _count: Int!
  actionRecommended: ConsumerLending_TextAggExp!
  analysisDate: ConsumerLending_DateAggExp!
  analysisType: ConsumerLending_ConsumerLendingAnalysisTypeAggExp!
  analyst: ConsumerLending_Int4AggExp!
  consumerLendingAnalysisId: ConsumerLending_Int4AggExp!
  consumerLendingLoanProductId: ConsumerLending_Int4AggExp!
  controlGroup: ConsumerLending_VarcharAggExp!
  controlsApplied: ConsumerLending_TextAggExp!
  disparityRatio: ConsumerLending_NumericAggExp!
  findings: ConsumerLending_TextAggExp!
  outcomeVariable: ConsumerLending_ConsumerLendingOutcomeVariableAggExp!
  pValue: ConsumerLending_NumericAggExp!
  protectedClass: ConsumerLending_ConsumerLendingProtectedClassAggExp!
  reportPath: ConsumerLending_VarcharAggExp!
  reviewer: ConsumerLending_Int4AggExp!
  sampleSizeControl: ConsumerLending_Int4AggExp!
  sampleSizeTest: ConsumerLending_Int4AggExp!
  statisticalTest: ConsumerLending_ConsumerLendingStatisticalTestAggExp!
  statisticallySignificant: ConsumerLending_BoolAggExp!
  testGroup: ConsumerLending_VarcharAggExp!
  timePeriodEnd: ConsumerLending_DateAggExp!
  timePeriodStart: ConsumerLending_DateAggExp!
}

input ConsumerLending_ConsumerLendingFairlendingAnalysisBoolExp {
  _and: [ConsumerLending_ConsumerLendingFairlendingAnalysisBoolExp!]
  _not: ConsumerLending_ConsumerLendingFairlendingAnalysisBoolExp
  _or: [ConsumerLending_ConsumerLendingFairlendingAnalysisBoolExp!]
  actionRecommended: ConsumerLending_TextBoolExp
  analysisDate: ConsumerLending_DateBoolExp
  analysisType: ConsumerLending_ConsumerLendingAnalysisTypeBoolExp
  analyst: ConsumerLending_Int4BoolExp
  consumerLendingAnalysisId: ConsumerLending_Int4BoolExp
  consumerLendingLoanProduct: ConsumerLending_ConsumerLendingLoanProductsBoolExp
  consumerLendingLoanProductId: ConsumerLending_Int4BoolExp
  controlGroup: ConsumerLending_VarcharBoolExp
  controlsApplied: ConsumerLending_TextBoolExp
  disparityRatio: ConsumerLending_NumericBoolExp
  findings: ConsumerLending_TextBoolExp
  outcomeVariable: ConsumerLending_ConsumerLendingOutcomeVariableBoolExp
  pValue: ConsumerLending_NumericBoolExp
  protectedClass: ConsumerLending_ConsumerLendingProtectedClassBoolExp
  reportPath: ConsumerLending_VarcharBoolExp
  reviewer: ConsumerLending_Int4BoolExp
  sampleSizeControl: ConsumerLending_Int4BoolExp
  sampleSizeTest: ConsumerLending_Int4BoolExp
  statisticalTest: ConsumerLending_ConsumerLendingStatisticalTestBoolExp
  statisticallySignificant: ConsumerLending_BoolBoolExp
  testGroup: ConsumerLending_VarcharBoolExp
  timePeriodEnd: ConsumerLending_DateBoolExp
  timePeriodStart: ConsumerLending_DateBoolExp
}

input ConsumerLending_ConsumerLendingFairlendingAnalysisFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingFairlendingAnalysisOrderByExp!]
  where: ConsumerLending_ConsumerLendingFairlendingAnalysisBoolExp
}

input ConsumerLending_ConsumerLendingFairlendingAnalysisOrderByExp {
  actionRecommended: OrderBy
  analysisDate: OrderBy
  analysisType: OrderBy
  analyst: OrderBy
  consumerLendingAnalysisId: OrderBy
  consumerLendingLoanProduct: ConsumerLending_ConsumerLendingLoanProductsOrderByExp
  consumerLendingLoanProductId: OrderBy
  controlGroup: OrderBy
  controlsApplied: OrderBy
  disparityRatio: OrderBy
  findings: OrderBy
  outcomeVariable: OrderBy
  pValue: OrderBy
  protectedClass: OrderBy
  reportPath: OrderBy
  reviewer: OrderBy
  sampleSizeControl: OrderBy
  sampleSizeTest: OrderBy
  statisticalTest: OrderBy
  statisticallySignificant: OrderBy
  testGroup: OrderBy
  timePeriodEnd: OrderBy
  timePeriodStart: OrderBy
}

scalar ConsumerLending_ConsumerLendingFcraReasonCode

type ConsumerLending_ConsumerLendingFcraReasonCodeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingFcraReasonCode
  min: ConsumerLending_ConsumerLendingFcraReasonCode
}

input ConsumerLending_ConsumerLendingFcraReasonCodeBoolExp {
  _and: [ConsumerLending_ConsumerLendingFcraReasonCodeBoolExp!]
  _eq: ConsumerLending_ConsumerLendingFcraReasonCode
  _gt: ConsumerLending_ConsumerLendingFcraReasonCode
  _gte: ConsumerLending_ConsumerLendingFcraReasonCode
  _in: [ConsumerLending_ConsumerLendingFcraReasonCode!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingFcraReasonCode
  _lte: ConsumerLending_ConsumerLendingFcraReasonCode
  _neq: ConsumerLending_ConsumerLendingFcraReasonCode
  _not: ConsumerLending_ConsumerLendingFcraReasonCodeBoolExp
  _or: [ConsumerLending_ConsumerLendingFcraReasonCodeBoolExp!]
}

scalar ConsumerLending_ConsumerLendingFeeType

type ConsumerLending_ConsumerLendingFeeTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingFeeType
  min: ConsumerLending_ConsumerLendingFeeType
}

input ConsumerLending_ConsumerLendingFeeTypeBoolExp {
  _and: [ConsumerLending_ConsumerLendingFeeTypeBoolExp!]
  _eq: ConsumerLending_ConsumerLendingFeeType
  _gt: ConsumerLending_ConsumerLendingFeeType
  _gte: ConsumerLending_ConsumerLendingFeeType
  _in: [ConsumerLending_ConsumerLendingFeeType!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingFeeType
  _lte: ConsumerLending_ConsumerLendingFeeType
  _neq: ConsumerLending_ConsumerLendingFeeType
  _not: ConsumerLending_ConsumerLendingFeeTypeBoolExp
  _or: [ConsumerLending_ConsumerLendingFeeTypeBoolExp!]
}

"""
Records the results of high-cost mortgage tests performed under the Home Ownership and Equity Protection Act (HOEPA).
"""
type ConsumerLending_ConsumerLendingHighCostMortgageTests {
  """Whether additional disclosures required"""
  additionalDisclosuresRequired: ConsumerLending_Bool!

  """Average Prime Offer Rate used"""
  apor: ConsumerLending_Numeric

  """Date of APOR used"""
  aporDate: ConsumerLending_Date

  """APR used for test"""
  apr: ConsumerLending_Numeric!

  """Threshold for APR test"""
  aprThreshold: ConsumerLending_Numeric!

  """Reference to loan application"""
  consumerLendingApplicationId: ConsumerLending_Int4!
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplications

  """Unique identifier for HOEPA test"""
  consumerLendingTestId: ConsumerLending_Int4!

  """Whether loan is high-cost"""
  highCostMortgage: ConsumerLending_Bool!

  """Amount used for test"""
  loanAmount: ConsumerLending_Numeric!

  """Additional test notes"""
  notes: ConsumerLending_Text

  """Total points and fees"""
  pointsAndFees: ConsumerLending_Numeric!

  """Points and fees as percentage of loan"""
  pointsAndFeesPercentage: ConsumerLending_Numeric!

  """Threshold for points and fees test"""
  pointsAndFeesThreshold: ConsumerLending_Numeric!
  testBy: Enterprise_EnterpriseAssociates

  """Date test was performed"""
  testDate: ConsumerLending_Date!

  """APR Test, Points and Fees Test"""
  testType: ConsumerLending_Varchar!

  """User who performed test"""
  userId: ConsumerLending_Int4
}

type ConsumerLending_ConsumerLendingHighCostMortgageTestsAggExp {
  _count: Int!
  additionalDisclosuresRequired: ConsumerLending_BoolAggExp!
  apor: ConsumerLending_NumericAggExp!
  aporDate: ConsumerLending_DateAggExp!
  apr: ConsumerLending_NumericAggExp!
  aprThreshold: ConsumerLending_NumericAggExp!
  consumerLendingApplicationId: ConsumerLending_Int4AggExp!
  consumerLendingTestId: ConsumerLending_Int4AggExp!
  highCostMortgage: ConsumerLending_BoolAggExp!
  loanAmount: ConsumerLending_NumericAggExp!
  notes: ConsumerLending_TextAggExp!
  pointsAndFees: ConsumerLending_NumericAggExp!
  pointsAndFeesPercentage: ConsumerLending_NumericAggExp!
  pointsAndFeesThreshold: ConsumerLending_NumericAggExp!
  testDate: ConsumerLending_DateAggExp!
  testType: ConsumerLending_VarcharAggExp!
  userId: ConsumerLending_Int4AggExp!
}

input ConsumerLending_ConsumerLendingHighCostMortgageTestsBoolExp {
  _and: [ConsumerLending_ConsumerLendingHighCostMortgageTestsBoolExp!]
  _not: ConsumerLending_ConsumerLendingHighCostMortgageTestsBoolExp
  _or: [ConsumerLending_ConsumerLendingHighCostMortgageTestsBoolExp!]
  additionalDisclosuresRequired: ConsumerLending_BoolBoolExp
  apor: ConsumerLending_NumericBoolExp
  aporDate: ConsumerLending_DateBoolExp
  apr: ConsumerLending_NumericBoolExp
  aprThreshold: ConsumerLending_NumericBoolExp
  consumerLendingApplicationId: ConsumerLending_Int4BoolExp
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplicationsBoolExp
  consumerLendingTestId: ConsumerLending_Int4BoolExp
  highCostMortgage: ConsumerLending_BoolBoolExp
  loanAmount: ConsumerLending_NumericBoolExp
  notes: ConsumerLending_TextBoolExp
  pointsAndFees: ConsumerLending_NumericBoolExp
  pointsAndFeesPercentage: ConsumerLending_NumericBoolExp
  pointsAndFeesThreshold: ConsumerLending_NumericBoolExp
  testDate: ConsumerLending_DateBoolExp
  testType: ConsumerLending_VarcharBoolExp
  userId: ConsumerLending_Int4BoolExp
}

input ConsumerLending_ConsumerLendingHighCostMortgageTestsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingHighCostMortgageTestsOrderByExp!]
  where: ConsumerLending_ConsumerLendingHighCostMortgageTestsBoolExp
}

input ConsumerLending_ConsumerLendingHighCostMortgageTestsOrderByExp {
  additionalDisclosuresRequired: OrderBy
  apor: OrderBy
  aporDate: OrderBy
  apr: OrderBy
  aprThreshold: OrderBy
  consumerLendingApplicationId: OrderBy
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplicationsOrderByExp
  consumerLendingTestId: OrderBy
  highCostMortgage: OrderBy
  loanAmount: OrderBy
  notes: OrderBy
  pointsAndFees: OrderBy
  pointsAndFeesPercentage: OrderBy
  pointsAndFeesThreshold: OrderBy
  testDate: OrderBy
  testType: OrderBy
  userId: OrderBy
}

scalar ConsumerLending_ConsumerLendingHousingStatus

type ConsumerLending_ConsumerLendingHousingStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingHousingStatus
  min: ConsumerLending_ConsumerLendingHousingStatus
}

input ConsumerLending_ConsumerLendingHousingStatusBoolExp {
  _and: [ConsumerLending_ConsumerLendingHousingStatusBoolExp!]
  _eq: ConsumerLending_ConsumerLendingHousingStatus
  _gt: ConsumerLending_ConsumerLendingHousingStatus
  _gte: ConsumerLending_ConsumerLendingHousingStatus
  _in: [ConsumerLending_ConsumerLendingHousingStatus!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingHousingStatus
  _lte: ConsumerLending_ConsumerLendingHousingStatus
  _neq: ConsumerLending_ConsumerLendingHousingStatus
  _not: ConsumerLending_ConsumerLendingHousingStatusBoolExp
  _or: [ConsumerLending_ConsumerLendingHousingStatusBoolExp!]
}

scalar ConsumerLending_ConsumerLendingIncomeType

type ConsumerLending_ConsumerLendingIncomeTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingIncomeType
  min: ConsumerLending_ConsumerLendingIncomeType
}

input ConsumerLending_ConsumerLendingIncomeTypeBoolExp {
  _and: [ConsumerLending_ConsumerLendingIncomeTypeBoolExp!]
  _eq: ConsumerLending_ConsumerLendingIncomeType
  _gt: ConsumerLending_ConsumerLendingIncomeType
  _gte: ConsumerLending_ConsumerLendingIncomeType
  _in: [ConsumerLending_ConsumerLendingIncomeType!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingIncomeType
  _lte: ConsumerLending_ConsumerLendingIncomeType
  _neq: ConsumerLending_ConsumerLendingIncomeType
  _not: ConsumerLending_ConsumerLendingIncomeTypeBoolExp
  _or: [ConsumerLending_ConsumerLendingIncomeTypeBoolExp!]
}

scalar ConsumerLending_ConsumerLendingInformationMethod

type ConsumerLending_ConsumerLendingInformationMethodAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingInformationMethod
  min: ConsumerLending_ConsumerLendingInformationMethod
}

input ConsumerLending_ConsumerLendingInformationMethodBoolExp {
  _and: [ConsumerLending_ConsumerLendingInformationMethodBoolExp!]
  _eq: ConsumerLending_ConsumerLendingInformationMethod
  _gt: ConsumerLending_ConsumerLendingInformationMethod
  _gte: ConsumerLending_ConsumerLendingInformationMethod
  _in: [ConsumerLending_ConsumerLendingInformationMethod!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingInformationMethod
  _lte: ConsumerLending_ConsumerLendingInformationMethod
  _neq: ConsumerLending_ConsumerLendingInformationMethod
  _not: ConsumerLending_ConsumerLendingInformationMethodBoolExp
  _or: [ConsumerLending_ConsumerLendingInformationMethodBoolExp!]
}

scalar ConsumerLending_ConsumerLendingInquiryType

type ConsumerLending_ConsumerLendingInquiryTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingInquiryType
  min: ConsumerLending_ConsumerLendingInquiryType
}

input ConsumerLending_ConsumerLendingInquiryTypeBoolExp {
  _and: [ConsumerLending_ConsumerLendingInquiryTypeBoolExp!]
  _eq: ConsumerLending_ConsumerLendingInquiryType
  _gt: ConsumerLending_ConsumerLendingInquiryType
  _gte: ConsumerLending_ConsumerLendingInquiryType
  _in: [ConsumerLending_ConsumerLendingInquiryType!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingInquiryType
  _lte: ConsumerLending_ConsumerLendingInquiryType
  _neq: ConsumerLending_ConsumerLendingInquiryType
  _not: ConsumerLending_ConsumerLendingInquiryTypeBoolExp
  _or: [ConsumerLending_ConsumerLendingInquiryTypeBoolExp!]
}

scalar ConsumerLending_ConsumerLendingInsuranceStatus

type ConsumerLending_ConsumerLendingInsuranceStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingInsuranceStatus
  min: ConsumerLending_ConsumerLendingInsuranceStatus
}

input ConsumerLending_ConsumerLendingInsuranceStatusBoolExp {
  _and: [ConsumerLending_ConsumerLendingInsuranceStatusBoolExp!]
  _eq: ConsumerLending_ConsumerLendingInsuranceStatus
  _gt: ConsumerLending_ConsumerLendingInsuranceStatus
  _gte: ConsumerLending_ConsumerLendingInsuranceStatus
  _in: [ConsumerLending_ConsumerLendingInsuranceStatus!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingInsuranceStatus
  _lte: ConsumerLending_ConsumerLendingInsuranceStatus
  _neq: ConsumerLending_ConsumerLendingInsuranceStatus
  _not: ConsumerLending_ConsumerLendingInsuranceStatusBoolExp
  _or: [ConsumerLending_ConsumerLendingInsuranceStatusBoolExp!]
}

scalar ConsumerLending_ConsumerLendingInsuranceType

type ConsumerLending_ConsumerLendingInsuranceTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingInsuranceType
  min: ConsumerLending_ConsumerLendingInsuranceType
}

input ConsumerLending_ConsumerLendingInsuranceTypeBoolExp {
  _and: [ConsumerLending_ConsumerLendingInsuranceTypeBoolExp!]
  _eq: ConsumerLending_ConsumerLendingInsuranceType
  _gt: ConsumerLending_ConsumerLendingInsuranceType
  _gte: ConsumerLending_ConsumerLendingInsuranceType
  _in: [ConsumerLending_ConsumerLendingInsuranceType!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingInsuranceType
  _lte: ConsumerLending_ConsumerLendingInsuranceType
  _neq: ConsumerLending_ConsumerLendingInsuranceType
  _not: ConsumerLending_ConsumerLendingInsuranceTypeBoolExp
  _or: [ConsumerLending_ConsumerLendingInsuranceTypeBoolExp!]
}

scalar ConsumerLending_ConsumerLendingInterestRateType

type ConsumerLending_ConsumerLendingInterestRateTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingInterestRateType
  min: ConsumerLending_ConsumerLendingInterestRateType
}

input ConsumerLending_ConsumerLendingInterestRateTypeBoolExp {
  _and: [ConsumerLending_ConsumerLendingInterestRateTypeBoolExp!]
  _eq: ConsumerLending_ConsumerLendingInterestRateType
  _gt: ConsumerLending_ConsumerLendingInterestRateType
  _gte: ConsumerLending_ConsumerLendingInterestRateType
  _in: [ConsumerLending_ConsumerLendingInterestRateType!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingInterestRateType
  _lte: ConsumerLending_ConsumerLendingInterestRateType
  _neq: ConsumerLending_ConsumerLendingInterestRateType
  _not: ConsumerLending_ConsumerLendingInterestRateTypeBoolExp
  _or: [ConsumerLending_ConsumerLendingInterestRateTypeBoolExp!]
}

scalar ConsumerLending_ConsumerLendingLiabilityType

type ConsumerLending_ConsumerLendingLiabilityTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingLiabilityType
  min: ConsumerLending_ConsumerLendingLiabilityType
}

input ConsumerLending_ConsumerLendingLiabilityTypeBoolExp {
  _and: [ConsumerLending_ConsumerLendingLiabilityTypeBoolExp!]
  _eq: ConsumerLending_ConsumerLendingLiabilityType
  _gt: ConsumerLending_ConsumerLendingLiabilityType
  _gte: ConsumerLending_ConsumerLendingLiabilityType
  _in: [ConsumerLending_ConsumerLendingLiabilityType!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingLiabilityType
  _lte: ConsumerLending_ConsumerLendingLiabilityType
  _neq: ConsumerLending_ConsumerLendingLiabilityType
  _not: ConsumerLending_ConsumerLendingLiabilityTypeBoolExp
  _or: [ConsumerLending_ConsumerLendingLiabilityTypeBoolExp!]
}

"""
Stores information about active loan accounts, including loan details, payment history, and current status.
"""
type ConsumerLending_ConsumerLendingLoanAccounts {
  """Customer-facing account number"""
  accountNumber: ConsumerLending_Varchar!

  """Current accrued unpaid interest"""
  accruedInterest: ConsumerLending_Numeric!

  """Whether automatic payments are active"""
  autoPayEnabled: ConsumerLending_Bool!

  """Reference to loan application"""
  consumerLendingApplicationId: ConsumerLending_Int4!
  consumerLendingCollectionAccounts(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingCollectionAccountsOrderByExp!], where: ConsumerLending_ConsumerLendingCollectionAccountsBoolExp): [ConsumerLending_ConsumerLendingCollectionAccounts!]
  consumerLendingCollectionAccountsAggregate(filter_input: ConsumerLending_ConsumerLendingCollectionAccountsFilterInput): ConsumerLending_ConsumerLendingCollectionAccountsAggExp!
  consumerLendingComplianceExceptions(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingComplianceExceptionsOrderByExp!], where: ConsumerLending_ConsumerLendingComplianceExceptionsBoolExp): [ConsumerLending_ConsumerLendingComplianceExceptions!]
  consumerLendingComplianceExceptionsAggregate(filter_input: ConsumerLending_ConsumerLendingComplianceExceptionsFilterInput): ConsumerLending_ConsumerLendingComplianceExceptionsAggExp!
  consumerLendingDisbursements(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingDisbursementsOrderByExp!], where: ConsumerLending_ConsumerLendingDisbursementsBoolExp): [ConsumerLending_ConsumerLendingDisbursements!]
  consumerLendingDisbursementsAggregate(filter_input: ConsumerLending_ConsumerLendingDisbursementsFilterInput): ConsumerLending_ConsumerLendingDisbursementsAggExp!

  """Unique identifier for loan account"""
  consumerLendingLoanAccountId: ConsumerLending_Int4!
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplications
  consumerLendingLoanCollaterals(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingLoanCollateralOrderByExp!], where: ConsumerLending_ConsumerLendingLoanCollateralBoolExp): [ConsumerLending_ConsumerLendingLoanCollateral!]
  consumerLendingLoanCollateralsAggregate(filter_input: ConsumerLending_ConsumerLendingLoanCollateralFilterInput): ConsumerLending_ConsumerLendingLoanCollateralAggExp!
  consumerLendingLoanCommunications(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingLoanCommunicationsOrderByExp!], where: ConsumerLending_ConsumerLendingLoanCommunicationsBoolExp): [ConsumerLending_ConsumerLendingLoanCommunications!]
  consumerLendingLoanCommunicationsAggregate(filter_input: ConsumerLending_ConsumerLendingLoanCommunicationsFilterInput): ConsumerLending_ConsumerLendingLoanCommunicationsAggExp!
  consumerLendingLoanDocuments(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingLoanDocumentsOrderByExp!], where: ConsumerLending_ConsumerLendingLoanDocumentsBoolExp): [ConsumerLending_ConsumerLendingLoanDocuments!]
  consumerLendingLoanDocumentsAggregate(filter_input: ConsumerLending_ConsumerLendingLoanDocumentsFilterInput): ConsumerLending_ConsumerLendingLoanDocumentsAggExp!
  consumerLendingLoanFees(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingLoanFeesOrderByExp!], where: ConsumerLending_ConsumerLendingLoanFeesBoolExp): [ConsumerLending_ConsumerLendingLoanFees!]
  consumerLendingLoanFeesAggregate(filter_input: ConsumerLending_ConsumerLendingLoanFeesFilterInput): ConsumerLending_ConsumerLendingLoanFeesAggExp!
  consumerLendingLoanInsurances(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingLoanInsuranceOrderByExp!], where: ConsumerLending_ConsumerLendingLoanInsuranceBoolExp): [ConsumerLending_ConsumerLendingLoanInsurance!]
  consumerLendingLoanInsurancesAggregate(filter_input: ConsumerLending_ConsumerLendingLoanInsuranceFilterInput): ConsumerLending_ConsumerLendingLoanInsuranceAggExp!
  consumerLendingLoanModifications(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingLoanModificationsOrderByExp!], where: ConsumerLending_ConsumerLendingLoanModificationsBoolExp): [ConsumerLending_ConsumerLendingLoanModifications!]
  consumerLendingLoanModificationsAggregate(filter_input: ConsumerLending_ConsumerLendingLoanModificationsFilterInput): ConsumerLending_ConsumerLendingLoanModificationsAggExp!
  consumerLendingLoanPayments(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingLoanPaymentsOrderByExp!], where: ConsumerLending_ConsumerLendingLoanPaymentsBoolExp): [ConsumerLending_ConsumerLendingLoanPayments!]
  consumerLendingLoanPaymentsAggregate(filter_input: ConsumerLending_ConsumerLendingLoanPaymentsFilterInput): ConsumerLending_ConsumerLendingLoanPaymentsAggExp!
  consumerLendingLoanProduct: ConsumerLending_ConsumerLendingLoanProducts

  """Reference to loan product"""
  consumerLendingLoanProductId: ConsumerLending_Int4!
  consumerLendingLoanStatements(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingLoanStatementsOrderByExp!], where: ConsumerLending_ConsumerLendingLoanStatementsBoolExp): [ConsumerLending_ConsumerLendingLoanStatements!]
  consumerLendingLoanStatementsAggregate(filter_input: ConsumerLending_ConsumerLendingLoanStatementsFilterInput): ConsumerLending_ConsumerLendingLoanStatementsAggExp!
  consumerLendingPaymentSchedules(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingPaymentSchedulesOrderByExp!], where: ConsumerLending_ConsumerLendingPaymentSchedulesBoolExp): [ConsumerLending_ConsumerLendingPaymentSchedules!]
  consumerLendingPaymentSchedulesAggregate(filter_input: ConsumerLending_ConsumerLendingPaymentSchedulesFilterInput): ConsumerLending_ConsumerLendingPaymentSchedulesAggExp!
  consumerLendingRegZDisclosures(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingRegZDisclosuresOrderByExp!], where: ConsumerLending_ConsumerLendingRegZDisclosuresBoolExp): [ConsumerLending_ConsumerLendingRegZDisclosures!]
  consumerLendingRegZDisclosuresAggregate(filter_input: ConsumerLending_ConsumerLendingRegZDisclosuresFilterInput): ConsumerLending_ConsumerLendingRegZDisclosuresAggExp!

  """Current interest rate"""
  currentInterestRate: ConsumerLending_Numeric!

  """Current principal balance"""
  currentPrincipalBalance: ConsumerLending_Numeric!

  """Current days past due"""
  daysPastDue: ConsumerLending_Int4!

  """Date first payment is due"""
  firstPaymentDate: ConsumerLending_Date!

  """Date loan was funded"""
  fundingDate: ConsumerLending_Date!

  """Total interest paid life of loan"""
  interestPaidTotal: ConsumerLending_Numeric!

  """Interest paid year to date"""
  interestPaidYtd: ConsumerLending_Numeric!

  """Count of 30+ day late payments"""
  lateCount30: ConsumerLending_Int4!

  """Count of 60+ day late payments"""
  lateCount60: ConsumerLending_Int4!

  """Count of 90+ day late payments"""
  lateCount90: ConsumerLending_Int4!

  """Scheduled loan payoff date"""
  maturityDate: ConsumerLending_Date!

  """Amount due for next payment"""
  nextPaymentAmount: ConsumerLending_Numeric!

  """Next payment due date"""
  nextPaymentDate: ConsumerLending_Date!

  """Interest rate at origination"""
  originalInterestRate: ConsumerLending_Numeric!

  """Initial loan amount"""
  originalPrincipalBalance: ConsumerLending_Numeric!

  """Original loan term in months"""
  originalTermMonths: ConsumerLending_Int4!

  """Date loan was originated"""
  originationDate: ConsumerLending_Date!

  """Current past due amount"""
  pastDueAmount: ConsumerLending_Numeric!

  """Regular payment amount"""
  paymentAmount: ConsumerLending_Numeric!

  """Monthly, Bi-weekly"""
  paymentFrequency: ConsumerLending_Varchar!

  """Total principal paid life of loan"""
  principalPaidTotal: ConsumerLending_Numeric!

  """Principal paid year to date"""
  principalPaidYtd: ConsumerLending_Numeric!

  """Remaining months on loan"""
  remainingTermMonths: ConsumerLending_Int4!

  """Date servicing was transferred if applicable"""
  servicingTransferredDate: ConsumerLending_Date

  """Active, Paid Off, Charged Off, etc."""
  status: ConsumerLending_Varchar!

  """Sum of all fees charged"""
  totalFeesCharged: ConsumerLending_Numeric!

  """Sum of all fees paid"""
  totalFeesPaid: ConsumerLending_Numeric!
}

type ConsumerLending_ConsumerLendingLoanAccountsAggExp {
  _count: Int!
  accountNumber: ConsumerLending_VarcharAggExp!
  accruedInterest: ConsumerLending_NumericAggExp!
  autoPayEnabled: ConsumerLending_BoolAggExp!
  consumerLendingApplicationId: ConsumerLending_Int4AggExp!
  consumerLendingLoanAccountId: ConsumerLending_Int4AggExp!
  consumerLendingLoanProductId: ConsumerLending_Int4AggExp!
  currentInterestRate: ConsumerLending_NumericAggExp!
  currentPrincipalBalance: ConsumerLending_NumericAggExp!
  daysPastDue: ConsumerLending_Int4AggExp!
  firstPaymentDate: ConsumerLending_DateAggExp!
  fundingDate: ConsumerLending_DateAggExp!
  interestPaidTotal: ConsumerLending_NumericAggExp!
  interestPaidYtd: ConsumerLending_NumericAggExp!
  lateCount30: ConsumerLending_Int4AggExp!
  lateCount60: ConsumerLending_Int4AggExp!
  lateCount90: ConsumerLending_Int4AggExp!
  maturityDate: ConsumerLending_DateAggExp!
  nextPaymentAmount: ConsumerLending_NumericAggExp!
  nextPaymentDate: ConsumerLending_DateAggExp!
  originalInterestRate: ConsumerLending_NumericAggExp!
  originalPrincipalBalance: ConsumerLending_NumericAggExp!
  originalTermMonths: ConsumerLending_Int4AggExp!
  originationDate: ConsumerLending_DateAggExp!
  pastDueAmount: ConsumerLending_NumericAggExp!
  paymentAmount: ConsumerLending_NumericAggExp!
  paymentFrequency: ConsumerLending_VarcharAggExp!
  principalPaidTotal: ConsumerLending_NumericAggExp!
  principalPaidYtd: ConsumerLending_NumericAggExp!
  remainingTermMonths: ConsumerLending_Int4AggExp!
  servicingTransferredDate: ConsumerLending_DateAggExp!
  status: ConsumerLending_VarcharAggExp!
  totalFeesCharged: ConsumerLending_NumericAggExp!
  totalFeesPaid: ConsumerLending_NumericAggExp!
}

input ConsumerLending_ConsumerLendingLoanAccountsBoolExp {
  _and: [ConsumerLending_ConsumerLendingLoanAccountsBoolExp!]
  _not: ConsumerLending_ConsumerLendingLoanAccountsBoolExp
  _or: [ConsumerLending_ConsumerLendingLoanAccountsBoolExp!]
  accountNumber: ConsumerLending_VarcharBoolExp
  accruedInterest: ConsumerLending_NumericBoolExp
  autoPayEnabled: ConsumerLending_BoolBoolExp
  consumerLendingApplicationId: ConsumerLending_Int4BoolExp
  consumerLendingCollectionAccounts: ConsumerLending_ConsumerLendingCollectionAccountsBoolExp
  consumerLendingComplianceExceptions: ConsumerLending_ConsumerLendingComplianceExceptionsBoolExp
  consumerLendingDisbursements: ConsumerLending_ConsumerLendingDisbursementsBoolExp
  consumerLendingLoanAccountId: ConsumerLending_Int4BoolExp
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplicationsBoolExp
  consumerLendingLoanCollaterals: ConsumerLending_ConsumerLendingLoanCollateralBoolExp
  consumerLendingLoanCommunications: ConsumerLending_ConsumerLendingLoanCommunicationsBoolExp
  consumerLendingLoanDocuments: ConsumerLending_ConsumerLendingLoanDocumentsBoolExp
  consumerLendingLoanFees: ConsumerLending_ConsumerLendingLoanFeesBoolExp
  consumerLendingLoanInsurances: ConsumerLending_ConsumerLendingLoanInsuranceBoolExp
  consumerLendingLoanModifications: ConsumerLending_ConsumerLendingLoanModificationsBoolExp
  consumerLendingLoanPayments: ConsumerLending_ConsumerLendingLoanPaymentsBoolExp
  consumerLendingLoanProduct: ConsumerLending_ConsumerLendingLoanProductsBoolExp
  consumerLendingLoanProductId: ConsumerLending_Int4BoolExp
  consumerLendingLoanStatements: ConsumerLending_ConsumerLendingLoanStatementsBoolExp
  consumerLendingPaymentSchedules: ConsumerLending_ConsumerLendingPaymentSchedulesBoolExp
  consumerLendingRegZDisclosures: ConsumerLending_ConsumerLendingRegZDisclosuresBoolExp
  currentInterestRate: ConsumerLending_NumericBoolExp
  currentPrincipalBalance: ConsumerLending_NumericBoolExp
  daysPastDue: ConsumerLending_Int4BoolExp
  firstPaymentDate: ConsumerLending_DateBoolExp
  fundingDate: ConsumerLending_DateBoolExp
  interestPaidTotal: ConsumerLending_NumericBoolExp
  interestPaidYtd: ConsumerLending_NumericBoolExp
  lateCount30: ConsumerLending_Int4BoolExp
  lateCount60: ConsumerLending_Int4BoolExp
  lateCount90: ConsumerLending_Int4BoolExp
  maturityDate: ConsumerLending_DateBoolExp
  nextPaymentAmount: ConsumerLending_NumericBoolExp
  nextPaymentDate: ConsumerLending_DateBoolExp
  originalInterestRate: ConsumerLending_NumericBoolExp
  originalPrincipalBalance: ConsumerLending_NumericBoolExp
  originalTermMonths: ConsumerLending_Int4BoolExp
  originationDate: ConsumerLending_DateBoolExp
  pastDueAmount: ConsumerLending_NumericBoolExp
  paymentAmount: ConsumerLending_NumericBoolExp
  paymentFrequency: ConsumerLending_VarcharBoolExp
  principalPaidTotal: ConsumerLending_NumericBoolExp
  principalPaidYtd: ConsumerLending_NumericBoolExp
  remainingTermMonths: ConsumerLending_Int4BoolExp
  servicingTransferredDate: ConsumerLending_DateBoolExp
  status: ConsumerLending_VarcharBoolExp
  totalFeesCharged: ConsumerLending_NumericBoolExp
  totalFeesPaid: ConsumerLending_NumericBoolExp
}

input ConsumerLending_ConsumerLendingLoanAccountsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingLoanAccountsOrderByExp!]
  where: ConsumerLending_ConsumerLendingLoanAccountsBoolExp
}

input ConsumerLending_ConsumerLendingLoanAccountsOrderByExp {
  accountNumber: OrderBy
  accruedInterest: OrderBy
  autoPayEnabled: OrderBy
  consumerLendingApplicationId: OrderBy
  consumerLendingLoanAccountId: OrderBy
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplicationsOrderByExp
  consumerLendingLoanProduct: ConsumerLending_ConsumerLendingLoanProductsOrderByExp
  consumerLendingLoanProductId: OrderBy
  currentInterestRate: OrderBy
  currentPrincipalBalance: OrderBy
  daysPastDue: OrderBy
  firstPaymentDate: OrderBy
  fundingDate: OrderBy
  interestPaidTotal: OrderBy
  interestPaidYtd: OrderBy
  lateCount30: OrderBy
  lateCount60: OrderBy
  lateCount90: OrderBy
  maturityDate: OrderBy
  nextPaymentAmount: OrderBy
  nextPaymentDate: OrderBy
  originalInterestRate: OrderBy
  originalPrincipalBalance: OrderBy
  originalTermMonths: OrderBy
  originationDate: OrderBy
  pastDueAmount: OrderBy
  paymentAmount: OrderBy
  paymentFrequency: OrderBy
  principalPaidTotal: OrderBy
  principalPaidYtd: OrderBy
  remainingTermMonths: OrderBy
  servicingTransferredDate: OrderBy
  status: OrderBy
  totalFeesCharged: OrderBy
  totalFeesPaid: OrderBy
}

"""Stores consumer lending applications for non-mortgage loans"""
type ConsumerLending_ConsumerLendingLoanApplications {
  applicationBranch: Enterprise_EnterpriseBuildings

  """Online, Mobile, Branch, Phone"""
  applicationChannel: ConsumerLending_Varchar

  """Personal, Auto, Student, Home Improvement, etc."""
  applicationType: ConsumerLending_Varchar!
  assignedOfficer: Enterprise_EnterpriseAssociates

  """Branch where application was processed"""
  branchId: ConsumerLending_Int4
  consumerLendingAdverseActionNotices(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingAdverseActionNoticesOrderByExp!], where: ConsumerLending_ConsumerLendingAdverseActionNoticesBoolExp): [ConsumerLending_ConsumerLendingAdverseActionNotices!]
  consumerLendingAdverseActionNoticesAggregate(filter_input: ConsumerLending_ConsumerLendingAdverseActionNoticesFilterInput): ConsumerLending_ConsumerLendingAdverseActionNoticesAggExp!
  consumerLendingApplicationApplicants(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingApplicationApplicantsOrderByExp!], where: ConsumerLending_ConsumerLendingApplicationApplicantsBoolExp): [ConsumerLending_ConsumerLendingApplicationApplicants!]
  consumerLendingApplicationApplicantsAggregate(filter_input: ConsumerLending_ConsumerLendingApplicationApplicantsFilterInput): ConsumerLending_ConsumerLendingApplicationApplicantsAggExp!
  consumerLendingApplicationDecisions(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingApplicationDecisionsOrderByExp!], where: ConsumerLending_ConsumerLendingApplicationDecisionsBoolExp): [ConsumerLending_ConsumerLendingApplicationDecisions!]
  consumerLendingApplicationDecisionsAggregate(filter_input: ConsumerLending_ConsumerLendingApplicationDecisionsFilterInput): ConsumerLending_ConsumerLendingApplicationDecisionsAggExp!

  """Unique identifier for the loan application"""
  consumerLendingApplicationId: ConsumerLending_Int4!
  consumerLendingAppraisalDisclosures(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingAppraisalDisclosuresOrderByExp!], where: ConsumerLending_ConsumerLendingAppraisalDisclosuresBoolExp): [ConsumerLending_ConsumerLendingAppraisalDisclosures!]
  consumerLendingAppraisalDisclosuresAggregate(filter_input: ConsumerLending_ConsumerLendingAppraisalDisclosuresFilterInput): ConsumerLending_ConsumerLendingAppraisalDisclosuresAggExp!
  consumerLendingComplianceExceptions(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingComplianceExceptionsOrderByExp!], where: ConsumerLending_ConsumerLendingComplianceExceptionsBoolExp): [ConsumerLending_ConsumerLendingComplianceExceptions!]
  consumerLendingComplianceExceptionsAggregate(filter_input: ConsumerLending_ConsumerLendingComplianceExceptionsFilterInput): ConsumerLending_ConsumerLendingComplianceExceptionsAggExp!
  consumerLendingCreditReports(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingCreditReportsOrderByExp!], where: ConsumerLending_ConsumerLendingCreditReportsBoolExp): [ConsumerLending_ConsumerLendingCreditReports!]
  consumerLendingCreditReportsAggregate(filter_input: ConsumerLending_ConsumerLendingCreditReportsFilterInput): ConsumerLending_ConsumerLendingCreditReportsAggExp!
  consumerLendingEcoaMonitorings(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingEcoaMonitoringOrderByExp!], where: ConsumerLending_ConsumerLendingEcoaMonitoringBoolExp): [ConsumerLending_ConsumerLendingEcoaMonitoring!]
  consumerLendingEcoaMonitoringsAggregate(filter_input: ConsumerLending_ConsumerLendingEcoaMonitoringFilterInput): ConsumerLending_ConsumerLendingEcoaMonitoringAggExp!
  consumerLendingHighCostMortgageTests(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingHighCostMortgageTestsOrderByExp!], where: ConsumerLending_ConsumerLendingHighCostMortgageTestsBoolExp): [ConsumerLending_ConsumerLendingHighCostMortgageTests!]
  consumerLendingHighCostMortgageTestsAggregate(filter_input: ConsumerLending_ConsumerLendingHighCostMortgageTestsFilterInput): ConsumerLending_ConsumerLendingHighCostMortgageTestsAggExp!
  consumerLendingLoanAccounts(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingLoanAccountsOrderByExp!], where: ConsumerLending_ConsumerLendingLoanAccountsBoolExp): [ConsumerLending_ConsumerLendingLoanAccounts!]
  consumerLendingLoanAccountsAggregate(filter_input: ConsumerLending_ConsumerLendingLoanAccountsFilterInput): ConsumerLending_ConsumerLendingLoanAccountsAggExp!
  consumerLendingLoanCommunications(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingLoanCommunicationsOrderByExp!], where: ConsumerLending_ConsumerLendingLoanCommunicationsBoolExp): [ConsumerLending_ConsumerLendingLoanCommunications!]
  consumerLendingLoanCommunicationsAggregate(filter_input: ConsumerLending_ConsumerLendingLoanCommunicationsFilterInput): ConsumerLending_ConsumerLendingLoanCommunicationsAggExp!
  consumerLendingLoanDocuments(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingLoanDocumentsOrderByExp!], where: ConsumerLending_ConsumerLendingLoanDocumentsBoolExp): [ConsumerLending_ConsumerLendingLoanDocuments!]
  consumerLendingLoanDocumentsAggregate(filter_input: ConsumerLending_ConsumerLendingLoanDocumentsFilterInput): ConsumerLending_ConsumerLendingLoanDocumentsAggExp!
  consumerLendingMilitaryLendingChecks(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingMilitaryLendingChecksOrderByExp!], where: ConsumerLending_ConsumerLendingMilitaryLendingChecksBoolExp): [ConsumerLending_ConsumerLendingMilitaryLendingChecks!]
  consumerLendingMilitaryLendingChecksAggregate(filter_input: ConsumerLending_ConsumerLendingMilitaryLendingChecksFilterInput): ConsumerLending_ConsumerLendingMilitaryLendingChecksAggExp!
  consumerLendingRegBNotices(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingRegBNoticesOrderByExp!], where: ConsumerLending_ConsumerLendingRegBNoticesBoolExp): [ConsumerLending_ConsumerLendingRegBNotices!]
  consumerLendingRegBNoticesAggregate(filter_input: ConsumerLending_ConsumerLendingRegBNoticesFilterInput): ConsumerLending_ConsumerLendingRegBNoticesAggExp!
  consumerLendingRegZDisclosures(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingRegZDisclosuresOrderByExp!], where: ConsumerLending_ConsumerLendingRegZDisclosuresBoolExp): [ConsumerLending_ConsumerLendingRegZDisclosures!]
  consumerLendingRegZDisclosuresAggregate(filter_input: ConsumerLending_ConsumerLendingRegZDisclosuresFilterInput): ConsumerLending_ConsumerLendingRegZDisclosuresAggExp!
  consumerLendingVehicles(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingVehiclesOrderByExp!], where: ConsumerLending_ConsumerLendingVehiclesBoolExp): [ConsumerLending_ConsumerLendingVehicles!]
  consumerLendingVehiclesAggregate(filter_input: ConsumerLending_ConsumerLendingVehiclesFilterInput): ConsumerLending_ConsumerLendingVehiclesAggExp!

  """When application was initially created"""
  creationDateTime: ConsumerLending_Timestamptz!
  customer: Enterprise_EnterpriseAccounts

  """Reference to enterprise.accounts"""
  customerId: ConsumerLending_Int4!

  """When final decision was made"""
  decisionDateTime: ConsumerLending_Timestamptz

  """Primary reason for approval/denial"""
  decisionReason: ConsumerLending_Varchar

  """Estimated or self-reported credit score"""
  estimatedCreditScore: ConsumerLending_Int4

  """Last modification timestamp"""
  lastUpdatedDateTime: ConsumerLending_Timestamptz!

  """Purpose for the loan"""
  loanPurpose: ConsumerLending_Varchar!

  """Loan officer assigned to application"""
  officerId: ConsumerLending_Int4

  """Marketing channel or referral source"""
  referralSource: ConsumerLending_Varchar

  """Amount requested by applicant"""
  requestedAmount: ConsumerLending_Numeric!

  """Loan term in months requested by applicant"""
  requestedTermMonths: ConsumerLending_Int4!

  """Draft, Submitted, In Review, Approved, Denied, Cancelled"""
  status: ConsumerLending_Varchar!

  """When application was submitted by customer"""
  submissionDateTime: ConsumerLending_Timestamptz
}

type ConsumerLending_ConsumerLendingLoanApplicationsAggExp {
  _count: Int!
  applicationChannel: ConsumerLending_VarcharAggExp!
  applicationType: ConsumerLending_VarcharAggExp!
  branchId: ConsumerLending_Int4AggExp!
  consumerLendingApplicationId: ConsumerLending_Int4AggExp!
  creationDateTime: ConsumerLending_TimestamptzAggExp!
  customerId: ConsumerLending_Int4AggExp!
  decisionDateTime: ConsumerLending_TimestamptzAggExp!
  decisionReason: ConsumerLending_VarcharAggExp!
  estimatedCreditScore: ConsumerLending_Int4AggExp!
  lastUpdatedDateTime: ConsumerLending_TimestamptzAggExp!
  loanPurpose: ConsumerLending_VarcharAggExp!
  officerId: ConsumerLending_Int4AggExp!
  referralSource: ConsumerLending_VarcharAggExp!
  requestedAmount: ConsumerLending_NumericAggExp!
  requestedTermMonths: ConsumerLending_Int4AggExp!
  status: ConsumerLending_VarcharAggExp!
  submissionDateTime: ConsumerLending_TimestamptzAggExp!
}

input ConsumerLending_ConsumerLendingLoanApplicationsBoolExp {
  _and: [ConsumerLending_ConsumerLendingLoanApplicationsBoolExp!]
  _not: ConsumerLending_ConsumerLendingLoanApplicationsBoolExp
  _or: [ConsumerLending_ConsumerLendingLoanApplicationsBoolExp!]
  applicationChannel: ConsumerLending_VarcharBoolExp
  applicationType: ConsumerLending_VarcharBoolExp
  branchId: ConsumerLending_Int4BoolExp
  consumerLendingAdverseActionNotices: ConsumerLending_ConsumerLendingAdverseActionNoticesBoolExp
  consumerLendingApplicationApplicants: ConsumerLending_ConsumerLendingApplicationApplicantsBoolExp
  consumerLendingApplicationDecisions: ConsumerLending_ConsumerLendingApplicationDecisionsBoolExp
  consumerLendingApplicationId: ConsumerLending_Int4BoolExp
  consumerLendingAppraisalDisclosures: ConsumerLending_ConsumerLendingAppraisalDisclosuresBoolExp
  consumerLendingComplianceExceptions: ConsumerLending_ConsumerLendingComplianceExceptionsBoolExp
  consumerLendingCreditReports: ConsumerLending_ConsumerLendingCreditReportsBoolExp
  consumerLendingEcoaMonitorings: ConsumerLending_ConsumerLendingEcoaMonitoringBoolExp
  consumerLendingHighCostMortgageTests: ConsumerLending_ConsumerLendingHighCostMortgageTestsBoolExp
  consumerLendingLoanAccounts: ConsumerLending_ConsumerLendingLoanAccountsBoolExp
  consumerLendingLoanCommunications: ConsumerLending_ConsumerLendingLoanCommunicationsBoolExp
  consumerLendingLoanDocuments: ConsumerLending_ConsumerLendingLoanDocumentsBoolExp
  consumerLendingMilitaryLendingChecks: ConsumerLending_ConsumerLendingMilitaryLendingChecksBoolExp
  consumerLendingRegBNotices: ConsumerLending_ConsumerLendingRegBNoticesBoolExp
  consumerLendingRegZDisclosures: ConsumerLending_ConsumerLendingRegZDisclosuresBoolExp
  consumerLendingVehicles: ConsumerLending_ConsumerLendingVehiclesBoolExp
  creationDateTime: ConsumerLending_TimestamptzBoolExp
  customerId: ConsumerLending_Int4BoolExp
  decisionDateTime: ConsumerLending_TimestamptzBoolExp
  decisionReason: ConsumerLending_VarcharBoolExp
  estimatedCreditScore: ConsumerLending_Int4BoolExp
  lastUpdatedDateTime: ConsumerLending_TimestamptzBoolExp
  loanPurpose: ConsumerLending_VarcharBoolExp
  officerId: ConsumerLending_Int4BoolExp
  referralSource: ConsumerLending_VarcharBoolExp
  requestedAmount: ConsumerLending_NumericBoolExp
  requestedTermMonths: ConsumerLending_Int4BoolExp
  status: ConsumerLending_VarcharBoolExp
  submissionDateTime: ConsumerLending_TimestamptzBoolExp
}

input ConsumerLending_ConsumerLendingLoanApplicationsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingLoanApplicationsOrderByExp!]
  where: ConsumerLending_ConsumerLendingLoanApplicationsBoolExp
}

input ConsumerLending_ConsumerLendingLoanApplicationsOrderByExp {
  applicationChannel: OrderBy
  applicationType: OrderBy
  branchId: OrderBy
  consumerLendingApplicationId: OrderBy
  creationDateTime: OrderBy
  customerId: OrderBy
  decisionDateTime: OrderBy
  decisionReason: OrderBy
  estimatedCreditScore: OrderBy
  lastUpdatedDateTime: OrderBy
  loanPurpose: OrderBy
  officerId: OrderBy
  referralSource: OrderBy
  requestedAmount: OrderBy
  requestedTermMonths: OrderBy
  status: OrderBy
  submissionDateTime: OrderBy
}

"""
Stores information about collateral used to secure loans, including type, value, and insurance requirements.
"""
type ConsumerLending_ConsumerLendingLoanCollateral {
  """Type of collateral"""
  collateralType: ConsumerLending_ConsumerLendingCollateralType!

  """Unique identifier for collateral"""
  consumerLendingCollateralId: ConsumerLending_Int4!
  consumerLendingLoanAccount: ConsumerLending_ConsumerLendingLoanAccounts
  consumerLendingLoanInsurances(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingLoanInsuranceOrderByExp!], where: ConsumerLending_ConsumerLendingLoanInsuranceBoolExp): [ConsumerLending_ConsumerLendingLoanInsurance!]
  consumerLendingLoanInsurancesAggregate(filter_input: ConsumerLending_ConsumerLendingLoanInsuranceFilterInput): ConsumerLending_ConsumerLendingLoanInsuranceAggExp!
  consumerLendingVehicle: ConsumerLending_ConsumerLendingVehicles
  depositAccount: Enterprise_EnterpriseAccounts

  """Reference to enterprise.accounts if deposit"""
  depositAccountId: ConsumerLending_Int4

  """Description of collateral"""
  description: ConsumerLending_Varchar!

  """Expiration date of insurance policy"""
  insuranceExpirationDate: ConsumerLending_Date

  """Whether insurance is required"""
  insuranceRequired: ConsumerLending_Bool!

  """Priority of lien"""
  lienPosition: ConsumerLending_Int4

  """Date lien was recorded"""
  lienRecordingDate: ConsumerLending_Date

  """Lien recording reference number"""
  lienRecordingNumber: ConsumerLending_Varchar

  """Reference to loan account"""
  loanAccountId: ConsumerLending_Int4!
  propertyAddress: Enterprise_EnterpriseAddresses

  """Reference to enterprise.addresses if property"""
  propertyAddressId: ConsumerLending_Int4

  """Date of valuation"""
  valuationDate: ConsumerLending_Date!

  """Estimated value of collateral"""
  value: ConsumerLending_Numeric!

  """Reference to vehicles table if applicable"""
  vehicleId: ConsumerLending_Int4
}

type ConsumerLending_ConsumerLendingLoanCollateralAggExp {
  _count: Int!
  collateralType: ConsumerLending_ConsumerLendingCollateralTypeAggExp!
  consumerLendingCollateralId: ConsumerLending_Int4AggExp!
  depositAccountId: ConsumerLending_Int4AggExp!
  description: ConsumerLending_VarcharAggExp!
  insuranceExpirationDate: ConsumerLending_DateAggExp!
  insuranceRequired: ConsumerLending_BoolAggExp!
  lienPosition: ConsumerLending_Int4AggExp!
  lienRecordingDate: ConsumerLending_DateAggExp!
  lienRecordingNumber: ConsumerLending_VarcharAggExp!
  loanAccountId: ConsumerLending_Int4AggExp!
  propertyAddressId: ConsumerLending_Int4AggExp!
  valuationDate: ConsumerLending_DateAggExp!
  value: ConsumerLending_NumericAggExp!
  vehicleId: ConsumerLending_Int4AggExp!
}

input ConsumerLending_ConsumerLendingLoanCollateralBoolExp {
  _and: [ConsumerLending_ConsumerLendingLoanCollateralBoolExp!]
  _not: ConsumerLending_ConsumerLendingLoanCollateralBoolExp
  _or: [ConsumerLending_ConsumerLendingLoanCollateralBoolExp!]
  collateralType: ConsumerLending_ConsumerLendingCollateralTypeBoolExp
  consumerLendingCollateralId: ConsumerLending_Int4BoolExp
  consumerLendingLoanAccount: ConsumerLending_ConsumerLendingLoanAccountsBoolExp
  consumerLendingLoanInsurances: ConsumerLending_ConsumerLendingLoanInsuranceBoolExp
  consumerLendingVehicle: ConsumerLending_ConsumerLendingVehiclesBoolExp
  depositAccountId: ConsumerLending_Int4BoolExp
  description: ConsumerLending_VarcharBoolExp
  insuranceExpirationDate: ConsumerLending_DateBoolExp
  insuranceRequired: ConsumerLending_BoolBoolExp
  lienPosition: ConsumerLending_Int4BoolExp
  lienRecordingDate: ConsumerLending_DateBoolExp
  lienRecordingNumber: ConsumerLending_VarcharBoolExp
  loanAccountId: ConsumerLending_Int4BoolExp
  propertyAddressId: ConsumerLending_Int4BoolExp
  valuationDate: ConsumerLending_DateBoolExp
  value: ConsumerLending_NumericBoolExp
  vehicleId: ConsumerLending_Int4BoolExp
}

input ConsumerLending_ConsumerLendingLoanCollateralFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingLoanCollateralOrderByExp!]
  where: ConsumerLending_ConsumerLendingLoanCollateralBoolExp
}

input ConsumerLending_ConsumerLendingLoanCollateralOrderByExp {
  collateralType: OrderBy
  consumerLendingCollateralId: OrderBy
  consumerLendingLoanAccount: ConsumerLending_ConsumerLendingLoanAccountsOrderByExp
  consumerLendingVehicle: ConsumerLending_ConsumerLendingVehiclesOrderByExp
  depositAccountId: OrderBy
  description: OrderBy
  insuranceExpirationDate: OrderBy
  insuranceRequired: OrderBy
  lienPosition: OrderBy
  lienRecordingDate: OrderBy
  lienRecordingNumber: OrderBy
  loanAccountId: OrderBy
  propertyAddressId: OrderBy
  valuationDate: OrderBy
  value: OrderBy
  vehicleId: OrderBy
}

"""
Logs various communications related to loan applications and accounts, such as emails, letters, and phone calls.
"""
type ConsumerLending_ConsumerLendingLoanCommunications {
  """Date/time of communication"""
  communicationDate: ConsumerLending_Timestamptz!

  """Method of communication"""
  communicationType: ConsumerLending_ConsumerLendingCommunicationType!

  """Reference to loan application if applicable"""
  consumerLendingApplicationId: ConsumerLending_Int4

  """Unique identifier for communication"""
  consumerLendingCommunicationId: ConsumerLending_Int4!
  consumerLendingLoanAccount: ConsumerLending_ConsumerLendingLoanAccounts
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplications

  """Communication content or transcript"""
  content: ConsumerLending_Text

  """Direction of communication"""
  direction: ConsumerLending_ConsumerLendingCommunicationDirection!

  """Path to stored communication document"""
  documentPath: ConsumerLending_Varchar

  """Reference to loan account if applicable"""
  loanAccountId: ConsumerLending_Int4

  """Person who received communication"""
  recipient: ConsumerLending_Varchar

  """Context or purpose of communication"""
  relatedTo: ConsumerLending_ConsumerLendingCommunicationContext

  """Person or system that sent communication"""
  sender: ConsumerLending_Varchar

  """Current status of communication"""
  status: ConsumerLending_ConsumerLendingCommunicationStatus!

  """Communication subject"""
  subject: ConsumerLending_Varchar

  """Reference to template if applicable"""
  templateId: ConsumerLending_Varchar
}

type ConsumerLending_ConsumerLendingLoanCommunicationsAggExp {
  _count: Int!
  communicationDate: ConsumerLending_TimestamptzAggExp!
  communicationType: ConsumerLending_ConsumerLendingCommunicationTypeAggExp!
  consumerLendingApplicationId: ConsumerLending_Int4AggExp!
  consumerLendingCommunicationId: ConsumerLending_Int4AggExp!
  content: ConsumerLending_TextAggExp!
  direction: ConsumerLending_ConsumerLendingCommunicationDirectionAggExp!
  documentPath: ConsumerLending_VarcharAggExp!
  loanAccountId: ConsumerLending_Int4AggExp!
  recipient: ConsumerLending_VarcharAggExp!
  relatedTo: ConsumerLending_ConsumerLendingCommunicationContextAggExp!
  sender: ConsumerLending_VarcharAggExp!
  status: ConsumerLending_ConsumerLendingCommunicationStatusAggExp!
  subject: ConsumerLending_VarcharAggExp!
  templateId: ConsumerLending_VarcharAggExp!
}

input ConsumerLending_ConsumerLendingLoanCommunicationsBoolExp {
  _and: [ConsumerLending_ConsumerLendingLoanCommunicationsBoolExp!]
  _not: ConsumerLending_ConsumerLendingLoanCommunicationsBoolExp
  _or: [ConsumerLending_ConsumerLendingLoanCommunicationsBoolExp!]
  communicationDate: ConsumerLending_TimestamptzBoolExp
  communicationType: ConsumerLending_ConsumerLendingCommunicationTypeBoolExp
  consumerLendingApplicationId: ConsumerLending_Int4BoolExp
  consumerLendingCommunicationId: ConsumerLending_Int4BoolExp
  consumerLendingLoanAccount: ConsumerLending_ConsumerLendingLoanAccountsBoolExp
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplicationsBoolExp
  content: ConsumerLending_TextBoolExp
  direction: ConsumerLending_ConsumerLendingCommunicationDirectionBoolExp
  documentPath: ConsumerLending_VarcharBoolExp
  loanAccountId: ConsumerLending_Int4BoolExp
  recipient: ConsumerLending_VarcharBoolExp
  relatedTo: ConsumerLending_ConsumerLendingCommunicationContextBoolExp
  sender: ConsumerLending_VarcharBoolExp
  status: ConsumerLending_ConsumerLendingCommunicationStatusBoolExp
  subject: ConsumerLending_VarcharBoolExp
  templateId: ConsumerLending_VarcharBoolExp
}

input ConsumerLending_ConsumerLendingLoanCommunicationsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingLoanCommunicationsOrderByExp!]
  where: ConsumerLending_ConsumerLendingLoanCommunicationsBoolExp
}

input ConsumerLending_ConsumerLendingLoanCommunicationsOrderByExp {
  communicationDate: OrderBy
  communicationType: OrderBy
  consumerLendingApplicationId: OrderBy
  consumerLendingCommunicationId: OrderBy
  consumerLendingLoanAccount: ConsumerLending_ConsumerLendingLoanAccountsOrderByExp
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplicationsOrderByExp
  content: OrderBy
  direction: OrderBy
  documentPath: OrderBy
  loanAccountId: OrderBy
  recipient: OrderBy
  relatedTo: OrderBy
  sender: OrderBy
  status: OrderBy
  subject: OrderBy
  templateId: OrderBy
}

"""
Tracks documents related to loan applications and accounts, including application forms, contracts, and statements.
"""
type ConsumerLending_ConsumerLendingLoanDocuments {
  """Reference to loan application if applicable"""
  consumerLendingApplicationId: ConsumerLending_Int4

  """Unique identifier for document"""
  consumerLendingDocumentId: ConsumerLending_Int4!
  consumerLendingLoanAccount: ConsumerLending_ConsumerLendingLoanAccounts
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplications

  """File name or title"""
  documentName: ConsumerLending_Varchar!

  """Path to stored document"""
  documentPath: ConsumerLending_Varchar!

  """Type of document"""
  documentType: ConsumerLending_ConsumerLendingDocumentType!

  """Document expiration date if applicable"""
  expirationDate: ConsumerLending_Date

  """Reference to loan account if applicable"""
  loanAccountId: ConsumerLending_Int4

  """Additional document notes"""
  notes: ConsumerLending_Text

  """When document was reviewed"""
  reviewDate: ConsumerLending_Timestamptz

  """User who reviewed document"""
  reviewerId: ConsumerLending_Int4

  """Current status of the document"""
  status: ConsumerLending_ConsumerLendingDocumentStatus!

  """When document was created/uploaded"""
  uploadDate: ConsumerLending_Timestamptz!
}

type ConsumerLending_ConsumerLendingLoanDocumentsAggExp {
  _count: Int!
  consumerLendingApplicationId: ConsumerLending_Int4AggExp!
  consumerLendingDocumentId: ConsumerLending_Int4AggExp!
  documentName: ConsumerLending_VarcharAggExp!
  documentPath: ConsumerLending_VarcharAggExp!
  documentType: ConsumerLending_ConsumerLendingDocumentTypeAggExp!
  expirationDate: ConsumerLending_DateAggExp!
  loanAccountId: ConsumerLending_Int4AggExp!
  notes: ConsumerLending_TextAggExp!
  reviewDate: ConsumerLending_TimestamptzAggExp!
  reviewerId: ConsumerLending_Int4AggExp!
  status: ConsumerLending_ConsumerLendingDocumentStatusAggExp!
  uploadDate: ConsumerLending_TimestamptzAggExp!
}

input ConsumerLending_ConsumerLendingLoanDocumentsBoolExp {
  _and: [ConsumerLending_ConsumerLendingLoanDocumentsBoolExp!]
  _not: ConsumerLending_ConsumerLendingLoanDocumentsBoolExp
  _or: [ConsumerLending_ConsumerLendingLoanDocumentsBoolExp!]
  consumerLendingApplicationId: ConsumerLending_Int4BoolExp
  consumerLendingDocumentId: ConsumerLending_Int4BoolExp
  consumerLendingLoanAccount: ConsumerLending_ConsumerLendingLoanAccountsBoolExp
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplicationsBoolExp
  documentName: ConsumerLending_VarcharBoolExp
  documentPath: ConsumerLending_VarcharBoolExp
  documentType: ConsumerLending_ConsumerLendingDocumentTypeBoolExp
  expirationDate: ConsumerLending_DateBoolExp
  loanAccountId: ConsumerLending_Int4BoolExp
  notes: ConsumerLending_TextBoolExp
  reviewDate: ConsumerLending_TimestamptzBoolExp
  reviewerId: ConsumerLending_Int4BoolExp
  status: ConsumerLending_ConsumerLendingDocumentStatusBoolExp
  uploadDate: ConsumerLending_TimestamptzBoolExp
}

input ConsumerLending_ConsumerLendingLoanDocumentsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingLoanDocumentsOrderByExp!]
  where: ConsumerLending_ConsumerLendingLoanDocumentsBoolExp
}

input ConsumerLending_ConsumerLendingLoanDocumentsOrderByExp {
  consumerLendingApplicationId: OrderBy
  consumerLendingDocumentId: OrderBy
  consumerLendingLoanAccount: ConsumerLending_ConsumerLendingLoanAccountsOrderByExp
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplicationsOrderByExp
  documentName: OrderBy
  documentPath: OrderBy
  documentType: OrderBy
  expirationDate: OrderBy
  loanAccountId: OrderBy
  notes: OrderBy
  reviewDate: OrderBy
  reviewerId: OrderBy
  status: OrderBy
  uploadDate: OrderBy
}

"""
Tracks fees charged to loan accounts, including fee type, amount, status, and payment details.
"""
type ConsumerLending_ConsumerLendingLoanFees {
  """Unique identifier for fee"""
  consumerLendingFeeId: ConsumerLending_Int4!
  consumerLendingLoanAccount: ConsumerLending_ConsumerLendingLoanAccounts

  """Reference to loan account"""
  consumerLendingLoanAccountId: ConsumerLending_Int4!
  consumerLendingLoanPayment: ConsumerLending_ConsumerLendingLoanPayments

  """Reference to loan_payments if paid"""
  consumerLendingPaymentId: ConsumerLending_Int4

  """Fee amount"""
  feeAmount: ConsumerLending_Numeric!

  """Date fee was assessed"""
  feeDate: ConsumerLending_Date!

  """Current status of the fee"""
  feeStatus: ConsumerLending_ConsumerLendingLoanFeeStatus!

  """Type of fee charged"""
  feeType: ConsumerLending_ConsumerLendingLoanFeeType!
  feeWaivedBy: Enterprise_EnterpriseAssociates

  """Date fee was paid"""
  paidDate: ConsumerLending_Date

  """User who waived the fee"""
  waivedById: ConsumerLending_Int4

  """Date fee was waived if applicable"""
  waivedDate: ConsumerLending_Date

  """Reason fee was waived"""
  waiverReason: ConsumerLending_Varchar
}

type ConsumerLending_ConsumerLendingLoanFeesAggExp {
  _count: Int!
  consumerLendingFeeId: ConsumerLending_Int4AggExp!
  consumerLendingLoanAccountId: ConsumerLending_Int4AggExp!
  consumerLendingPaymentId: ConsumerLending_Int4AggExp!
  feeAmount: ConsumerLending_NumericAggExp!
  feeDate: ConsumerLending_DateAggExp!
  feeStatus: ConsumerLending_ConsumerLendingLoanFeeStatusAggExp!
  feeType: ConsumerLending_ConsumerLendingLoanFeeTypeAggExp!
  paidDate: ConsumerLending_DateAggExp!
  waivedById: ConsumerLending_Int4AggExp!
  waivedDate: ConsumerLending_DateAggExp!
  waiverReason: ConsumerLending_VarcharAggExp!
}

input ConsumerLending_ConsumerLendingLoanFeesBoolExp {
  _and: [ConsumerLending_ConsumerLendingLoanFeesBoolExp!]
  _not: ConsumerLending_ConsumerLendingLoanFeesBoolExp
  _or: [ConsumerLending_ConsumerLendingLoanFeesBoolExp!]
  consumerLendingFeeId: ConsumerLending_Int4BoolExp
  consumerLendingLoanAccount: ConsumerLending_ConsumerLendingLoanAccountsBoolExp
  consumerLendingLoanAccountId: ConsumerLending_Int4BoolExp
  consumerLendingLoanPayment: ConsumerLending_ConsumerLendingLoanPaymentsBoolExp
  consumerLendingPaymentId: ConsumerLending_Int4BoolExp
  feeAmount: ConsumerLending_NumericBoolExp
  feeDate: ConsumerLending_DateBoolExp
  feeStatus: ConsumerLending_ConsumerLendingLoanFeeStatusBoolExp
  feeType: ConsumerLending_ConsumerLendingLoanFeeTypeBoolExp
  paidDate: ConsumerLending_DateBoolExp
  waivedById: ConsumerLending_Int4BoolExp
  waivedDate: ConsumerLending_DateBoolExp
  waiverReason: ConsumerLending_VarcharBoolExp
}

input ConsumerLending_ConsumerLendingLoanFeesFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingLoanFeesOrderByExp!]
  where: ConsumerLending_ConsumerLendingLoanFeesBoolExp
}

input ConsumerLending_ConsumerLendingLoanFeesOrderByExp {
  consumerLendingFeeId: OrderBy
  consumerLendingLoanAccount: ConsumerLending_ConsumerLendingLoanAccountsOrderByExp
  consumerLendingLoanAccountId: OrderBy
  consumerLendingLoanPayment: ConsumerLending_ConsumerLendingLoanPaymentsOrderByExp
  consumerLendingPaymentId: OrderBy
  feeAmount: OrderBy
  feeDate: OrderBy
  feeStatus: OrderBy
  feeType: OrderBy
  paidDate: OrderBy
  waivedById: OrderBy
  waivedDate: OrderBy
  waiverReason: OrderBy
}

scalar ConsumerLending_ConsumerLendingLoanFeeStatus

type ConsumerLending_ConsumerLendingLoanFeeStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingLoanFeeStatus
  min: ConsumerLending_ConsumerLendingLoanFeeStatus
}

input ConsumerLending_ConsumerLendingLoanFeeStatusBoolExp {
  _and: [ConsumerLending_ConsumerLendingLoanFeeStatusBoolExp!]
  _eq: ConsumerLending_ConsumerLendingLoanFeeStatus
  _gt: ConsumerLending_ConsumerLendingLoanFeeStatus
  _gte: ConsumerLending_ConsumerLendingLoanFeeStatus
  _in: [ConsumerLending_ConsumerLendingLoanFeeStatus!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingLoanFeeStatus
  _lte: ConsumerLending_ConsumerLendingLoanFeeStatus
  _neq: ConsumerLending_ConsumerLendingLoanFeeStatus
  _not: ConsumerLending_ConsumerLendingLoanFeeStatusBoolExp
  _or: [ConsumerLending_ConsumerLendingLoanFeeStatusBoolExp!]
}

scalar ConsumerLending_ConsumerLendingLoanFeeType

type ConsumerLending_ConsumerLendingLoanFeeTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingLoanFeeType
  min: ConsumerLending_ConsumerLendingLoanFeeType
}

input ConsumerLending_ConsumerLendingLoanFeeTypeBoolExp {
  _and: [ConsumerLending_ConsumerLendingLoanFeeTypeBoolExp!]
  _eq: ConsumerLending_ConsumerLendingLoanFeeType
  _gt: ConsumerLending_ConsumerLendingLoanFeeType
  _gte: ConsumerLending_ConsumerLendingLoanFeeType
  _in: [ConsumerLending_ConsumerLendingLoanFeeType!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingLoanFeeType
  _lte: ConsumerLending_ConsumerLendingLoanFeeType
  _neq: ConsumerLending_ConsumerLendingLoanFeeType
  _not: ConsumerLending_ConsumerLendingLoanFeeTypeBoolExp
  _or: [ConsumerLending_ConsumerLendingLoanFeeTypeBoolExp!]
}

"""
Stores information about insurance policies associated with loan accounts or collateral.
"""
type ConsumerLending_ConsumerLendingLoanInsurance {
  """Named beneficiary if applicable"""
  beneficiary: ConsumerLending_Varchar

  """Name of insurance company"""
  carrierName: ConsumerLending_Varchar!

  """Reference to loan_collateral if associated with specific collateral"""
  consumerLendingCollateralId: ConsumerLending_Int4

  """Unique identifier for insurance record"""
  consumerLendingInsuranceId: ConsumerLending_Int4!
  consumerLendingLoanAccount: ConsumerLending_ConsumerLendingLoanAccounts

  """Reference to loan account"""
  consumerLendingLoanAccountId: ConsumerLending_Int4!
  consumerLendingLoanCollateral: ConsumerLending_ConsumerLendingLoanCollateral

  """Amount of coverage"""
  coverageAmount: ConsumerLending_Numeric!

  """Policy start date"""
  effectiveDate: ConsumerLending_Date!

  """Policy end date"""
  expirationDate: ConsumerLending_Date!

  """Type of insurance"""
  insuranceType: ConsumerLending_ConsumerLendingInsuranceType!

  """Insurance policy number"""
  policyNumber: ConsumerLending_Varchar!

  """Cost of insurance premium"""
  premiumAmount: ConsumerLending_Numeric!

  """Frequency of premium payments"""
  premiumFrequency: ConsumerLending_ConsumerLendingPremiumFrequency!

  """Current status of the insurance policy"""
  status: ConsumerLending_ConsumerLendingInsuranceStatus!
}

type ConsumerLending_ConsumerLendingLoanInsuranceAggExp {
  _count: Int!
  beneficiary: ConsumerLending_VarcharAggExp!
  carrierName: ConsumerLending_VarcharAggExp!
  consumerLendingCollateralId: ConsumerLending_Int4AggExp!
  consumerLendingInsuranceId: ConsumerLending_Int4AggExp!
  consumerLendingLoanAccountId: ConsumerLending_Int4AggExp!
  coverageAmount: ConsumerLending_NumericAggExp!
  effectiveDate: ConsumerLending_DateAggExp!
  expirationDate: ConsumerLending_DateAggExp!
  insuranceType: ConsumerLending_ConsumerLendingInsuranceTypeAggExp!
  policyNumber: ConsumerLending_VarcharAggExp!
  premiumAmount: ConsumerLending_NumericAggExp!
  premiumFrequency: ConsumerLending_ConsumerLendingPremiumFrequencyAggExp!
  status: ConsumerLending_ConsumerLendingInsuranceStatusAggExp!
}

input ConsumerLending_ConsumerLendingLoanInsuranceBoolExp {
  _and: [ConsumerLending_ConsumerLendingLoanInsuranceBoolExp!]
  _not: ConsumerLending_ConsumerLendingLoanInsuranceBoolExp
  _or: [ConsumerLending_ConsumerLendingLoanInsuranceBoolExp!]
  beneficiary: ConsumerLending_VarcharBoolExp
  carrierName: ConsumerLending_VarcharBoolExp
  consumerLendingCollateralId: ConsumerLending_Int4BoolExp
  consumerLendingInsuranceId: ConsumerLending_Int4BoolExp
  consumerLendingLoanAccount: ConsumerLending_ConsumerLendingLoanAccountsBoolExp
  consumerLendingLoanAccountId: ConsumerLending_Int4BoolExp
  consumerLendingLoanCollateral: ConsumerLending_ConsumerLendingLoanCollateralBoolExp
  coverageAmount: ConsumerLending_NumericBoolExp
  effectiveDate: ConsumerLending_DateBoolExp
  expirationDate: ConsumerLending_DateBoolExp
  insuranceType: ConsumerLending_ConsumerLendingInsuranceTypeBoolExp
  policyNumber: ConsumerLending_VarcharBoolExp
  premiumAmount: ConsumerLending_NumericBoolExp
  premiumFrequency: ConsumerLending_ConsumerLendingPremiumFrequencyBoolExp
  status: ConsumerLending_ConsumerLendingInsuranceStatusBoolExp
}

input ConsumerLending_ConsumerLendingLoanInsuranceFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingLoanInsuranceOrderByExp!]
  where: ConsumerLending_ConsumerLendingLoanInsuranceBoolExp
}

input ConsumerLending_ConsumerLendingLoanInsuranceOrderByExp {
  beneficiary: OrderBy
  carrierName: OrderBy
  consumerLendingCollateralId: OrderBy
  consumerLendingInsuranceId: OrderBy
  consumerLendingLoanAccount: ConsumerLending_ConsumerLendingLoanAccountsOrderByExp
  consumerLendingLoanAccountId: OrderBy
  consumerLendingLoanCollateral: ConsumerLending_ConsumerLendingLoanCollateralOrderByExp
  coverageAmount: OrderBy
  effectiveDate: OrderBy
  expirationDate: OrderBy
  insuranceType: OrderBy
  policyNumber: OrderBy
  premiumAmount: OrderBy
  premiumFrequency: OrderBy
  status: OrderBy
}

"""
Tracks modifications made to existing loan accounts, such as changes to interest rates, terms, or principal balance.
"""
type ConsumerLending_ConsumerLendingLoanModifications {
  """Date modification was approved"""
  approvalDate: ConsumerLending_Date

  """User who approved modification"""
  approvedById: ConsumerLending_Int4

  """Amount of interest or fees capitalized"""
  capitalizedAmount: ConsumerLending_Numeric
  consumerLendingLoanAccount: ConsumerLending_ConsumerLendingLoanAccounts

  """Unique identifier for loan modification"""
  consumerLendingModificationId: ConsumerLending_Int4!

  """Path to modification agreement document"""
  documentPath: ConsumerLending_Varchar

  """Date modification takes effect"""
  effectiveDate: ConsumerLending_Date

  """Customer's reason for hardship"""
  hardshipReason: ConsumerLending_Varchar

  """Reference to loan account"""
  loanAccountId: ConsumerLending_Int4!

  """Type of loan modification"""
  modificationType: ConsumerLending_ConsumerLendingLoanModificationType!

  """Principal balance after modification"""
  newPrincipalBalance: ConsumerLending_Numeric

  """Interest rate after modification"""
  newRate: ConsumerLending_Numeric

  """Loan term after modification"""
  newTermMonths: ConsumerLending_Int4

  """Principal balance before modification"""
  originalPrincipalBalance: ConsumerLending_Numeric

  """Interest rate before modification"""
  originalRate: ConsumerLending_Numeric

  """Loan term before modification"""
  originalTermMonths: ConsumerLending_Int4

  """Date modification was requested"""
  requestDate: ConsumerLending_Date!

  """Current status of the modification"""
  status: ConsumerLending_ConsumerLendingLoanModificationStatus!
}

type ConsumerLending_ConsumerLendingLoanModificationsAggExp {
  _count: Int!
  approvalDate: ConsumerLending_DateAggExp!
  approvedById: ConsumerLending_Int4AggExp!
  capitalizedAmount: ConsumerLending_NumericAggExp!
  consumerLendingModificationId: ConsumerLending_Int4AggExp!
  documentPath: ConsumerLending_VarcharAggExp!
  effectiveDate: ConsumerLending_DateAggExp!
  hardshipReason: ConsumerLending_VarcharAggExp!
  loanAccountId: ConsumerLending_Int4AggExp!
  modificationType: ConsumerLending_ConsumerLendingLoanModificationTypeAggExp!
  newPrincipalBalance: ConsumerLending_NumericAggExp!
  newRate: ConsumerLending_NumericAggExp!
  newTermMonths: ConsumerLending_Int4AggExp!
  originalPrincipalBalance: ConsumerLending_NumericAggExp!
  originalRate: ConsumerLending_NumericAggExp!
  originalTermMonths: ConsumerLending_Int4AggExp!
  requestDate: ConsumerLending_DateAggExp!
  status: ConsumerLending_ConsumerLendingLoanModificationStatusAggExp!
}

input ConsumerLending_ConsumerLendingLoanModificationsBoolExp {
  _and: [ConsumerLending_ConsumerLendingLoanModificationsBoolExp!]
  _not: ConsumerLending_ConsumerLendingLoanModificationsBoolExp
  _or: [ConsumerLending_ConsumerLendingLoanModificationsBoolExp!]
  approvalDate: ConsumerLending_DateBoolExp
  approvedById: ConsumerLending_Int4BoolExp
  capitalizedAmount: ConsumerLending_NumericBoolExp
  consumerLendingLoanAccount: ConsumerLending_ConsumerLendingLoanAccountsBoolExp
  consumerLendingModificationId: ConsumerLending_Int4BoolExp
  documentPath: ConsumerLending_VarcharBoolExp
  effectiveDate: ConsumerLending_DateBoolExp
  hardshipReason: ConsumerLending_VarcharBoolExp
  loanAccountId: ConsumerLending_Int4BoolExp
  modificationType: ConsumerLending_ConsumerLendingLoanModificationTypeBoolExp
  newPrincipalBalance: ConsumerLending_NumericBoolExp
  newRate: ConsumerLending_NumericBoolExp
  newTermMonths: ConsumerLending_Int4BoolExp
  originalPrincipalBalance: ConsumerLending_NumericBoolExp
  originalRate: ConsumerLending_NumericBoolExp
  originalTermMonths: ConsumerLending_Int4BoolExp
  requestDate: ConsumerLending_DateBoolExp
  status: ConsumerLending_ConsumerLendingLoanModificationStatusBoolExp
}

input ConsumerLending_ConsumerLendingLoanModificationsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingLoanModificationsOrderByExp!]
  where: ConsumerLending_ConsumerLendingLoanModificationsBoolExp
}

input ConsumerLending_ConsumerLendingLoanModificationsOrderByExp {
  approvalDate: OrderBy
  approvedById: OrderBy
  capitalizedAmount: OrderBy
  consumerLendingLoanAccount: ConsumerLending_ConsumerLendingLoanAccountsOrderByExp
  consumerLendingModificationId: OrderBy
  documentPath: OrderBy
  effectiveDate: OrderBy
  hardshipReason: OrderBy
  loanAccountId: OrderBy
  modificationType: OrderBy
  newPrincipalBalance: OrderBy
  newRate: OrderBy
  newTermMonths: OrderBy
  originalPrincipalBalance: OrderBy
  originalRate: OrderBy
  originalTermMonths: OrderBy
  requestDate: OrderBy
  status: OrderBy
}

scalar ConsumerLending_ConsumerLendingLoanModificationStatus

type ConsumerLending_ConsumerLendingLoanModificationStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingLoanModificationStatus
  min: ConsumerLending_ConsumerLendingLoanModificationStatus
}

input ConsumerLending_ConsumerLendingLoanModificationStatusBoolExp {
  _and: [ConsumerLending_ConsumerLendingLoanModificationStatusBoolExp!]
  _eq: ConsumerLending_ConsumerLendingLoanModificationStatus
  _gt: ConsumerLending_ConsumerLendingLoanModificationStatus
  _gte: ConsumerLending_ConsumerLendingLoanModificationStatus
  _in: [ConsumerLending_ConsumerLendingLoanModificationStatus!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingLoanModificationStatus
  _lte: ConsumerLending_ConsumerLendingLoanModificationStatus
  _neq: ConsumerLending_ConsumerLendingLoanModificationStatus
  _not: ConsumerLending_ConsumerLendingLoanModificationStatusBoolExp
  _or: [ConsumerLending_ConsumerLendingLoanModificationStatusBoolExp!]
}

scalar ConsumerLending_ConsumerLendingLoanModificationType

type ConsumerLending_ConsumerLendingLoanModificationTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingLoanModificationType
  min: ConsumerLending_ConsumerLendingLoanModificationType
}

input ConsumerLending_ConsumerLendingLoanModificationTypeBoolExp {
  _and: [ConsumerLending_ConsumerLendingLoanModificationTypeBoolExp!]
  _eq: ConsumerLending_ConsumerLendingLoanModificationType
  _gt: ConsumerLending_ConsumerLendingLoanModificationType
  _gte: ConsumerLending_ConsumerLendingLoanModificationType
  _in: [ConsumerLending_ConsumerLendingLoanModificationType!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingLoanModificationType
  _lte: ConsumerLending_ConsumerLendingLoanModificationType
  _neq: ConsumerLending_ConsumerLendingLoanModificationType
  _not: ConsumerLending_ConsumerLendingLoanModificationTypeBoolExp
  _or: [ConsumerLending_ConsumerLendingLoanModificationTypeBoolExp!]
}

"""
Records payments made on loan accounts, including payment date, amount, method, and status.
"""
type ConsumerLending_ConsumerLendingLoanPayments {
  """Payment confirmation number"""
  confirmationNumber: ConsumerLending_Varchar
  consumerLendingLoanAccount: ConsumerLending_ConsumerLendingLoanAccounts

  """Reference to loan account"""
  consumerLendingLoanAccountId: ConsumerLending_Int4!
  consumerLendingLoanFees(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingLoanFeesOrderByExp!], where: ConsumerLending_ConsumerLendingLoanFeesBoolExp): [ConsumerLending_ConsumerLendingLoanFees!]
  consumerLendingLoanFeesAggregate(filter_input: ConsumerLending_ConsumerLendingLoanFeesFilterInput): ConsumerLending_ConsumerLendingLoanFeesAggExp!

  """Unique identifier for payment"""
  consumerLendingPaymentId: ConsumerLending_Int4!
  consumerLendingPaymentSchedules(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingPaymentSchedulesOrderByExp!], where: ConsumerLending_ConsumerLendingPaymentSchedulesBoolExp): [ConsumerLending_ConsumerLendingPaymentSchedules!]
  consumerLendingPaymentSchedulesAggregate(filter_input: ConsumerLending_ConsumerLendingPaymentSchedulesFilterInput): ConsumerLending_ConsumerLendingPaymentSchedulesAggExp!

  """Amount applied to interest"""
  interestAmount: ConsumerLending_Numeric!

  """Amount applied to late fees"""
  lateFeeAmount: ConsumerLending_Numeric!

  """Amount applied to other fees"""
  otherFeeAmount: ConsumerLending_Numeric!

  """Total payment amount"""
  paymentAmount: ConsumerLending_Numeric!

  """Date/time payment was received"""
  paymentDate: ConsumerLending_Timestamptz!

  """Date payment is effective"""
  paymentEffectiveDate: ConsumerLending_Date!

  """Method used to make payment"""
  paymentMethod: ConsumerLending_ConsumerLendingPaymentMethod!

  """Current status of the payment"""
  paymentStatus: ConsumerLending_ConsumerLendingLoanPaymentStatus!

  """Type of payment"""
  paymentType: ConsumerLending_ConsumerLendingPaymentType!

  """Amount applied to principal"""
  principalAmount: ConsumerLending_Numeric!

  """Date payment was returned if applicable"""
  returnedDate: ConsumerLending_Date

  """Reason for payment return if applicable"""
  returnedReason: ConsumerLending_Varchar

  """External transaction identifier"""
  transactionId: ConsumerLending_Varchar
}

type ConsumerLending_ConsumerLendingLoanPaymentsAggExp {
  _count: Int!
  confirmationNumber: ConsumerLending_VarcharAggExp!
  consumerLendingLoanAccountId: ConsumerLending_Int4AggExp!
  consumerLendingPaymentId: ConsumerLending_Int4AggExp!
  interestAmount: ConsumerLending_NumericAggExp!
  lateFeeAmount: ConsumerLending_NumericAggExp!
  otherFeeAmount: ConsumerLending_NumericAggExp!
  paymentAmount: ConsumerLending_NumericAggExp!
  paymentDate: ConsumerLending_TimestamptzAggExp!
  paymentEffectiveDate: ConsumerLending_DateAggExp!
  paymentMethod: ConsumerLending_ConsumerLendingPaymentMethodAggExp!
  paymentStatus: ConsumerLending_ConsumerLendingLoanPaymentStatusAggExp!
  paymentType: ConsumerLending_ConsumerLendingPaymentTypeAggExp!
  principalAmount: ConsumerLending_NumericAggExp!
  returnedDate: ConsumerLending_DateAggExp!
  returnedReason: ConsumerLending_VarcharAggExp!
  transactionId: ConsumerLending_VarcharAggExp!
}

input ConsumerLending_ConsumerLendingLoanPaymentsBoolExp {
  _and: [ConsumerLending_ConsumerLendingLoanPaymentsBoolExp!]
  _not: ConsumerLending_ConsumerLendingLoanPaymentsBoolExp
  _or: [ConsumerLending_ConsumerLendingLoanPaymentsBoolExp!]
  confirmationNumber: ConsumerLending_VarcharBoolExp
  consumerLendingLoanAccount: ConsumerLending_ConsumerLendingLoanAccountsBoolExp
  consumerLendingLoanAccountId: ConsumerLending_Int4BoolExp
  consumerLendingLoanFees: ConsumerLending_ConsumerLendingLoanFeesBoolExp
  consumerLendingPaymentId: ConsumerLending_Int4BoolExp
  consumerLendingPaymentSchedules: ConsumerLending_ConsumerLendingPaymentSchedulesBoolExp
  interestAmount: ConsumerLending_NumericBoolExp
  lateFeeAmount: ConsumerLending_NumericBoolExp
  otherFeeAmount: ConsumerLending_NumericBoolExp
  paymentAmount: ConsumerLending_NumericBoolExp
  paymentDate: ConsumerLending_TimestamptzBoolExp
  paymentEffectiveDate: ConsumerLending_DateBoolExp
  paymentMethod: ConsumerLending_ConsumerLendingPaymentMethodBoolExp
  paymentStatus: ConsumerLending_ConsumerLendingLoanPaymentStatusBoolExp
  paymentType: ConsumerLending_ConsumerLendingPaymentTypeBoolExp
  principalAmount: ConsumerLending_NumericBoolExp
  returnedDate: ConsumerLending_DateBoolExp
  returnedReason: ConsumerLending_VarcharBoolExp
  transactionId: ConsumerLending_VarcharBoolExp
}

input ConsumerLending_ConsumerLendingLoanPaymentsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingLoanPaymentsOrderByExp!]
  where: ConsumerLending_ConsumerLendingLoanPaymentsBoolExp
}

input ConsumerLending_ConsumerLendingLoanPaymentsOrderByExp {
  confirmationNumber: OrderBy
  consumerLendingLoanAccount: ConsumerLending_ConsumerLendingLoanAccountsOrderByExp
  consumerLendingLoanAccountId: OrderBy
  consumerLendingPaymentId: OrderBy
  interestAmount: OrderBy
  lateFeeAmount: OrderBy
  otherFeeAmount: OrderBy
  paymentAmount: OrderBy
  paymentDate: OrderBy
  paymentEffectiveDate: OrderBy
  paymentMethod: OrderBy
  paymentStatus: OrderBy
  paymentType: OrderBy
  principalAmount: OrderBy
  returnedDate: OrderBy
  returnedReason: OrderBy
  transactionId: OrderBy
}

scalar ConsumerLending_ConsumerLendingLoanPaymentStatus

type ConsumerLending_ConsumerLendingLoanPaymentStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingLoanPaymentStatus
  min: ConsumerLending_ConsumerLendingLoanPaymentStatus
}

input ConsumerLending_ConsumerLendingLoanPaymentStatusBoolExp {
  _and: [ConsumerLending_ConsumerLendingLoanPaymentStatusBoolExp!]
  _eq: ConsumerLending_ConsumerLendingLoanPaymentStatus
  _gt: ConsumerLending_ConsumerLendingLoanPaymentStatus
  _gte: ConsumerLending_ConsumerLendingLoanPaymentStatus
  _in: [ConsumerLending_ConsumerLendingLoanPaymentStatus!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingLoanPaymentStatus
  _lte: ConsumerLending_ConsumerLendingLoanPaymentStatus
  _neq: ConsumerLending_ConsumerLendingLoanPaymentStatus
  _not: ConsumerLending_ConsumerLendingLoanPaymentStatusBoolExp
  _or: [ConsumerLending_ConsumerLendingLoanPaymentStatusBoolExp!]
}

"""
Defines the various loan products offered to consumers, including their terms, fees, and features.
"""
type ConsumerLending_ConsumerLendingLoanProducts {
  """Starting interest rate before adjustments"""
  baseInterestRate: ConsumerLending_Numeric!
  consumerLendingFairlendingAnalyses(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingFairlendingAnalysisOrderByExp!], where: ConsumerLending_ConsumerLendingFairlendingAnalysisBoolExp): [ConsumerLending_ConsumerLendingFairlendingAnalysis!]
  consumerLendingFairlendingAnalysesAggregate(filter_input: ConsumerLending_ConsumerLendingFairlendingAnalysisFilterInput): ConsumerLending_ConsumerLendingFairlendingAnalysisAggExp!
  consumerLendingLoanAccounts(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingLoanAccountsOrderByExp!], where: ConsumerLending_ConsumerLendingLoanAccountsBoolExp): [ConsumerLending_ConsumerLendingLoanAccounts!]
  consumerLendingLoanAccountsAggregate(filter_input: ConsumerLending_ConsumerLendingLoanAccountsFilterInput): ConsumerLending_ConsumerLendingLoanAccountsAggExp!

  """Unique identifier for loan product"""
  consumerLendingLoanProductId: ConsumerLending_Int4!
  consumerLendingProductEligibilityCriteria(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingProductEligibilityCriteriaOrderByExp!], where: ConsumerLending_ConsumerLendingProductEligibilityCriteriaBoolExp): [ConsumerLending_ConsumerLendingProductEligibilityCriteria!]
  consumerLendingProductEligibilityCriteriaAggregate(filter_input: ConsumerLending_ConsumerLendingProductEligibilityCriteriaFilterInput): ConsumerLending_ConsumerLendingProductEligibilityCriteriaAggExp!
  consumerLendingRiskBasedPricingTiers(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingRiskBasedPricingTiersOrderByExp!], where: ConsumerLending_ConsumerLendingRiskBasedPricingTiersBoolExp): [ConsumerLending_ConsumerLendingRiskBasedPricingTiers!]
  consumerLendingRiskBasedPricingTiersAggregate(filter_input: ConsumerLending_ConsumerLendingRiskBasedPricingTiersFilterInput): ConsumerLending_ConsumerLendingRiskBasedPricingTiersAggExp!

  """Detailed product description"""
  description: ConsumerLending_Text

  """Method of loan disbursement"""
  disbursementOptions: ConsumerLending_ConsumerLendingDisbursementOption

  """Whether penalty applies for early payoff"""
  earlyRepaymentPenalty: ConsumerLending_Bool!

  """Type of interest rate"""
  interestRateType: ConsumerLending_ConsumerLendingInterestRateType!

  """Whether product is currently offered"""
  isActive: ConsumerLending_Bool!

  """Amount or percentage of late fee"""
  lateFeeAmount: ConsumerLending_Numeric

  """Type of late fee"""
  lateFeeType: ConsumerLending_ConsumerLendingFeeType

  """Type of loan product"""
  loanType: ConsumerLending_ConsumerLendingLoanType!

  """Maximum allowed loan amount"""
  maxLoanAmount: ConsumerLending_Numeric

  """Maximum allowed term in months"""
  maxTermMonths: ConsumerLending_Int4!

  """Minimum required credit score"""
  minCreditScore: ConsumerLending_Int4

  """Minimum allowed loan amount"""
  minLoanAmount: ConsumerLending_Numeric

  """Minimum allowed term in months"""
  minTermMonths: ConsumerLending_Int4!

  """Amount or percentage of origination fee"""
  originationFeeAmount: ConsumerLending_Numeric

  """Type of origination fee"""
  originationFeeType: ConsumerLending_ConsumerLendingFeeType

  """Internal code for the product"""
  productCode: ConsumerLending_Varchar!

  """Marketing name of the product"""
  productName: ConsumerLending_Varchar!

  """Whether collateral is required"""
  requiredCollateral: ConsumerLending_Bool!
}

type ConsumerLending_ConsumerLendingLoanProductsAggExp {
  _count: Int!
  baseInterestRate: ConsumerLending_NumericAggExp!
  consumerLendingLoanProductId: ConsumerLending_Int4AggExp!
  description: ConsumerLending_TextAggExp!
  disbursementOptions: ConsumerLending_ConsumerLendingDisbursementOptionAggExp!
  earlyRepaymentPenalty: ConsumerLending_BoolAggExp!
  interestRateType: ConsumerLending_ConsumerLendingInterestRateTypeAggExp!
  isActive: ConsumerLending_BoolAggExp!
  lateFeeAmount: ConsumerLending_NumericAggExp!
  lateFeeType: ConsumerLending_ConsumerLendingFeeTypeAggExp!
  loanType: ConsumerLending_ConsumerLendingLoanTypeAggExp!
  maxLoanAmount: ConsumerLending_NumericAggExp!
  maxTermMonths: ConsumerLending_Int4AggExp!
  minCreditScore: ConsumerLending_Int4AggExp!
  minLoanAmount: ConsumerLending_NumericAggExp!
  minTermMonths: ConsumerLending_Int4AggExp!
  originationFeeAmount: ConsumerLending_NumericAggExp!
  originationFeeType: ConsumerLending_ConsumerLendingFeeTypeAggExp!
  productCode: ConsumerLending_VarcharAggExp!
  productName: ConsumerLending_VarcharAggExp!
  requiredCollateral: ConsumerLending_BoolAggExp!
}

input ConsumerLending_ConsumerLendingLoanProductsBoolExp {
  _and: [ConsumerLending_ConsumerLendingLoanProductsBoolExp!]
  _not: ConsumerLending_ConsumerLendingLoanProductsBoolExp
  _or: [ConsumerLending_ConsumerLendingLoanProductsBoolExp!]
  baseInterestRate: ConsumerLending_NumericBoolExp
  consumerLendingFairlendingAnalyses: ConsumerLending_ConsumerLendingFairlendingAnalysisBoolExp
  consumerLendingLoanAccounts: ConsumerLending_ConsumerLendingLoanAccountsBoolExp
  consumerLendingLoanProductId: ConsumerLending_Int4BoolExp
  consumerLendingProductEligibilityCriteria: ConsumerLending_ConsumerLendingProductEligibilityCriteriaBoolExp
  consumerLendingRiskBasedPricingTiers: ConsumerLending_ConsumerLendingRiskBasedPricingTiersBoolExp
  description: ConsumerLending_TextBoolExp
  disbursementOptions: ConsumerLending_ConsumerLendingDisbursementOptionBoolExp
  earlyRepaymentPenalty: ConsumerLending_BoolBoolExp
  interestRateType: ConsumerLending_ConsumerLendingInterestRateTypeBoolExp
  isActive: ConsumerLending_BoolBoolExp
  lateFeeAmount: ConsumerLending_NumericBoolExp
  lateFeeType: ConsumerLending_ConsumerLendingFeeTypeBoolExp
  loanType: ConsumerLending_ConsumerLendingLoanTypeBoolExp
  maxLoanAmount: ConsumerLending_NumericBoolExp
  maxTermMonths: ConsumerLending_Int4BoolExp
  minCreditScore: ConsumerLending_Int4BoolExp
  minLoanAmount: ConsumerLending_NumericBoolExp
  minTermMonths: ConsumerLending_Int4BoolExp
  originationFeeAmount: ConsumerLending_NumericBoolExp
  originationFeeType: ConsumerLending_ConsumerLendingFeeTypeBoolExp
  productCode: ConsumerLending_VarcharBoolExp
  productName: ConsumerLending_VarcharBoolExp
  requiredCollateral: ConsumerLending_BoolBoolExp
}

input ConsumerLending_ConsumerLendingLoanProductsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingLoanProductsOrderByExp!]
  where: ConsumerLending_ConsumerLendingLoanProductsBoolExp
}

input ConsumerLending_ConsumerLendingLoanProductsOrderByExp {
  baseInterestRate: OrderBy
  consumerLendingLoanProductId: OrderBy
  description: OrderBy
  disbursementOptions: OrderBy
  earlyRepaymentPenalty: OrderBy
  interestRateType: OrderBy
  isActive: OrderBy
  lateFeeAmount: OrderBy
  lateFeeType: OrderBy
  loanType: OrderBy
  maxLoanAmount: OrderBy
  maxTermMonths: OrderBy
  minCreditScore: OrderBy
  minLoanAmount: OrderBy
  minTermMonths: OrderBy
  originationFeeAmount: OrderBy
  originationFeeType: OrderBy
  productCode: OrderBy
  productName: OrderBy
  requiredCollateral: OrderBy
}

"""
Stores periodic loan statements, providing a summary of account activity, balances, and payments.
"""
type ConsumerLending_ConsumerLendingLoanStatements {
  """Amount due for next payment"""
  amountDue: ConsumerLending_Numeric!

  """Balance at end of period"""
  closingBalance: ConsumerLending_Numeric!
  consumerLendingLoanAccount: ConsumerLending_ConsumerLendingLoanAccounts

  """Unique identifier for statement"""
  consumerLendingStatementId: ConsumerLending_Int4!

  """Method of statement delivery"""
  deliveryMethod: ConsumerLending_ConsumerLendingStatementDeliveryMethod

  """Path to stored statement document"""
  documentPath: ConsumerLending_Varchar

  """Next payment due date"""
  dueDate: ConsumerLending_Date!

  """Fees charged in period"""
  feesCharged: ConsumerLending_Numeric!

  """Fees paid in period"""
  feesPaid: ConsumerLending_Numeric!

  """Interest paid in period"""
  interestPaid: ConsumerLending_Numeric!

  """Reference to loan account"""
  loanAccountId: ConsumerLending_Int4!

  """Balance at start of period"""
  openingBalance: ConsumerLending_Numeric!

  """Principal paid in period"""
  principalPaid: ConsumerLending_Numeric!

  """Date statement was sent to customer"""
  sentDate: ConsumerLending_Date

  """Date statement was generated"""
  statementDate: ConsumerLending_Date!

  """End date of statement period"""
  statementPeriodEnd: ConsumerLending_Date!

  """Start date of statement period"""
  statementPeriodStart: ConsumerLending_Date!

  """Sum of payments in period"""
  totalPayments: ConsumerLending_Numeric!
}

type ConsumerLending_ConsumerLendingLoanStatementsAggExp {
  _count: Int!
  amountDue: ConsumerLending_NumericAggExp!
  closingBalance: ConsumerLending_NumericAggExp!
  consumerLendingStatementId: ConsumerLending_Int4AggExp!
  deliveryMethod: ConsumerLending_ConsumerLendingStatementDeliveryMethodAggExp!
  documentPath: ConsumerLending_VarcharAggExp!
  dueDate: ConsumerLending_DateAggExp!
  feesCharged: ConsumerLending_NumericAggExp!
  feesPaid: ConsumerLending_NumericAggExp!
  interestPaid: ConsumerLending_NumericAggExp!
  loanAccountId: ConsumerLending_Int4AggExp!
  openingBalance: ConsumerLending_NumericAggExp!
  principalPaid: ConsumerLending_NumericAggExp!
  sentDate: ConsumerLending_DateAggExp!
  statementDate: ConsumerLending_DateAggExp!
  statementPeriodEnd: ConsumerLending_DateAggExp!
  statementPeriodStart: ConsumerLending_DateAggExp!
  totalPayments: ConsumerLending_NumericAggExp!
}

input ConsumerLending_ConsumerLendingLoanStatementsBoolExp {
  _and: [ConsumerLending_ConsumerLendingLoanStatementsBoolExp!]
  _not: ConsumerLending_ConsumerLendingLoanStatementsBoolExp
  _or: [ConsumerLending_ConsumerLendingLoanStatementsBoolExp!]
  amountDue: ConsumerLending_NumericBoolExp
  closingBalance: ConsumerLending_NumericBoolExp
  consumerLendingLoanAccount: ConsumerLending_ConsumerLendingLoanAccountsBoolExp
  consumerLendingStatementId: ConsumerLending_Int4BoolExp
  deliveryMethod: ConsumerLending_ConsumerLendingStatementDeliveryMethodBoolExp
  documentPath: ConsumerLending_VarcharBoolExp
  dueDate: ConsumerLending_DateBoolExp
  feesCharged: ConsumerLending_NumericBoolExp
  feesPaid: ConsumerLending_NumericBoolExp
  interestPaid: ConsumerLending_NumericBoolExp
  loanAccountId: ConsumerLending_Int4BoolExp
  openingBalance: ConsumerLending_NumericBoolExp
  principalPaid: ConsumerLending_NumericBoolExp
  sentDate: ConsumerLending_DateBoolExp
  statementDate: ConsumerLending_DateBoolExp
  statementPeriodEnd: ConsumerLending_DateBoolExp
  statementPeriodStart: ConsumerLending_DateBoolExp
  totalPayments: ConsumerLending_NumericBoolExp
}

input ConsumerLending_ConsumerLendingLoanStatementsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingLoanStatementsOrderByExp!]
  where: ConsumerLending_ConsumerLendingLoanStatementsBoolExp
}

input ConsumerLending_ConsumerLendingLoanStatementsOrderByExp {
  amountDue: OrderBy
  closingBalance: OrderBy
  consumerLendingLoanAccount: ConsumerLending_ConsumerLendingLoanAccountsOrderByExp
  consumerLendingStatementId: OrderBy
  deliveryMethod: OrderBy
  documentPath: OrderBy
  dueDate: OrderBy
  feesCharged: OrderBy
  feesPaid: OrderBy
  interestPaid: OrderBy
  loanAccountId: OrderBy
  openingBalance: OrderBy
  principalPaid: OrderBy
  sentDate: OrderBy
  statementDate: OrderBy
  statementPeriodEnd: OrderBy
  statementPeriodStart: OrderBy
  totalPayments: OrderBy
}

scalar ConsumerLending_ConsumerLendingLoanType

type ConsumerLending_ConsumerLendingLoanTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingLoanType
  min: ConsumerLending_ConsumerLendingLoanType
}

input ConsumerLending_ConsumerLendingLoanTypeBoolExp {
  _and: [ConsumerLending_ConsumerLendingLoanTypeBoolExp!]
  _eq: ConsumerLending_ConsumerLendingLoanType
  _gt: ConsumerLending_ConsumerLendingLoanType
  _gte: ConsumerLending_ConsumerLendingLoanType
  _in: [ConsumerLending_ConsumerLendingLoanType!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingLoanType
  _lte: ConsumerLending_ConsumerLendingLoanType
  _neq: ConsumerLending_ConsumerLendingLoanType
  _not: ConsumerLending_ConsumerLendingLoanTypeBoolExp
  _or: [ConsumerLending_ConsumerLendingLoanTypeBoolExp!]
}

"""
Tracks compliance with the Military Lending Act (MLA), including verification of military status and MAPR calculations.
"""
type ConsumerLending_ConsumerLendingMilitaryLendingChecks {
  """Date on covered borrower certificate"""
  certificateDate: ConsumerLending_Date
  checkBy: Enterprise_EnterpriseAssociates

  """Date MLA status was checked"""
  checkDate: ConsumerLending_Timestamptz!
  consumerLendingApplicant: ConsumerLending_ConsumerLendingApplicants

  """Reference to applicant"""
  consumerLendingApplicantId: ConsumerLending_Int4!

  """Reference to loan application"""
  consumerLendingApplicationId: ConsumerLending_Int4!

  """Unique identifier for MLA check"""
  consumerLendingCheckId: ConsumerLending_Int4!
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplications

  """Whether applicant is a covered borrower"""
  coveredBorrower: ConsumerLending_Bool!

  """Path to stored verification document"""
  documentPath: ConsumerLending_Varchar

  """Military Annual Percentage Rate if calculated"""
  maprCalculated: ConsumerLending_Numeric

  """Whether MAPR disclosure was provided"""
  maprDisclosureProvided: ConsumerLending_Bool

  """Active Duty, Dependent, Not Military"""
  militaryStatus: ConsumerLending_Varchar

  """User who performed check"""
  userId: ConsumerLending_Int4

  """MLA Database, Credit Report Flag"""
  verificationMethod: ConsumerLending_Varchar!
}

type ConsumerLending_ConsumerLendingMilitaryLendingChecksAggExp {
  _count: Int!
  certificateDate: ConsumerLending_DateAggExp!
  checkDate: ConsumerLending_TimestamptzAggExp!
  consumerLendingApplicantId: ConsumerLending_Int4AggExp!
  consumerLendingApplicationId: ConsumerLending_Int4AggExp!
  consumerLendingCheckId: ConsumerLending_Int4AggExp!
  coveredBorrower: ConsumerLending_BoolAggExp!
  documentPath: ConsumerLending_VarcharAggExp!
  maprCalculated: ConsumerLending_NumericAggExp!
  maprDisclosureProvided: ConsumerLending_BoolAggExp!
  militaryStatus: ConsumerLending_VarcharAggExp!
  userId: ConsumerLending_Int4AggExp!
  verificationMethod: ConsumerLending_VarcharAggExp!
}

input ConsumerLending_ConsumerLendingMilitaryLendingChecksBoolExp {
  _and: [ConsumerLending_ConsumerLendingMilitaryLendingChecksBoolExp!]
  _not: ConsumerLending_ConsumerLendingMilitaryLendingChecksBoolExp
  _or: [ConsumerLending_ConsumerLendingMilitaryLendingChecksBoolExp!]
  certificateDate: ConsumerLending_DateBoolExp
  checkDate: ConsumerLending_TimestamptzBoolExp
  consumerLendingApplicant: ConsumerLending_ConsumerLendingApplicantsBoolExp
  consumerLendingApplicantId: ConsumerLending_Int4BoolExp
  consumerLendingApplicationId: ConsumerLending_Int4BoolExp
  consumerLendingCheckId: ConsumerLending_Int4BoolExp
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplicationsBoolExp
  coveredBorrower: ConsumerLending_BoolBoolExp
  documentPath: ConsumerLending_VarcharBoolExp
  maprCalculated: ConsumerLending_NumericBoolExp
  maprDisclosureProvided: ConsumerLending_BoolBoolExp
  militaryStatus: ConsumerLending_VarcharBoolExp
  userId: ConsumerLending_Int4BoolExp
  verificationMethod: ConsumerLending_VarcharBoolExp
}

input ConsumerLending_ConsumerLendingMilitaryLendingChecksFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingMilitaryLendingChecksOrderByExp!]
  where: ConsumerLending_ConsumerLendingMilitaryLendingChecksBoolExp
}

input ConsumerLending_ConsumerLendingMilitaryLendingChecksOrderByExp {
  certificateDate: OrderBy
  checkDate: OrderBy
  consumerLendingApplicant: ConsumerLending_ConsumerLendingApplicantsOrderByExp
  consumerLendingApplicantId: OrderBy
  consumerLendingApplicationId: OrderBy
  consumerLendingCheckId: OrderBy
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplicationsOrderByExp
  coveredBorrower: OrderBy
  documentPath: OrderBy
  maprCalculated: OrderBy
  maprDisclosureProvided: OrderBy
  militaryStatus: OrderBy
  userId: OrderBy
  verificationMethod: OrderBy
}

scalar ConsumerLending_ConsumerLendingNextCollectionActionType

type ConsumerLending_ConsumerLendingNextCollectionActionTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingNextCollectionActionType
  min: ConsumerLending_ConsumerLendingNextCollectionActionType
}

input ConsumerLending_ConsumerLendingNextCollectionActionTypeBoolExp {
  _and: [ConsumerLending_ConsumerLendingNextCollectionActionTypeBoolExp!]
  _eq: ConsumerLending_ConsumerLendingNextCollectionActionType
  _gt: ConsumerLending_ConsumerLendingNextCollectionActionType
  _gte: ConsumerLending_ConsumerLendingNextCollectionActionType
  _in: [ConsumerLending_ConsumerLendingNextCollectionActionType!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingNextCollectionActionType
  _lte: ConsumerLending_ConsumerLendingNextCollectionActionType
  _neq: ConsumerLending_ConsumerLendingNextCollectionActionType
  _not: ConsumerLending_ConsumerLendingNextCollectionActionTypeBoolExp
  _or: [ConsumerLending_ConsumerLendingNextCollectionActionTypeBoolExp!]
}

scalar ConsumerLending_ConsumerLendingOutcomeVariable

type ConsumerLending_ConsumerLendingOutcomeVariableAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingOutcomeVariable
  min: ConsumerLending_ConsumerLendingOutcomeVariable
}

input ConsumerLending_ConsumerLendingOutcomeVariableBoolExp {
  _and: [ConsumerLending_ConsumerLendingOutcomeVariableBoolExp!]
  _eq: ConsumerLending_ConsumerLendingOutcomeVariable
  _gt: ConsumerLending_ConsumerLendingOutcomeVariable
  _gte: ConsumerLending_ConsumerLendingOutcomeVariable
  _in: [ConsumerLending_ConsumerLendingOutcomeVariable!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingOutcomeVariable
  _lte: ConsumerLending_ConsumerLendingOutcomeVariable
  _neq: ConsumerLending_ConsumerLendingOutcomeVariable
  _not: ConsumerLending_ConsumerLendingOutcomeVariableBoolExp
  _or: [ConsumerLending_ConsumerLendingOutcomeVariableBoolExp!]
}

"""
Records payment arrangements made with borrowers to resolve delinquent accounts.
"""
type ConsumerLending_ConsumerLendingPaymentArrangements {
  """User who approved arrangement"""
  approvedById: ConsumerLending_Int4

  """Date arrangement was created"""
  arrangementDate: ConsumerLending_Date!

  """Unique identifier for payment arrangement"""
  consumerLendingArrangementId: ConsumerLending_Int4!
  consumerLendingCollectionAccount: ConsumerLending_ConsumerLendingCollectionAccounts

  """Reference to collection account"""
  consumerLendingCollectionId: ConsumerLending_Int4!

  """Date first payment is due"""
  firstPaymentDate: ConsumerLending_Date!

  """Additional arrangement notes"""
  notes: ConsumerLending_Text

  """Number of payments in arrangement"""
  numberOfPayments: ConsumerLending_Int4!

  """Amount of each payment"""
  paymentAmount: ConsumerLending_Numeric!

  """Frequency of payments"""
  paymentFrequency: ConsumerLending_ConsumerLendingPaymentFrequency!

  """Current status of payment arrangement"""
  status: ConsumerLending_ConsumerLendingPaymentArrangementStatus!

  """Total amount to be paid"""
  totalAmount: ConsumerLending_Numeric!
}

type ConsumerLending_ConsumerLendingPaymentArrangementsAggExp {
  _count: Int!
  approvedById: ConsumerLending_Int4AggExp!
  arrangementDate: ConsumerLending_DateAggExp!
  consumerLendingArrangementId: ConsumerLending_Int4AggExp!
  consumerLendingCollectionId: ConsumerLending_Int4AggExp!
  firstPaymentDate: ConsumerLending_DateAggExp!
  notes: ConsumerLending_TextAggExp!
  numberOfPayments: ConsumerLending_Int4AggExp!
  paymentAmount: ConsumerLending_NumericAggExp!
  paymentFrequency: ConsumerLending_ConsumerLendingPaymentFrequencyAggExp!
  status: ConsumerLending_ConsumerLendingPaymentArrangementStatusAggExp!
  totalAmount: ConsumerLending_NumericAggExp!
}

input ConsumerLending_ConsumerLendingPaymentArrangementsBoolExp {
  _and: [ConsumerLending_ConsumerLendingPaymentArrangementsBoolExp!]
  _not: ConsumerLending_ConsumerLendingPaymentArrangementsBoolExp
  _or: [ConsumerLending_ConsumerLendingPaymentArrangementsBoolExp!]
  approvedById: ConsumerLending_Int4BoolExp
  arrangementDate: ConsumerLending_DateBoolExp
  consumerLendingArrangementId: ConsumerLending_Int4BoolExp
  consumerLendingCollectionAccount: ConsumerLending_ConsumerLendingCollectionAccountsBoolExp
  consumerLendingCollectionId: ConsumerLending_Int4BoolExp
  firstPaymentDate: ConsumerLending_DateBoolExp
  notes: ConsumerLending_TextBoolExp
  numberOfPayments: ConsumerLending_Int4BoolExp
  paymentAmount: ConsumerLending_NumericBoolExp
  paymentFrequency: ConsumerLending_ConsumerLendingPaymentFrequencyBoolExp
  status: ConsumerLending_ConsumerLendingPaymentArrangementStatusBoolExp
  totalAmount: ConsumerLending_NumericBoolExp
}

input ConsumerLending_ConsumerLendingPaymentArrangementsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingPaymentArrangementsOrderByExp!]
  where: ConsumerLending_ConsumerLendingPaymentArrangementsBoolExp
}

input ConsumerLending_ConsumerLendingPaymentArrangementsOrderByExp {
  approvedById: OrderBy
  arrangementDate: OrderBy
  consumerLendingArrangementId: OrderBy
  consumerLendingCollectionAccount: ConsumerLending_ConsumerLendingCollectionAccountsOrderByExp
  consumerLendingCollectionId: OrderBy
  firstPaymentDate: OrderBy
  notes: OrderBy
  numberOfPayments: OrderBy
  paymentAmount: OrderBy
  paymentFrequency: OrderBy
  status: OrderBy
  totalAmount: OrderBy
}

scalar ConsumerLending_ConsumerLendingPaymentArrangementStatus

type ConsumerLending_ConsumerLendingPaymentArrangementStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingPaymentArrangementStatus
  min: ConsumerLending_ConsumerLendingPaymentArrangementStatus
}

input ConsumerLending_ConsumerLendingPaymentArrangementStatusBoolExp {
  _and: [ConsumerLending_ConsumerLendingPaymentArrangementStatusBoolExp!]
  _eq: ConsumerLending_ConsumerLendingPaymentArrangementStatus
  _gt: ConsumerLending_ConsumerLendingPaymentArrangementStatus
  _gte: ConsumerLending_ConsumerLendingPaymentArrangementStatus
  _in: [ConsumerLending_ConsumerLendingPaymentArrangementStatus!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingPaymentArrangementStatus
  _lte: ConsumerLending_ConsumerLendingPaymentArrangementStatus
  _neq: ConsumerLending_ConsumerLendingPaymentArrangementStatus
  _not: ConsumerLending_ConsumerLendingPaymentArrangementStatusBoolExp
  _or: [ConsumerLending_ConsumerLendingPaymentArrangementStatusBoolExp!]
}

scalar ConsumerLending_ConsumerLendingPaymentFrequency

type ConsumerLending_ConsumerLendingPaymentFrequencyAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingPaymentFrequency
  min: ConsumerLending_ConsumerLendingPaymentFrequency
}

input ConsumerLending_ConsumerLendingPaymentFrequencyBoolExp {
  _and: [ConsumerLending_ConsumerLendingPaymentFrequencyBoolExp!]
  _eq: ConsumerLending_ConsumerLendingPaymentFrequency
  _gt: ConsumerLending_ConsumerLendingPaymentFrequency
  _gte: ConsumerLending_ConsumerLendingPaymentFrequency
  _in: [ConsumerLending_ConsumerLendingPaymentFrequency!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingPaymentFrequency
  _lte: ConsumerLending_ConsumerLendingPaymentFrequency
  _neq: ConsumerLending_ConsumerLendingPaymentFrequency
  _not: ConsumerLending_ConsumerLendingPaymentFrequencyBoolExp
  _or: [ConsumerLending_ConsumerLendingPaymentFrequencyBoolExp!]
}

scalar ConsumerLending_ConsumerLendingPaymentMethod

type ConsumerLending_ConsumerLendingPaymentMethodAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingPaymentMethod
  min: ConsumerLending_ConsumerLendingPaymentMethod
}

input ConsumerLending_ConsumerLendingPaymentMethodBoolExp {
  _and: [ConsumerLending_ConsumerLendingPaymentMethodBoolExp!]
  _eq: ConsumerLending_ConsumerLendingPaymentMethod
  _gt: ConsumerLending_ConsumerLendingPaymentMethod
  _gte: ConsumerLending_ConsumerLendingPaymentMethod
  _in: [ConsumerLending_ConsumerLendingPaymentMethod!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingPaymentMethod
  _lte: ConsumerLending_ConsumerLendingPaymentMethod
  _neq: ConsumerLending_ConsumerLendingPaymentMethod
  _not: ConsumerLending_ConsumerLendingPaymentMethodBoolExp
  _or: [ConsumerLending_ConsumerLendingPaymentMethodBoolExp!]
}

"""
Contains the payment schedule for each loan account, including scheduled dates, amounts, and payment status.
"""
type ConsumerLending_ConsumerLendingPaymentSchedules {
  """Date payment was actually made"""
  actualPaymentDate: ConsumerLending_Date

  """Reference to loan_payments if paid"""
  actualPaymentId: ConsumerLending_Int4

  """Principal balance before payment"""
  beginningBalance: ConsumerLending_Numeric!
  consumerLendingLoanAccount: ConsumerLending_ConsumerLendingLoanAccounts

  """Reference to loan account"""
  consumerLendingLoanAccountId: ConsumerLending_Int4!
  consumerLendingLoanPayment: ConsumerLending_ConsumerLendingLoanPayments

  """Principal balance after payment"""
  endingBalance: ConsumerLending_Numeric!

  """Portion applied to interest"""
  interestAmount: ConsumerLending_Numeric!

  """Total payment amount due"""
  paymentAmount: ConsumerLending_Numeric!

  """Sequential payment number"""
  paymentNumber: ConsumerLending_Int4!

  """Unique identifier for schedule entry"""
  paymentScheduleId: ConsumerLending_Int4!

  """Portion applied to principal"""
  principalAmount: ConsumerLending_Numeric!

  """Date payment is scheduled"""
  scheduledDate: ConsumerLending_Date!

  """Current status of the payment schedule entry"""
  status: ConsumerLending_ConsumerLendingPaymentScheduleStatus!
}

type ConsumerLending_ConsumerLendingPaymentSchedulesAggExp {
  _count: Int!
  actualPaymentDate: ConsumerLending_DateAggExp!
  actualPaymentId: ConsumerLending_Int4AggExp!
  beginningBalance: ConsumerLending_NumericAggExp!
  consumerLendingLoanAccountId: ConsumerLending_Int4AggExp!
  endingBalance: ConsumerLending_NumericAggExp!
  interestAmount: ConsumerLending_NumericAggExp!
  paymentAmount: ConsumerLending_NumericAggExp!
  paymentNumber: ConsumerLending_Int4AggExp!
  paymentScheduleId: ConsumerLending_Int4AggExp!
  principalAmount: ConsumerLending_NumericAggExp!
  scheduledDate: ConsumerLending_DateAggExp!
  status: ConsumerLending_ConsumerLendingPaymentScheduleStatusAggExp!
}

input ConsumerLending_ConsumerLendingPaymentSchedulesBoolExp {
  _and: [ConsumerLending_ConsumerLendingPaymentSchedulesBoolExp!]
  _not: ConsumerLending_ConsumerLendingPaymentSchedulesBoolExp
  _or: [ConsumerLending_ConsumerLendingPaymentSchedulesBoolExp!]
  actualPaymentDate: ConsumerLending_DateBoolExp
  actualPaymentId: ConsumerLending_Int4BoolExp
  beginningBalance: ConsumerLending_NumericBoolExp
  consumerLendingLoanAccount: ConsumerLending_ConsumerLendingLoanAccountsBoolExp
  consumerLendingLoanAccountId: ConsumerLending_Int4BoolExp
  consumerLendingLoanPayment: ConsumerLending_ConsumerLendingLoanPaymentsBoolExp
  endingBalance: ConsumerLending_NumericBoolExp
  interestAmount: ConsumerLending_NumericBoolExp
  paymentAmount: ConsumerLending_NumericBoolExp
  paymentNumber: ConsumerLending_Int4BoolExp
  paymentScheduleId: ConsumerLending_Int4BoolExp
  principalAmount: ConsumerLending_NumericBoolExp
  scheduledDate: ConsumerLending_DateBoolExp
  status: ConsumerLending_ConsumerLendingPaymentScheduleStatusBoolExp
}

input ConsumerLending_ConsumerLendingPaymentSchedulesFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingPaymentSchedulesOrderByExp!]
  where: ConsumerLending_ConsumerLendingPaymentSchedulesBoolExp
}

input ConsumerLending_ConsumerLendingPaymentSchedulesOrderByExp {
  actualPaymentDate: OrderBy
  actualPaymentId: OrderBy
  beginningBalance: OrderBy
  consumerLendingLoanAccount: ConsumerLending_ConsumerLendingLoanAccountsOrderByExp
  consumerLendingLoanAccountId: OrderBy
  consumerLendingLoanPayment: ConsumerLending_ConsumerLendingLoanPaymentsOrderByExp
  endingBalance: OrderBy
  interestAmount: OrderBy
  paymentAmount: OrderBy
  paymentNumber: OrderBy
  paymentScheduleId: OrderBy
  principalAmount: OrderBy
  scheduledDate: OrderBy
  status: OrderBy
}

scalar ConsumerLending_ConsumerLendingPaymentScheduleStatus

type ConsumerLending_ConsumerLendingPaymentScheduleStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingPaymentScheduleStatus
  min: ConsumerLending_ConsumerLendingPaymentScheduleStatus
}

input ConsumerLending_ConsumerLendingPaymentScheduleStatusBoolExp {
  _and: [ConsumerLending_ConsumerLendingPaymentScheduleStatusBoolExp!]
  _eq: ConsumerLending_ConsumerLendingPaymentScheduleStatus
  _gt: ConsumerLending_ConsumerLendingPaymentScheduleStatus
  _gte: ConsumerLending_ConsumerLendingPaymentScheduleStatus
  _in: [ConsumerLending_ConsumerLendingPaymentScheduleStatus!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingPaymentScheduleStatus
  _lte: ConsumerLending_ConsumerLendingPaymentScheduleStatus
  _neq: ConsumerLending_ConsumerLendingPaymentScheduleStatus
  _not: ConsumerLending_ConsumerLendingPaymentScheduleStatusBoolExp
  _or: [ConsumerLending_ConsumerLendingPaymentScheduleStatusBoolExp!]
}

scalar ConsumerLending_ConsumerLendingPaymentStatus

type ConsumerLending_ConsumerLendingPaymentStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingPaymentStatus
  min: ConsumerLending_ConsumerLendingPaymentStatus
}

input ConsumerLending_ConsumerLendingPaymentStatusBoolExp {
  _and: [ConsumerLending_ConsumerLendingPaymentStatusBoolExp!]
  _eq: ConsumerLending_ConsumerLendingPaymentStatus
  _gt: ConsumerLending_ConsumerLendingPaymentStatus
  _gte: ConsumerLending_ConsumerLendingPaymentStatus
  _in: [ConsumerLending_ConsumerLendingPaymentStatus!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingPaymentStatus
  _lte: ConsumerLending_ConsumerLendingPaymentStatus
  _neq: ConsumerLending_ConsumerLendingPaymentStatus
  _not: ConsumerLending_ConsumerLendingPaymentStatusBoolExp
  _or: [ConsumerLending_ConsumerLendingPaymentStatusBoolExp!]
}

scalar ConsumerLending_ConsumerLendingPaymentType

type ConsumerLending_ConsumerLendingPaymentTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingPaymentType
  min: ConsumerLending_ConsumerLendingPaymentType
}

input ConsumerLending_ConsumerLendingPaymentTypeBoolExp {
  _and: [ConsumerLending_ConsumerLendingPaymentTypeBoolExp!]
  _eq: ConsumerLending_ConsumerLendingPaymentType
  _gt: ConsumerLending_ConsumerLendingPaymentType
  _gte: ConsumerLending_ConsumerLendingPaymentType
  _in: [ConsumerLending_ConsumerLendingPaymentType!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingPaymentType
  _lte: ConsumerLending_ConsumerLendingPaymentType
  _neq: ConsumerLending_ConsumerLendingPaymentType
  _not: ConsumerLending_ConsumerLendingPaymentTypeBoolExp
  _or: [ConsumerLending_ConsumerLendingPaymentTypeBoolExp!]
}

scalar ConsumerLending_ConsumerLendingPremiumFrequency

type ConsumerLending_ConsumerLendingPremiumFrequencyAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingPremiumFrequency
  min: ConsumerLending_ConsumerLendingPremiumFrequency
}

input ConsumerLending_ConsumerLendingPremiumFrequencyBoolExp {
  _and: [ConsumerLending_ConsumerLendingPremiumFrequencyBoolExp!]
  _eq: ConsumerLending_ConsumerLendingPremiumFrequency
  _gt: ConsumerLending_ConsumerLendingPremiumFrequency
  _gte: ConsumerLending_ConsumerLendingPremiumFrequency
  _in: [ConsumerLending_ConsumerLendingPremiumFrequency!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingPremiumFrequency
  _lte: ConsumerLending_ConsumerLendingPremiumFrequency
  _neq: ConsumerLending_ConsumerLendingPremiumFrequency
  _not: ConsumerLending_ConsumerLendingPremiumFrequencyBoolExp
  _or: [ConsumerLending_ConsumerLendingPremiumFrequencyBoolExp!]
}

"""
Specifies the eligibility criteria for each loan product, such as credit score, income, and employment requirements.
"""
type ConsumerLending_ConsumerLendingProductEligibilityCriteria {
  """Unique identifier for eligibility criteria"""
  consumerLendingCriteriaId: ConsumerLending_Int4!
  consumerLendingLoanProduct: ConsumerLending_ConsumerLendingLoanProducts

  """Reference to loan product"""
  consumerLendingLoanProductId: ConsumerLending_Int4!

  """Type of eligibility criteria"""
  criteriaType: ConsumerLending_ConsumerLendingEligibilityCriteriaType!

  """Description of the eligibility criteria"""
  description: ConsumerLending_Text

  """Maximum value for eligibility"""
  maxValue: ConsumerLending_Varchar

  """Minimum value for eligibility"""
  minValue: ConsumerLending_Varchar

  """Whether this criteria is required"""
  required: ConsumerLending_Bool!
}

type ConsumerLending_ConsumerLendingProductEligibilityCriteriaAggExp {
  _count: Int!
  consumerLendingCriteriaId: ConsumerLending_Int4AggExp!
  consumerLendingLoanProductId: ConsumerLending_Int4AggExp!
  criteriaType: ConsumerLending_ConsumerLendingEligibilityCriteriaTypeAggExp!
  description: ConsumerLending_TextAggExp!
  maxValue: ConsumerLending_VarcharAggExp!
  minValue: ConsumerLending_VarcharAggExp!
  required: ConsumerLending_BoolAggExp!
}

input ConsumerLending_ConsumerLendingProductEligibilityCriteriaBoolExp {
  _and: [ConsumerLending_ConsumerLendingProductEligibilityCriteriaBoolExp!]
  _not: ConsumerLending_ConsumerLendingProductEligibilityCriteriaBoolExp
  _or: [ConsumerLending_ConsumerLendingProductEligibilityCriteriaBoolExp!]
  consumerLendingCriteriaId: ConsumerLending_Int4BoolExp
  consumerLendingLoanProduct: ConsumerLending_ConsumerLendingLoanProductsBoolExp
  consumerLendingLoanProductId: ConsumerLending_Int4BoolExp
  criteriaType: ConsumerLending_ConsumerLendingEligibilityCriteriaTypeBoolExp
  description: ConsumerLending_TextBoolExp
  maxValue: ConsumerLending_VarcharBoolExp
  minValue: ConsumerLending_VarcharBoolExp
  required: ConsumerLending_BoolBoolExp
}

input ConsumerLending_ConsumerLendingProductEligibilityCriteriaFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingProductEligibilityCriteriaOrderByExp!]
  where: ConsumerLending_ConsumerLendingProductEligibilityCriteriaBoolExp
}

input ConsumerLending_ConsumerLendingProductEligibilityCriteriaOrderByExp {
  consumerLendingCriteriaId: OrderBy
  consumerLendingLoanProduct: ConsumerLending_ConsumerLendingLoanProductsOrderByExp
  consumerLendingLoanProductId: OrderBy
  criteriaType: OrderBy
  description: OrderBy
  maxValue: OrderBy
  minValue: OrderBy
  required: OrderBy
}

scalar ConsumerLending_ConsumerLendingProtectedClass

type ConsumerLending_ConsumerLendingProtectedClassAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingProtectedClass
  min: ConsumerLending_ConsumerLendingProtectedClass
}

input ConsumerLending_ConsumerLendingProtectedClassBoolExp {
  _and: [ConsumerLending_ConsumerLendingProtectedClassBoolExp!]
  _eq: ConsumerLending_ConsumerLendingProtectedClass
  _gt: ConsumerLending_ConsumerLendingProtectedClass
  _gte: ConsumerLending_ConsumerLendingProtectedClass
  _in: [ConsumerLending_ConsumerLendingProtectedClass!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingProtectedClass
  _lte: ConsumerLending_ConsumerLendingProtectedClass
  _neq: ConsumerLending_ConsumerLendingProtectedClass
  _not: ConsumerLending_ConsumerLendingProtectedClassBoolExp
  _or: [ConsumerLending_ConsumerLendingProtectedClassBoolExp!]
}

"""
Stores public records, such as bankruptcies, liens, and judgments, associated with a credit report.
"""
type ConsumerLending_ConsumerLendingPublicRecords {
  """Amount of judgment or lien"""
  amount: ConsumerLending_Numeric
  consumerLendingCreditReport: ConsumerLending_ConsumerLendingCreditReports

  """Reference to credit report"""
  consumerLendingCreditReportId: ConsumerLending_Int4!

  """Unique identifier for public record"""
  consumerLendingRecordId: ConsumerLending_Int4!

  """Date record was filed"""
  filingDate: ConsumerLending_Date!

  """Type of public record"""
  recordType: ConsumerLending_ConsumerLendingPublicRecordType!

  """Court or filing reference number"""
  referenceNumber: ConsumerLending_Varchar

  """Current status of the public record"""
  status: ConsumerLending_ConsumerLendingPublicRecordStatus!
}

type ConsumerLending_ConsumerLendingPublicRecordsAggExp {
  _count: Int!
  amount: ConsumerLending_NumericAggExp!
  consumerLendingCreditReportId: ConsumerLending_Int4AggExp!
  consumerLendingRecordId: ConsumerLending_Int4AggExp!
  filingDate: ConsumerLending_DateAggExp!
  recordType: ConsumerLending_ConsumerLendingPublicRecordTypeAggExp!
  referenceNumber: ConsumerLending_VarcharAggExp!
  status: ConsumerLending_ConsumerLendingPublicRecordStatusAggExp!
}

input ConsumerLending_ConsumerLendingPublicRecordsBoolExp {
  _and: [ConsumerLending_ConsumerLendingPublicRecordsBoolExp!]
  _not: ConsumerLending_ConsumerLendingPublicRecordsBoolExp
  _or: [ConsumerLending_ConsumerLendingPublicRecordsBoolExp!]
  amount: ConsumerLending_NumericBoolExp
  consumerLendingCreditReport: ConsumerLending_ConsumerLendingCreditReportsBoolExp
  consumerLendingCreditReportId: ConsumerLending_Int4BoolExp
  consumerLendingRecordId: ConsumerLending_Int4BoolExp
  filingDate: ConsumerLending_DateBoolExp
  recordType: ConsumerLending_ConsumerLendingPublicRecordTypeBoolExp
  referenceNumber: ConsumerLending_VarcharBoolExp
  status: ConsumerLending_ConsumerLendingPublicRecordStatusBoolExp
}

input ConsumerLending_ConsumerLendingPublicRecordsFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingPublicRecordsOrderByExp!]
  where: ConsumerLending_ConsumerLendingPublicRecordsBoolExp
}

input ConsumerLending_ConsumerLendingPublicRecordsOrderByExp {
  amount: OrderBy
  consumerLendingCreditReport: ConsumerLending_ConsumerLendingCreditReportsOrderByExp
  consumerLendingCreditReportId: OrderBy
  consumerLendingRecordId: OrderBy
  filingDate: OrderBy
  recordType: OrderBy
  referenceNumber: OrderBy
  status: OrderBy
}

scalar ConsumerLending_ConsumerLendingPublicRecordStatus

type ConsumerLending_ConsumerLendingPublicRecordStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingPublicRecordStatus
  min: ConsumerLending_ConsumerLendingPublicRecordStatus
}

input ConsumerLending_ConsumerLendingPublicRecordStatusBoolExp {
  _and: [ConsumerLending_ConsumerLendingPublicRecordStatusBoolExp!]
  _eq: ConsumerLending_ConsumerLendingPublicRecordStatus
  _gt: ConsumerLending_ConsumerLendingPublicRecordStatus
  _gte: ConsumerLending_ConsumerLendingPublicRecordStatus
  _in: [ConsumerLending_ConsumerLendingPublicRecordStatus!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingPublicRecordStatus
  _lte: ConsumerLending_ConsumerLendingPublicRecordStatus
  _neq: ConsumerLending_ConsumerLendingPublicRecordStatus
  _not: ConsumerLending_ConsumerLendingPublicRecordStatusBoolExp
  _or: [ConsumerLending_ConsumerLendingPublicRecordStatusBoolExp!]
}

scalar ConsumerLending_ConsumerLendingPublicRecordType

type ConsumerLending_ConsumerLendingPublicRecordTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingPublicRecordType
  min: ConsumerLending_ConsumerLendingPublicRecordType
}

input ConsumerLending_ConsumerLendingPublicRecordTypeBoolExp {
  _and: [ConsumerLending_ConsumerLendingPublicRecordTypeBoolExp!]
  _eq: ConsumerLending_ConsumerLendingPublicRecordType
  _gt: ConsumerLending_ConsumerLendingPublicRecordType
  _gte: ConsumerLending_ConsumerLendingPublicRecordType
  _in: [ConsumerLending_ConsumerLendingPublicRecordType!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingPublicRecordType
  _lte: ConsumerLending_ConsumerLendingPublicRecordType
  _neq: ConsumerLending_ConsumerLendingPublicRecordType
  _not: ConsumerLending_ConsumerLendingPublicRecordTypeBoolExp
  _or: [ConsumerLending_ConsumerLendingPublicRecordTypeBoolExp!]
}

"""
Tracks notices and disclosures required by Regulation B (Equal Credit
Opportunity Act), such as notices of incomplete applications or adverse action.
"""
type ConsumerLending_ConsumerLendingRegBNotices {
  """Whether appraisal notice included"""
  appraisalNoticeIncluded: ConsumerLending_Bool!

  """Reference to loan application"""
  consumerLendingApplicationId: ConsumerLending_Int4!
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplications

  """Unique identifier for Reg B notice"""
  consumerLendingNoticeId: ConsumerLending_Int4!

  """Terms of counteroffer if applicable"""
  counterofferTerms: ConsumerLending_Text

  """Deadline for response if applicable"""
  deadlineDate: ConsumerLending_Date

  """Method of delivering the notice"""
  deliveryMethod: ConsumerLending_ConsumerLendingDeliveryMethod!

  """Path to stored notice document"""
  documentPath: ConsumerLending_Varchar

  """Date notice was generated"""
  generatedDate: ConsumerLending_Timestamptz!

  """Items needed if incompleteness notice"""
  incompleteItems: ConsumerLending_Text

  """Type of Regulation B notice"""
  noticeType: ConsumerLending_ConsumerLendingRegBNoticeType!
  noticeUser: Enterprise_EnterpriseAssociates

  """Date notice was sent"""
  sentDate: ConsumerLending_Timestamptz!

  """User who generated notice"""
  userId: ConsumerLending_Int4
}

type ConsumerLending_ConsumerLendingRegBNoticesAggExp {
  _count: Int!
  appraisalNoticeIncluded: ConsumerLending_BoolAggExp!
  consumerLendingApplicationId: ConsumerLending_Int4AggExp!
  consumerLendingNoticeId: ConsumerLending_Int4AggExp!
  counterofferTerms: ConsumerLending_TextAggExp!
  deadlineDate: ConsumerLending_DateAggExp!
  deliveryMethod: ConsumerLending_ConsumerLendingDeliveryMethodAggExp!
  documentPath: ConsumerLending_VarcharAggExp!
  generatedDate: ConsumerLending_TimestamptzAggExp!
  incompleteItems: ConsumerLending_TextAggExp!
  noticeType: ConsumerLending_ConsumerLendingRegBNoticeTypeAggExp!
  sentDate: ConsumerLending_TimestamptzAggExp!
  userId: ConsumerLending_Int4AggExp!
}

input ConsumerLending_ConsumerLendingRegBNoticesBoolExp {
  _and: [ConsumerLending_ConsumerLendingRegBNoticesBoolExp!]
  _not: ConsumerLending_ConsumerLendingRegBNoticesBoolExp
  _or: [ConsumerLending_ConsumerLendingRegBNoticesBoolExp!]
  appraisalNoticeIncluded: ConsumerLending_BoolBoolExp
  consumerLendingApplicationId: ConsumerLending_Int4BoolExp
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplicationsBoolExp
  consumerLendingNoticeId: ConsumerLending_Int4BoolExp
  counterofferTerms: ConsumerLending_TextBoolExp
  deadlineDate: ConsumerLending_DateBoolExp
  deliveryMethod: ConsumerLending_ConsumerLendingDeliveryMethodBoolExp
  documentPath: ConsumerLending_VarcharBoolExp
  generatedDate: ConsumerLending_TimestamptzBoolExp
  incompleteItems: ConsumerLending_TextBoolExp
  noticeType: ConsumerLending_ConsumerLendingRegBNoticeTypeBoolExp
  sentDate: ConsumerLending_TimestamptzBoolExp
  userId: ConsumerLending_Int4BoolExp
}

input ConsumerLending_ConsumerLendingRegBNoticesFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingRegBNoticesOrderByExp!]
  where: ConsumerLending_ConsumerLendingRegBNoticesBoolExp
}

input ConsumerLending_ConsumerLendingRegBNoticesOrderByExp {
  appraisalNoticeIncluded: OrderBy
  consumerLendingApplicationId: OrderBy
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplicationsOrderByExp
  consumerLendingNoticeId: OrderBy
  counterofferTerms: OrderBy
  deadlineDate: OrderBy
  deliveryMethod: OrderBy
  documentPath: OrderBy
  generatedDate: OrderBy
  incompleteItems: OrderBy
  noticeType: OrderBy
  sentDate: OrderBy
  userId: OrderBy
}

scalar ConsumerLending_ConsumerLendingRegBNoticeType

type ConsumerLending_ConsumerLendingRegBNoticeTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingRegBNoticeType
  min: ConsumerLending_ConsumerLendingRegBNoticeType
}

input ConsumerLending_ConsumerLendingRegBNoticeTypeBoolExp {
  _and: [ConsumerLending_ConsumerLendingRegBNoticeTypeBoolExp!]
  _eq: ConsumerLending_ConsumerLendingRegBNoticeType
  _gt: ConsumerLending_ConsumerLendingRegBNoticeType
  _gte: ConsumerLending_ConsumerLendingRegBNoticeType
  _in: [ConsumerLending_ConsumerLendingRegBNoticeType!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingRegBNoticeType
  _lte: ConsumerLending_ConsumerLendingRegBNoticeType
  _neq: ConsumerLending_ConsumerLendingRegBNoticeType
  _not: ConsumerLending_ConsumerLendingRegBNoticeTypeBoolExp
  _or: [ConsumerLending_ConsumerLendingRegBNoticeTypeBoolExp!]
}

"""
Stores disclosures required by the Truth in Lending Act (Regulation Z), such as Loan Estimates and Closing Disclosures.
"""
type ConsumerLending_ConsumerLendingRegZDisclosures {
  """Amount financed disclosed"""
  amountFinanced: ConsumerLending_Numeric!

  """APR disclosed"""
  annualPercentageRate: ConsumerLending_Numeric!

  """Reference to loan application"""
  consumerLendingApplicationId: ConsumerLending_Int4!

  """Unique identifier for disclosure"""
  consumerLendingDisclosureId: ConsumerLending_Int4!
  consumerLendingLoanAccount: ConsumerLending_ConsumerLendingLoanAccounts
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplications

  """Method of delivering the disclosure"""
  deliveryMethod: ConsumerLending_ConsumerLendingDisclosureDeliveryMethod!

  """Date disclosure was generated"""
  disclosureDate: ConsumerLending_Timestamptz!

  """Type of Regulation Z disclosure"""
  disclosureType: ConsumerLending_ConsumerLendingDisclosureType!

  """Path to stored disclosure document"""
  documentPath: ConsumerLending_Varchar

  """Total finance charge disclosed"""
  financeCharge: ConsumerLending_Numeric!

  """Late payment fee disclosed"""
  latePaymentFee: ConsumerLending_Numeric

  """Reference to loan account if originated"""
  loanAccountId: ConsumerLending_Int4

  """Summary of payment schedule"""
  paymentSchedule: ConsumerLending_Text

  """Description of prepayment penalty if any"""
  prepaymentPenalty: ConsumerLending_Text

  """Date receipt was confirmed"""
  receiptDate: ConsumerLending_Timestamptz

  """Whether receipt confirmed"""
  receivedByCustomer: ConsumerLending_Bool

  """Description of security interest"""
  securityInterest: ConsumerLending_Text

  """Date disclosure was sent to applicant"""
  sentDate: ConsumerLending_Timestamptz

  """Total of payments disclosed"""
  totalOfPayments: ConsumerLending_Numeric!

  """User who generated disclosure"""
  userId: ConsumerLending_Int4

  """Version number if multiple disclosures of same type"""
  version: ConsumerLending_Int4!
}

type ConsumerLending_ConsumerLendingRegZDisclosuresAggExp {
  _count: Int!
  amountFinanced: ConsumerLending_NumericAggExp!
  annualPercentageRate: ConsumerLending_NumericAggExp!
  consumerLendingApplicationId: ConsumerLending_Int4AggExp!
  consumerLendingDisclosureId: ConsumerLending_Int4AggExp!
  deliveryMethod: ConsumerLending_ConsumerLendingDisclosureDeliveryMethodAggExp!
  disclosureDate: ConsumerLending_TimestamptzAggExp!
  disclosureType: ConsumerLending_ConsumerLendingDisclosureTypeAggExp!
  documentPath: ConsumerLending_VarcharAggExp!
  financeCharge: ConsumerLending_NumericAggExp!
  latePaymentFee: ConsumerLending_NumericAggExp!
  loanAccountId: ConsumerLending_Int4AggExp!
  paymentSchedule: ConsumerLending_TextAggExp!
  prepaymentPenalty: ConsumerLending_TextAggExp!
  receiptDate: ConsumerLending_TimestamptzAggExp!
  receivedByCustomer: ConsumerLending_BoolAggExp!
  securityInterest: ConsumerLending_TextAggExp!
  sentDate: ConsumerLending_TimestamptzAggExp!
  totalOfPayments: ConsumerLending_NumericAggExp!
  userId: ConsumerLending_Int4AggExp!
  version: ConsumerLending_Int4AggExp!
}

input ConsumerLending_ConsumerLendingRegZDisclosuresBoolExp {
  _and: [ConsumerLending_ConsumerLendingRegZDisclosuresBoolExp!]
  _not: ConsumerLending_ConsumerLendingRegZDisclosuresBoolExp
  _or: [ConsumerLending_ConsumerLendingRegZDisclosuresBoolExp!]
  amountFinanced: ConsumerLending_NumericBoolExp
  annualPercentageRate: ConsumerLending_NumericBoolExp
  consumerLendingApplicationId: ConsumerLending_Int4BoolExp
  consumerLendingDisclosureId: ConsumerLending_Int4BoolExp
  consumerLendingLoanAccount: ConsumerLending_ConsumerLendingLoanAccountsBoolExp
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplicationsBoolExp
  deliveryMethod: ConsumerLending_ConsumerLendingDisclosureDeliveryMethodBoolExp
  disclosureDate: ConsumerLending_TimestamptzBoolExp
  disclosureType: ConsumerLending_ConsumerLendingDisclosureTypeBoolExp
  documentPath: ConsumerLending_VarcharBoolExp
  financeCharge: ConsumerLending_NumericBoolExp
  latePaymentFee: ConsumerLending_NumericBoolExp
  loanAccountId: ConsumerLending_Int4BoolExp
  paymentSchedule: ConsumerLending_TextBoolExp
  prepaymentPenalty: ConsumerLending_TextBoolExp
  receiptDate: ConsumerLending_TimestamptzBoolExp
  receivedByCustomer: ConsumerLending_BoolBoolExp
  securityInterest: ConsumerLending_TextBoolExp
  sentDate: ConsumerLending_TimestamptzBoolExp
  totalOfPayments: ConsumerLending_NumericBoolExp
  userId: ConsumerLending_Int4BoolExp
  version: ConsumerLending_Int4BoolExp
}

input ConsumerLending_ConsumerLendingRegZDisclosuresFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingRegZDisclosuresOrderByExp!]
  where: ConsumerLending_ConsumerLendingRegZDisclosuresBoolExp
}

input ConsumerLending_ConsumerLendingRegZDisclosuresOrderByExp {
  amountFinanced: OrderBy
  annualPercentageRate: OrderBy
  consumerLendingApplicationId: OrderBy
  consumerLendingDisclosureId: OrderBy
  consumerLendingLoanAccount: ConsumerLending_ConsumerLendingLoanAccountsOrderByExp
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplicationsOrderByExp
  deliveryMethod: OrderBy
  disclosureDate: OrderBy
  disclosureType: OrderBy
  documentPath: OrderBy
  financeCharge: OrderBy
  latePaymentFee: OrderBy
  loanAccountId: OrderBy
  paymentSchedule: OrderBy
  prepaymentPenalty: OrderBy
  receiptDate: OrderBy
  receivedByCustomer: OrderBy
  securityInterest: OrderBy
  sentDate: OrderBy
  totalOfPayments: OrderBy
  userId: OrderBy
  version: OrderBy
}

"""
Defines pricing tiers based on risk factors, such as credit score and debt-to-income ratio, for loan products.
"""
type ConsumerLending_ConsumerLendingRiskBasedPricingTiers {
  consumerLendingApplicationDecisions(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingApplicationDecisionsOrderByExp!], where: ConsumerLending_ConsumerLendingApplicationDecisionsBoolExp): [ConsumerLending_ConsumerLendingApplicationDecisions!]
  consumerLendingApplicationDecisionsAggregate(filter_input: ConsumerLending_ConsumerLendingApplicationDecisionsFilterInput): ConsumerLending_ConsumerLendingApplicationDecisionsAggExp!
  consumerLendingLoanProduct: ConsumerLending_ConsumerLendingLoanProducts

  """Reference to loan product"""
  consumerLendingLoanProductId: ConsumerLending_Int4!

  """Unique identifier for pricing tier"""
  consumerLendingPricingTierId: ConsumerLending_Int4!

  """Added to base rate"""
  interestRateAdjustment: ConsumerLending_Numeric!

  """Whether tier is currently in use"""
  isActive: ConsumerLending_Bool!

  """Maximum credit score for this tier"""
  maxCreditScore: ConsumerLending_Int4

  """Maximum debt-to-income ratio allowed"""
  maxDtiRatio: ConsumerLending_Numeric

  """Maximum loan amount for this tier"""
  maxLoanAmount: ConsumerLending_Numeric

  """Minimum credit score for this tier"""
  minCreditScore: ConsumerLending_Int4

  """Minimum loan amount for this tier"""
  minLoanAmount: ConsumerLending_Numeric

  """A, B, C, D, etc."""
  tierName: ConsumerLending_Varchar!
}

type ConsumerLending_ConsumerLendingRiskBasedPricingTiersAggExp {
  _count: Int!
  consumerLendingLoanProductId: ConsumerLending_Int4AggExp!
  consumerLendingPricingTierId: ConsumerLending_Int4AggExp!
  interestRateAdjustment: ConsumerLending_NumericAggExp!
  isActive: ConsumerLending_BoolAggExp!
  maxCreditScore: ConsumerLending_Int4AggExp!
  maxDtiRatio: ConsumerLending_NumericAggExp!
  maxLoanAmount: ConsumerLending_NumericAggExp!
  minCreditScore: ConsumerLending_Int4AggExp!
  minLoanAmount: ConsumerLending_NumericAggExp!
  tierName: ConsumerLending_VarcharAggExp!
}

input ConsumerLending_ConsumerLendingRiskBasedPricingTiersBoolExp {
  _and: [ConsumerLending_ConsumerLendingRiskBasedPricingTiersBoolExp!]
  _not: ConsumerLending_ConsumerLendingRiskBasedPricingTiersBoolExp
  _or: [ConsumerLending_ConsumerLendingRiskBasedPricingTiersBoolExp!]
  consumerLendingApplicationDecisions: ConsumerLending_ConsumerLendingApplicationDecisionsBoolExp
  consumerLendingLoanProduct: ConsumerLending_ConsumerLendingLoanProductsBoolExp
  consumerLendingLoanProductId: ConsumerLending_Int4BoolExp
  consumerLendingPricingTierId: ConsumerLending_Int4BoolExp
  interestRateAdjustment: ConsumerLending_NumericBoolExp
  isActive: ConsumerLending_BoolBoolExp
  maxCreditScore: ConsumerLending_Int4BoolExp
  maxDtiRatio: ConsumerLending_NumericBoolExp
  maxLoanAmount: ConsumerLending_NumericBoolExp
  minCreditScore: ConsumerLending_Int4BoolExp
  minLoanAmount: ConsumerLending_NumericBoolExp
  tierName: ConsumerLending_VarcharBoolExp
}

input ConsumerLending_ConsumerLendingRiskBasedPricingTiersFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingRiskBasedPricingTiersOrderByExp!]
  where: ConsumerLending_ConsumerLendingRiskBasedPricingTiersBoolExp
}

input ConsumerLending_ConsumerLendingRiskBasedPricingTiersOrderByExp {
  consumerLendingLoanProduct: ConsumerLending_ConsumerLendingLoanProductsOrderByExp
  consumerLendingLoanProductId: OrderBy
  consumerLendingPricingTierId: OrderBy
  interestRateAdjustment: OrderBy
  isActive: OrderBy
  maxCreditScore: OrderBy
  maxDtiRatio: OrderBy
  maxLoanAmount: OrderBy
  minCreditScore: OrderBy
  minLoanAmount: OrderBy
  tierName: OrderBy
}

scalar ConsumerLending_ConsumerLendingStatementDeliveryMethod

type ConsumerLending_ConsumerLendingStatementDeliveryMethodAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingStatementDeliveryMethod
  min: ConsumerLending_ConsumerLendingStatementDeliveryMethod
}

input ConsumerLending_ConsumerLendingStatementDeliveryMethodBoolExp {
  _and: [ConsumerLending_ConsumerLendingStatementDeliveryMethodBoolExp!]
  _eq: ConsumerLending_ConsumerLendingStatementDeliveryMethod
  _gt: ConsumerLending_ConsumerLendingStatementDeliveryMethod
  _gte: ConsumerLending_ConsumerLendingStatementDeliveryMethod
  _in: [ConsumerLending_ConsumerLendingStatementDeliveryMethod!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingStatementDeliveryMethod
  _lte: ConsumerLending_ConsumerLendingStatementDeliveryMethod
  _neq: ConsumerLending_ConsumerLendingStatementDeliveryMethod
  _not: ConsumerLending_ConsumerLendingStatementDeliveryMethodBoolExp
  _or: [ConsumerLending_ConsumerLendingStatementDeliveryMethodBoolExp!]
}

scalar ConsumerLending_ConsumerLendingStatisticalTest

type ConsumerLending_ConsumerLendingStatisticalTestAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingStatisticalTest
  min: ConsumerLending_ConsumerLendingStatisticalTest
}

input ConsumerLending_ConsumerLendingStatisticalTestBoolExp {
  _and: [ConsumerLending_ConsumerLendingStatisticalTestBoolExp!]
  _eq: ConsumerLending_ConsumerLendingStatisticalTest
  _gt: ConsumerLending_ConsumerLendingStatisticalTest
  _gte: ConsumerLending_ConsumerLendingStatisticalTest
  _in: [ConsumerLending_ConsumerLendingStatisticalTest!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingStatisticalTest
  _lte: ConsumerLending_ConsumerLendingStatisticalTest
  _neq: ConsumerLending_ConsumerLendingStatisticalTest
  _not: ConsumerLending_ConsumerLendingStatisticalTestBoolExp
  _or: [ConsumerLending_ConsumerLendingStatisticalTestBoolExp!]
}

scalar ConsumerLending_ConsumerLendingValuationSource

type ConsumerLending_ConsumerLendingValuationSourceAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingValuationSource
  min: ConsumerLending_ConsumerLendingValuationSource
}

input ConsumerLending_ConsumerLendingValuationSourceBoolExp {
  _and: [ConsumerLending_ConsumerLendingValuationSourceBoolExp!]
  _eq: ConsumerLending_ConsumerLendingValuationSource
  _gt: ConsumerLending_ConsumerLendingValuationSource
  _gte: ConsumerLending_ConsumerLendingValuationSource
  _in: [ConsumerLending_ConsumerLendingValuationSource!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingValuationSource
  _lte: ConsumerLending_ConsumerLendingValuationSource
  _neq: ConsumerLending_ConsumerLendingValuationSource
  _not: ConsumerLending_ConsumerLendingValuationSourceBoolExp
  _or: [ConsumerLending_ConsumerLendingValuationSourceBoolExp!]
}

scalar ConsumerLending_ConsumerLendingVehicleCondition

type ConsumerLending_ConsumerLendingVehicleConditionAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingVehicleCondition
  min: ConsumerLending_ConsumerLendingVehicleCondition
}

input ConsumerLending_ConsumerLendingVehicleConditionBoolExp {
  _and: [ConsumerLending_ConsumerLendingVehicleConditionBoolExp!]
  _eq: ConsumerLending_ConsumerLendingVehicleCondition
  _gt: ConsumerLending_ConsumerLendingVehicleCondition
  _gte: ConsumerLending_ConsumerLendingVehicleCondition
  _in: [ConsumerLending_ConsumerLendingVehicleCondition!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingVehicleCondition
  _lte: ConsumerLending_ConsumerLendingVehicleCondition
  _neq: ConsumerLending_ConsumerLendingVehicleCondition
  _not: ConsumerLending_ConsumerLendingVehicleConditionBoolExp
  _or: [ConsumerLending_ConsumerLendingVehicleConditionBoolExp!]
}

"""
Stores information about vehicles involved in auto loan applications, including
details like make, model, and purchase price.
"""
type ConsumerLending_ConsumerLendingVehicles {
  """Reference to loan application"""
  consumerLendingApplicationId: ConsumerLending_Int4!
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplications
  consumerLendingLoanCollaterals(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingLoanCollateralOrderByExp!], where: ConsumerLending_ConsumerLendingLoanCollateralBoolExp): [ConsumerLending_ConsumerLendingLoanCollateral!]
  consumerLendingLoanCollateralsAggregate(filter_input: ConsumerLending_ConsumerLendingLoanCollateralFilterInput): ConsumerLending_ConsumerLendingLoanCollateralAggExp!
  dealerAddress: Enterprise_EnterpriseAddresses

  """Reference to enterprise.addresses"""
  dealerAddressId: ConsumerLending_Int4

  """Name of dealership"""
  dealerName: ConsumerLending_Varchar

  """Down payment amount"""
  downPayment: ConsumerLending_Numeric

  """Whether private sale or dealer"""
  isPrivateSale: ConsumerLending_Bool!

  """Vehicle manufacturer"""
  make: ConsumerLending_Varchar!

  """Current odometer reading"""
  mileage: ConsumerLending_Int4

  """Vehicle model"""
  model: ConsumerLending_Varchar!

  """Agreed purchase price"""
  purchasePrice: ConsumerLending_Numeric!

  """Loan balance on trade-in"""
  tradeInBalanceOwed: ConsumerLending_Numeric

  """Value of trade-in vehicle"""
  tradeInValue: ConsumerLending_Numeric

  """Vehicle trim level"""
  trim: ConsumerLending_Varchar

  """Third-party valuation amount"""
  valuationAmount: ConsumerLending_Numeric

  """Date of valuation"""
  valuationDate: ConsumerLending_Date

  """Source of vehicle valuation"""
  valuationSource: ConsumerLending_ConsumerLendingValuationSource

  """Unique identifier for vehicle"""
  vehicleId: ConsumerLending_Int4!

  """Condition of the vehicle"""
  vehicleType: ConsumerLending_ConsumerLendingVehicleCondition!

  """Vehicle Identification Number"""
  vin: ConsumerLending_Varchar

  """Vehicle model year"""
  year: ConsumerLending_Int4!
}

type ConsumerLending_ConsumerLendingVehiclesAggExp {
  _count: Int!
  consumerLendingApplicationId: ConsumerLending_Int4AggExp!
  dealerAddressId: ConsumerLending_Int4AggExp!
  dealerName: ConsumerLending_VarcharAggExp!
  downPayment: ConsumerLending_NumericAggExp!
  isPrivateSale: ConsumerLending_BoolAggExp!
  make: ConsumerLending_VarcharAggExp!
  mileage: ConsumerLending_Int4AggExp!
  model: ConsumerLending_VarcharAggExp!
  purchasePrice: ConsumerLending_NumericAggExp!
  tradeInBalanceOwed: ConsumerLending_NumericAggExp!
  tradeInValue: ConsumerLending_NumericAggExp!
  trim: ConsumerLending_VarcharAggExp!
  valuationAmount: ConsumerLending_NumericAggExp!
  valuationDate: ConsumerLending_DateAggExp!
  valuationSource: ConsumerLending_ConsumerLendingValuationSourceAggExp!
  vehicleId: ConsumerLending_Int4AggExp!
  vehicleType: ConsumerLending_ConsumerLendingVehicleConditionAggExp!
  vin: ConsumerLending_VarcharAggExp!
  year: ConsumerLending_Int4AggExp!
}

input ConsumerLending_ConsumerLendingVehiclesBoolExp {
  _and: [ConsumerLending_ConsumerLendingVehiclesBoolExp!]
  _not: ConsumerLending_ConsumerLendingVehiclesBoolExp
  _or: [ConsumerLending_ConsumerLendingVehiclesBoolExp!]
  consumerLendingApplicationId: ConsumerLending_Int4BoolExp
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplicationsBoolExp
  consumerLendingLoanCollaterals: ConsumerLending_ConsumerLendingLoanCollateralBoolExp
  dealerAddressId: ConsumerLending_Int4BoolExp
  dealerName: ConsumerLending_VarcharBoolExp
  downPayment: ConsumerLending_NumericBoolExp
  isPrivateSale: ConsumerLending_BoolBoolExp
  make: ConsumerLending_VarcharBoolExp
  mileage: ConsumerLending_Int4BoolExp
  model: ConsumerLending_VarcharBoolExp
  purchasePrice: ConsumerLending_NumericBoolExp
  tradeInBalanceOwed: ConsumerLending_NumericBoolExp
  tradeInValue: ConsumerLending_NumericBoolExp
  trim: ConsumerLending_VarcharBoolExp
  valuationAmount: ConsumerLending_NumericBoolExp
  valuationDate: ConsumerLending_DateBoolExp
  valuationSource: ConsumerLending_ConsumerLendingValuationSourceBoolExp
  vehicleId: ConsumerLending_Int4BoolExp
  vehicleType: ConsumerLending_ConsumerLendingVehicleConditionBoolExp
  vin: ConsumerLending_VarcharBoolExp
  year: ConsumerLending_Int4BoolExp
}

input ConsumerLending_ConsumerLendingVehiclesFilterInput {
  limit: Int
  offset: Int
  order_by: [ConsumerLending_ConsumerLendingVehiclesOrderByExp!]
  where: ConsumerLending_ConsumerLendingVehiclesBoolExp
}

input ConsumerLending_ConsumerLendingVehiclesOrderByExp {
  consumerLendingApplicationId: OrderBy
  consumerLendingLoanApplication: ConsumerLending_ConsumerLendingLoanApplicationsOrderByExp
  dealerAddressId: OrderBy
  dealerName: OrderBy
  downPayment: OrderBy
  isPrivateSale: OrderBy
  make: OrderBy
  mileage: OrderBy
  model: OrderBy
  purchasePrice: OrderBy
  tradeInBalanceOwed: OrderBy
  tradeInValue: OrderBy
  trim: OrderBy
  valuationAmount: OrderBy
  valuationDate: OrderBy
  valuationSource: OrderBy
  vehicleId: OrderBy
  vehicleType: OrderBy
  vin: OrderBy
  year: OrderBy
}

scalar ConsumerLending_ConsumerLendingVerificationStatus

type ConsumerLending_ConsumerLendingVerificationStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_ConsumerLendingVerificationStatus
  min: ConsumerLending_ConsumerLendingVerificationStatus
}

input ConsumerLending_ConsumerLendingVerificationStatusBoolExp {
  _and: [ConsumerLending_ConsumerLendingVerificationStatusBoolExp!]
  _eq: ConsumerLending_ConsumerLendingVerificationStatus
  _gt: ConsumerLending_ConsumerLendingVerificationStatus
  _gte: ConsumerLending_ConsumerLendingVerificationStatus
  _in: [ConsumerLending_ConsumerLendingVerificationStatus!]
  _is_null: Boolean
  _lt: ConsumerLending_ConsumerLendingVerificationStatus
  _lte: ConsumerLending_ConsumerLendingVerificationStatus
  _neq: ConsumerLending_ConsumerLendingVerificationStatus
  _not: ConsumerLending_ConsumerLendingVerificationStatusBoolExp
  _or: [ConsumerLending_ConsumerLendingVerificationStatusBoolExp!]
}

scalar ConsumerLending_Date

type ConsumerLending_DateAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_Date
  min: ConsumerLending_Date
}

input ConsumerLending_DateBoolExp {
  _and: [ConsumerLending_DateBoolExp!]
  _eq: ConsumerLending_Date
  _gt: ConsumerLending_Date
  _gte: ConsumerLending_Date
  _in: [ConsumerLending_Date!]
  _is_null: Boolean
  _lt: ConsumerLending_Date
  _lte: ConsumerLending_Date
  _neq: ConsumerLending_Date
  _not: ConsumerLending_DateBoolExp
  _or: [ConsumerLending_DateBoolExp!]
}

scalar ConsumerLending_EnterpriseCitizenshipStatus

type ConsumerLending_EnterpriseCitizenshipStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_EnterpriseCitizenshipStatus
  min: ConsumerLending_EnterpriseCitizenshipStatus
}

input ConsumerLending_EnterpriseCitizenshipStatusBoolExp {
  _and: [ConsumerLending_EnterpriseCitizenshipStatusBoolExp!]
  _eq: ConsumerLending_EnterpriseCitizenshipStatus
  _gt: ConsumerLending_EnterpriseCitizenshipStatus
  _gte: ConsumerLending_EnterpriseCitizenshipStatus
  _in: [ConsumerLending_EnterpriseCitizenshipStatus!]
  _is_null: Boolean
  _lt: ConsumerLending_EnterpriseCitizenshipStatus
  _lte: ConsumerLending_EnterpriseCitizenshipStatus
  _neq: ConsumerLending_EnterpriseCitizenshipStatus
  _not: ConsumerLending_EnterpriseCitizenshipStatusBoolExp
  _or: [ConsumerLending_EnterpriseCitizenshipStatusBoolExp!]
}

scalar ConsumerLending_EnterpriseMaritalStatus

type ConsumerLending_EnterpriseMaritalStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_EnterpriseMaritalStatus
  min: ConsumerLending_EnterpriseMaritalStatus
}

input ConsumerLending_EnterpriseMaritalStatusBoolExp {
  _and: [ConsumerLending_EnterpriseMaritalStatusBoolExp!]
  _eq: ConsumerLending_EnterpriseMaritalStatus
  _gt: ConsumerLending_EnterpriseMaritalStatus
  _gte: ConsumerLending_EnterpriseMaritalStatus
  _in: [ConsumerLending_EnterpriseMaritalStatus!]
  _is_null: Boolean
  _lt: ConsumerLending_EnterpriseMaritalStatus
  _lte: ConsumerLending_EnterpriseMaritalStatus
  _neq: ConsumerLending_EnterpriseMaritalStatus
  _not: ConsumerLending_EnterpriseMaritalStatusBoolExp
  _or: [ConsumerLending_EnterpriseMaritalStatusBoolExp!]
}

scalar ConsumerLending_Int4

type ConsumerLending_Int4AggExp {
  _count: Int!
  _count_distinct: Int!
  avg: ConsumerLending_Numeric
  bit_and: ConsumerLending_Int4
  bit_or: ConsumerLending_Int4
  bit_xor: ConsumerLending_Int4
  max: ConsumerLending_Int4
  min: ConsumerLending_Int4
  stddev: ConsumerLending_Numeric
  stddev_pop: ConsumerLending_Numeric
  stddev_samp: ConsumerLending_Numeric
  sum: ConsumerLending_Int8
  var_pop: ConsumerLending_Numeric
  var_samp: ConsumerLending_Numeric
  variance: ConsumerLending_Numeric
}

input ConsumerLending_Int4BoolExp {
  _and: [ConsumerLending_Int4BoolExp!]
  _eq: ConsumerLending_Int4
  _gt: ConsumerLending_Int4
  _gte: ConsumerLending_Int4
  _in: [ConsumerLending_Int4!]
  _is_null: Boolean
  _lt: ConsumerLending_Int4
  _lte: ConsumerLending_Int4
  _neq: ConsumerLending_Int4
  _not: ConsumerLending_Int4BoolExp
  _or: [ConsumerLending_Int4BoolExp!]
}

scalar ConsumerLending_Int8

scalar ConsumerLending_Numeric

type ConsumerLending_NumericAggExp {
  _count: Int!
  _count_distinct: Int!
  avg: ConsumerLending_Numeric
  max: ConsumerLending_Numeric
  min: ConsumerLending_Numeric
  stddev: ConsumerLending_Numeric
  stddev_pop: ConsumerLending_Numeric
  stddev_samp: ConsumerLending_Numeric
  sum: ConsumerLending_Numeric
  var_pop: ConsumerLending_Numeric
  var_samp: ConsumerLending_Numeric
  variance: ConsumerLending_Numeric
}

input ConsumerLending_NumericBoolExp {
  _and: [ConsumerLending_NumericBoolExp!]
  _eq: ConsumerLending_Numeric
  _gt: ConsumerLending_Numeric
  _gte: ConsumerLending_Numeric
  _in: [ConsumerLending_Numeric!]
  _is_null: Boolean
  _lt: ConsumerLending_Numeric
  _lte: ConsumerLending_Numeric
  _neq: ConsumerLending_Numeric
  _not: ConsumerLending_NumericBoolExp
  _or: [ConsumerLending_NumericBoolExp!]
}

scalar ConsumerLending_Text

type ConsumerLending_TextAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_Text
  min: ConsumerLending_Text
}

input ConsumerLending_TextBoolExp {
  _and: [ConsumerLending_TextBoolExp!]
  _eq: ConsumerLending_Text
  _gt: ConsumerLending_Text
  _gte: ConsumerLending_Text
  _ilike: ConsumerLending_Text
  _in: [ConsumerLending_Text!]
  _iregex: ConsumerLending_Text
  _is_null: Boolean
  _like: ConsumerLending_Text
  _lt: ConsumerLending_Text
  _lte: ConsumerLending_Text
  _neq: ConsumerLending_Text
  _nilike: ConsumerLending_Text
  _niregex: ConsumerLending_Text
  _nlike: ConsumerLending_Text
  _not: ConsumerLending_TextBoolExp
  _nregex: ConsumerLending_Text
  _or: [ConsumerLending_TextBoolExp!]
  _regex: ConsumerLending_Text
  starts_with: ConsumerLending_Text
  ts_match_tt: ConsumerLending_Text
}

scalar ConsumerLending_Timestamptz

type ConsumerLending_TimestamptzAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_Timestamptz
  min: ConsumerLending_Timestamptz
}

input ConsumerLending_TimestamptzBoolExp {
  _and: [ConsumerLending_TimestamptzBoolExp!]
  _eq: ConsumerLending_Timestamptz
  _gt: ConsumerLending_Timestamptz
  _gte: ConsumerLending_Timestamptz
  _in: [ConsumerLending_Timestamptz!]
  _is_null: Boolean
  _lt: ConsumerLending_Timestamptz
  _lte: ConsumerLending_Timestamptz
  _neq: ConsumerLending_Timestamptz
  _not: ConsumerLending_TimestamptzBoolExp
  _or: [ConsumerLending_TimestamptzBoolExp!]
}

scalar ConsumerLending_Varchar

type ConsumerLending_VarcharAggExp {
  _count: Int!
  _count_distinct: Int!
  max: ConsumerLending_Text
  min: ConsumerLending_Text
}

input ConsumerLending_VarcharBoolExp {
  _and: [ConsumerLending_VarcharBoolExp!]
  _eq: ConsumerLending_Varchar
  _gt: ConsumerLending_Varchar
  _gte: ConsumerLending_Varchar
  _ilike: ConsumerLending_Varchar
  _in: [ConsumerLending_Varchar!]
  _iregex: ConsumerLending_Varchar
  _is_null: Boolean
  _like: ConsumerLending_Varchar
  _lt: ConsumerLending_Varchar
  _lte: ConsumerLending_Varchar
  _neq: ConsumerLending_Varchar
  _nilike: ConsumerLending_Varchar
  _niregex: ConsumerLending_Varchar
  _nlike: ConsumerLending_Varchar
  _not: ConsumerLending_VarcharBoolExp
  _nregex: ConsumerLending_Varchar
  _or: [ConsumerLending_VarcharBoolExp!]
  _regex: ConsumerLending_Varchar
  starts_with: ConsumerLending_Varchar
  ts_match_tt: ConsumerLending_Varchar
}

scalar CreditCards_Bool

type CreditCards_BoolAggExp {
  _count: Int!
  _count_distinct: Int!
  bool_and: CreditCards_Bool
  bool_or: CreditCards_Bool
  every: CreditCards_Bool
}

input CreditCards_BoolBoolExp {
  _and: [CreditCards_BoolBoolExp!]
  _eq: CreditCards_Bool
  _gt: CreditCards_Bool
  _gte: CreditCards_Bool
  _in: [CreditCards_Bool!]
  _is_null: Boolean
  _lt: CreditCards_Bool
  _lte: CreditCards_Bool
  _neq: CreditCards_Bool
  _not: CreditCards_BoolBoolExp
  _or: [CreditCards_BoolBoolExp!]
}

"""Documents ability to pay assessments required by Reg Z"""
type CreditCards_CreditCardsAbilityToPayAssessments {
  """Date of ability to pay assessment"""
  assessmentDate: CreditCards_Date!
  assessmentPerformedBy: Enterprise_EnterpriseAssociates
  creditCardsApplication: CreditCards_CreditCardsApplications

  """Reference to applications"""
  creditCardsApplicationId: CreditCards_Int4!

  """Auto-incrementing identifier for each assessment"""
  creditCardsAssessmentId: CreditCards_Int4!

  """Existing debt obligations considered"""
  debtObligations: CreditCards_Numeric

  """Debt-to-income ratio calculated"""
  dtiRatio: CreditCards_Numeric

  """Income amount used in assessment"""
  incomeAmount: CreditCards_Numeric!

  """Source of income verification"""
  incomeSource: CreditCards_Varchar!

  """Whether income was verified"""
  incomeVerified: CreditCards_Bool!

  """Basic living expenses considered"""
  livingExpenses: CreditCards_Numeric

  """Maximum monthly payment calculated as supportable"""
  maxSupportablePayment: CreditCards_Numeric

  """Additional assessment notes"""
  notes: CreditCards_Text

  """Whether applicant passed ability to pay test"""
  passedAssessment: CreditCards_Bool!

  """User who performed assessment"""
  performedById: CreditCards_Int4
}

type CreditCards_CreditCardsAbilityToPayAssessmentsAggExp {
  _count: Int!
  assessmentDate: CreditCards_DateAggExp!
  creditCardsApplicationId: CreditCards_Int4AggExp!
  creditCardsAssessmentId: CreditCards_Int4AggExp!
  debtObligations: CreditCards_NumericAggExp!
  dtiRatio: CreditCards_NumericAggExp!
  incomeAmount: CreditCards_NumericAggExp!
  incomeSource: CreditCards_VarcharAggExp!
  incomeVerified: CreditCards_BoolAggExp!
  livingExpenses: CreditCards_NumericAggExp!
  maxSupportablePayment: CreditCards_NumericAggExp!
  notes: CreditCards_TextAggExp!
  passedAssessment: CreditCards_BoolAggExp!
  performedById: CreditCards_Int4AggExp!
}

input CreditCards_CreditCardsAbilityToPayAssessmentsBoolExp {
  _and: [CreditCards_CreditCardsAbilityToPayAssessmentsBoolExp!]
  _not: CreditCards_CreditCardsAbilityToPayAssessmentsBoolExp
  _or: [CreditCards_CreditCardsAbilityToPayAssessmentsBoolExp!]
  assessmentDate: CreditCards_DateBoolExp
  creditCardsApplication: CreditCards_CreditCardsApplicationsBoolExp
  creditCardsApplicationId: CreditCards_Int4BoolExp
  creditCardsAssessmentId: CreditCards_Int4BoolExp
  debtObligations: CreditCards_NumericBoolExp
  dtiRatio: CreditCards_NumericBoolExp
  incomeAmount: CreditCards_NumericBoolExp
  incomeSource: CreditCards_VarcharBoolExp
  incomeVerified: CreditCards_BoolBoolExp
  livingExpenses: CreditCards_NumericBoolExp
  maxSupportablePayment: CreditCards_NumericBoolExp
  notes: CreditCards_TextBoolExp
  passedAssessment: CreditCards_BoolBoolExp
  performedById: CreditCards_Int4BoolExp
}

input CreditCards_CreditCardsAbilityToPayAssessmentsFilterInput {
  limit: Int
  offset: Int
  order_by: [CreditCards_CreditCardsAbilityToPayAssessmentsOrderByExp!]
  where: CreditCards_CreditCardsAbilityToPayAssessmentsBoolExp
}

input CreditCards_CreditCardsAbilityToPayAssessmentsOrderByExp {
  assessmentDate: OrderBy
  creditCardsApplication: CreditCards_CreditCardsApplicationsOrderByExp
  creditCardsApplicationId: OrderBy
  creditCardsAssessmentId: OrderBy
  debtObligations: OrderBy
  dtiRatio: OrderBy
  incomeAmount: OrderBy
  incomeSource: OrderBy
  incomeVerified: OrderBy
  livingExpenses: OrderBy
  maxSupportablePayment: OrderBy
  notes: OrderBy
  passedAssessment: OrderBy
  performedById: OrderBy
}

"""Stores credit card applications and their status"""
type CreditCards_CreditCardsApplications {
  """Applicant's reported annual income"""
  annualIncome: CreditCards_Numeric

  """Channel used for application (Online, Branch, Mail, Phone)"""
  applicationChannel: CreditCards_Varchar!

  """When application was submitted"""
  applicationDate: CreditCards_Timestamptz!

  """Date when approval expires if not accepted"""
  approvalExpirationDate: CreditCards_Date

  """Credit limit approved by issuer"""
  approvedCreditLimit: CreditCards_Numeric

  """Interest rate approved for account"""
  approvedInterestRate: CreditCards_Numeric

  """Number of authorized users requested"""
  authorizedUsersRequested: CreditCards_Int4

  """Whether balance transfer was requested"""
  balanceTransferRequested: CreditCards_Bool!
  creditCardsAbilityToPayAssessments(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsAbilityToPayAssessmentsOrderByExp!], where: CreditCards_CreditCardsAbilityToPayAssessmentsBoolExp): [CreditCards_CreditCardsAbilityToPayAssessments!]
  creditCardsAbilityToPayAssessmentsAggregate(filter_input: CreditCards_CreditCardsAbilityToPayAssessmentsFilterInput): CreditCards_CreditCardsAbilityToPayAssessmentsAggExp!

  """Unique identifier for card application"""
  creditCardsApplicationId: CreditCards_Int4!
  creditCardsCardAccounts(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsCardAccountsOrderByExp!], where: CreditCards_CreditCardsCardAccountsBoolExp): [CreditCards_CreditCardsCardAccounts!]
  creditCardsCardAccountsAggregate(filter_input: CreditCards_CreditCardsCardAccountsFilterInput): CreditCards_CreditCardsCardAccountsAggExp!
  creditCardsCardProduct: CreditCards_CreditCardsCardProducts
  creditCardsCreditCardApplicationsHmdas(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsCreditCardApplicationsHmdaOrderByExp!], where: CreditCards_CreditCardsCreditCardApplicationsHmdaBoolExp): [CreditCards_CreditCardsCreditCardApplicationsHmda!]
  creditCardsCreditCardApplicationsHmdasAggregate(filter_input: CreditCards_CreditCardsCreditCardApplicationsHmdaFilterInput): CreditCards_CreditCardsCreditCardApplicationsHmdaAggExp!

  """Reference to card_products"""
  creditCardsProductId: CreditCards_Int4!
  creditCardsRegZCreditCardDisclosures(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsRegZCreditCardDisclosuresOrderByExp!], where: CreditCards_CreditCardsRegZCreditCardDisclosuresBoolExp): [CreditCards_CreditCardsRegZCreditCardDisclosures!]
  creditCardsRegZCreditCardDisclosuresAggregate(filter_input: CreditCards_CreditCardsRegZCreditCardDisclosuresFilterInput): CreditCards_CreditCardsRegZCreditCardDisclosuresAggExp!
  customer: Enterprise_EnterpriseAccounts

  """Reference to enterprise.accounts"""
  customerId: CreditCards_Int4!

  """When decision was made"""
  decisionDate: CreditCards_Timestamptz

  """Automated or Manual decision"""
  decisionMethod: CreditCards_Varchar

  """Primary reason for decision"""
  decisionReason: CreditCards_Varchar

  """Applicant's employment status"""
  employmentStatus: CreditCards_Varchar

  """Applicant's monthly housing payment"""
  housingPayment: CreditCards_Numeric

  """Whether application was pre-approved"""
  isPreapproved: CreditCards_Bool!

  """Whether card requires security deposit"""
  isSecured: CreditCards_Bool!

  """Promotional offer code if applicable"""
  offerCode: CreditCards_Varchar

  """Marketing source or referral"""
  referringSource: CreditCards_Varchar

  """Credit limit requested by applicant"""
  requestedCreditLimit: CreditCards_Numeric

  """Amount of security deposit if secured card"""
  securityDepositAmount: CreditCards_Numeric

  """Current status (Pending, Approved, Denied, Canceled)"""
  status: CreditCards_Varchar!

  """Years at current address"""
  timeAtCurrentAddressYears: CreditCards_Int4
}

type CreditCards_CreditCardsApplicationsAggExp {
  _count: Int!
  annualIncome: CreditCards_NumericAggExp!
  applicationChannel: CreditCards_VarcharAggExp!
  applicationDate: CreditCards_TimestamptzAggExp!
  approvalExpirationDate: CreditCards_DateAggExp!
  approvedCreditLimit: CreditCards_NumericAggExp!
  approvedInterestRate: CreditCards_NumericAggExp!
  authorizedUsersRequested: CreditCards_Int4AggExp!
  balanceTransferRequested: CreditCards_BoolAggExp!
  creditCardsApplicationId: CreditCards_Int4AggExp!
  creditCardsProductId: CreditCards_Int4AggExp!
  customerId: CreditCards_Int4AggExp!
  decisionDate: CreditCards_TimestamptzAggExp!
  decisionMethod: CreditCards_VarcharAggExp!
  decisionReason: CreditCards_VarcharAggExp!
  employmentStatus: CreditCards_VarcharAggExp!
  housingPayment: CreditCards_NumericAggExp!
  isPreapproved: CreditCards_BoolAggExp!
  isSecured: CreditCards_BoolAggExp!
  offerCode: CreditCards_VarcharAggExp!
  referringSource: CreditCards_VarcharAggExp!
  requestedCreditLimit: CreditCards_NumericAggExp!
  securityDepositAmount: CreditCards_NumericAggExp!
  status: CreditCards_VarcharAggExp!
  timeAtCurrentAddressYears: CreditCards_Int4AggExp!
}

input CreditCards_CreditCardsApplicationsBoolExp {
  _and: [CreditCards_CreditCardsApplicationsBoolExp!]
  _not: CreditCards_CreditCardsApplicationsBoolExp
  _or: [CreditCards_CreditCardsApplicationsBoolExp!]
  annualIncome: CreditCards_NumericBoolExp
  applicationChannel: CreditCards_VarcharBoolExp
  applicationDate: CreditCards_TimestamptzBoolExp
  approvalExpirationDate: CreditCards_DateBoolExp
  approvedCreditLimit: CreditCards_NumericBoolExp
  approvedInterestRate: CreditCards_NumericBoolExp
  authorizedUsersRequested: CreditCards_Int4BoolExp
  balanceTransferRequested: CreditCards_BoolBoolExp
  creditCardsAbilityToPayAssessments: CreditCards_CreditCardsAbilityToPayAssessmentsBoolExp
  creditCardsApplicationId: CreditCards_Int4BoolExp
  creditCardsCardAccounts: CreditCards_CreditCardsCardAccountsBoolExp
  creditCardsCardProduct: CreditCards_CreditCardsCardProductsBoolExp
  creditCardsCreditCardApplicationsHmdas: CreditCards_CreditCardsCreditCardApplicationsHmdaBoolExp
  creditCardsProductId: CreditCards_Int4BoolExp
  creditCardsRegZCreditCardDisclosures: CreditCards_CreditCardsRegZCreditCardDisclosuresBoolExp
  customerId: CreditCards_Int4BoolExp
  decisionDate: CreditCards_TimestamptzBoolExp
  decisionMethod: CreditCards_VarcharBoolExp
  decisionReason: CreditCards_VarcharBoolExp
  employmentStatus: CreditCards_VarcharBoolExp
  housingPayment: CreditCards_NumericBoolExp
  isPreapproved: CreditCards_BoolBoolExp
  isSecured: CreditCards_BoolBoolExp
  offerCode: CreditCards_VarcharBoolExp
  referringSource: CreditCards_VarcharBoolExp
  requestedCreditLimit: CreditCards_NumericBoolExp
  securityDepositAmount: CreditCards_NumericBoolExp
  status: CreditCards_VarcharBoolExp
  timeAtCurrentAddressYears: CreditCards_Int4BoolExp
}

input CreditCards_CreditCardsApplicationsFilterInput {
  limit: Int
  offset: Int
  order_by: [CreditCards_CreditCardsApplicationsOrderByExp!]
  where: CreditCards_CreditCardsApplicationsBoolExp
}

input CreditCards_CreditCardsApplicationsOrderByExp {
  annualIncome: OrderBy
  applicationChannel: OrderBy
  applicationDate: OrderBy
  approvalExpirationDate: OrderBy
  approvedCreditLimit: OrderBy
  approvedInterestRate: OrderBy
  authorizedUsersRequested: OrderBy
  balanceTransferRequested: OrderBy
  creditCardsApplicationId: OrderBy
  creditCardsCardProduct: CreditCards_CreditCardsCardProductsOrderByExp
  creditCardsProductId: OrderBy
  customerId: OrderBy
  decisionDate: OrderBy
  decisionMethod: OrderBy
  decisionReason: OrderBy
  employmentStatus: OrderBy
  housingPayment: OrderBy
  isPreapproved: OrderBy
  isSecured: OrderBy
  offerCode: OrderBy
  referringSource: OrderBy
  requestedCreditLimit: OrderBy
  securityDepositAmount: OrderBy
  status: OrderBy
  timeAtCurrentAddressYears: OrderBy
}

"""Tracks authorized users who can use the account"""
type CreditCards_CreditCardsAuthorizedUsers {
  """When user was added"""
  addDate: CreditCards_Date!

  """Auto-incrementing identifier for each authorized user"""
  creditCardsAuthorizedUserId: CreditCards_Int4!
  creditCardsCardAccount: CreditCards_CreditCardsCardAccounts

  """Reference to card_accounts"""
  creditCardsCardAccountId: CreditCards_Int4!
  enterpriseParty: Enterprise_EnterpriseParties

  """Reference to parties.party_id"""
  enterprisePartyId: CreditCards_Int4!

  """Period for limit (Daily, Monthly, etc.)"""
  limitPeriod: CreditCards_Varchar

  """Relationship to primary cardholder"""
  relationship: CreditCards_Varchar

  """When user was removed if applicable"""
  removeDate: CreditCards_Date

  """Custom spending limit if applicable"""
  spendingLimit: CreditCards_Numeric

  """Status of authorized user (Active, Removed)"""
  status: CreditCards_Varchar!
}

type CreditCards_CreditCardsAuthorizedUsersAggExp {
  _count: Int!
  addDate: CreditCards_DateAggExp!
  creditCardsAuthorizedUserId: CreditCards_Int4AggExp!
  creditCardsCardAccountId: CreditCards_Int4AggExp!
  enterprisePartyId: CreditCards_Int4AggExp!
  limitPeriod: CreditCards_VarcharAggExp!
  relationship: CreditCards_VarcharAggExp!
  removeDate: CreditCards_DateAggExp!
  spendingLimit: CreditCards_NumericAggExp!
  status: CreditCards_VarcharAggExp!
}

input CreditCards_CreditCardsAuthorizedUsersBoolExp {
  _and: [CreditCards_CreditCardsAuthorizedUsersBoolExp!]
  _not: CreditCards_CreditCardsAuthorizedUsersBoolExp
  _or: [CreditCards_CreditCardsAuthorizedUsersBoolExp!]
  addDate: CreditCards_DateBoolExp
  creditCardsAuthorizedUserId: CreditCards_Int4BoolExp
  creditCardsCardAccount: CreditCards_CreditCardsCardAccountsBoolExp
  creditCardsCardAccountId: CreditCards_Int4BoolExp
  enterprisePartyId: CreditCards_Int4BoolExp
  limitPeriod: CreditCards_VarcharBoolExp
  relationship: CreditCards_VarcharBoolExp
  removeDate: CreditCards_DateBoolExp
  spendingLimit: CreditCards_NumericBoolExp
  status: CreditCards_VarcharBoolExp
}

input CreditCards_CreditCardsAuthorizedUsersFilterInput {
  limit: Int
  offset: Int
  order_by: [CreditCards_CreditCardsAuthorizedUsersOrderByExp!]
  where: CreditCards_CreditCardsAuthorizedUsersBoolExp
}

input CreditCards_CreditCardsAuthorizedUsersOrderByExp {
  addDate: OrderBy
  creditCardsAuthorizedUserId: OrderBy
  creditCardsCardAccount: CreditCards_CreditCardsCardAccountsOrderByExp
  creditCardsCardAccountId: OrderBy
  enterprisePartyId: OrderBy
  limitPeriod: OrderBy
  relationship: OrderBy
  removeDate: OrderBy
  spendingLimit: OrderBy
  status: OrderBy
}

"""Stores automatic payment settings"""
type CreditCards_CreditCardsAutopaySettings {
  """Auto-incrementing identifier for each autopay setup"""
  creditCardsAutopayId: CreditCards_Int4!
  creditCardsCardAccount: CreditCards_CreditCardsCardAccounts

  """Reference to card_accounts"""
  creditCardsCardAccountId: CreditCards_Int4!
  creditCardsPaymentMethod: CreditCards_CreditCardsPaymentMethods

  """Reference to payment_methods"""
  creditCardsPaymentMethodId: CreditCards_Int4!

  """Days before due date if applicable"""
  daysBeforeDue: CreditCards_Int4

  """When autopay ends if applicable"""
  endDate: CreditCards_Date

  """Fixed amount if applicable"""
  fixedAmount: CreditCards_Numeric

  """Date of last autopay payment"""
  lastPaymentDate: CreditCards_Date

  """Scheduled date of next payment"""
  nextPaymentDate: CreditCards_Date

  """When to pay (Due Date, Days Before Due Date, Specific Day)"""
  paymentDay: CreditCards_Varchar!

  """
  What to pay (Minimum, Statement Balance, Current Balance, Fixed Amount)
  """
  paymentOption: CreditCards_Varchar!

  """Specific day of month if applicable"""
  specificDay: CreditCards_Int4

  """When autopay begins"""
  startDate: CreditCards_Date!

  """Status of autopay (Active, Inactive)"""
  status: CreditCards_Varchar!
}

type CreditCards_CreditCardsAutopaySettingsAggExp {
  _count: Int!
  creditCardsAutopayId: CreditCards_Int4AggExp!
  creditCardsCardAccountId: CreditCards_Int4AggExp!
  creditCardsPaymentMethodId: CreditCards_Int4AggExp!
  daysBeforeDue: CreditCards_Int4AggExp!
  endDate: CreditCards_DateAggExp!
  fixedAmount: CreditCards_NumericAggExp!
  lastPaymentDate: CreditCards_DateAggExp!
  nextPaymentDate: CreditCards_DateAggExp!
  paymentDay: CreditCards_VarcharAggExp!
  paymentOption: CreditCards_VarcharAggExp!
  specificDay: CreditCards_Int4AggExp!
  startDate: CreditCards_DateAggExp!
  status: CreditCards_VarcharAggExp!
}

input CreditCards_CreditCardsAutopaySettingsBoolExp {
  _and: [CreditCards_CreditCardsAutopaySettingsBoolExp!]
  _not: CreditCards_CreditCardsAutopaySettingsBoolExp
  _or: [CreditCards_CreditCardsAutopaySettingsBoolExp!]
  creditCardsAutopayId: CreditCards_Int4BoolExp
  creditCardsCardAccount: CreditCards_CreditCardsCardAccountsBoolExp
  creditCardsCardAccountId: CreditCards_Int4BoolExp
  creditCardsPaymentMethod: CreditCards_CreditCardsPaymentMethodsBoolExp
  creditCardsPaymentMethodId: CreditCards_Int4BoolExp
  daysBeforeDue: CreditCards_Int4BoolExp
  endDate: CreditCards_DateBoolExp
  fixedAmount: CreditCards_NumericBoolExp
  lastPaymentDate: CreditCards_DateBoolExp
  nextPaymentDate: CreditCards_DateBoolExp
  paymentDay: CreditCards_VarcharBoolExp
  paymentOption: CreditCards_VarcharBoolExp
  specificDay: CreditCards_Int4BoolExp
  startDate: CreditCards_DateBoolExp
  status: CreditCards_VarcharBoolExp
}

input CreditCards_CreditCardsAutopaySettingsFilterInput {
  limit: Int
  offset: Int
  order_by: [CreditCards_CreditCardsAutopaySettingsOrderByExp!]
  where: CreditCards_CreditCardsAutopaySettingsBoolExp
}

input CreditCards_CreditCardsAutopaySettingsOrderByExp {
  creditCardsAutopayId: OrderBy
  creditCardsCardAccount: CreditCards_CreditCardsCardAccountsOrderByExp
  creditCardsCardAccountId: OrderBy
  creditCardsPaymentMethod: CreditCards_CreditCardsPaymentMethodsOrderByExp
  creditCardsPaymentMethodId: OrderBy
  daysBeforeDue: OrderBy
  endDate: OrderBy
  fixedAmount: OrderBy
  lastPaymentDate: OrderBy
  nextPaymentDate: OrderBy
  paymentDay: OrderBy
  paymentOption: OrderBy
  specificDay: OrderBy
  startDate: OrderBy
  status: OrderBy
}

"""Tracks balance transfers from other creditors"""
type CreditCards_CreditCardsBalanceTransfers {
  """Account number at other creditor, masked"""
  accountNumber: CreditCards_Varchar

  """When transfer was completed"""
  completionDate: CreditCards_Date
  creditCardsCardAccount: CreditCards_CreditCardsCardAccounts

  """Reference to card_accounts"""
  creditCardsCardAccountId: CreditCards_Int4!

  """Reference to promotional_offers if applicable"""
  creditCardsOfferId: CreditCards_Int4
  creditCardsPromotionalOffer: CreditCards_CreditCardsPromotionalOffers
  creditCardsTransaction: CreditCards_CreditCardsTransactions

  """Reference to transactions"""
  creditCardsTransactionId: CreditCards_Int4

  """Auto-incrementing identifier for each balance transfer"""
  creditCardsTransferId: CreditCards_Int4!

  """Name of creditor being paid"""
  creditorName: CreditCards_Varchar!

  """Current balance remaining from transfer"""
  currentBalance: CreditCards_Numeric

  """Fee charged for transfer"""
  feeAmount: CreditCards_Numeric

  """Interest rate applied to transfer"""
  interestRate: CreditCards_Numeric!

  """When promotional rate ends if applicable"""
  promotionEndDate: CreditCards_Date

  """Whether rate is promotional"""
  promotionalRate: CreditCards_Bool!

  """When transfer was requested"""
  requestDate: CreditCards_Date!

  """Status of transfer (Pending, Completed, Rejected)"""
  status: CreditCards_Varchar!

  """Amount transferred"""
  transferAmount: CreditCards_Numeric!
}

type CreditCards_CreditCardsBalanceTransfersAggExp {
  _count: Int!
  accountNumber: CreditCards_VarcharAggExp!
  completionDate: CreditCards_DateAggExp!
  creditCardsCardAccountId: CreditCards_Int4AggExp!
  creditCardsOfferId: CreditCards_Int4AggExp!
  creditCardsTransactionId: CreditCards_Int4AggExp!
  creditCardsTransferId: CreditCards_Int4AggExp!
  creditorName: CreditCards_VarcharAggExp!
  currentBalance: CreditCards_NumericAggExp!
  feeAmount: CreditCards_NumericAggExp!
  interestRate: CreditCards_NumericAggExp!
  promotionEndDate: CreditCards_DateAggExp!
  promotionalRate: CreditCards_BoolAggExp!
  requestDate: CreditCards_DateAggExp!
  status: CreditCards_VarcharAggExp!
  transferAmount: CreditCards_NumericAggExp!
}

input CreditCards_CreditCardsBalanceTransfersBoolExp {
  _and: [CreditCards_CreditCardsBalanceTransfersBoolExp!]
  _not: CreditCards_CreditCardsBalanceTransfersBoolExp
  _or: [CreditCards_CreditCardsBalanceTransfersBoolExp!]
  accountNumber: CreditCards_VarcharBoolExp
  completionDate: CreditCards_DateBoolExp
  creditCardsCardAccount: CreditCards_CreditCardsCardAccountsBoolExp
  creditCardsCardAccountId: CreditCards_Int4BoolExp
  creditCardsOfferId: CreditCards_Int4BoolExp
  creditCardsPromotionalOffer: CreditCards_CreditCardsPromotionalOffersBoolExp
  creditCardsTransaction: CreditCards_CreditCardsTransactionsBoolExp
  creditCardsTransactionId: CreditCards_Int4BoolExp
  creditCardsTransferId: CreditCards_Int4BoolExp
  creditorName: CreditCards_VarcharBoolExp
  currentBalance: CreditCards_NumericBoolExp
  feeAmount: CreditCards_NumericBoolExp
  interestRate: CreditCards_NumericBoolExp
  promotionEndDate: CreditCards_DateBoolExp
  promotionalRate: CreditCards_BoolBoolExp
  requestDate: CreditCards_DateBoolExp
  status: CreditCards_VarcharBoolExp
  transferAmount: CreditCards_NumericBoolExp
}

input CreditCards_CreditCardsBalanceTransfersFilterInput {
  limit: Int
  offset: Int
  order_by: [CreditCards_CreditCardsBalanceTransfersOrderByExp!]
  where: CreditCards_CreditCardsBalanceTransfersBoolExp
}

input CreditCards_CreditCardsBalanceTransfersOrderByExp {
  accountNumber: OrderBy
  completionDate: OrderBy
  creditCardsCardAccount: CreditCards_CreditCardsCardAccountsOrderByExp
  creditCardsCardAccountId: OrderBy
  creditCardsOfferId: OrderBy
  creditCardsPromotionalOffer: CreditCards_CreditCardsPromotionalOffersOrderByExp
  creditCardsTransaction: CreditCards_CreditCardsTransactionsOrderByExp
  creditCardsTransactionId: OrderBy
  creditCardsTransferId: OrderBy
  creditorName: OrderBy
  currentBalance: OrderBy
  feeAmount: OrderBy
  interestRate: OrderBy
  promotionEndDate: OrderBy
  promotionalRate: OrderBy
  requestDate: OrderBy
  status: OrderBy
  transferAmount: OrderBy
}

"""Stores credit card accounts and their current status"""
type CreditCards_CreditCardsCardAccounts {
  """Masked account number"""
  accountNumber: CreditCards_Varchar!

  """Next date annual fee will be charged"""
  annualFeeNextChargeDate: CreditCards_Date

  """Current available credit"""
  availableCredit: CreditCards_Numeric!

  """Current balance transfer APR"""
  balanceTransferInterestRate: CreditCards_Numeric

  """Current cash advance APR"""
  cashAdvanceInterestRate: CreditCards_Numeric

  """Limit for cash advances if different"""
  cashAdvanceLimit: CreditCards_Numeric
  creditCardsApplication: CreditCards_CreditCardsApplications

  """Reference to original application if applicable"""
  creditCardsApplicationId: CreditCards_Int4
  creditCardsAuthorizedUsers(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsAuthorizedUsersOrderByExp!], where: CreditCards_CreditCardsAuthorizedUsersBoolExp): [CreditCards_CreditCardsAuthorizedUsers!]
  creditCardsAuthorizedUsersAggregate(filter_input: CreditCards_CreditCardsAuthorizedUsersFilterInput): CreditCards_CreditCardsAuthorizedUsersAggExp!
  creditCardsAutopaySettings(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsAutopaySettingsOrderByExp!], where: CreditCards_CreditCardsAutopaySettingsBoolExp): [CreditCards_CreditCardsAutopaySettings!]
  creditCardsAutopaySettingsAggregate(filter_input: CreditCards_CreditCardsAutopaySettingsFilterInput): CreditCards_CreditCardsAutopaySettingsAggExp!
  creditCardsBalanceTransfers(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsBalanceTransfersOrderByExp!], where: CreditCards_CreditCardsBalanceTransfersBoolExp): [CreditCards_CreditCardsBalanceTransfers!]
  creditCardsBalanceTransfersAggregate(filter_input: CreditCards_CreditCardsBalanceTransfersFilterInput): CreditCards_CreditCardsBalanceTransfersAggExp!

  """Unique identifier for card account"""
  creditCardsCardAccountId: CreditCards_Int4!
  creditCardsCardAlerts(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsCardAlertsOrderByExp!], where: CreditCards_CreditCardsCardAlertsBoolExp): [CreditCards_CreditCardsCardAlerts!]
  creditCardsCardAlertsAggregate(filter_input: CreditCards_CreditCardsCardAlertsFilterInput): CreditCards_CreditCardsCardAlertsAggExp!
  creditCardsCardProduct: CreditCards_CreditCardsCardProducts
  creditCardsCards(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsCardsOrderByExp!], where: CreditCards_CreditCardsCardsBoolExp): [CreditCards_CreditCardsCards!]
  creditCardsCardsAggregate(filter_input: CreditCards_CreditCardsCardsFilterInput): CreditCards_CreditCardsCardsAggExp!
  creditCardsConsumerComplaints(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsConsumerComplaintsOrderByExp!], where: CreditCards_CreditCardsConsumerComplaintsBoolExp): [CreditCards_CreditCardsConsumerComplaints!]
  creditCardsConsumerComplaintsAggregate(filter_input: CreditCards_CreditCardsConsumerComplaintsFilterInput): CreditCards_CreditCardsConsumerComplaintsAggExp!
  creditCardsCreditLimitChanges(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsCreditLimitChangesOrderByExp!], where: CreditCards_CreditCardsCreditLimitChangesBoolExp): [CreditCards_CreditCardsCreditLimitChanges!]
  creditCardsCreditLimitChangesAggregate(filter_input: CreditCards_CreditCardsCreditLimitChangesFilterInput): CreditCards_CreditCardsCreditLimitChangesAggExp!
  creditCardsDisputedTransactions(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsDisputedTransactionsOrderByExp!], where: CreditCards_CreditCardsDisputedTransactionsBoolExp): [CreditCards_CreditCardsDisputedTransactions!]
  creditCardsDisputedTransactionsAggregate(filter_input: CreditCards_CreditCardsDisputedTransactionsFilterInput): CreditCards_CreditCardsDisputedTransactionsAggExp!
  creditCardsFees(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsFeesOrderByExp!], where: CreditCards_CreditCardsFeesBoolExp): [CreditCards_CreditCardsFees!]
  creditCardsFeesAggregate(filter_input: CreditCards_CreditCardsFeesFilterInput): CreditCards_CreditCardsFeesAggExp!
  creditCardsFraudCases(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsFraudCasesOrderByExp!], where: CreditCards_CreditCardsFraudCasesBoolExp): [CreditCards_CreditCardsFraudCases!]
  creditCardsFraudCasesAggregate(filter_input: CreditCards_CreditCardsFraudCasesFilterInput): CreditCards_CreditCardsFraudCasesAggExp!
  creditCardsInterestCharges(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsInterestChargesOrderByExp!], where: CreditCards_CreditCardsInterestChargesBoolExp): [CreditCards_CreditCardsInterestCharges!]
  creditCardsInterestChargesAggregate(filter_input: CreditCards_CreditCardsInterestChargesFilterInput): CreditCards_CreditCardsInterestChargesAggExp!
  creditCardsPaymentMethods(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsPaymentMethodsOrderByExp!], where: CreditCards_CreditCardsPaymentMethodsBoolExp): [CreditCards_CreditCardsPaymentMethods!]
  creditCardsPaymentMethodsAggregate(filter_input: CreditCards_CreditCardsPaymentMethodsFilterInput): CreditCards_CreditCardsPaymentMethodsAggExp!

  """Reference to card_products"""
  creditCardsProductId: CreditCards_Int4!
  creditCardsPromotionalOffers(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsPromotionalOffersOrderByExp!], where: CreditCards_CreditCardsPromotionalOffersBoolExp): [CreditCards_CreditCardsPromotionalOffers!]
  creditCardsPromotionalOffersAggregate(filter_input: CreditCards_CreditCardsPromotionalOffersFilterInput): CreditCards_CreditCardsPromotionalOffersAggExp!
  creditCardsRegZCreditCardDisclosures(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsRegZCreditCardDisclosuresOrderByExp!], where: CreditCards_CreditCardsRegZCreditCardDisclosuresBoolExp): [CreditCards_CreditCardsRegZCreditCardDisclosures!]
  creditCardsRegZCreditCardDisclosuresAggregate(filter_input: CreditCards_CreditCardsRegZCreditCardDisclosuresFilterInput): CreditCards_CreditCardsRegZCreditCardDisclosuresAggExp!
  creditCardsRewardRedemptions(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsRewardRedemptionsOrderByExp!], where: CreditCards_CreditCardsRewardRedemptionsBoolExp): [CreditCards_CreditCardsRewardRedemptions!]
  creditCardsRewardRedemptionsAggregate(filter_input: CreditCards_CreditCardsRewardRedemptionsFilterInput): CreditCards_CreditCardsRewardRedemptionsAggExp!
  creditCardsRewards(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsRewardsOrderByExp!], where: CreditCards_CreditCardsRewardsBoolExp): [CreditCards_CreditCardsRewards!]
  creditCardsRewardsAggregate(filter_input: CreditCards_CreditCardsRewardsFilterInput): CreditCards_CreditCardsRewardsAggExp!
  creditCardsStatements(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsStatementsOrderByExp!], where: CreditCards_CreditCardsStatementsBoolExp): [CreditCards_CreditCardsStatements!]
  creditCardsStatementsAggregate(filter_input: CreditCards_CreditCardsStatementsFilterInput): CreditCards_CreditCardsStatementsAggExp!
  creditCardsTransactions(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsTransactionsOrderByExp!], where: CreditCards_CreditCardsTransactionsBoolExp): [CreditCards_CreditCardsTransactions!]
  creditCardsTransactionsAggregate(filter_input: CreditCards_CreditCardsTransactionsFilterInput): CreditCards_CreditCardsTransactionsAggExp!

  """Current approved credit limit"""
  creditLimit: CreditCards_Numeric!

  """Current outstanding balance"""
  currentBalance: CreditCards_Numeric!
  customer: Enterprise_EnterpriseAccounts

  """Reference to enterprise.accounts"""
  customerId: CreditCards_Int4!

  """Day of month when billing cycle closes"""
  cycleCutDay: CreditCards_Int4

  """Current days past due"""
  daysPastDue: CreditCards_Int4!
  enterpriseAccount: Enterprise_EnterpriseAccounts

  """Reference to enterprise.accounts - the main account record"""
  enterpriseAccountId: CreditCards_Int4!

  """When introductory rate expires"""
  introRateExpirationDate: CreditCards_Date

  """Whether account is secured"""
  isSecured: CreditCards_Bool!

  """Amount of last payment received"""
  lastPaymentAmount: CreditCards_Numeric

  """Date of last payment received"""
  lastPaymentDate: CreditCards_Date

  """Minimum payment due"""
  minimumPaymentDue: CreditCards_Numeric!

  """When account was opened"""
  openedDate: CreditCards_Date!

  """Whether account is over limit"""
  overlimitStatus: CreditCards_Bool!

  """Date payment is due"""
  paymentDueDate: CreditCards_Date

  """Current penalty APR if applicable"""
  penaltyInterestRate: CreditCards_Numeric

  """Current purchase APR"""
  purchaseInterestRate: CreditCards_Numeric!

  """Current reward points/cashback balance"""
  rewardPointsBalance: CreditCards_Int4!

  """Amount of security deposit if secured"""
  securityDepositAmount: CreditCards_Numeric

  """Balance as of last statement"""
  statementBalance: CreditCards_Numeric!

  """Account status (Active, Inactive, Closed, Suspended)"""
  status: CreditCards_Varchar!

  """When the status was last updated"""
  statusUpdateDateTime: CreditCards_Timestamptz!

  """Count of 30+ day late payments"""
  timesPastDue30Days: CreditCards_Int4!

  """Count of 60+ day late payments"""
  timesPastDue60Days: CreditCards_Int4!

  """Count of 90+ day late payments"""
  timesPastDue90Days: CreditCards_Int4!
}

type CreditCards_CreditCardsCardAccountsAggExp {
  _count: Int!
  accountNumber: CreditCards_VarcharAggExp!
  annualFeeNextChargeDate: CreditCards_DateAggExp!
  availableCredit: CreditCards_NumericAggExp!
  balanceTransferInterestRate: CreditCards_NumericAggExp!
  cashAdvanceInterestRate: CreditCards_NumericAggExp!
  cashAdvanceLimit: CreditCards_NumericAggExp!
  creditCardsApplicationId: CreditCards_Int4AggExp!
  creditCardsCardAccountId: CreditCards_Int4AggExp!
  creditCardsProductId: CreditCards_Int4AggExp!
  creditLimit: CreditCards_NumericAggExp!
  currentBalance: CreditCards_NumericAggExp!
  customerId: CreditCards_Int4AggExp!
  cycleCutDay: CreditCards_Int4AggExp!
  daysPastDue: CreditCards_Int4AggExp!
  enterpriseAccountId: CreditCards_Int4AggExp!
  introRateExpirationDate: CreditCards_DateAggExp!
  isSecured: CreditCards_BoolAggExp!
  lastPaymentAmount: CreditCards_NumericAggExp!
  lastPaymentDate: CreditCards_DateAggExp!
  minimumPaymentDue: CreditCards_NumericAggExp!
  openedDate: CreditCards_DateAggExp!
  overlimitStatus: CreditCards_BoolAggExp!
  paymentDueDate: CreditCards_DateAggExp!
  penaltyInterestRate: CreditCards_NumericAggExp!
  purchaseInterestRate: CreditCards_NumericAggExp!
  rewardPointsBalance: CreditCards_Int4AggExp!
  securityDepositAmount: CreditCards_NumericAggExp!
  statementBalance: CreditCards_NumericAggExp!
  status: CreditCards_VarcharAggExp!
  statusUpdateDateTime: CreditCards_TimestamptzAggExp!
  timesPastDue30Days: CreditCards_Int4AggExp!
  timesPastDue60Days: CreditCards_Int4AggExp!
  timesPastDue90Days: CreditCards_Int4AggExp!
}

input CreditCards_CreditCardsCardAccountsBoolExp {
  _and: [CreditCards_CreditCardsCardAccountsBoolExp!]
  _not: CreditCards_CreditCardsCardAccountsBoolExp
  _or: [CreditCards_CreditCardsCardAccountsBoolExp!]
  accountNumber: CreditCards_VarcharBoolExp
  annualFeeNextChargeDate: CreditCards_DateBoolExp
  availableCredit: CreditCards_NumericBoolExp
  balanceTransferInterestRate: CreditCards_NumericBoolExp
  cashAdvanceInterestRate: CreditCards_NumericBoolExp
  cashAdvanceLimit: CreditCards_NumericBoolExp
  creditCardsApplication: CreditCards_CreditCardsApplicationsBoolExp
  creditCardsApplicationId: CreditCards_Int4BoolExp
  creditCardsAuthorizedUsers: CreditCards_CreditCardsAuthorizedUsersBoolExp
  creditCardsAutopaySettings: CreditCards_CreditCardsAutopaySettingsBoolExp
  creditCardsBalanceTransfers: CreditCards_CreditCardsBalanceTransfersBoolExp
  creditCardsCardAccountId: CreditCards_Int4BoolExp
  creditCardsCardAlerts: CreditCards_CreditCardsCardAlertsBoolExp
  creditCardsCardProduct: CreditCards_CreditCardsCardProductsBoolExp
  creditCardsCards: CreditCards_CreditCardsCardsBoolExp
  creditCardsConsumerComplaints: CreditCards_CreditCardsConsumerComplaintsBoolExp
  creditCardsCreditLimitChanges: CreditCards_CreditCardsCreditLimitChangesBoolExp
  creditCardsDisputedTransactions: CreditCards_CreditCardsDisputedTransactionsBoolExp
  creditCardsFees: CreditCards_CreditCardsFeesBoolExp
  creditCardsFraudCases: CreditCards_CreditCardsFraudCasesBoolExp
  creditCardsInterestCharges: CreditCards_CreditCardsInterestChargesBoolExp
  creditCardsPaymentMethods: CreditCards_CreditCardsPaymentMethodsBoolExp
  creditCardsProductId: CreditCards_Int4BoolExp
  creditCardsPromotionalOffers: CreditCards_CreditCardsPromotionalOffersBoolExp
  creditCardsRegZCreditCardDisclosures: CreditCards_CreditCardsRegZCreditCardDisclosuresBoolExp
  creditCardsRewardRedemptions: CreditCards_CreditCardsRewardRedemptionsBoolExp
  creditCardsRewards: CreditCards_CreditCardsRewardsBoolExp
  creditCardsStatements: CreditCards_CreditCardsStatementsBoolExp
  creditCardsTransactions: CreditCards_CreditCardsTransactionsBoolExp
  creditLimit: CreditCards_NumericBoolExp
  currentBalance: CreditCards_NumericBoolExp
  customerId: CreditCards_Int4BoolExp
  cycleCutDay: CreditCards_Int4BoolExp
  daysPastDue: CreditCards_Int4BoolExp
  enterpriseAccountId: CreditCards_Int4BoolExp
  introRateExpirationDate: CreditCards_DateBoolExp
  isSecured: CreditCards_BoolBoolExp
  lastPaymentAmount: CreditCards_NumericBoolExp
  lastPaymentDate: CreditCards_DateBoolExp
  minimumPaymentDue: CreditCards_NumericBoolExp
  openedDate: CreditCards_DateBoolExp
  overlimitStatus: CreditCards_BoolBoolExp
  paymentDueDate: CreditCards_DateBoolExp
  penaltyInterestRate: CreditCards_NumericBoolExp
  purchaseInterestRate: CreditCards_NumericBoolExp
  rewardPointsBalance: CreditCards_Int4BoolExp
  securityDepositAmount: CreditCards_NumericBoolExp
  statementBalance: CreditCards_NumericBoolExp
  status: CreditCards_VarcharBoolExp
  statusUpdateDateTime: CreditCards_TimestamptzBoolExp
  timesPastDue30Days: CreditCards_Int4BoolExp
  timesPastDue60Days: CreditCards_Int4BoolExp
  timesPastDue90Days: CreditCards_Int4BoolExp
}

input CreditCards_CreditCardsCardAccountsFilterInput {
  limit: Int
  offset: Int
  order_by: [CreditCards_CreditCardsCardAccountsOrderByExp!]
  where: CreditCards_CreditCardsCardAccountsBoolExp
}

input CreditCards_CreditCardsCardAccountsOrderByExp {
  accountNumber: OrderBy
  annualFeeNextChargeDate: OrderBy
  availableCredit: OrderBy
  balanceTransferInterestRate: OrderBy
  cashAdvanceInterestRate: OrderBy
  cashAdvanceLimit: OrderBy
  creditCardsApplication: CreditCards_CreditCardsApplicationsOrderByExp
  creditCardsApplicationId: OrderBy
  creditCardsCardAccountId: OrderBy
  creditCardsCardProduct: CreditCards_CreditCardsCardProductsOrderByExp
  creditCardsProductId: OrderBy
  creditLimit: OrderBy
  currentBalance: OrderBy
  customerId: OrderBy
  cycleCutDay: OrderBy
  daysPastDue: OrderBy
  enterpriseAccountId: OrderBy
  introRateExpirationDate: OrderBy
  isSecured: OrderBy
  lastPaymentAmount: OrderBy
  lastPaymentDate: OrderBy
  minimumPaymentDue: OrderBy
  openedDate: OrderBy
  overlimitStatus: OrderBy
  paymentDueDate: OrderBy
  penaltyInterestRate: OrderBy
  purchaseInterestRate: OrderBy
  rewardPointsBalance: OrderBy
  securityDepositAmount: OrderBy
  statementBalance: OrderBy
  status: OrderBy
  statusUpdateDateTime: OrderBy
  timesPastDue30Days: OrderBy
  timesPastDue60Days: OrderBy
  timesPastDue90Days: OrderBy
}

"""Stores customer alert preferences"""
type CreditCards_CreditCardsCardAlerts {
  """
  Type of alert (Payment Due, Payment Posted, Purchase, Credit Limit, Fraud)
  """
  alertType: CreditCards_Varchar!

  """Email or phone number for alert"""
  contactInfo: CreditCards_Varchar!

  """When alert was set up"""
  createdDate: CreditCards_Date!

  """Auto-incrementing identifier for each alert"""
  creditCardsAlertId: CreditCards_Int4!
  creditCardsCard: CreditCards_CreditCardsCards
  creditCardsCardAccount: CreditCards_CreditCardsCardAccounts

  """Reference to card_accounts"""
  creditCardsCardAccountId: CreditCards_Int4!

  """Reference to specific card if applicable"""
  creditCardsCardId: CreditCards_Int4

  """How alert is delivered (Email, SMS, Push)"""
  deliveryMethod: CreditCards_Varchar!

  """Whether alert is currently active"""
  isActive: CreditCards_Bool!

  """When alert was last modified"""
  modifiedDate: CreditCards_Date

  """Amount threshold if applicable"""
  thresholdAmount: CreditCards_Numeric
}

type CreditCards_CreditCardsCardAlertsAggExp {
  _count: Int!
  alertType: CreditCards_VarcharAggExp!
  contactInfo: CreditCards_VarcharAggExp!
  createdDate: CreditCards_DateAggExp!
  creditCardsAlertId: CreditCards_Int4AggExp!
  creditCardsCardAccountId: CreditCards_Int4AggExp!
  creditCardsCardId: CreditCards_Int4AggExp!
  deliveryMethod: CreditCards_VarcharAggExp!
  isActive: CreditCards_BoolAggExp!
  modifiedDate: CreditCards_DateAggExp!
  thresholdAmount: CreditCards_NumericAggExp!
}

input CreditCards_CreditCardsCardAlertsBoolExp {
  _and: [CreditCards_CreditCardsCardAlertsBoolExp!]
  _not: CreditCards_CreditCardsCardAlertsBoolExp
  _or: [CreditCards_CreditCardsCardAlertsBoolExp!]
  alertType: CreditCards_VarcharBoolExp
  contactInfo: CreditCards_VarcharBoolExp
  createdDate: CreditCards_DateBoolExp
  creditCardsAlertId: CreditCards_Int4BoolExp
  creditCardsCard: CreditCards_CreditCardsCardsBoolExp
  creditCardsCardAccount: CreditCards_CreditCardsCardAccountsBoolExp
  creditCardsCardAccountId: CreditCards_Int4BoolExp
  creditCardsCardId: CreditCards_Int4BoolExp
  deliveryMethod: CreditCards_VarcharBoolExp
  isActive: CreditCards_BoolBoolExp
  modifiedDate: CreditCards_DateBoolExp
  thresholdAmount: CreditCards_NumericBoolExp
}

input CreditCards_CreditCardsCardAlertsFilterInput {
  limit: Int
  offset: Int
  order_by: [CreditCards_CreditCardsCardAlertsOrderByExp!]
  where: CreditCards_CreditCardsCardAlertsBoolExp
}

input CreditCards_CreditCardsCardAlertsOrderByExp {
  alertType: OrderBy
  contactInfo: OrderBy
  createdDate: OrderBy
  creditCardsAlertId: OrderBy
  creditCardsCard: CreditCards_CreditCardsCardsOrderByExp
  creditCardsCardAccount: CreditCards_CreditCardsCardAccountsOrderByExp
  creditCardsCardAccountId: OrderBy
  creditCardsCardId: OrderBy
  deliveryMethod: OrderBy
  isActive: OrderBy
  modifiedDate: OrderBy
  thresholdAmount: OrderBy
}

"""Stores features and benefits associated with card products"""
type CreditCards_CreditCardsCardProductFeatures {
  creditCardsCardProduct: CreditCards_CreditCardsCardProducts

  """Auto-incrementing identifier for each feature"""
  creditCardsFeatureId: CreditCards_Int4!

  """Reference to card_products"""
  creditCardsProductId: CreditCards_Int4!

  """When feature expires if limited time"""
  endDate: CreditCards_Date

  """Detailed description of the feature"""
  featureDescription: CreditCards_Text!

  """Name of the feature"""
  featureName: CreditCards_Varchar!

  """Whether feature is limited-time offer"""
  isLimitedTime: CreditCards_Bool!

  """Whether this is a premium feature"""
  isPremium: CreditCards_Bool!

  """When feature becomes available"""
  startDate: CreditCards_Date
}

type CreditCards_CreditCardsCardProductFeaturesAggExp {
  _count: Int!
  creditCardsFeatureId: CreditCards_Int4AggExp!
  creditCardsProductId: CreditCards_Int4AggExp!
  endDate: CreditCards_DateAggExp!
  featureDescription: CreditCards_TextAggExp!
  featureName: CreditCards_VarcharAggExp!
  isLimitedTime: CreditCards_BoolAggExp!
  isPremium: CreditCards_BoolAggExp!
  startDate: CreditCards_DateAggExp!
}

input CreditCards_CreditCardsCardProductFeaturesBoolExp {
  _and: [CreditCards_CreditCardsCardProductFeaturesBoolExp!]
  _not: CreditCards_CreditCardsCardProductFeaturesBoolExp
  _or: [CreditCards_CreditCardsCardProductFeaturesBoolExp!]
  creditCardsCardProduct: CreditCards_CreditCardsCardProductsBoolExp
  creditCardsFeatureId: CreditCards_Int4BoolExp
  creditCardsProductId: CreditCards_Int4BoolExp
  endDate: CreditCards_DateBoolExp
  featureDescription: CreditCards_TextBoolExp
  featureName: CreditCards_VarcharBoolExp
  isLimitedTime: CreditCards_BoolBoolExp
  isPremium: CreditCards_BoolBoolExp
  startDate: CreditCards_DateBoolExp
}

input CreditCards_CreditCardsCardProductFeaturesFilterInput {
  limit: Int
  offset: Int
  order_by: [CreditCards_CreditCardsCardProductFeaturesOrderByExp!]
  where: CreditCards_CreditCardsCardProductFeaturesBoolExp
}

input CreditCards_CreditCardsCardProductFeaturesOrderByExp {
  creditCardsCardProduct: CreditCards_CreditCardsCardProductsOrderByExp
  creditCardsFeatureId: OrderBy
  creditCardsProductId: OrderBy
  endDate: OrderBy
  featureDescription: OrderBy
  featureName: OrderBy
  isLimitedTime: OrderBy
  isPremium: OrderBy
  startDate: OrderBy
}

"""Defines reward earning categories for card products"""
type CreditCards_CreditCardsCardProductRewardCategories {
  """Spending cap for elevated rewards if applicable"""
  capAmount: CreditCards_Numeric

  """Period for cap (e.g., Monthly, Quarterly, Annually)"""
  capPeriod: CreditCards_Varchar

  """Category name (e.g., Dining, Travel, Gas)"""
  categoryName: CreditCards_Varchar!
  creditCardsCardProduct: CreditCards_CreditCardsCardProducts

  """Auto-incrementing identifier for each reward category"""
  creditCardsCategoryId: CreditCards_Int4!

  """Reference to card_products"""
  creditCardsProductId: CreditCards_Int4!

  """End date for category if temporary"""
  endDate: CreditCards_Date

  """Whether rewards are capped"""
  isCapped: CreditCards_Bool!

  """Whether category rotates quarterly"""
  isQuarterly: CreditCards_Bool!

  """Reward rate for this category (e.g., 3% cashback)"""
  rewardRate: CreditCards_Numeric!

  """Start date for category if temporary"""
  startDate: CreditCards_Date
}

type CreditCards_CreditCardsCardProductRewardCategoriesAggExp {
  _count: Int!
  capAmount: CreditCards_NumericAggExp!
  capPeriod: CreditCards_VarcharAggExp!
  categoryName: CreditCards_VarcharAggExp!
  creditCardsCategoryId: CreditCards_Int4AggExp!
  creditCardsProductId: CreditCards_Int4AggExp!
  endDate: CreditCards_DateAggExp!
  isCapped: CreditCards_BoolAggExp!
  isQuarterly: CreditCards_BoolAggExp!
  rewardRate: CreditCards_NumericAggExp!
  startDate: CreditCards_DateAggExp!
}

input CreditCards_CreditCardsCardProductRewardCategoriesBoolExp {
  _and: [CreditCards_CreditCardsCardProductRewardCategoriesBoolExp!]
  _not: CreditCards_CreditCardsCardProductRewardCategoriesBoolExp
  _or: [CreditCards_CreditCardsCardProductRewardCategoriesBoolExp!]
  capAmount: CreditCards_NumericBoolExp
  capPeriod: CreditCards_VarcharBoolExp
  categoryName: CreditCards_VarcharBoolExp
  creditCardsCardProduct: CreditCards_CreditCardsCardProductsBoolExp
  creditCardsCategoryId: CreditCards_Int4BoolExp
  creditCardsProductId: CreditCards_Int4BoolExp
  endDate: CreditCards_DateBoolExp
  isCapped: CreditCards_BoolBoolExp
  isQuarterly: CreditCards_BoolBoolExp
  rewardRate: CreditCards_NumericBoolExp
  startDate: CreditCards_DateBoolExp
}

input CreditCards_CreditCardsCardProductRewardCategoriesFilterInput {
  limit: Int
  offset: Int
  order_by: [CreditCards_CreditCardsCardProductRewardCategoriesOrderByExp!]
  where: CreditCards_CreditCardsCardProductRewardCategoriesBoolExp
}

input CreditCards_CreditCardsCardProductRewardCategoriesOrderByExp {
  capAmount: OrderBy
  capPeriod: OrderBy
  categoryName: OrderBy
  creditCardsCardProduct: CreditCards_CreditCardsCardProductsOrderByExp
  creditCardsCategoryId: OrderBy
  creditCardsProductId: OrderBy
  endDate: OrderBy
  isCapped: OrderBy
  isQuarterly: OrderBy
  rewardRate: OrderBy
  startDate: OrderBy
}

"""Defines credit card products offered by the institution"""
type CreditCards_CreditCardsCardProducts {
  """Annual fee for the card"""
  annualFee: CreditCards_Numeric

  """Minimum fee amount for balance transfers"""
  balanceTransferFeeMin: CreditCards_Numeric

  """Percentage fee for balance transfers"""
  balanceTransferFeePercent: CreditCards_Numeric

  """APR for balance transfers"""
  balanceTransferRate: CreditCards_Numeric

  """Standard purchase APR (annual percentage rate)"""
  baseInterestRate: CreditCards_Numeric

  """Base reward earning rate (e.g., 1.5% cashback)"""
  baseRewardRate: CreditCards_Numeric

  """Card network (Visa, Mastercard, Amex, Discover)"""
  cardNetwork: CreditCards_Varchar!

  """Card tier (Standard, Gold, Platinum, etc.)"""
  cardTier: CreditCards_Varchar!

  """Type of card (Debit, Credit, Prepaid, Charge)"""
  cardType: CreditCards_Varchar!

  """Minimum fee amount for cash advances"""
  cashAdvanceFeeMin: CreditCards_Numeric

  """Percentage fee for cash advances"""
  cashAdvanceFeePercent: CreditCards_Numeric

  """APR for cash advances"""
  cashAdvanceRate: CreditCards_Numeric
  creditCardsApplications(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsApplicationsOrderByExp!], where: CreditCards_CreditCardsApplicationsBoolExp): [CreditCards_CreditCardsApplications!]
  creditCardsApplicationsAggregate(filter_input: CreditCards_CreditCardsApplicationsFilterInput): CreditCards_CreditCardsApplicationsAggExp!
  creditCardsCardAccounts(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsCardAccountsOrderByExp!], where: CreditCards_CreditCardsCardAccountsBoolExp): [CreditCards_CreditCardsCardAccounts!]
  creditCardsCardAccountsAggregate(filter_input: CreditCards_CreditCardsCardAccountsFilterInput): CreditCards_CreditCardsCardAccountsAggExp!
  creditCardsCardProductFeatures(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsCardProductFeaturesOrderByExp!], where: CreditCards_CreditCardsCardProductFeaturesBoolExp): [CreditCards_CreditCardsCardProductFeatures!]
  creditCardsCardProductFeaturesAggregate(filter_input: CreditCards_CreditCardsCardProductFeaturesFilterInput): CreditCards_CreditCardsCardProductFeaturesAggExp!
  creditCardsCardProductRewardCategories(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsCardProductRewardCategoriesOrderByExp!], where: CreditCards_CreditCardsCardProductRewardCategoriesBoolExp): [CreditCards_CreditCardsCardProductRewardCategories!]
  creditCardsCardProductRewardCategoriesAggregate(filter_input: CreditCards_CreditCardsCardProductRewardCategoriesFilterInput): CreditCards_CreditCardsCardProductRewardCategoriesAggExp!

  """Auto-incrementing identifier for each card product"""
  creditCardsProductId: CreditCards_Int4!

  """Date when product was discontinued if applicable"""
  discontinueDate: CreditCards_Date

  """Fee percentage for foreign transactions"""
  foreignTransactionFee: CreditCards_Numeric

  """Interest-free grace period in days"""
  gracePeriodDays: CreditCards_Int4

  """URL to card image for marketing"""
  imageUrl: CreditCards_Varchar

  """Introductory APR if offered"""
  introRate: CreditCards_Numeric

  """Duration of introductory rate"""
  introRatePeriodMonths: CreditCards_Int4

  """Whether product is currently offered"""
  isActive: CreditCards_Bool!

  """Whether annual fee is waived first year"""
  isAnnualFeeWaivedFirstYear: CreditCards_Bool

  """Whether card requires a security deposit"""
  isSecured: CreditCards_Bool!

  """Fee charged for late payments"""
  latePaymentFee: CreditCards_Numeric

  """Date when product was launched"""
  launchDate: CreditCards_Date

  """Maximum credit limit offered"""
  maxCreditLimit: CreditCards_Numeric

  """Minimum credit limit offered"""
  minCreditLimit: CreditCards_Numeric

  """Minimum credit score typically required"""
  minCreditScore: CreditCards_Int4

  """Fee charged for exceeding credit limit"""
  overlimitFee: CreditCards_Numeric

  """Penalty APR applied after late payments"""
  penaltyRate: CreditCards_Numeric

  """Internal code identifying the card product"""
  productCode: CreditCards_Varchar!

  """Marketing name of the card product"""
  productName: CreditCards_Varchar!

  """Fee charged for returned payments"""
  returnPaymentFee: CreditCards_Numeric

  """Description of reward program if any"""
  rewardProgram: CreditCards_Varchar

  """URL to terms and conditions document"""
  termsAndConditionsUrl: CreditCards_Varchar
}

type CreditCards_CreditCardsCardProductsAggExp {
  _count: Int!
  annualFee: CreditCards_NumericAggExp!
  balanceTransferFeeMin: CreditCards_NumericAggExp!
  balanceTransferFeePercent: CreditCards_NumericAggExp!
  balanceTransferRate: CreditCards_NumericAggExp!
  baseInterestRate: CreditCards_NumericAggExp!
  baseRewardRate: CreditCards_NumericAggExp!
  cardNetwork: CreditCards_VarcharAggExp!
  cardTier: CreditCards_VarcharAggExp!
  cardType: CreditCards_VarcharAggExp!
  cashAdvanceFeeMin: CreditCards_NumericAggExp!
  cashAdvanceFeePercent: CreditCards_NumericAggExp!
  cashAdvanceRate: CreditCards_NumericAggExp!
  creditCardsProductId: CreditCards_Int4AggExp!
  discontinueDate: CreditCards_DateAggExp!
  foreignTransactionFee: CreditCards_NumericAggExp!
  gracePeriodDays: CreditCards_Int4AggExp!
  imageUrl: CreditCards_VarcharAggExp!
  introRate: CreditCards_NumericAggExp!
  introRatePeriodMonths: CreditCards_Int4AggExp!
  isActive: CreditCards_BoolAggExp!
  isAnnualFeeWaivedFirstYear: CreditCards_BoolAggExp!
  isSecured: CreditCards_BoolAggExp!
  latePaymentFee: CreditCards_NumericAggExp!
  launchDate: CreditCards_DateAggExp!
  maxCreditLimit: CreditCards_NumericAggExp!
  minCreditLimit: CreditCards_NumericAggExp!
  minCreditScore: CreditCards_Int4AggExp!
  overlimitFee: CreditCards_NumericAggExp!
  penaltyRate: CreditCards_NumericAggExp!
  productCode: CreditCards_VarcharAggExp!
  productName: CreditCards_VarcharAggExp!
  returnPaymentFee: CreditCards_NumericAggExp!
  rewardProgram: CreditCards_VarcharAggExp!
  termsAndConditionsUrl: CreditCards_VarcharAggExp!
}

input CreditCards_CreditCardsCardProductsBoolExp {
  _and: [CreditCards_CreditCardsCardProductsBoolExp!]
  _not: CreditCards_CreditCardsCardProductsBoolExp
  _or: [CreditCards_CreditCardsCardProductsBoolExp!]
  annualFee: CreditCards_NumericBoolExp
  balanceTransferFeeMin: CreditCards_NumericBoolExp
  balanceTransferFeePercent: CreditCards_NumericBoolExp
  balanceTransferRate: CreditCards_NumericBoolExp
  baseInterestRate: CreditCards_NumericBoolExp
  baseRewardRate: CreditCards_NumericBoolExp
  cardNetwork: CreditCards_VarcharBoolExp
  cardTier: CreditCards_VarcharBoolExp
  cardType: CreditCards_VarcharBoolExp
  cashAdvanceFeeMin: CreditCards_NumericBoolExp
  cashAdvanceFeePercent: CreditCards_NumericBoolExp
  cashAdvanceRate: CreditCards_NumericBoolExp
  creditCardsApplications: CreditCards_CreditCardsApplicationsBoolExp
  creditCardsCardAccounts: CreditCards_CreditCardsCardAccountsBoolExp
  creditCardsCardProductFeatures: CreditCards_CreditCardsCardProductFeaturesBoolExp
  creditCardsCardProductRewardCategories: CreditCards_CreditCardsCardProductRewardCategoriesBoolExp
  creditCardsProductId: CreditCards_Int4BoolExp
  discontinueDate: CreditCards_DateBoolExp
  foreignTransactionFee: CreditCards_NumericBoolExp
  gracePeriodDays: CreditCards_Int4BoolExp
  imageUrl: CreditCards_VarcharBoolExp
  introRate: CreditCards_NumericBoolExp
  introRatePeriodMonths: CreditCards_Int4BoolExp
  isActive: CreditCards_BoolBoolExp
  isAnnualFeeWaivedFirstYear: CreditCards_BoolBoolExp
  isSecured: CreditCards_BoolBoolExp
  latePaymentFee: CreditCards_NumericBoolExp
  launchDate: CreditCards_DateBoolExp
  maxCreditLimit: CreditCards_NumericBoolExp
  minCreditLimit: CreditCards_NumericBoolExp
  minCreditScore: CreditCards_Int4BoolExp
  overlimitFee: CreditCards_NumericBoolExp
  penaltyRate: CreditCards_NumericBoolExp
  productCode: CreditCards_VarcharBoolExp
  productName: CreditCards_VarcharBoolExp
  returnPaymentFee: CreditCards_NumericBoolExp
  rewardProgram: CreditCards_VarcharBoolExp
  termsAndConditionsUrl: CreditCards_VarcharBoolExp
}

input CreditCards_CreditCardsCardProductsFilterInput {
  limit: Int
  offset: Int
  order_by: [CreditCards_CreditCardsCardProductsOrderByExp!]
  where: CreditCards_CreditCardsCardProductsBoolExp
}

input CreditCards_CreditCardsCardProductsOrderByExp {
  annualFee: OrderBy
  balanceTransferFeeMin: OrderBy
  balanceTransferFeePercent: OrderBy
  balanceTransferRate: OrderBy
  baseInterestRate: OrderBy
  baseRewardRate: OrderBy
  cardNetwork: OrderBy
  cardTier: OrderBy
  cardType: OrderBy
  cashAdvanceFeeMin: OrderBy
  cashAdvanceFeePercent: OrderBy
  cashAdvanceRate: OrderBy
  creditCardsProductId: OrderBy
  discontinueDate: OrderBy
  foreignTransactionFee: OrderBy
  gracePeriodDays: OrderBy
  imageUrl: OrderBy
  introRate: OrderBy
  introRatePeriodMonths: OrderBy
  isActive: OrderBy
  isAnnualFeeWaivedFirstYear: OrderBy
  isSecured: OrderBy
  latePaymentFee: OrderBy
  launchDate: OrderBy
  maxCreditLimit: OrderBy
  minCreditLimit: OrderBy
  minCreditScore: OrderBy
  overlimitFee: OrderBy
  penaltyRate: OrderBy
  productCode: OrderBy
  productName: OrderBy
  returnPaymentFee: OrderBy
  rewardProgram: OrderBy
  termsAndConditionsUrl: OrderBy
}

"""
Stores information about physical and virtual cards issued for accounts
"""
type CreditCards_CreditCardsCards {
  """When card was activated"""
  activationDate: CreditCards_Date

  """Design/style of physical card"""
  cardDesign: CreditCards_Varchar

  """Masked card number (last 4 digits only)"""
  cardNumber: CreditCards_Varchar

  """Active, Inactive, Lost, Stolen, Expired, Replaced"""
  cardStatus: CreditCards_Varchar!
  creditCardsCardAccount: CreditCards_CreditCardsCardAccounts

  """Reference to card_accounts"""
  creditCardsCardAccountId: CreditCards_Int4!
  creditCardsCardAlerts(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsCardAlertsOrderByExp!], where: CreditCards_CreditCardsCardAlertsBoolExp): [CreditCards_CreditCardsCardAlerts!]
  creditCardsCardAlertsAggregate(filter_input: CreditCards_CreditCardsCardAlertsFilterInput): CreditCards_CreditCardsCardAlertsAggExp!

  """Auto-incrementing identifier for each physical card"""
  creditCardsCardId: CreditCards_Int4!
  creditCardsFraudCases(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsFraudCasesOrderByExp!], where: CreditCards_CreditCardsFraudCasesBoolExp): [CreditCards_CreditCardsFraudCases!]
  creditCardsFraudCasesAggregate(filter_input: CreditCards_CreditCardsFraudCasesFilterInput): CreditCards_CreditCardsFraudCasesAggExp!
  creditCardsSecurityBlocks(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsSecurityBlocksOrderByExp!], where: CreditCards_CreditCardsSecurityBlocksBoolExp): [CreditCards_CreditCardsSecurityBlocks!]
  creditCardsSecurityBlocksAggregate(filter_input: CreditCards_CreditCardsSecurityBlocksFilterInput): CreditCards_CreditCardsSecurityBlocksAggExp!
  creditCardsTransactions(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsTransactionsOrderByExp!], where: CreditCards_CreditCardsTransactionsBoolExp): [CreditCards_CreditCardsTransactions!]
  creditCardsTransactionsAggregate(filter_input: CreditCards_CreditCardsTransactionsFilterInput): CreditCards_CreditCardsTransactionsAggExp!

  """Whether added to digital wallet"""
  digitalWalletEnabled: CreditCards_Bool!

  """When card expires"""
  expirationDate: CreditCards_Date!

  """Whether card is virtual only"""
  isVirtual: CreditCards_Bool!

  """When card was issued"""
  issueDate: CreditCards_Date!

  """Whether PIN has been set"""
  pinSet: CreditCards_Bool!

  """Temporary spending limits if any"""
  temporaryLimits: CreditCards_Jsonb

  """When temporary limits expire"""
  temporaryLimitsExpiry: CreditCards_Date
  user: Enterprise_EnterpriseParties

  """Reference to parties.party_id of cardholder"""
  userId: CreditCards_Int4!

  """Primary or Authorized User"""
  userType: CreditCards_Varchar!
}

type CreditCards_CreditCardsCardsAggExp {
  _count: Int!
  activationDate: CreditCards_DateAggExp!
  cardDesign: CreditCards_VarcharAggExp!
  cardNumber: CreditCards_VarcharAggExp!
  cardStatus: CreditCards_VarcharAggExp!
  creditCardsCardAccountId: CreditCards_Int4AggExp!
  creditCardsCardId: CreditCards_Int4AggExp!
  digitalWalletEnabled: CreditCards_BoolAggExp!
  expirationDate: CreditCards_DateAggExp!
  isVirtual: CreditCards_BoolAggExp!
  issueDate: CreditCards_DateAggExp!
  pinSet: CreditCards_BoolAggExp!
  temporaryLimits: CreditCards_JsonbAggExp!
  temporaryLimitsExpiry: CreditCards_DateAggExp!
  userId: CreditCards_Int4AggExp!
  userType: CreditCards_VarcharAggExp!
}

input CreditCards_CreditCardsCardsBoolExp {
  _and: [CreditCards_CreditCardsCardsBoolExp!]
  _not: CreditCards_CreditCardsCardsBoolExp
  _or: [CreditCards_CreditCardsCardsBoolExp!]
  activationDate: CreditCards_DateBoolExp
  cardDesign: CreditCards_VarcharBoolExp
  cardNumber: CreditCards_VarcharBoolExp
  cardStatus: CreditCards_VarcharBoolExp
  creditCardsCardAccount: CreditCards_CreditCardsCardAccountsBoolExp
  creditCardsCardAccountId: CreditCards_Int4BoolExp
  creditCardsCardAlerts: CreditCards_CreditCardsCardAlertsBoolExp
  creditCardsCardId: CreditCards_Int4BoolExp
  creditCardsFraudCases: CreditCards_CreditCardsFraudCasesBoolExp
  creditCardsSecurityBlocks: CreditCards_CreditCardsSecurityBlocksBoolExp
  creditCardsTransactions: CreditCards_CreditCardsTransactionsBoolExp
  digitalWalletEnabled: CreditCards_BoolBoolExp
  expirationDate: CreditCards_DateBoolExp
  isVirtual: CreditCards_BoolBoolExp
  issueDate: CreditCards_DateBoolExp
  pinSet: CreditCards_BoolBoolExp
  temporaryLimits: CreditCards_JsonbBoolExp
  temporaryLimitsExpiry: CreditCards_DateBoolExp
  userId: CreditCards_Int4BoolExp
  userType: CreditCards_VarcharBoolExp
}

input CreditCards_CreditCardsCardsFilterInput {
  limit: Int
  offset: Int
  order_by: [CreditCards_CreditCardsCardsOrderByExp!]
  where: CreditCards_CreditCardsCardsBoolExp
}

input CreditCards_CreditCardsCardsOrderByExp {
  activationDate: OrderBy
  cardDesign: OrderBy
  cardNumber: OrderBy
  cardStatus: OrderBy
  creditCardsCardAccount: CreditCards_CreditCardsCardAccountsOrderByExp
  creditCardsCardAccountId: OrderBy
  creditCardsCardId: OrderBy
  digitalWalletEnabled: OrderBy
  expirationDate: OrderBy
  isVirtual: OrderBy
  issueDate: OrderBy
  pinSet: OrderBy
  temporaryLimits: OrderBy
  temporaryLimitsExpiry: OrderBy
  userId: OrderBy
  userType: OrderBy
}

"""Tracks customer complaints about credit card accounts"""
type CreditCards_CreditCardsConsumerComplaints {
  """CFPB case number if applicable"""
  cfpbCaseNumber: CreditCards_Varchar

  """Type of complaint (Billing, Fees, Interest, Customer Service)"""
  complaintType: CreditCards_Varchar!
  creditCardsCardAccount: CreditCards_CreditCardsCardAccounts

  """Reference to card_accounts"""
  creditCardsCardAccountId: CreditCards_Int4!

  """Auto-incrementing identifier for each complaint"""
  creditCardsComplaintId: CreditCards_Int4!

  """Detailed description of complaint"""
  description: CreditCards_Text

  """Specific issue raised"""
  issue: CreditCards_Varchar!

  """Amount of monetary relief provided"""
  monetaryReliefAmount: CreditCards_Numeric

  """Date complaint was received"""
  receiptDate: CreditCards_Timestamptz!

  """Specific regulation violated if applicable"""
  regulationViolated: CreditCards_Varchar

  """Whether regulatory violation was identified"""
  regulatoryViolationFound: CreditCards_Bool

  """Description of how complaint was resolved"""
  resolution: CreditCards_Text

  """Date complaint was resolved"""
  resolutionDate: CreditCards_Date

  """Date response was sent to consumer"""
  responseSentDate: CreditCards_Date

  """Source of complaint (Direct, CFPB, BBB, Social Media)"""
  source: CreditCards_Varchar!

  """Status of complaint (New, In Progress, Resolved)"""
  status: CreditCards_Varchar!
}

type CreditCards_CreditCardsConsumerComplaintsAggExp {
  _count: Int!
  cfpbCaseNumber: CreditCards_VarcharAggExp!
  complaintType: CreditCards_VarcharAggExp!
  creditCardsCardAccountId: CreditCards_Int4AggExp!
  creditCardsComplaintId: CreditCards_Int4AggExp!
  description: CreditCards_TextAggExp!
  issue: CreditCards_VarcharAggExp!
  monetaryReliefAmount: CreditCards_NumericAggExp!
  receiptDate: CreditCards_TimestamptzAggExp!
  regulationViolated: CreditCards_VarcharAggExp!
  regulatoryViolationFound: CreditCards_BoolAggExp!
  resolution: CreditCards_TextAggExp!
  resolutionDate: CreditCards_DateAggExp!
  responseSentDate: CreditCards_DateAggExp!
  source: CreditCards_VarcharAggExp!
  status: CreditCards_VarcharAggExp!
}

input CreditCards_CreditCardsConsumerComplaintsBoolExp {
  _and: [CreditCards_CreditCardsConsumerComplaintsBoolExp!]
  _not: CreditCards_CreditCardsConsumerComplaintsBoolExp
  _or: [CreditCards_CreditCardsConsumerComplaintsBoolExp!]
  cfpbCaseNumber: CreditCards_VarcharBoolExp
  complaintType: CreditCards_VarcharBoolExp
  creditCardsCardAccount: CreditCards_CreditCardsCardAccountsBoolExp
  creditCardsCardAccountId: CreditCards_Int4BoolExp
  creditCardsComplaintId: CreditCards_Int4BoolExp
  description: CreditCards_TextBoolExp
  issue: CreditCards_VarcharBoolExp
  monetaryReliefAmount: CreditCards_NumericBoolExp
  receiptDate: CreditCards_TimestamptzBoolExp
  regulationViolated: CreditCards_VarcharBoolExp
  regulatoryViolationFound: CreditCards_BoolBoolExp
  resolution: CreditCards_TextBoolExp
  resolutionDate: CreditCards_DateBoolExp
  responseSentDate: CreditCards_DateBoolExp
  source: CreditCards_VarcharBoolExp
  status: CreditCards_VarcharBoolExp
}

input CreditCards_CreditCardsConsumerComplaintsFilterInput {
  limit: Int
  offset: Int
  order_by: [CreditCards_CreditCardsConsumerComplaintsOrderByExp!]
  where: CreditCards_CreditCardsConsumerComplaintsBoolExp
}

input CreditCards_CreditCardsConsumerComplaintsOrderByExp {
  cfpbCaseNumber: OrderBy
  complaintType: OrderBy
  creditCardsCardAccount: CreditCards_CreditCardsCardAccountsOrderByExp
  creditCardsCardAccountId: OrderBy
  creditCardsComplaintId: OrderBy
  description: OrderBy
  issue: OrderBy
  monetaryReliefAmount: OrderBy
  receiptDate: OrderBy
  regulationViolated: OrderBy
  regulatoryViolationFound: OrderBy
  resolution: OrderBy
  resolutionDate: OrderBy
  responseSentDate: OrderBy
  source: OrderBy
  status: OrderBy
}

"""Regulatory reporting data for credit card applications under HMDA"""
type CreditCards_CreditCardsCreditCardApplicationsHmda {
  """Final disposition (Approved, Denied, etc.)"""
  actionTaken: CreditCards_Varchar!

  """Date of final action"""
  actionTakenDate: CreditCards_Date!

  """Applicant's age at time of application"""
  age: CreditCards_Int4
  creditCardsApplication: CreditCards_CreditCardsApplications

  """Reference to applications"""
  creditCardsApplicationId: CreditCards_Int4!

  """Auto-incrementing identifier for each HMDA record"""
  creditCardsRecordId: CreditCards_Int4!

  """Primary reason for denial if applicable"""
  denialReason1: CreditCards_Varchar

  """Secondary reason for denial if applicable"""
  denialReason2: CreditCards_Varchar

  """Applicant's ethnicity per HMDA categories"""
  ethnicity: CreditCards_Varchar

  """Whether subject to HOEPA (Yes, No)"""
  hoepaStatus: CreditCards_Varchar

  """Applicant's annual income in thousands"""
  income: CreditCards_Numeric

  """Applicant's race per HMDA categories"""
  race: CreditCards_Varchar

  """Difference between APR and average prime offer rate"""
  rateSpread: CreditCards_Numeric

  """Year for HMDA reporting"""
  reportingYear: CreditCards_Int4!

  """Applicant's sex per HMDA categories"""
  sex: CreditCards_Varchar

  """Status of HMDA submission"""
  submissionStatus: CreditCards_Varchar!
}

type CreditCards_CreditCardsCreditCardApplicationsHmdaAggExp {
  _count: Int!
  actionTaken: CreditCards_VarcharAggExp!
  actionTakenDate: CreditCards_DateAggExp!
  age: CreditCards_Int4AggExp!
  creditCardsApplicationId: CreditCards_Int4AggExp!
  creditCardsRecordId: CreditCards_Int4AggExp!
  denialReason1: CreditCards_VarcharAggExp!
  denialReason2: CreditCards_VarcharAggExp!
  ethnicity: CreditCards_VarcharAggExp!
  hoepaStatus: CreditCards_VarcharAggExp!
  income: CreditCards_NumericAggExp!
  race: CreditCards_VarcharAggExp!
  rateSpread: CreditCards_NumericAggExp!
  reportingYear: CreditCards_Int4AggExp!
  sex: CreditCards_VarcharAggExp!
  submissionStatus: CreditCards_VarcharAggExp!
}

input CreditCards_CreditCardsCreditCardApplicationsHmdaBoolExp {
  _and: [CreditCards_CreditCardsCreditCardApplicationsHmdaBoolExp!]
  _not: CreditCards_CreditCardsCreditCardApplicationsHmdaBoolExp
  _or: [CreditCards_CreditCardsCreditCardApplicationsHmdaBoolExp!]
  actionTaken: CreditCards_VarcharBoolExp
  actionTakenDate: CreditCards_DateBoolExp
  age: CreditCards_Int4BoolExp
  creditCardsApplication: CreditCards_CreditCardsApplicationsBoolExp
  creditCardsApplicationId: CreditCards_Int4BoolExp
  creditCardsRecordId: CreditCards_Int4BoolExp
  denialReason1: CreditCards_VarcharBoolExp
  denialReason2: CreditCards_VarcharBoolExp
  ethnicity: CreditCards_VarcharBoolExp
  hoepaStatus: CreditCards_VarcharBoolExp
  income: CreditCards_NumericBoolExp
  race: CreditCards_VarcharBoolExp
  rateSpread: CreditCards_NumericBoolExp
  reportingYear: CreditCards_Int4BoolExp
  sex: CreditCards_VarcharBoolExp
  submissionStatus: CreditCards_VarcharBoolExp
}

input CreditCards_CreditCardsCreditCardApplicationsHmdaFilterInput {
  limit: Int
  offset: Int
  order_by: [CreditCards_CreditCardsCreditCardApplicationsHmdaOrderByExp!]
  where: CreditCards_CreditCardsCreditCardApplicationsHmdaBoolExp
}

input CreditCards_CreditCardsCreditCardApplicationsHmdaOrderByExp {
  actionTaken: OrderBy
  actionTakenDate: OrderBy
  age: OrderBy
  creditCardsApplication: CreditCards_CreditCardsApplicationsOrderByExp
  creditCardsApplicationId: OrderBy
  creditCardsRecordId: OrderBy
  denialReason1: OrderBy
  denialReason2: OrderBy
  ethnicity: OrderBy
  hoepaStatus: OrderBy
  income: OrderBy
  race: OrderBy
  rateSpread: OrderBy
  reportingYear: OrderBy
  sex: OrderBy
  submissionStatus: OrderBy
}

"""Tracks history of credit limit changes"""
type CreditCards_CreditCardsCreditLimitChanges {
  """User who approved change"""
  approvedById: CreditCards_Int4

  """Date of credit limit change"""
  changeDate: CreditCards_Date!

  """Reason for limit change"""
  changeReason: CreditCards_Varchar!
  creditCardsCardAccount: CreditCards_CreditCardsCardAccounts

  """Reference to card_accounts"""
  creditCardsCardAccountId: CreditCards_Int4!

  """Auto-incrementing identifier for each limit change"""
  creditCardsChangeId: CreditCards_Int4!
  limitChangeApprovedBy: Enterprise_EnterpriseAssociates

  """Credit limit after change"""
  newLimit: CreditCards_Numeric!

  """Credit limit before change"""
  previousLimit: CreditCards_Numeric!

  """Who requested change (Customer, Bank)"""
  requestedBy: CreditCards_Varchar!
}

type CreditCards_CreditCardsCreditLimitChangesAggExp {
  _count: Int!
  approvedById: CreditCards_Int4AggExp!
  changeDate: CreditCards_DateAggExp!
  changeReason: CreditCards_VarcharAggExp!
  creditCardsCardAccountId: CreditCards_Int4AggExp!
  creditCardsChangeId: CreditCards_Int4AggExp!
  newLimit: CreditCards_NumericAggExp!
  previousLimit: CreditCards_NumericAggExp!
  requestedBy: CreditCards_VarcharAggExp!
}

input CreditCards_CreditCardsCreditLimitChangesBoolExp {
  _and: [CreditCards_CreditCardsCreditLimitChangesBoolExp!]
  _not: CreditCards_CreditCardsCreditLimitChangesBoolExp
  _or: [CreditCards_CreditCardsCreditLimitChangesBoolExp!]
  approvedById: CreditCards_Int4BoolExp
  changeDate: CreditCards_DateBoolExp
  changeReason: CreditCards_VarcharBoolExp
  creditCardsCardAccount: CreditCards_CreditCardsCardAccountsBoolExp
  creditCardsCardAccountId: CreditCards_Int4BoolExp
  creditCardsChangeId: CreditCards_Int4BoolExp
  newLimit: CreditCards_NumericBoolExp
  previousLimit: CreditCards_NumericBoolExp
  requestedBy: CreditCards_VarcharBoolExp
}

input CreditCards_CreditCardsCreditLimitChangesFilterInput {
  limit: Int
  offset: Int
  order_by: [CreditCards_CreditCardsCreditLimitChangesOrderByExp!]
  where: CreditCards_CreditCardsCreditLimitChangesBoolExp
}

input CreditCards_CreditCardsCreditLimitChangesOrderByExp {
  approvedById: OrderBy
  changeDate: OrderBy
  changeReason: OrderBy
  creditCardsCardAccount: CreditCards_CreditCardsCardAccountsOrderByExp
  creditCardsCardAccountId: OrderBy
  creditCardsChangeId: OrderBy
  newLimit: OrderBy
  previousLimit: OrderBy
  requestedBy: OrderBy
}

"""Tracks disputed transactions and their resolution"""
type CreditCards_CreditCardsDisputedTransactions {
  """Dispute case identifier"""
  caseNumber: CreditCards_Varchar!
  creditCardsCardAccount: CreditCards_CreditCardsCardAccounts

  """Reference to card_accounts"""
  creditCardsCardAccountId: CreditCards_Int4!

  """Auto-incrementing identifier for each dispute"""
  creditCardsDisputeId: CreditCards_Int4!
  creditCardsTransaction: CreditCards_CreditCardsTransactions

  """Reference to transactions"""
  creditCardsTransactionId: CreditCards_Int4!

  """Customer description of dispute"""
  description: CreditCards_Text

  """Date and time dispute was filed"""
  disputeDate: CreditCards_Timestamptz!

  """Reason for dispute (Fraud, Product Issue, Duplicate Charge, etc.)"""
  disputeReason: CreditCards_Varchar!

  """Amount being disputed"""
  disputedAmount: CreditCards_Numeric!

  """Whether documentation was received"""
  documentationReceived: CreditCards_Bool!

  """Amount of provisional credit"""
  provisionalCreditAmount: CreditCards_Numeric

  """Date provisional credit was issued if applicable"""
  provisionalCreditDate: CreditCards_Date

  """Final resolution (Customer Favor, Merchant Favor)"""
  resolution: CreditCards_Varchar

  """Date dispute was resolved"""
  resolutionDate: CreditCards_Date

  """Status of dispute (Filed, Processing, Resolved, Declined)"""
  status: CreditCards_Varchar!
}

type CreditCards_CreditCardsDisputedTransactionsAggExp {
  _count: Int!
  caseNumber: CreditCards_VarcharAggExp!
  creditCardsCardAccountId: CreditCards_Int4AggExp!
  creditCardsDisputeId: CreditCards_Int4AggExp!
  creditCardsTransactionId: CreditCards_Int4AggExp!
  description: CreditCards_TextAggExp!
  disputeDate: CreditCards_TimestamptzAggExp!
  disputeReason: CreditCards_VarcharAggExp!
  disputedAmount: CreditCards_NumericAggExp!
  documentationReceived: CreditCards_BoolAggExp!
  provisionalCreditAmount: CreditCards_NumericAggExp!
  provisionalCreditDate: CreditCards_DateAggExp!
  resolution: CreditCards_VarcharAggExp!
  resolutionDate: CreditCards_DateAggExp!
  status: CreditCards_VarcharAggExp!
}

input CreditCards_CreditCardsDisputedTransactionsBoolExp {
  _and: [CreditCards_CreditCardsDisputedTransactionsBoolExp!]
  _not: CreditCards_CreditCardsDisputedTransactionsBoolExp
  _or: [CreditCards_CreditCardsDisputedTransactionsBoolExp!]
  caseNumber: CreditCards_VarcharBoolExp
  creditCardsCardAccount: CreditCards_CreditCardsCardAccountsBoolExp
  creditCardsCardAccountId: CreditCards_Int4BoolExp
  creditCardsDisputeId: CreditCards_Int4BoolExp
  creditCardsTransaction: CreditCards_CreditCardsTransactionsBoolExp
  creditCardsTransactionId: CreditCards_Int4BoolExp
  description: CreditCards_TextBoolExp
  disputeDate: CreditCards_TimestamptzBoolExp
  disputeReason: CreditCards_VarcharBoolExp
  disputedAmount: CreditCards_NumericBoolExp
  documentationReceived: CreditCards_BoolBoolExp
  provisionalCreditAmount: CreditCards_NumericBoolExp
  provisionalCreditDate: CreditCards_DateBoolExp
  resolution: CreditCards_VarcharBoolExp
  resolutionDate: CreditCards_DateBoolExp
  status: CreditCards_VarcharBoolExp
}

input CreditCards_CreditCardsDisputedTransactionsFilterInput {
  limit: Int
  offset: Int
  order_by: [CreditCards_CreditCardsDisputedTransactionsOrderByExp!]
  where: CreditCards_CreditCardsDisputedTransactionsBoolExp
}

input CreditCards_CreditCardsDisputedTransactionsOrderByExp {
  caseNumber: OrderBy
  creditCardsCardAccount: CreditCards_CreditCardsCardAccountsOrderByExp
  creditCardsCardAccountId: OrderBy
  creditCardsDisputeId: OrderBy
  creditCardsTransaction: CreditCards_CreditCardsTransactionsOrderByExp
  creditCardsTransactionId: OrderBy
  description: OrderBy
  disputeDate: OrderBy
  disputeReason: OrderBy
  disputedAmount: OrderBy
  documentationReceived: OrderBy
  provisionalCreditAmount: OrderBy
  provisionalCreditDate: OrderBy
  resolution: OrderBy
  resolutionDate: OrderBy
  status: OrderBy
}

"""Tracks fees charged to card accounts"""
type CreditCards_CreditCardsFees {
  """Fee amount"""
  amount: CreditCards_Numeric!
  creditCardsCardAccount: CreditCards_CreditCardsCardAccounts

  """Reference to card_accounts"""
  creditCardsCardAccountId: CreditCards_Int4!

  """Auto-incrementing identifier for each fee"""
  creditCardsFeeId: CreditCards_Int4!
  creditCardsStatement: CreditCards_CreditCardsStatements

  """Reference to statements if included in statement"""
  creditCardsStatementId: CreditCards_Int4
  creditCardsTransaction: CreditCards_CreditCardsTransactions

  """Reference to transactions if associated with specific transaction"""
  creditCardsTransactionId: CreditCards_Int4

  """Date fee was charged"""
  dateAssessed: CreditCards_Date!

  """Description of fee"""
  description: CreditCards_Varchar

  """
  Type of fee (Annual, Late Payment, Cash Advance, Foreign Transaction, etc.)
  """
  feeType: CreditCards_Varchar!

  """Whether fee was waived"""
  waived: CreditCards_Bool!

  """Reason fee was waived if applicable"""
  waiverReason: CreditCards_Varchar
}

type CreditCards_CreditCardsFeesAggExp {
  _count: Int!
  amount: CreditCards_NumericAggExp!
  creditCardsCardAccountId: CreditCards_Int4AggExp!
  creditCardsFeeId: CreditCards_Int4AggExp!
  creditCardsStatementId: CreditCards_Int4AggExp!
  creditCardsTransactionId: CreditCards_Int4AggExp!
  dateAssessed: CreditCards_DateAggExp!
  description: CreditCards_VarcharAggExp!
  feeType: CreditCards_VarcharAggExp!
  waived: CreditCards_BoolAggExp!
  waiverReason: CreditCards_VarcharAggExp!
}

input CreditCards_CreditCardsFeesBoolExp {
  _and: [CreditCards_CreditCardsFeesBoolExp!]
  _not: CreditCards_CreditCardsFeesBoolExp
  _or: [CreditCards_CreditCardsFeesBoolExp!]
  amount: CreditCards_NumericBoolExp
  creditCardsCardAccount: CreditCards_CreditCardsCardAccountsBoolExp
  creditCardsCardAccountId: CreditCards_Int4BoolExp
  creditCardsFeeId: CreditCards_Int4BoolExp
  creditCardsStatement: CreditCards_CreditCardsStatementsBoolExp
  creditCardsStatementId: CreditCards_Int4BoolExp
  creditCardsTransaction: CreditCards_CreditCardsTransactionsBoolExp
  creditCardsTransactionId: CreditCards_Int4BoolExp
  dateAssessed: CreditCards_DateBoolExp
  description: CreditCards_VarcharBoolExp
  feeType: CreditCards_VarcharBoolExp
  waived: CreditCards_BoolBoolExp
  waiverReason: CreditCards_VarcharBoolExp
}

input CreditCards_CreditCardsFeesFilterInput {
  limit: Int
  offset: Int
  order_by: [CreditCards_CreditCardsFeesOrderByExp!]
  where: CreditCards_CreditCardsFeesBoolExp
}

input CreditCards_CreditCardsFeesOrderByExp {
  amount: OrderBy
  creditCardsCardAccount: CreditCards_CreditCardsCardAccountsOrderByExp
  creditCardsCardAccountId: OrderBy
  creditCardsFeeId: OrderBy
  creditCardsStatement: CreditCards_CreditCardsStatementsOrderByExp
  creditCardsStatementId: OrderBy
  creditCardsTransaction: CreditCards_CreditCardsTransactionsOrderByExp
  creditCardsTransactionId: OrderBy
  dateAssessed: OrderBy
  description: OrderBy
  feeType: OrderBy
  waived: OrderBy
  waiverReason: OrderBy
}

"""Tracks fraud cases related to card accounts"""
type CreditCards_CreditCardsFraudCases {
  caseInvestigator: Enterprise_EnterpriseAssociates

  """Type of fraud (Card Fraud, Account Takeover, Application Fraud)"""
  caseType: CreditCards_Varchar!
  creditCardsCard: CreditCards_CreditCardsCards
  creditCardsCardAccount: CreditCards_CreditCardsCardAccounts

  """Reference to card_accounts"""
  creditCardsCardAccountId: CreditCards_Int4!

  """Reference to specific card if applicable"""
  creditCardsCardId: CreditCards_Int4

  """Auto-incrementing identifier for each fraud case"""
  creditCardsCaseId: CreditCards_Int4!
  creditCardsFraudTransactions(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsFraudTransactionsOrderByExp!], where: CreditCards_CreditCardsFraudTransactionsBoolExp): [CreditCards_CreditCardsFraudTransactions!]
  creditCardsFraudTransactionsAggregate(filter_input: CreditCards_CreditCardsFraudTransactionsFilterInput): CreditCards_CreditCardsFraudTransactionsAggExp!

  """Description of fraud incident"""
  description: CreditCards_Text

  """User ID of fraud investigator"""
  investigatorId: CreditCards_Int4

  """Whether replacement card was issued"""
  newCardIssued: CreditCards_Bool!

  """Whether police report was filed"""
  policeReportFiled: CreditCards_Bool!

  """Whether provisional credit was issued"""
  provisionalCreditIssued: CreditCards_Bool

  """Date and time fraud was reported"""
  reportDate: CreditCards_Timestamptz!

  """Who reported fraud (Customer, Bank, Merchant)"""
  reportedBy: CreditCards_Varchar!

  """Final resolution of case"""
  resolution: CreditCards_Varchar

  """Date case was resolved"""
  resolutionDate: CreditCards_Date

  """Status of case (Open, Investigation, Closed)"""
  status: CreditCards_Varchar!

  """Total amount of fraudulent transactions"""
  totalDisputedAmount: CreditCards_Numeric
}

type CreditCards_CreditCardsFraudCasesAggExp {
  _count: Int!
  caseType: CreditCards_VarcharAggExp!
  creditCardsCardAccountId: CreditCards_Int4AggExp!
  creditCardsCardId: CreditCards_Int4AggExp!
  creditCardsCaseId: CreditCards_Int4AggExp!
  description: CreditCards_TextAggExp!
  investigatorId: CreditCards_Int4AggExp!
  newCardIssued: CreditCards_BoolAggExp!
  policeReportFiled: CreditCards_BoolAggExp!
  provisionalCreditIssued: CreditCards_BoolAggExp!
  reportDate: CreditCards_TimestamptzAggExp!
  reportedBy: CreditCards_VarcharAggExp!
  resolution: CreditCards_VarcharAggExp!
  resolutionDate: CreditCards_DateAggExp!
  status: CreditCards_VarcharAggExp!
  totalDisputedAmount: CreditCards_NumericAggExp!
}

input CreditCards_CreditCardsFraudCasesBoolExp {
  _and: [CreditCards_CreditCardsFraudCasesBoolExp!]
  _not: CreditCards_CreditCardsFraudCasesBoolExp
  _or: [CreditCards_CreditCardsFraudCasesBoolExp!]
  caseType: CreditCards_VarcharBoolExp
  creditCardsCard: CreditCards_CreditCardsCardsBoolExp
  creditCardsCardAccount: CreditCards_CreditCardsCardAccountsBoolExp
  creditCardsCardAccountId: CreditCards_Int4BoolExp
  creditCardsCardId: CreditCards_Int4BoolExp
  creditCardsCaseId: CreditCards_Int4BoolExp
  creditCardsFraudTransactions: CreditCards_CreditCardsFraudTransactionsBoolExp
  description: CreditCards_TextBoolExp
  investigatorId: CreditCards_Int4BoolExp
  newCardIssued: CreditCards_BoolBoolExp
  policeReportFiled: CreditCards_BoolBoolExp
  provisionalCreditIssued: CreditCards_BoolBoolExp
  reportDate: CreditCards_TimestamptzBoolExp
  reportedBy: CreditCards_VarcharBoolExp
  resolution: CreditCards_VarcharBoolExp
  resolutionDate: CreditCards_DateBoolExp
  status: CreditCards_VarcharBoolExp
  totalDisputedAmount: CreditCards_NumericBoolExp
}

input CreditCards_CreditCardsFraudCasesFilterInput {
  limit: Int
  offset: Int
  order_by: [CreditCards_CreditCardsFraudCasesOrderByExp!]
  where: CreditCards_CreditCardsFraudCasesBoolExp
}

input CreditCards_CreditCardsFraudCasesOrderByExp {
  caseType: OrderBy
  creditCardsCard: CreditCards_CreditCardsCardsOrderByExp
  creditCardsCardAccount: CreditCards_CreditCardsCardAccountsOrderByExp
  creditCardsCardAccountId: OrderBy
  creditCardsCardId: OrderBy
  creditCardsCaseId: OrderBy
  description: OrderBy
  investigatorId: OrderBy
  newCardIssued: OrderBy
  policeReportFiled: OrderBy
  provisionalCreditIssued: OrderBy
  reportDate: OrderBy
  reportedBy: OrderBy
  resolution: OrderBy
  resolutionDate: OrderBy
  status: OrderBy
  totalDisputedAmount: OrderBy
}

"""Junction table linking fraud cases to specific transactions"""
type CreditCards_CreditCardsFraudTransactions {
  """Reference to fraud_cases"""
  creditCardsCaseId: CreditCards_Int4!
  creditCardsFraudCase: CreditCards_CreditCardsFraudCases

  """Auto-incrementing identifier for each linked transaction"""
  creditCardsFraudTransactionId: CreditCards_Int4!
  creditCardsTransaction: CreditCards_CreditCardsTransactions

  """Reference to transactions"""
  creditCardsTransactionId: CreditCards_Int4!

  """Whether transaction is confirmed fraudulent"""
  isConfirmedFraud: CreditCards_Bool!
}

type CreditCards_CreditCardsFraudTransactionsAggExp {
  _count: Int!
  creditCardsCaseId: CreditCards_Int4AggExp!
  creditCardsFraudTransactionId: CreditCards_Int4AggExp!
  creditCardsTransactionId: CreditCards_Int4AggExp!
  isConfirmedFraud: CreditCards_BoolAggExp!
}

input CreditCards_CreditCardsFraudTransactionsBoolExp {
  _and: [CreditCards_CreditCardsFraudTransactionsBoolExp!]
  _not: CreditCards_CreditCardsFraudTransactionsBoolExp
  _or: [CreditCards_CreditCardsFraudTransactionsBoolExp!]
  creditCardsCaseId: CreditCards_Int4BoolExp
  creditCardsFraudCase: CreditCards_CreditCardsFraudCasesBoolExp
  creditCardsFraudTransactionId: CreditCards_Int4BoolExp
  creditCardsTransaction: CreditCards_CreditCardsTransactionsBoolExp
  creditCardsTransactionId: CreditCards_Int4BoolExp
  isConfirmedFraud: CreditCards_BoolBoolExp
}

input CreditCards_CreditCardsFraudTransactionsFilterInput {
  limit: Int
  offset: Int
  order_by: [CreditCards_CreditCardsFraudTransactionsOrderByExp!]
  where: CreditCards_CreditCardsFraudTransactionsBoolExp
}

input CreditCards_CreditCardsFraudTransactionsOrderByExp {
  creditCardsCaseId: OrderBy
  creditCardsFraudCase: CreditCards_CreditCardsFraudCasesOrderByExp
  creditCardsFraudTransactionId: OrderBy
  creditCardsTransaction: CreditCards_CreditCardsTransactionsOrderByExp
  creditCardsTransactionId: OrderBy
  isConfirmedFraud: OrderBy
}

"""Tracks interest charges applied to card accounts"""
type CreditCards_CreditCardsInterestCharges {
  """Interest amount charged"""
  amount: CreditCards_Numeric!

  """Balance amount subject to interest"""
  balanceSubjectToInterest: CreditCards_Numeric!
  creditCardsCardAccount: CreditCards_CreditCardsCardAccounts

  """Reference to card_accounts"""
  creditCardsCardAccountId: CreditCards_Int4!

  """Auto-incrementing identifier for each interest charge"""
  creditCardsChargeId: CreditCards_Int4!
  creditCardsStatement: CreditCards_CreditCardsStatements

  """Reference to statements"""
  creditCardsStatementId: CreditCards_Int4!

  """Date interest was charged"""
  dateAssessed: CreditCards_Date!

  """Number of days interest was calculated for"""
  daysInPeriod: CreditCards_Int4!

  """Interest rate applied"""
  interestRate: CreditCards_Numeric!

  """Type of interest (Purchase, Cash Advance, Balance Transfer, Penalty)"""
  interestType: CreditCards_Varchar!
}

type CreditCards_CreditCardsInterestChargesAggExp {
  _count: Int!
  amount: CreditCards_NumericAggExp!
  balanceSubjectToInterest: CreditCards_NumericAggExp!
  creditCardsCardAccountId: CreditCards_Int4AggExp!
  creditCardsChargeId: CreditCards_Int4AggExp!
  creditCardsStatementId: CreditCards_Int4AggExp!
  dateAssessed: CreditCards_DateAggExp!
  daysInPeriod: CreditCards_Int4AggExp!
  interestRate: CreditCards_NumericAggExp!
  interestType: CreditCards_VarcharAggExp!
}

input CreditCards_CreditCardsInterestChargesBoolExp {
  _and: [CreditCards_CreditCardsInterestChargesBoolExp!]
  _not: CreditCards_CreditCardsInterestChargesBoolExp
  _or: [CreditCards_CreditCardsInterestChargesBoolExp!]
  amount: CreditCards_NumericBoolExp
  balanceSubjectToInterest: CreditCards_NumericBoolExp
  creditCardsCardAccount: CreditCards_CreditCardsCardAccountsBoolExp
  creditCardsCardAccountId: CreditCards_Int4BoolExp
  creditCardsChargeId: CreditCards_Int4BoolExp
  creditCardsStatement: CreditCards_CreditCardsStatementsBoolExp
  creditCardsStatementId: CreditCards_Int4BoolExp
  dateAssessed: CreditCards_DateBoolExp
  daysInPeriod: CreditCards_Int4BoolExp
  interestRate: CreditCards_NumericBoolExp
  interestType: CreditCards_VarcharBoolExp
}

input CreditCards_CreditCardsInterestChargesFilterInput {
  limit: Int
  offset: Int
  order_by: [CreditCards_CreditCardsInterestChargesOrderByExp!]
  where: CreditCards_CreditCardsInterestChargesBoolExp
}

input CreditCards_CreditCardsInterestChargesOrderByExp {
  amount: OrderBy
  balanceSubjectToInterest: OrderBy
  creditCardsCardAccount: CreditCards_CreditCardsCardAccountsOrderByExp
  creditCardsCardAccountId: OrderBy
  creditCardsChargeId: OrderBy
  creditCardsStatement: CreditCards_CreditCardsStatementsOrderByExp
  creditCardsStatementId: OrderBy
  dateAssessed: OrderBy
  daysInPeriod: OrderBy
  interestRate: OrderBy
  interestType: OrderBy
}

"""Stores payment methods for card account payments"""
type CreditCards_CreditCardsPaymentMethods {
  """Masked account number"""
  accountNumber: CreditCards_Varchar

  """Checking or Savings if bank account"""
  accountType: CreditCards_Varchar

  """Name of the bank if applicable"""
  bankName: CreditCards_Varchar
  creditCardsAutopaySettings(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsAutopaySettingsOrderByExp!], where: CreditCards_CreditCardsAutopaySettingsBoolExp): [CreditCards_CreditCardsAutopaySettings!]
  creditCardsAutopaySettingsAggregate(filter_input: CreditCards_CreditCardsAutopaySettingsFilterInput): CreditCards_CreditCardsAutopaySettingsAggExp!
  creditCardsCardAccount: CreditCards_CreditCardsCardAccounts

  """Reference to card_accounts"""
  creditCardsCardAccountId: CreditCards_Int4!

  """Auto-incrementing identifier for each payment method"""
  creditCardsPaymentMethodId: CreditCards_Int4!

  """Expiration date if debit card"""
  expirationDate: CreditCards_Date

  """Whether this is the default payment method"""
  isDefault: CreditCards_Bool!

  """User-assigned nickname for payment method"""
  nickname: CreditCards_Varchar

  """Type of payment method (Bank Account, Debit Card, Check)"""
  paymentType: CreditCards_Varchar!

  """Routing number if bank account"""
  routingNumber: CreditCards_Varchar

  """Status of payment method (Active, Inactive, Removed)"""
  status: CreditCards_Varchar!

  """Status of verification (Verified, Pending, Failed)"""
  verificationStatus: CreditCards_Varchar!
}

type CreditCards_CreditCardsPaymentMethodsAggExp {
  _count: Int!
  accountNumber: CreditCards_VarcharAggExp!
  accountType: CreditCards_VarcharAggExp!
  bankName: CreditCards_VarcharAggExp!
  creditCardsCardAccountId: CreditCards_Int4AggExp!
  creditCardsPaymentMethodId: CreditCards_Int4AggExp!
  expirationDate: CreditCards_DateAggExp!
  isDefault: CreditCards_BoolAggExp!
  nickname: CreditCards_VarcharAggExp!
  paymentType: CreditCards_VarcharAggExp!
  routingNumber: CreditCards_VarcharAggExp!
  status: CreditCards_VarcharAggExp!
  verificationStatus: CreditCards_VarcharAggExp!
}

input CreditCards_CreditCardsPaymentMethodsBoolExp {
  _and: [CreditCards_CreditCardsPaymentMethodsBoolExp!]
  _not: CreditCards_CreditCardsPaymentMethodsBoolExp
  _or: [CreditCards_CreditCardsPaymentMethodsBoolExp!]
  accountNumber: CreditCards_VarcharBoolExp
  accountType: CreditCards_VarcharBoolExp
  bankName: CreditCards_VarcharBoolExp
  creditCardsAutopaySettings: CreditCards_CreditCardsAutopaySettingsBoolExp
  creditCardsCardAccount: CreditCards_CreditCardsCardAccountsBoolExp
  creditCardsCardAccountId: CreditCards_Int4BoolExp
  creditCardsPaymentMethodId: CreditCards_Int4BoolExp
  expirationDate: CreditCards_DateBoolExp
  isDefault: CreditCards_BoolBoolExp
  nickname: CreditCards_VarcharBoolExp
  paymentType: CreditCards_VarcharBoolExp
  routingNumber: CreditCards_VarcharBoolExp
  status: CreditCards_VarcharBoolExp
  verificationStatus: CreditCards_VarcharBoolExp
}

input CreditCards_CreditCardsPaymentMethodsFilterInput {
  limit: Int
  offset: Int
  order_by: [CreditCards_CreditCardsPaymentMethodsOrderByExp!]
  where: CreditCards_CreditCardsPaymentMethodsBoolExp
}

input CreditCards_CreditCardsPaymentMethodsOrderByExp {
  accountNumber: OrderBy
  accountType: OrderBy
  bankName: OrderBy
  creditCardsCardAccount: CreditCards_CreditCardsCardAccountsOrderByExp
  creditCardsCardAccountId: OrderBy
  creditCardsPaymentMethodId: OrderBy
  expirationDate: OrderBy
  isDefault: OrderBy
  nickname: OrderBy
  paymentType: OrderBy
  routingNumber: OrderBy
  status: OrderBy
  verificationStatus: OrderBy
}

"""Tracks promotional offers made to cardholders"""
type CreditCards_CreditCardsPromotionalOffers {
  """Amount of credit offered if applicable"""
  amountOffered: CreditCards_Numeric
  creditCardsBalanceTransfers(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsBalanceTransfersOrderByExp!], where: CreditCards_CreditCardsBalanceTransfersBoolExp): [CreditCards_CreditCardsBalanceTransfers!]
  creditCardsBalanceTransfersAggregate(filter_input: CreditCards_CreditCardsBalanceTransfersFilterInput): CreditCards_CreditCardsBalanceTransfersAggExp!
  creditCardsCardAccount: CreditCards_CreditCardsCardAccounts

  """Reference to card_accounts"""
  creditCardsCardAccountId: CreditCards_Int4!

  """Auto-incrementing identifier for each offer"""
  creditCardsOfferId: CreditCards_Int4!

  """Description of offer"""
  description: CreditCards_Varchar!

  """Date offer expires"""
  expirationDate: CreditCards_Date!

  """Fee percentage associated with offer"""
  feePercentage: CreditCards_Numeric

  """Interest rate associated with offer"""
  interestRate: CreditCards_Numeric

  """Date offer was made"""
  offerDate: CreditCards_Date!

  """
  Type of offer (Balance Transfer, Cash Advance, Credit Limit Increase, etc.)
  """
  offerType: CreditCards_Varchar!

  """Promotional code associated with offer"""
  promoCode: CreditCards_Varchar

  """Date customer responded to offer"""
  responseDate: CreditCards_Date

  """Status of offer (Active, Accepted, Declined, Expired)"""
  status: CreditCards_Varchar!

  """Terms and conditions of offer"""
  termsAndConditions: CreditCards_Text
}

type CreditCards_CreditCardsPromotionalOffersAggExp {
  _count: Int!
  amountOffered: CreditCards_NumericAggExp!
  creditCardsCardAccountId: CreditCards_Int4AggExp!
  creditCardsOfferId: CreditCards_Int4AggExp!
  description: CreditCards_VarcharAggExp!
  expirationDate: CreditCards_DateAggExp!
  feePercentage: CreditCards_NumericAggExp!
  interestRate: CreditCards_NumericAggExp!
  offerDate: CreditCards_DateAggExp!
  offerType: CreditCards_VarcharAggExp!
  promoCode: CreditCards_VarcharAggExp!
  responseDate: CreditCards_DateAggExp!
  status: CreditCards_VarcharAggExp!
  termsAndConditions: CreditCards_TextAggExp!
}

input CreditCards_CreditCardsPromotionalOffersBoolExp {
  _and: [CreditCards_CreditCardsPromotionalOffersBoolExp!]
  _not: CreditCards_CreditCardsPromotionalOffersBoolExp
  _or: [CreditCards_CreditCardsPromotionalOffersBoolExp!]
  amountOffered: CreditCards_NumericBoolExp
  creditCardsBalanceTransfers: CreditCards_CreditCardsBalanceTransfersBoolExp
  creditCardsCardAccount: CreditCards_CreditCardsCardAccountsBoolExp
  creditCardsCardAccountId: CreditCards_Int4BoolExp
  creditCardsOfferId: CreditCards_Int4BoolExp
  description: CreditCards_VarcharBoolExp
  expirationDate: CreditCards_DateBoolExp
  feePercentage: CreditCards_NumericBoolExp
  interestRate: CreditCards_NumericBoolExp
  offerDate: CreditCards_DateBoolExp
  offerType: CreditCards_VarcharBoolExp
  promoCode: CreditCards_VarcharBoolExp
  responseDate: CreditCards_DateBoolExp
  status: CreditCards_VarcharBoolExp
  termsAndConditions: CreditCards_TextBoolExp
}

input CreditCards_CreditCardsPromotionalOffersFilterInput {
  limit: Int
  offset: Int
  order_by: [CreditCards_CreditCardsPromotionalOffersOrderByExp!]
  where: CreditCards_CreditCardsPromotionalOffersBoolExp
}

input CreditCards_CreditCardsPromotionalOffersOrderByExp {
  amountOffered: OrderBy
  creditCardsCardAccount: CreditCards_CreditCardsCardAccountsOrderByExp
  creditCardsCardAccountId: OrderBy
  creditCardsOfferId: OrderBy
  description: OrderBy
  expirationDate: OrderBy
  feePercentage: OrderBy
  interestRate: OrderBy
  offerDate: OrderBy
  offerType: OrderBy
  promoCode: OrderBy
  responseDate: OrderBy
  status: OrderBy
  termsAndConditions: OrderBy
}

"""Tracks Truth in Lending Act disclosures required for credit cards"""
type CreditCards_CreditCardsRegZCreditCardDisclosures {
  """Annual fee disclosed"""
  annualFee: CreditCards_Numeric

  """APR disclosed"""
  annualPercentageRate: CreditCards_Numeric

  """Method used to calculate balance"""
  balanceComputationMethod: CreditCards_Varchar
  creditCardsApplication: CreditCards_CreditCardsApplications

  """Reference to applications if pre-account opening"""
  creditCardsApplicationId: CreditCards_Int4
  creditCardsCardAccount: CreditCards_CreditCardsCardAccounts

  """Reference to card_accounts if post-account opening"""
  creditCardsCardAccountId: CreditCards_Int4

  """Auto-incrementing identifier for each disclosure"""
  creditCardsDisclosureId: CreditCards_Int4!

  """How disclosure was delivered (Mail, Electronic)"""
  deliveryMethod: CreditCards_Varchar!

  """Date disclosure was generated"""
  disclosureDate: CreditCards_Timestamptz!

  """
  Type of Reg Z disclosure (Solicitation, Application, Account-Opening, Periodic Statement)
  """
  disclosureType: CreditCards_Varchar!

  """Path to stored disclosure document"""
  documentPath: CreditCards_Varchar

  """Grace period disclosure text"""
  gracePeriodDisclosure: CreditCards_Text

  """Late payment fee disclosed"""
  latePaymentFee: CreditCards_Numeric

  """Over-limit fee disclosed"""
  overLimitFee: CreditCards_Numeric

  """Fee for balance transfers"""
  transactionFeeBalanceTransfers: CreditCards_Numeric

  """Fee for cash advances"""
  transactionFeeCashAdvance: CreditCards_Numeric

  """Fee for purchases if any"""
  transactionFeePurchases: CreditCards_Numeric

  """Whether rate is variable"""
  variableRateIndicator: CreditCards_Bool
}

type CreditCards_CreditCardsRegZCreditCardDisclosuresAggExp {
  _count: Int!
  annualFee: CreditCards_NumericAggExp!
  annualPercentageRate: CreditCards_NumericAggExp!
  balanceComputationMethod: CreditCards_VarcharAggExp!
  creditCardsApplicationId: CreditCards_Int4AggExp!
  creditCardsCardAccountId: CreditCards_Int4AggExp!
  creditCardsDisclosureId: CreditCards_Int4AggExp!
  deliveryMethod: CreditCards_VarcharAggExp!
  disclosureDate: CreditCards_TimestamptzAggExp!
  disclosureType: CreditCards_VarcharAggExp!
  documentPath: CreditCards_VarcharAggExp!
  gracePeriodDisclosure: CreditCards_TextAggExp!
  latePaymentFee: CreditCards_NumericAggExp!
  overLimitFee: CreditCards_NumericAggExp!
  transactionFeeBalanceTransfers: CreditCards_NumericAggExp!
  transactionFeeCashAdvance: CreditCards_NumericAggExp!
  transactionFeePurchases: CreditCards_NumericAggExp!
  variableRateIndicator: CreditCards_BoolAggExp!
}

input CreditCards_CreditCardsRegZCreditCardDisclosuresBoolExp {
  _and: [CreditCards_CreditCardsRegZCreditCardDisclosuresBoolExp!]
  _not: CreditCards_CreditCardsRegZCreditCardDisclosuresBoolExp
  _or: [CreditCards_CreditCardsRegZCreditCardDisclosuresBoolExp!]
  annualFee: CreditCards_NumericBoolExp
  annualPercentageRate: CreditCards_NumericBoolExp
  balanceComputationMethod: CreditCards_VarcharBoolExp
  creditCardsApplication: CreditCards_CreditCardsApplicationsBoolExp
  creditCardsApplicationId: CreditCards_Int4BoolExp
  creditCardsCardAccount: CreditCards_CreditCardsCardAccountsBoolExp
  creditCardsCardAccountId: CreditCards_Int4BoolExp
  creditCardsDisclosureId: CreditCards_Int4BoolExp
  deliveryMethod: CreditCards_VarcharBoolExp
  disclosureDate: CreditCards_TimestamptzBoolExp
  disclosureType: CreditCards_VarcharBoolExp
  documentPath: CreditCards_VarcharBoolExp
  gracePeriodDisclosure: CreditCards_TextBoolExp
  latePaymentFee: CreditCards_NumericBoolExp
  overLimitFee: CreditCards_NumericBoolExp
  transactionFeeBalanceTransfers: CreditCards_NumericBoolExp
  transactionFeeCashAdvance: CreditCards_NumericBoolExp
  transactionFeePurchases: CreditCards_NumericBoolExp
  variableRateIndicator: CreditCards_BoolBoolExp
}

input CreditCards_CreditCardsRegZCreditCardDisclosuresFilterInput {
  limit: Int
  offset: Int
  order_by: [CreditCards_CreditCardsRegZCreditCardDisclosuresOrderByExp!]
  where: CreditCards_CreditCardsRegZCreditCardDisclosuresBoolExp
}

input CreditCards_CreditCardsRegZCreditCardDisclosuresOrderByExp {
  annualFee: OrderBy
  annualPercentageRate: OrderBy
  balanceComputationMethod: OrderBy
  creditCardsApplication: CreditCards_CreditCardsApplicationsOrderByExp
  creditCardsApplicationId: OrderBy
  creditCardsCardAccount: CreditCards_CreditCardsCardAccountsOrderByExp
  creditCardsCardAccountId: OrderBy
  creditCardsDisclosureId: OrderBy
  deliveryMethod: OrderBy
  disclosureDate: OrderBy
  disclosureType: OrderBy
  documentPath: OrderBy
  gracePeriodDisclosure: OrderBy
  latePaymentFee: OrderBy
  overLimitFee: OrderBy
  transactionFeeBalanceTransfers: OrderBy
  transactionFeeCashAdvance: OrderBy
  transactionFeePurchases: OrderBy
  variableRateIndicator: OrderBy
}

"""Stores details of reward point redemptions"""
type CreditCards_CreditCardsRewardRedemptions {
  """Cash value of redemption"""
  cashValue: CreditCards_Numeric!

  """Confirmation code for redemption"""
  confirmationCode: CreditCards_Varchar
  creditCardsCardAccount: CreditCards_CreditCardsCardAccounts

  """Reference to card_accounts"""
  creditCardsCardAccountId: CreditCards_Int4!

  """Auto-incrementing identifier for each redemption"""
  creditCardsRedemptionId: CreditCards_Int4!

  """Description of redemption"""
  description: CreditCards_Varchar!

  """Number of points redeemed"""
  pointsRedeemed: CreditCards_Int4!

  """Email for digital items if applicable"""
  recipientEmail: CreditCards_Varchar

  """Date and time of redemption"""
  redemptionDate: CreditCards_Timestamptz!

  """
  Type of redemption (Cashback, Travel, Gift Card, Merchandise, Statement Credit)
  """
  redemptionType: CreditCards_Varchar!

  """Reference to addresses if physical item"""
  shippingAddressId: CreditCards_Int4

  """Status of redemption (Pending, Completed, Canceled)"""
  status: CreditCards_Varchar!
}

type CreditCards_CreditCardsRewardRedemptionsAggExp {
  _count: Int!
  cashValue: CreditCards_NumericAggExp!
  confirmationCode: CreditCards_VarcharAggExp!
  creditCardsCardAccountId: CreditCards_Int4AggExp!
  creditCardsRedemptionId: CreditCards_Int4AggExp!
  description: CreditCards_VarcharAggExp!
  pointsRedeemed: CreditCards_Int4AggExp!
  recipientEmail: CreditCards_VarcharAggExp!
  redemptionDate: CreditCards_TimestamptzAggExp!
  redemptionType: CreditCards_VarcharAggExp!
  shippingAddressId: CreditCards_Int4AggExp!
  status: CreditCards_VarcharAggExp!
}

input CreditCards_CreditCardsRewardRedemptionsBoolExp {
  _and: [CreditCards_CreditCardsRewardRedemptionsBoolExp!]
  _not: CreditCards_CreditCardsRewardRedemptionsBoolExp
  _or: [CreditCards_CreditCardsRewardRedemptionsBoolExp!]
  cashValue: CreditCards_NumericBoolExp
  confirmationCode: CreditCards_VarcharBoolExp
  creditCardsCardAccount: CreditCards_CreditCardsCardAccountsBoolExp
  creditCardsCardAccountId: CreditCards_Int4BoolExp
  creditCardsRedemptionId: CreditCards_Int4BoolExp
  description: CreditCards_VarcharBoolExp
  pointsRedeemed: CreditCards_Int4BoolExp
  recipientEmail: CreditCards_VarcharBoolExp
  redemptionDate: CreditCards_TimestamptzBoolExp
  redemptionType: CreditCards_VarcharBoolExp
  shippingAddressId: CreditCards_Int4BoolExp
  status: CreditCards_VarcharBoolExp
}

input CreditCards_CreditCardsRewardRedemptionsFilterInput {
  limit: Int
  offset: Int
  order_by: [CreditCards_CreditCardsRewardRedemptionsOrderByExp!]
  where: CreditCards_CreditCardsRewardRedemptionsBoolExp
}

input CreditCards_CreditCardsRewardRedemptionsOrderByExp {
  cashValue: OrderBy
  confirmationCode: OrderBy
  creditCardsCardAccount: CreditCards_CreditCardsCardAccountsOrderByExp
  creditCardsCardAccountId: OrderBy
  creditCardsRedemptionId: OrderBy
  description: OrderBy
  pointsRedeemed: OrderBy
  recipientEmail: OrderBy
  redemptionDate: OrderBy
  redemptionType: OrderBy
  shippingAddressId: OrderBy
  status: OrderBy
}

"""Tracks reward earning and redemption activity"""
type CreditCards_CreditCardsRewards {
  """Amount of reward earned or redeemed"""
  amount: CreditCards_Numeric!

  """Category associated with reward if applicable"""
  category: CreditCards_Varchar
  creditCardsCardAccount: CreditCards_CreditCardsCardAccounts

  """Reference to card_accounts"""
  creditCardsCardAccountId: CreditCards_Int4!

  """Auto-incrementing identifier for each reward record"""
  creditCardsRewardId: CreditCards_Int4!
  creditCardsTransaction: CreditCards_CreditCardsTransactions

  """Reference to transactions if earned from transaction"""
  creditCardsTransactionId: CreditCards_Int4

  """Date reward was earned or redeemed"""
  dateEarned: CreditCards_Date!

  """Description of reward activity"""
  description: CreditCards_Varchar!

  """Earned, Bonus, Redeemed, Expired, Adjusted"""
  eventType: CreditCards_Varchar!

  """Date reward will expire if applicable"""
  expirationDate: CreditCards_Date

  """Type of reward (Points, Cashback, Miles)"""
  rewardType: CreditCards_Varchar!
}

type CreditCards_CreditCardsRewardsAggExp {
  _count: Int!
  amount: CreditCards_NumericAggExp!
  category: CreditCards_VarcharAggExp!
  creditCardsCardAccountId: CreditCards_Int4AggExp!
  creditCardsRewardId: CreditCards_Int4AggExp!
  creditCardsTransactionId: CreditCards_Int4AggExp!
  dateEarned: CreditCards_DateAggExp!
  description: CreditCards_VarcharAggExp!
  eventType: CreditCards_VarcharAggExp!
  expirationDate: CreditCards_DateAggExp!
  rewardType: CreditCards_VarcharAggExp!
}

input CreditCards_CreditCardsRewardsBoolExp {
  _and: [CreditCards_CreditCardsRewardsBoolExp!]
  _not: CreditCards_CreditCardsRewardsBoolExp
  _or: [CreditCards_CreditCardsRewardsBoolExp!]
  amount: CreditCards_NumericBoolExp
  category: CreditCards_VarcharBoolExp
  creditCardsCardAccount: CreditCards_CreditCardsCardAccountsBoolExp
  creditCardsCardAccountId: CreditCards_Int4BoolExp
  creditCardsRewardId: CreditCards_Int4BoolExp
  creditCardsTransaction: CreditCards_CreditCardsTransactionsBoolExp
  creditCardsTransactionId: CreditCards_Int4BoolExp
  dateEarned: CreditCards_DateBoolExp
  description: CreditCards_VarcharBoolExp
  eventType: CreditCards_VarcharBoolExp
  expirationDate: CreditCards_DateBoolExp
  rewardType: CreditCards_VarcharBoolExp
}

input CreditCards_CreditCardsRewardsFilterInput {
  limit: Int
  offset: Int
  order_by: [CreditCards_CreditCardsRewardsOrderByExp!]
  where: CreditCards_CreditCardsRewardsBoolExp
}

input CreditCards_CreditCardsRewardsOrderByExp {
  amount: OrderBy
  category: OrderBy
  creditCardsCardAccount: CreditCards_CreditCardsCardAccountsOrderByExp
  creditCardsCardAccountId: OrderBy
  creditCardsRewardId: OrderBy
  creditCardsTransaction: CreditCards_CreditCardsTransactionsOrderByExp
  creditCardsTransactionId: OrderBy
  dateEarned: OrderBy
  description: OrderBy
  eventType: OrderBy
  expirationDate: OrderBy
  rewardType: OrderBy
}

"""Tracks security blocks placed on cards"""
type CreditCards_CreditCardsSecurityBlocks {
  blockRemovedBy: Enterprise_EnterpriseAssociates

  """Type of block (Temporary, Permanent, Geographic)"""
  blockType: CreditCards_Varchar!

  """Auto-incrementing identifier for each security block"""
  creditCardsBlockId: CreditCards_Int4!
  creditCardsCard: CreditCards_CreditCardsCards

  """Reference to specific card"""
  creditCardsCardId: CreditCards_Int4!

  """When block ends if temporary"""
  endDate: CreditCards_Timestamptz

  """Geographic area blocked if applicable"""
  geographicRestriction: CreditCards_Varchar

  """Reason for security block"""
  reason: CreditCards_Varchar!

  """User who removed the block"""
  removedById: CreditCards_Int4

  """When block was removed"""
  removedDate: CreditCards_Timestamptz

  """Who requested the block (Customer, Bank, Fraud System)"""
  requestedBy: CreditCards_Varchar!

  """When block began"""
  startDate: CreditCards_Timestamptz!

  """Status of block (Active, Removed)"""
  status: CreditCards_Varchar!

  """Transaction types blocked if specific"""
  transactionTypeRestricted: CreditCards_Varchar
}

type CreditCards_CreditCardsSecurityBlocksAggExp {
  _count: Int!
  blockType: CreditCards_VarcharAggExp!
  creditCardsBlockId: CreditCards_Int4AggExp!
  creditCardsCardId: CreditCards_Int4AggExp!
  endDate: CreditCards_TimestamptzAggExp!
  geographicRestriction: CreditCards_VarcharAggExp!
  reason: CreditCards_VarcharAggExp!
  removedById: CreditCards_Int4AggExp!
  removedDate: CreditCards_TimestamptzAggExp!
  requestedBy: CreditCards_VarcharAggExp!
  startDate: CreditCards_TimestamptzAggExp!
  status: CreditCards_VarcharAggExp!
  transactionTypeRestricted: CreditCards_VarcharAggExp!
}

input CreditCards_CreditCardsSecurityBlocksBoolExp {
  _and: [CreditCards_CreditCardsSecurityBlocksBoolExp!]
  _not: CreditCards_CreditCardsSecurityBlocksBoolExp
  _or: [CreditCards_CreditCardsSecurityBlocksBoolExp!]
  blockType: CreditCards_VarcharBoolExp
  creditCardsBlockId: CreditCards_Int4BoolExp
  creditCardsCard: CreditCards_CreditCardsCardsBoolExp
  creditCardsCardId: CreditCards_Int4BoolExp
  endDate: CreditCards_TimestamptzBoolExp
  geographicRestriction: CreditCards_VarcharBoolExp
  reason: CreditCards_VarcharBoolExp
  removedById: CreditCards_Int4BoolExp
  removedDate: CreditCards_TimestamptzBoolExp
  requestedBy: CreditCards_VarcharBoolExp
  startDate: CreditCards_TimestamptzBoolExp
  status: CreditCards_VarcharBoolExp
  transactionTypeRestricted: CreditCards_VarcharBoolExp
}

input CreditCards_CreditCardsSecurityBlocksFilterInput {
  limit: Int
  offset: Int
  order_by: [CreditCards_CreditCardsSecurityBlocksOrderByExp!]
  where: CreditCards_CreditCardsSecurityBlocksBoolExp
}

input CreditCards_CreditCardsSecurityBlocksOrderByExp {
  blockType: OrderBy
  creditCardsBlockId: OrderBy
  creditCardsCard: CreditCards_CreditCardsCardsOrderByExp
  creditCardsCardId: OrderBy
  endDate: OrderBy
  geographicRestriction: OrderBy
  reason: OrderBy
  removedById: OrderBy
  removedDate: OrderBy
  requestedBy: OrderBy
  startDate: OrderBy
  status: OrderBy
  transactionTypeRestricted: OrderBy
}

"""Stores monthly billing statements for card accounts"""
type CreditCards_CreditCardsStatements {
  """Balance transfers in period"""
  balanceTransfers: CreditCards_Numeric!

  """Cash advances in period"""
  cashAdvances: CreditCards_Numeric!
  creditCardsCardAccount: CreditCards_CreditCardsCardAccounts

  """Reference to card_accounts"""
  creditCardsCardAccountId: CreditCards_Int4!
  creditCardsFees(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsFeesOrderByExp!], where: CreditCards_CreditCardsFeesBoolExp): [CreditCards_CreditCardsFees!]
  creditCardsFeesAggregate(filter_input: CreditCards_CreditCardsFeesFilterInput): CreditCards_CreditCardsFeesAggExp!
  creditCardsInterestCharges(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsInterestChargesOrderByExp!], where: CreditCards_CreditCardsInterestChargesBoolExp): [CreditCards_CreditCardsInterestCharges!]
  creditCardsInterestChargesAggregate(filter_input: CreditCards_CreditCardsInterestChargesFilterInput): CreditCards_CreditCardsInterestChargesAggExp!

  """Auto-incrementing identifier for each statement"""
  creditCardsStatementId: CreditCards_Int4!

  """Credits/refunds in period"""
  credits: CreditCards_Numeric!

  """Number of days in billing cycle"""
  daysInBillingCycle: CreditCards_Int4!

  """Path to stored statement document"""
  documentPath: CreditCards_Varchar

  """Payment due date"""
  dueDate: CreditCards_Date!

  """Ending statement balance"""
  endingBalance: CreditCards_Numeric!

  """Fees charged in period"""
  fees: CreditCards_Numeric!

  """Interest charged in period"""
  interest: CreditCards_Numeric!

  """Minimum payment due"""
  minimumPayment: CreditCards_Numeric!

  """New purchases and charges"""
  newCharges: CreditCards_Numeric!

  """Whether payment was received by due date"""
  paymentReceived: CreditCards_Bool!

  """Amount of payment received"""
  paymentReceivedAmount: CreditCards_Numeric

  """Date payment was received"""
  paymentReceivedDate: CreditCards_Date

  """Payments received in period"""
  payments: CreditCards_Numeric!

  """Balance carried over from previous statement"""
  previousBalance: CreditCards_Numeric!

  """Date statement was generated"""
  statementDate: CreditCards_Date!

  """End date for statement period"""
  statementPeriodEnd: CreditCards_Date!

  """Start date for statement period"""
  statementPeriodStart: CreditCards_Date!
}

type CreditCards_CreditCardsStatementsAggExp {
  _count: Int!
  balanceTransfers: CreditCards_NumericAggExp!
  cashAdvances: CreditCards_NumericAggExp!
  creditCardsCardAccountId: CreditCards_Int4AggExp!
  creditCardsStatementId: CreditCards_Int4AggExp!
  credits: CreditCards_NumericAggExp!
  daysInBillingCycle: CreditCards_Int4AggExp!
  documentPath: CreditCards_VarcharAggExp!
  dueDate: CreditCards_DateAggExp!
  endingBalance: CreditCards_NumericAggExp!
  fees: CreditCards_NumericAggExp!
  interest: CreditCards_NumericAggExp!
  minimumPayment: CreditCards_NumericAggExp!
  newCharges: CreditCards_NumericAggExp!
  paymentReceived: CreditCards_BoolAggExp!
  paymentReceivedAmount: CreditCards_NumericAggExp!
  paymentReceivedDate: CreditCards_DateAggExp!
  payments: CreditCards_NumericAggExp!
  previousBalance: CreditCards_NumericAggExp!
  statementDate: CreditCards_DateAggExp!
  statementPeriodEnd: CreditCards_DateAggExp!
  statementPeriodStart: CreditCards_DateAggExp!
}

input CreditCards_CreditCardsStatementsBoolExp {
  _and: [CreditCards_CreditCardsStatementsBoolExp!]
  _not: CreditCards_CreditCardsStatementsBoolExp
  _or: [CreditCards_CreditCardsStatementsBoolExp!]
  balanceTransfers: CreditCards_NumericBoolExp
  cashAdvances: CreditCards_NumericBoolExp
  creditCardsCardAccount: CreditCards_CreditCardsCardAccountsBoolExp
  creditCardsCardAccountId: CreditCards_Int4BoolExp
  creditCardsFees: CreditCards_CreditCardsFeesBoolExp
  creditCardsInterestCharges: CreditCards_CreditCardsInterestChargesBoolExp
  creditCardsStatementId: CreditCards_Int4BoolExp
  credits: CreditCards_NumericBoolExp
  daysInBillingCycle: CreditCards_Int4BoolExp
  documentPath: CreditCards_VarcharBoolExp
  dueDate: CreditCards_DateBoolExp
  endingBalance: CreditCards_NumericBoolExp
  fees: CreditCards_NumericBoolExp
  interest: CreditCards_NumericBoolExp
  minimumPayment: CreditCards_NumericBoolExp
  newCharges: CreditCards_NumericBoolExp
  paymentReceived: CreditCards_BoolBoolExp
  paymentReceivedAmount: CreditCards_NumericBoolExp
  paymentReceivedDate: CreditCards_DateBoolExp
  payments: CreditCards_NumericBoolExp
  previousBalance: CreditCards_NumericBoolExp
  statementDate: CreditCards_DateBoolExp
  statementPeriodEnd: CreditCards_DateBoolExp
  statementPeriodStart: CreditCards_DateBoolExp
}

input CreditCards_CreditCardsStatementsFilterInput {
  limit: Int
  offset: Int
  order_by: [CreditCards_CreditCardsStatementsOrderByExp!]
  where: CreditCards_CreditCardsStatementsBoolExp
}

input CreditCards_CreditCardsStatementsOrderByExp {
  balanceTransfers: OrderBy
  cashAdvances: OrderBy
  creditCardsCardAccount: CreditCards_CreditCardsCardAccountsOrderByExp
  creditCardsCardAccountId: OrderBy
  creditCardsStatementId: OrderBy
  credits: OrderBy
  daysInBillingCycle: OrderBy
  documentPath: OrderBy
  dueDate: OrderBy
  endingBalance: OrderBy
  fees: OrderBy
  interest: OrderBy
  minimumPayment: OrderBy
  newCharges: OrderBy
  paymentReceived: OrderBy
  paymentReceivedAmount: OrderBy
  paymentReceivedDate: OrderBy
  payments: OrderBy
  previousBalance: OrderBy
  statementDate: OrderBy
  statementPeriodEnd: OrderBy
  statementPeriodStart: OrderBy
}

"""Stores all transaction activity on card accounts"""
type CreditCards_CreditCardsTransactions {
  """Transaction amount"""
  amount: CreditCards_Numeric!

  """Authorization code"""
  authCode: CreditCards_Varchar

  """Spending category (e.g., Dining, Travel, Merchandise)"""
  category: CreditCards_Varchar
  creditCardsBalanceTransfers(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsBalanceTransfersOrderByExp!], where: CreditCards_CreditCardsBalanceTransfersBoolExp): [CreditCards_CreditCardsBalanceTransfers!]
  creditCardsBalanceTransfersAggregate(filter_input: CreditCards_CreditCardsBalanceTransfersFilterInput): CreditCards_CreditCardsBalanceTransfersAggExp!
  creditCardsCard: CreditCards_CreditCardsCards
  creditCardsCardAccount: CreditCards_CreditCardsCardAccounts

  """Reference to card_accounts"""
  creditCardsCardAccountId: CreditCards_Int4!

  """Reference to specific card used"""
  creditCardsCardId: CreditCards_Int4!
  creditCardsDisputedTransactions(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsDisputedTransactionsOrderByExp!], where: CreditCards_CreditCardsDisputedTransactionsBoolExp): [CreditCards_CreditCardsDisputedTransactions!]
  creditCardsDisputedTransactionsAggregate(filter_input: CreditCards_CreditCardsDisputedTransactionsFilterInput): CreditCards_CreditCardsDisputedTransactionsAggExp!
  creditCardsFees(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsFeesOrderByExp!], where: CreditCards_CreditCardsFeesBoolExp): [CreditCards_CreditCardsFees!]
  creditCardsFeesAggregate(filter_input: CreditCards_CreditCardsFeesFilterInput): CreditCards_CreditCardsFeesAggExp!
  creditCardsFraudTransactions(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsFraudTransactionsOrderByExp!], where: CreditCards_CreditCardsFraudTransactionsBoolExp): [CreditCards_CreditCardsFraudTransactions!]
  creditCardsFraudTransactionsAggregate(filter_input: CreditCards_CreditCardsFraudTransactionsFilterInput): CreditCards_CreditCardsFraudTransactionsAggExp!
  creditCardsRewards(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsRewardsOrderByExp!], where: CreditCards_CreditCardsRewardsBoolExp): [CreditCards_CreditCardsRewards!]
  creditCardsRewardsAggregate(filter_input: CreditCards_CreditCardsRewardsFilterInput): CreditCards_CreditCardsRewardsAggExp!

  """Unique identifier for transaction"""
  creditCardsTransactionId: CreditCards_Int4!

  """Reason for decline if applicable"""
  declineReason: CreditCards_Varchar

  """Merchant name or transaction description"""
  description: CreditCards_Varchar!

  """Exchange rate used if international"""
  exchangeRate: CreditCards_Numeric

  """Whether transaction is included in statement billing"""
  isBillable: CreditCards_Bool!

  """Whether transaction is international"""
  isInternational: CreditCards_Bool!

  """Whether transaction is pending"""
  isPending: CreditCards_Bool!

  """Whether transaction appears to be recurring"""
  isRecurring: CreditCards_Bool

  """Merchant Category Code"""
  mccCode: CreditCards_Varchar

  """Amount in original currency if international"""
  originalAmount: CreditCards_Numeric

  """Original currency if international"""
  originalCurrency: CreditCards_EnterpriseCurrencyCode

  """Date transaction posted to account"""
  postDate: CreditCards_Date!

  """Transaction reference number"""
  referenceNumber: CreditCards_Varchar

  """Rewards points or cashback earned"""
  rewardsEarned: CreditCards_Numeric

  """Approved, Declined, Reversed, Disputed"""
  status: CreditCards_Varchar!

  """Date and time of transaction"""
  transactionDate: CreditCards_Timestamptz!

  """Purchase, Cash Advance, Balance Transfer, Payment, Fee, Adjustment"""
  transactionType: CreditCards_Varchar!
}

type CreditCards_CreditCardsTransactionsAggExp {
  _count: Int!
  amount: CreditCards_NumericAggExp!
  authCode: CreditCards_VarcharAggExp!
  category: CreditCards_VarcharAggExp!
  creditCardsCardAccountId: CreditCards_Int4AggExp!
  creditCardsCardId: CreditCards_Int4AggExp!
  creditCardsTransactionId: CreditCards_Int4AggExp!
  declineReason: CreditCards_VarcharAggExp!
  description: CreditCards_VarcharAggExp!
  exchangeRate: CreditCards_NumericAggExp!
  isBillable: CreditCards_BoolAggExp!
  isInternational: CreditCards_BoolAggExp!
  isPending: CreditCards_BoolAggExp!
  isRecurring: CreditCards_BoolAggExp!
  mccCode: CreditCards_VarcharAggExp!
  originalAmount: CreditCards_NumericAggExp!
  originalCurrency: CreditCards_EnterpriseCurrencyCodeAggExp!
  postDate: CreditCards_DateAggExp!
  referenceNumber: CreditCards_VarcharAggExp!
  rewardsEarned: CreditCards_NumericAggExp!
  status: CreditCards_VarcharAggExp!
  transactionDate: CreditCards_TimestamptzAggExp!
  transactionType: CreditCards_VarcharAggExp!
}

input CreditCards_CreditCardsTransactionsBoolExp {
  _and: [CreditCards_CreditCardsTransactionsBoolExp!]
  _not: CreditCards_CreditCardsTransactionsBoolExp
  _or: [CreditCards_CreditCardsTransactionsBoolExp!]
  amount: CreditCards_NumericBoolExp
  authCode: CreditCards_VarcharBoolExp
  category: CreditCards_VarcharBoolExp
  creditCardsBalanceTransfers: CreditCards_CreditCardsBalanceTransfersBoolExp
  creditCardsCard: CreditCards_CreditCardsCardsBoolExp
  creditCardsCardAccount: CreditCards_CreditCardsCardAccountsBoolExp
  creditCardsCardAccountId: CreditCards_Int4BoolExp
  creditCardsCardId: CreditCards_Int4BoolExp
  creditCardsDisputedTransactions: CreditCards_CreditCardsDisputedTransactionsBoolExp
  creditCardsFees: CreditCards_CreditCardsFeesBoolExp
  creditCardsFraudTransactions: CreditCards_CreditCardsFraudTransactionsBoolExp
  creditCardsRewards: CreditCards_CreditCardsRewardsBoolExp
  creditCardsTransactionId: CreditCards_Int4BoolExp
  declineReason: CreditCards_VarcharBoolExp
  description: CreditCards_VarcharBoolExp
  exchangeRate: CreditCards_NumericBoolExp
  isBillable: CreditCards_BoolBoolExp
  isInternational: CreditCards_BoolBoolExp
  isPending: CreditCards_BoolBoolExp
  isRecurring: CreditCards_BoolBoolExp
  mccCode: CreditCards_VarcharBoolExp
  originalAmount: CreditCards_NumericBoolExp
  originalCurrency: CreditCards_EnterpriseCurrencyCodeBoolExp
  postDate: CreditCards_DateBoolExp
  referenceNumber: CreditCards_VarcharBoolExp
  rewardsEarned: CreditCards_NumericBoolExp
  status: CreditCards_VarcharBoolExp
  transactionDate: CreditCards_TimestamptzBoolExp
  transactionType: CreditCards_VarcharBoolExp
}

input CreditCards_CreditCardsTransactionsFilterInput {
  limit: Int
  offset: Int
  order_by: [CreditCards_CreditCardsTransactionsOrderByExp!]
  where: CreditCards_CreditCardsTransactionsBoolExp
}

input CreditCards_CreditCardsTransactionsOrderByExp {
  amount: OrderBy
  authCode: OrderBy
  category: OrderBy
  creditCardsCard: CreditCards_CreditCardsCardsOrderByExp
  creditCardsCardAccount: CreditCards_CreditCardsCardAccountsOrderByExp
  creditCardsCardAccountId: OrderBy
  creditCardsCardId: OrderBy
  creditCardsTransactionId: OrderBy
  declineReason: OrderBy
  description: OrderBy
  exchangeRate: OrderBy
  isBillable: OrderBy
  isInternational: OrderBy
  isPending: OrderBy
  isRecurring: OrderBy
  mccCode: OrderBy
  originalAmount: OrderBy
  originalCurrency: OrderBy
  postDate: OrderBy
  referenceNumber: OrderBy
  rewardsEarned: OrderBy
  status: OrderBy
  transactionDate: OrderBy
  transactionType: OrderBy
}

scalar CreditCards_Date

type CreditCards_DateAggExp {
  _count: Int!
  _count_distinct: Int!
  max: CreditCards_Date
  min: CreditCards_Date
}

input CreditCards_DateBoolExp {
  _and: [CreditCards_DateBoolExp!]
  _eq: CreditCards_Date
  _gt: CreditCards_Date
  _gte: CreditCards_Date
  _in: [CreditCards_Date!]
  _is_null: Boolean
  _lt: CreditCards_Date
  _lte: CreditCards_Date
  _neq: CreditCards_Date
  _not: CreditCards_DateBoolExp
  _or: [CreditCards_DateBoolExp!]
}

scalar CreditCards_EnterpriseCurrencyCode

type CreditCards_EnterpriseCurrencyCodeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: CreditCards_EnterpriseCurrencyCode
  min: CreditCards_EnterpriseCurrencyCode
}

input CreditCards_EnterpriseCurrencyCodeBoolExp {
  _and: [CreditCards_EnterpriseCurrencyCodeBoolExp!]
  _eq: CreditCards_EnterpriseCurrencyCode
  _gt: CreditCards_EnterpriseCurrencyCode
  _gte: CreditCards_EnterpriseCurrencyCode
  _in: [CreditCards_EnterpriseCurrencyCode!]
  _is_null: Boolean
  _lt: CreditCards_EnterpriseCurrencyCode
  _lte: CreditCards_EnterpriseCurrencyCode
  _neq: CreditCards_EnterpriseCurrencyCode
  _not: CreditCards_EnterpriseCurrencyCodeBoolExp
  _or: [CreditCards_EnterpriseCurrencyCodeBoolExp!]
}

scalar CreditCards_Int4

type CreditCards_Int4AggExp {
  _count: Int!
  _count_distinct: Int!
  avg: CreditCards_Numeric
  bit_and: CreditCards_Int4
  bit_or: CreditCards_Int4
  bit_xor: CreditCards_Int4
  max: CreditCards_Int4
  min: CreditCards_Int4
  stddev: CreditCards_Numeric
  stddev_pop: CreditCards_Numeric
  stddev_samp: CreditCards_Numeric
  sum: CreditCards_Int8
  var_pop: CreditCards_Numeric
  var_samp: CreditCards_Numeric
  variance: CreditCards_Numeric
}

input CreditCards_Int4BoolExp {
  _and: [CreditCards_Int4BoolExp!]
  _eq: CreditCards_Int4
  _gt: CreditCards_Int4
  _gte: CreditCards_Int4
  _in: [CreditCards_Int4!]
  _is_null: Boolean
  _lt: CreditCards_Int4
  _lte: CreditCards_Int4
  _neq: CreditCards_Int4
  _not: CreditCards_Int4BoolExp
  _or: [CreditCards_Int4BoolExp!]
}

scalar CreditCards_Int8

scalar CreditCards_Jsonb

type CreditCards_JsonbAggExp {
  _count: Int!
  _count_distinct: Int!
}

input CreditCards_JsonbBoolExp {
  _and: [CreditCards_JsonbBoolExp!]
  _eq: CreditCards_Jsonb
  _gt: CreditCards_Jsonb
  _gte: CreditCards_Jsonb
  _in: [CreditCards_Jsonb!]
  _is_null: Boolean
  _lt: CreditCards_Jsonb
  _lte: CreditCards_Jsonb
  _neq: CreditCards_Jsonb
  _not: CreditCards_JsonbBoolExp
  _or: [CreditCards_JsonbBoolExp!]
  jsonb_contained: CreditCards_Jsonb
  jsonb_contains: CreditCards_Jsonb
  jsonb_exists: CreditCards_Text
}

scalar CreditCards_Numeric

type CreditCards_NumericAggExp {
  _count: Int!
  _count_distinct: Int!
  avg: CreditCards_Numeric
  max: CreditCards_Numeric
  min: CreditCards_Numeric
  stddev: CreditCards_Numeric
  stddev_pop: CreditCards_Numeric
  stddev_samp: CreditCards_Numeric
  sum: CreditCards_Numeric
  var_pop: CreditCards_Numeric
  var_samp: CreditCards_Numeric
  variance: CreditCards_Numeric
}

input CreditCards_NumericBoolExp {
  _and: [CreditCards_NumericBoolExp!]
  _eq: CreditCards_Numeric
  _gt: CreditCards_Numeric
  _gte: CreditCards_Numeric
  _in: [CreditCards_Numeric!]
  _is_null: Boolean
  _lt: CreditCards_Numeric
  _lte: CreditCards_Numeric
  _neq: CreditCards_Numeric
  _not: CreditCards_NumericBoolExp
  _or: [CreditCards_NumericBoolExp!]
}

scalar CreditCards_Text

type CreditCards_TextAggExp {
  _count: Int!
  _count_distinct: Int!
  max: CreditCards_Text
  min: CreditCards_Text
}

input CreditCards_TextBoolExp {
  _and: [CreditCards_TextBoolExp!]
  _eq: CreditCards_Text
  _gt: CreditCards_Text
  _gte: CreditCards_Text
  _ilike: CreditCards_Text
  _in: [CreditCards_Text!]
  _iregex: CreditCards_Text
  _is_null: Boolean
  _like: CreditCards_Text
  _lt: CreditCards_Text
  _lte: CreditCards_Text
  _neq: CreditCards_Text
  _nilike: CreditCards_Text
  _niregex: CreditCards_Text
  _nlike: CreditCards_Text
  _not: CreditCards_TextBoolExp
  _nregex: CreditCards_Text
  _or: [CreditCards_TextBoolExp!]
  _regex: CreditCards_Text
  starts_with: CreditCards_Text
  ts_match_tt: CreditCards_Text
}

scalar CreditCards_Timestamptz

type CreditCards_TimestamptzAggExp {
  _count: Int!
  _count_distinct: Int!
  max: CreditCards_Timestamptz
  min: CreditCards_Timestamptz
}

input CreditCards_TimestamptzBoolExp {
  _and: [CreditCards_TimestamptzBoolExp!]
  _eq: CreditCards_Timestamptz
  _gt: CreditCards_Timestamptz
  _gte: CreditCards_Timestamptz
  _in: [CreditCards_Timestamptz!]
  _is_null: Boolean
  _lt: CreditCards_Timestamptz
  _lte: CreditCards_Timestamptz
  _neq: CreditCards_Timestamptz
  _not: CreditCards_TimestamptzBoolExp
  _or: [CreditCards_TimestamptzBoolExp!]
}

scalar CreditCards_Varchar

type CreditCards_VarcharAggExp {
  _count: Int!
  _count_distinct: Int!
  max: CreditCards_Text
  min: CreditCards_Text
}

input CreditCards_VarcharBoolExp {
  _and: [CreditCards_VarcharBoolExp!]
  _eq: CreditCards_Varchar
  _gt: CreditCards_Varchar
  _gte: CreditCards_Varchar
  _ilike: CreditCards_Varchar
  _in: [CreditCards_Varchar!]
  _iregex: CreditCards_Varchar
  _is_null: Boolean
  _like: CreditCards_Varchar
  _lt: CreditCards_Varchar
  _lte: CreditCards_Varchar
  _neq: CreditCards_Varchar
  _nilike: CreditCards_Varchar
  _niregex: CreditCards_Varchar
  _nlike: CreditCards_Varchar
  _not: CreditCards_VarcharBoolExp
  _nregex: CreditCards_Varchar
  _or: [CreditCards_VarcharBoolExp!]
  _regex: CreditCards_Varchar
  starts_with: CreditCards_Varchar
  ts_match_tt: CreditCards_Varchar
}

scalar Enterprise_Bool

type Enterprise_BoolAggExp {
  _count: Int!
  _count_distinct: Int!
  bool_and: Enterprise_Bool
  bool_or: Enterprise_Bool
  every: Enterprise_Bool
}

input Enterprise_BoolBoolExp {
  _and: [Enterprise_BoolBoolExp!]
  _eq: Enterprise_Bool
  _gt: Enterprise_Bool
  _gte: Enterprise_Bool
  _in: [Enterprise_Bool!]
  _is_null: Boolean
  _lt: Enterprise_Bool
  _lte: Enterprise_Bool
  _neq: Enterprise_Bool
  _not: Enterprise_BoolBoolExp
  _or: [Enterprise_BoolBoolExp!]
}

scalar Enterprise_Date

type Enterprise_DateAggExp {
  _count: Int!
  _count_distinct: Int!
  max: Enterprise_Date
  min: Enterprise_Date
}

input Enterprise_DateBoolExp {
  _and: [Enterprise_DateBoolExp!]
  _eq: Enterprise_Date
  _gt: Enterprise_Date
  _gte: Enterprise_Date
  _in: [Enterprise_Date!]
  _is_null: Boolean
  _lt: Enterprise_Date
  _lte: Enterprise_Date
  _neq: Enterprise_Date
  _not: Enterprise_DateBoolExp
  _or: [Enterprise_DateBoolExp!]
}

"""
The only table that controls account access rights. Creates the mandatory link
between parties and accounts. Any query checking account access or ownership
must start with this table. No direct relationships exist between parties and
other account tables.
"""
type Enterprise_EnterpriseAccountOwnership {
  enterpriseAccount: Enterprise_EnterpriseAccounts

  """
  References the enterprise account being owned. When ownership ends, access to all linked LOB accounts is terminated.
  """
  enterpriseAccountId: Enterprise_Int4!

  """Auto-incrementing, unique identifier for each account ownership record"""
  enterpriseAccountOwnershipId: Enterprise_Int4!
  enterpriseParty: Enterprise_EnterpriseParties

  """
  References the party who owns the account. Party must exist before ownership can be established.
  """
  enterprisePartyId: Enterprise_Int4!
}

type Enterprise_EnterpriseAccountOwnershipAggExp {
  _count: Int!
  enterpriseAccountId: Enterprise_Int4AggExp!
  enterpriseAccountOwnershipId: Enterprise_Int4AggExp!
  enterprisePartyId: Enterprise_Int4AggExp!
}

input Enterprise_EnterpriseAccountOwnershipBoolExp {
  _and: [Enterprise_EnterpriseAccountOwnershipBoolExp!]
  _not: Enterprise_EnterpriseAccountOwnershipBoolExp
  _or: [Enterprise_EnterpriseAccountOwnershipBoolExp!]
  enterpriseAccount: Enterprise_EnterpriseAccountsBoolExp
  enterpriseAccountId: Enterprise_Int4BoolExp
  enterpriseAccountOwnershipId: Enterprise_Int4BoolExp
  enterpriseParty: Enterprise_EnterprisePartiesBoolExp
  enterprisePartyId: Enterprise_Int4BoolExp
}

input Enterprise_EnterpriseAccountOwnershipFilterInput {
  limit: Int
  offset: Int
  order_by: [Enterprise_EnterpriseAccountOwnershipOrderByExp!]
  where: Enterprise_EnterpriseAccountOwnershipBoolExp
}

input Enterprise_EnterpriseAccountOwnershipOrderByExp {
  enterpriseAccount: Enterprise_EnterpriseAccountsOrderByExp
  enterpriseAccountId: OrderBy
  enterpriseAccountOwnershipId: OrderBy
  enterpriseParty: Enterprise_EnterprisePartiesOrderByExp
  enterprisePartyId: OrderBy
}

"""
Root account record in the account hierarchy. All other account types (consumer,
mortgage, credit) are children of an enterprise account and cannot exist without
it. The single source of truth for account ownership and access control.
"""
type Enterprise_EnterpriseAccounts {
  """
  Customer defined category of account (e.g., personal, business, retirement)
  """
  accountCategory: Enterprise_Varchar

  """Customer defined description of the account"""
  description: Enterprise_Varchar

  """Unique identifier for each enterprise account"""
  enterpriseAccountId: Enterprise_Int4!
  enterpriseAccountOwnerships(limit: Int, offset: Int, order_by: [Enterprise_EnterpriseAccountOwnershipOrderByExp!], where: Enterprise_EnterpriseAccountOwnershipBoolExp): [Enterprise_EnterpriseAccountOwnership!]
  enterpriseAccountOwnershipsAggregate(filter_input: Enterprise_EnterpriseAccountOwnershipFilterInput): Enterprise_EnterpriseAccountOwnershipAggExp!

  """
  When the enterprise account was created, typically coincides with first LOB account.
  """
  openedDate: Enterprise_Timestamptz

  """
  Current status of the account. When set to 'CLOSED', all linked LOB accounts must be closed or in a terminal state.
  """
  status: Enterprise_EnterpriseAccountStatus!

  """
  When the status was last updated. Updates here may trigger required status changes in linked LOB accounts.
  """
  statusUpdateDateTime: Enterprise_Timestamptz!
}

type Enterprise_EnterpriseAccountsAggExp {
  _count: Int!
  accountCategory: Enterprise_VarcharAggExp!
  description: Enterprise_VarcharAggExp!
  enterpriseAccountId: Enterprise_Int4AggExp!
  openedDate: Enterprise_TimestamptzAggExp!
  status: Enterprise_EnterpriseAccountStatusAggExp!
  statusUpdateDateTime: Enterprise_TimestamptzAggExp!
}

input Enterprise_EnterpriseAccountsBoolExp {
  _and: [Enterprise_EnterpriseAccountsBoolExp!]
  _not: Enterprise_EnterpriseAccountsBoolExp
  _or: [Enterprise_EnterpriseAccountsBoolExp!]
  accountCategory: Enterprise_VarcharBoolExp
  description: Enterprise_VarcharBoolExp
  enterpriseAccountId: Enterprise_Int4BoolExp
  enterpriseAccountOwnerships: Enterprise_EnterpriseAccountOwnershipBoolExp
  openedDate: Enterprise_TimestamptzBoolExp
  status: Enterprise_EnterpriseAccountStatusBoolExp
  statusUpdateDateTime: Enterprise_TimestamptzBoolExp
}

input Enterprise_EnterpriseAccountsFilterInput {
  limit: Int
  offset: Int
  order_by: [Enterprise_EnterpriseAccountsOrderByExp!]
  where: Enterprise_EnterpriseAccountsBoolExp
}

input Enterprise_EnterpriseAccountsOrderByExp {
  accountCategory: OrderBy
  description: OrderBy
  enterpriseAccountId: OrderBy
  openedDate: OrderBy
  status: OrderBy
  statusUpdateDateTime: OrderBy
}

scalar Enterprise_EnterpriseAccountStatus

type Enterprise_EnterpriseAccountStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: Enterprise_EnterpriseAccountStatus
  min: Enterprise_EnterpriseAccountStatus
}

input Enterprise_EnterpriseAccountStatusBoolExp {
  _and: [Enterprise_EnterpriseAccountStatusBoolExp!]
  _eq: Enterprise_EnterpriseAccountStatus
  _gt: Enterprise_EnterpriseAccountStatus
  _gte: Enterprise_EnterpriseAccountStatus
  _in: [Enterprise_EnterpriseAccountStatus!]
  _is_null: Boolean
  _lt: Enterprise_EnterpriseAccountStatus
  _lte: Enterprise_EnterpriseAccountStatus
  _neq: Enterprise_EnterpriseAccountStatus
  _not: Enterprise_EnterpriseAccountStatusBoolExp
  _or: [Enterprise_EnterpriseAccountStatusBoolExp!]
}

"""Central repository for address information used across the system"""
type Enterprise_EnterpriseAddresses {
  """Type of address (e.g., home, work, mailing)"""
  addressType: Enterprise_EnterpriseAddressType

  """Name of building if applicable"""
  buildingName: Enterprise_Varchar

  """Building or house number"""
  buildingNumber: Enterprise_Varchar

  """Person to whose attention mail should be sent"""
  careOf: Enterprise_Varchar

  """Two-letter country code"""
  country: Enterprise_Varchar

  """State, province, or region"""
  countrySubDivision: Enterprise_Varchar

  """Department name for organizational addresses"""
  department: Enterprise_Varchar

  """District or county"""
  districtName: Enterprise_Varchar

  """Auto-incrementing identifier for each address record"""
  enterpriseAddressId: Enterprise_Int4!
  enterpriseBuildings(limit: Int, offset: Int, order_by: [Enterprise_EnterpriseBuildingsOrderByExp!], where: Enterprise_EnterpriseBuildingsBoolExp): [Enterprise_EnterpriseBuildings!]
  enterpriseBuildingsAggregate(filter_input: Enterprise_EnterpriseBuildingsFilterInput): Enterprise_EnterpriseBuildingsAggExp!
  enterprisePartyEntityAddresses(limit: Int, offset: Int, order_by: [Enterprise_EnterprisePartyEntityAddressesOrderByExp!], where: Enterprise_EnterprisePartyEntityAddressesBoolExp): [Enterprise_EnterprisePartyEntityAddresses!]
  enterprisePartyEntityAddressesAggregate(filter_input: Enterprise_EnterprisePartyEntityAddressesFilterInput): Enterprise_EnterprisePartyEntityAddressesAggExp!

  """Floor number or description"""
  floor: Enterprise_Varchar

  """Post office box number"""
  postBox: Enterprise_Varchar

  """Postal or zip code"""
  postCode: Enterprise_Varchar

  """Room identifier if applicable"""
  room: Enterprise_Varchar

  """Street name component of the address"""
  streetName: Enterprise_Varchar

  """Sub-department name for organizational addresses"""
  subDepartment: Enterprise_Varchar

  """Name of area within town"""
  townLocationName: Enterprise_Varchar

  """City or town name"""
  townName: Enterprise_Varchar

  """Apartment or unit number"""
  unitNumber: Enterprise_Varchar
}

type Enterprise_EnterpriseAddressesAggExp {
  _count: Int!
  addressType: Enterprise_EnterpriseAddressTypeAggExp!
  buildingName: Enterprise_VarcharAggExp!
  buildingNumber: Enterprise_VarcharAggExp!
  careOf: Enterprise_VarcharAggExp!
  country: Enterprise_VarcharAggExp!
  countrySubDivision: Enterprise_VarcharAggExp!
  department: Enterprise_VarcharAggExp!
  districtName: Enterprise_VarcharAggExp!
  enterpriseAddressId: Enterprise_Int4AggExp!
  floor: Enterprise_VarcharAggExp!
  postBox: Enterprise_VarcharAggExp!
  postCode: Enterprise_VarcharAggExp!
  room: Enterprise_VarcharAggExp!
  streetName: Enterprise_VarcharAggExp!
  subDepartment: Enterprise_VarcharAggExp!
  townLocationName: Enterprise_VarcharAggExp!
  townName: Enterprise_VarcharAggExp!
  unitNumber: Enterprise_VarcharAggExp!
}

input Enterprise_EnterpriseAddressesBoolExp {
  _and: [Enterprise_EnterpriseAddressesBoolExp!]
  _not: Enterprise_EnterpriseAddressesBoolExp
  _or: [Enterprise_EnterpriseAddressesBoolExp!]
  addressType: Enterprise_EnterpriseAddressTypeBoolExp
  buildingName: Enterprise_VarcharBoolExp
  buildingNumber: Enterprise_VarcharBoolExp
  careOf: Enterprise_VarcharBoolExp
  country: Enterprise_VarcharBoolExp
  countrySubDivision: Enterprise_VarcharBoolExp
  department: Enterprise_VarcharBoolExp
  districtName: Enterprise_VarcharBoolExp
  enterpriseAddressId: Enterprise_Int4BoolExp
  enterpriseBuildings: Enterprise_EnterpriseBuildingsBoolExp
  enterprisePartyEntityAddresses: Enterprise_EnterprisePartyEntityAddressesBoolExp
  floor: Enterprise_VarcharBoolExp
  postBox: Enterprise_VarcharBoolExp
  postCode: Enterprise_VarcharBoolExp
  room: Enterprise_VarcharBoolExp
  streetName: Enterprise_VarcharBoolExp
  subDepartment: Enterprise_VarcharBoolExp
  townLocationName: Enterprise_VarcharBoolExp
  townName: Enterprise_VarcharBoolExp
  unitNumber: Enterprise_VarcharBoolExp
}

input Enterprise_EnterpriseAddressesFilterInput {
  limit: Int
  offset: Int
  order_by: [Enterprise_EnterpriseAddressesOrderByExp!]
  where: Enterprise_EnterpriseAddressesBoolExp
}

input Enterprise_EnterpriseAddressesOrderByExp {
  addressType: OrderBy
  buildingName: OrderBy
  buildingNumber: OrderBy
  careOf: OrderBy
  country: OrderBy
  countrySubDivision: OrderBy
  department: OrderBy
  districtName: OrderBy
  enterpriseAddressId: OrderBy
  floor: OrderBy
  postBox: OrderBy
  postCode: OrderBy
  room: OrderBy
  streetName: OrderBy
  subDepartment: OrderBy
  townLocationName: OrderBy
  townName: OrderBy
  unitNumber: OrderBy
}

scalar Enterprise_EnterpriseAddressRelationshipType

type Enterprise_EnterpriseAddressRelationshipTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: Enterprise_EnterpriseAddressRelationshipType
  min: Enterprise_EnterpriseAddressRelationshipType
}

input Enterprise_EnterpriseAddressRelationshipTypeBoolExp {
  _and: [Enterprise_EnterpriseAddressRelationshipTypeBoolExp!]
  _eq: Enterprise_EnterpriseAddressRelationshipType
  _gt: Enterprise_EnterpriseAddressRelationshipType
  _gte: Enterprise_EnterpriseAddressRelationshipType
  _in: [Enterprise_EnterpriseAddressRelationshipType!]
  _is_null: Boolean
  _lt: Enterprise_EnterpriseAddressRelationshipType
  _lte: Enterprise_EnterpriseAddressRelationshipType
  _neq: Enterprise_EnterpriseAddressRelationshipType
  _not: Enterprise_EnterpriseAddressRelationshipTypeBoolExp
  _or: [Enterprise_EnterpriseAddressRelationshipTypeBoolExp!]
}

scalar Enterprise_EnterpriseAddressType

type Enterprise_EnterpriseAddressTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: Enterprise_EnterpriseAddressType
  min: Enterprise_EnterpriseAddressType
}

input Enterprise_EnterpriseAddressTypeBoolExp {
  _and: [Enterprise_EnterpriseAddressTypeBoolExp!]
  _eq: Enterprise_EnterpriseAddressType
  _gt: Enterprise_EnterpriseAddressType
  _gte: Enterprise_EnterpriseAddressType
  _in: [Enterprise_EnterpriseAddressType!]
  _is_null: Boolean
  _lt: Enterprise_EnterpriseAddressType
  _lte: Enterprise_EnterpriseAddressType
  _neq: Enterprise_EnterpriseAddressType
  _not: Enterprise_EnterpriseAddressTypeBoolExp
  _or: [Enterprise_EnterpriseAddressTypeBoolExp!]
}

"""
Stores information about employees, contractors, or other individuals associated with the enterprise.
"""
type Enterprise_EnterpriseAssociates {
  """Associate's city of residence."""
  city: Enterprise_Varchar

  """Associate's country of residence."""
  country: Enterprise_Varchar

  """Associate's unique email address."""
  email: Enterprise_Varchar
  enterpriseAssociate: Enterprise_EnterpriseAssociates

  """Unique identifier for each associate."""
  enterpriseAssociateId: Enterprise_Int4!
  enterpriseAssociates(limit: Int, offset: Int, order_by: [Enterprise_EnterpriseAssociatesOrderByExp!], where: Enterprise_EnterpriseAssociatesBoolExp): [Enterprise_EnterpriseAssociates!]
  enterpriseAssociatesAggregate(filter_input: Enterprise_EnterpriseAssociatesFilterInput): Enterprise_EnterpriseAssociatesAggExp!
  enterpriseBuilding: Enterprise_EnterpriseBuildings

  """
  Foreign key referencing the building where the associate is primarily located.
  """
  enterpriseBuildingId: Enterprise_Int4
  enterpriseDepartment: Enterprise_EnterpriseDepartments

  """Foreign key referencing the department the associate belongs to."""
  enterpriseDepartmentId: Enterprise_Int4

  """Associate's first name."""
  firstName: Enterprise_Varchar

  """Date the associate was hired."""
  hireDate: Enterprise_Date

  """Associate's functional job title (e.g., Teller, Loan Officer)."""
  jobTitle: Enterprise_Varchar

  """Associate's last name."""
  lastName: Enterprise_Varchar

  """Foreign key referencing the associate's manager."""
  managerId: Enterprise_Int4

  """Associate's formal officer title (e.g., VP, MD), if applicable."""
  officerTitle: Enterprise_Varchar

  """Associate's phone number."""
  phoneNumber: Enterprise_Varchar

  """Associate's postal code."""
  postCode: Enterprise_Varchar

  """Type of relationship with the company."""
  relationshipType: Enterprise_EnterpriseRelationshipStatus

  """Date the associate was released from employment, if applicable."""
  releaseDate: Enterprise_Date

  """Associate's annual salary."""
  salary: Enterprise_Numeric

  """Associate's state of residence."""
  state: Enterprise_Varchar

  """Current status of the associate."""
  status: Enterprise_EnterpriseAssociateStatus

  """Associate's street address."""
  streetAddress: Enterprise_Varchar
}

type Enterprise_EnterpriseAssociatesAggExp {
  _count: Int!
  city: Enterprise_VarcharAggExp!
  country: Enterprise_VarcharAggExp!
  email: Enterprise_VarcharAggExp!
  enterpriseAssociateId: Enterprise_Int4AggExp!
  enterpriseBuildingId: Enterprise_Int4AggExp!
  enterpriseDepartmentId: Enterprise_Int4AggExp!
  firstName: Enterprise_VarcharAggExp!
  hireDate: Enterprise_DateAggExp!
  jobTitle: Enterprise_VarcharAggExp!
  lastName: Enterprise_VarcharAggExp!
  managerId: Enterprise_Int4AggExp!
  officerTitle: Enterprise_VarcharAggExp!
  phoneNumber: Enterprise_VarcharAggExp!
  postCode: Enterprise_VarcharAggExp!
  relationshipType: Enterprise_EnterpriseRelationshipStatusAggExp!
  releaseDate: Enterprise_DateAggExp!
  salary: Enterprise_NumericAggExp!
  state: Enterprise_VarcharAggExp!
  status: Enterprise_EnterpriseAssociateStatusAggExp!
  streetAddress: Enterprise_VarcharAggExp!
}

input Enterprise_EnterpriseAssociatesBoolExp {
  _and: [Enterprise_EnterpriseAssociatesBoolExp!]
  _not: Enterprise_EnterpriseAssociatesBoolExp
  _or: [Enterprise_EnterpriseAssociatesBoolExp!]
  city: Enterprise_VarcharBoolExp
  country: Enterprise_VarcharBoolExp
  email: Enterprise_VarcharBoolExp
  enterpriseAssociate: Enterprise_EnterpriseAssociatesBoolExp
  enterpriseAssociateId: Enterprise_Int4BoolExp
  enterpriseAssociates: Enterprise_EnterpriseAssociatesBoolExp
  enterpriseBuilding: Enterprise_EnterpriseBuildingsBoolExp
  enterpriseBuildingId: Enterprise_Int4BoolExp
  enterpriseDepartment: Enterprise_EnterpriseDepartmentsBoolExp
  enterpriseDepartmentId: Enterprise_Int4BoolExp
  firstName: Enterprise_VarcharBoolExp
  hireDate: Enterprise_DateBoolExp
  jobTitle: Enterprise_VarcharBoolExp
  lastName: Enterprise_VarcharBoolExp
  managerId: Enterprise_Int4BoolExp
  officerTitle: Enterprise_VarcharBoolExp
  phoneNumber: Enterprise_VarcharBoolExp
  postCode: Enterprise_VarcharBoolExp
  relationshipType: Enterprise_EnterpriseRelationshipStatusBoolExp
  releaseDate: Enterprise_DateBoolExp
  salary: Enterprise_NumericBoolExp
  state: Enterprise_VarcharBoolExp
  status: Enterprise_EnterpriseAssociateStatusBoolExp
  streetAddress: Enterprise_VarcharBoolExp
}

input Enterprise_EnterpriseAssociatesFilterInput {
  limit: Int
  offset: Int
  order_by: [Enterprise_EnterpriseAssociatesOrderByExp!]
  where: Enterprise_EnterpriseAssociatesBoolExp
}

input Enterprise_EnterpriseAssociatesOrderByExp {
  city: OrderBy
  country: OrderBy
  email: OrderBy
  enterpriseAssociate: Enterprise_EnterpriseAssociatesOrderByExp
  enterpriseAssociateId: OrderBy
  enterpriseBuilding: Enterprise_EnterpriseBuildingsOrderByExp
  enterpriseBuildingId: OrderBy
  enterpriseDepartment: Enterprise_EnterpriseDepartmentsOrderByExp
  enterpriseDepartmentId: OrderBy
  firstName: OrderBy
  hireDate: OrderBy
  jobTitle: OrderBy
  lastName: OrderBy
  managerId: OrderBy
  officerTitle: OrderBy
  phoneNumber: OrderBy
  postCode: OrderBy
  relationshipType: OrderBy
  releaseDate: OrderBy
  salary: OrderBy
  state: OrderBy
  status: OrderBy
  streetAddress: OrderBy
}

scalar Enterprise_EnterpriseAssociateStatus

type Enterprise_EnterpriseAssociateStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: Enterprise_EnterpriseAssociateStatus
  min: Enterprise_EnterpriseAssociateStatus
}

input Enterprise_EnterpriseAssociateStatusBoolExp {
  _and: [Enterprise_EnterpriseAssociateStatusBoolExp!]
  _eq: Enterprise_EnterpriseAssociateStatus
  _gt: Enterprise_EnterpriseAssociateStatus
  _gte: Enterprise_EnterpriseAssociateStatus
  _in: [Enterprise_EnterpriseAssociateStatus!]
  _is_null: Boolean
  _lt: Enterprise_EnterpriseAssociateStatus
  _lte: Enterprise_EnterpriseAssociateStatus
  _neq: Enterprise_EnterpriseAssociateStatus
  _not: Enterprise_EnterpriseAssociateStatusBoolExp
  _or: [Enterprise_EnterpriseAssociateStatusBoolExp!]
}

"""
Stores information about the physical buildings used by the enterprise, including branches and other facilities.
"""
type Enterprise_EnterpriseBuildings {
  """Name of the building."""
  buildingName: Enterprise_Varchar

  """Type of building classified by primary function."""
  buildingType: Enterprise_EnterpriseBuildingType!

  """Date the building was closed, if applicable."""
  closeDate: Enterprise_Date
  enterpriseAddress: Enterprise_EnterpriseAddresses

  """Address of the building"""
  enterpriseAddressId: Enterprise_Int4
  enterpriseAssociates(limit: Int, offset: Int, order_by: [Enterprise_EnterpriseAssociatesOrderByExp!], where: Enterprise_EnterpriseAssociatesBoolExp): [Enterprise_EnterpriseAssociates!]
  enterpriseAssociatesAggregate(filter_input: Enterprise_EnterpriseAssociatesFilterInput): Enterprise_EnterpriseAssociatesAggExp!

  """Unique identifier for each building."""
  enterpriseBuildingId: Enterprise_Int4!

  """Date the building was opened."""
  openDate: Enterprise_Date

  """Phone number of the building."""
  phoneNumber: Enterprise_Varchar
}

type Enterprise_EnterpriseBuildingsAggExp {
  _count: Int!
  buildingName: Enterprise_VarcharAggExp!
  buildingType: Enterprise_EnterpriseBuildingTypeAggExp!
  closeDate: Enterprise_DateAggExp!
  enterpriseAddressId: Enterprise_Int4AggExp!
  enterpriseBuildingId: Enterprise_Int4AggExp!
  openDate: Enterprise_DateAggExp!
  phoneNumber: Enterprise_VarcharAggExp!
}

input Enterprise_EnterpriseBuildingsBoolExp {
  _and: [Enterprise_EnterpriseBuildingsBoolExp!]
  _not: Enterprise_EnterpriseBuildingsBoolExp
  _or: [Enterprise_EnterpriseBuildingsBoolExp!]
  buildingName: Enterprise_VarcharBoolExp
  buildingType: Enterprise_EnterpriseBuildingTypeBoolExp
  closeDate: Enterprise_DateBoolExp
  enterpriseAddress: Enterprise_EnterpriseAddressesBoolExp
  enterpriseAddressId: Enterprise_Int4BoolExp
  enterpriseAssociates: Enterprise_EnterpriseAssociatesBoolExp
  enterpriseBuildingId: Enterprise_Int4BoolExp
  openDate: Enterprise_DateBoolExp
  phoneNumber: Enterprise_VarcharBoolExp
}

input Enterprise_EnterpriseBuildingsFilterInput {
  limit: Int
  offset: Int
  order_by: [Enterprise_EnterpriseBuildingsOrderByExp!]
  where: Enterprise_EnterpriseBuildingsBoolExp
}

input Enterprise_EnterpriseBuildingsOrderByExp {
  buildingName: OrderBy
  buildingType: OrderBy
  closeDate: OrderBy
  enterpriseAddress: Enterprise_EnterpriseAddressesOrderByExp
  enterpriseAddressId: OrderBy
  enterpriseBuildingId: OrderBy
  openDate: OrderBy
  phoneNumber: OrderBy
}

scalar Enterprise_EnterpriseBuildingType

type Enterprise_EnterpriseBuildingTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: Enterprise_EnterpriseBuildingType
  min: Enterprise_EnterpriseBuildingType
}

input Enterprise_EnterpriseBuildingTypeBoolExp {
  _and: [Enterprise_EnterpriseBuildingTypeBoolExp!]
  _eq: Enterprise_EnterpriseBuildingType
  _gt: Enterprise_EnterpriseBuildingType
  _gte: Enterprise_EnterpriseBuildingType
  _in: [Enterprise_EnterpriseBuildingType!]
  _is_null: Boolean
  _lt: Enterprise_EnterpriseBuildingType
  _lte: Enterprise_EnterpriseBuildingType
  _neq: Enterprise_EnterpriseBuildingType
  _not: Enterprise_EnterpriseBuildingTypeBoolExp
  _or: [Enterprise_EnterpriseBuildingTypeBoolExp!]
}

scalar Enterprise_EnterpriseCitizenshipStatus

type Enterprise_EnterpriseCitizenshipStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: Enterprise_EnterpriseCitizenshipStatus
  min: Enterprise_EnterpriseCitizenshipStatus
}

input Enterprise_EnterpriseCitizenshipStatusBoolExp {
  _and: [Enterprise_EnterpriseCitizenshipStatusBoolExp!]
  _eq: Enterprise_EnterpriseCitizenshipStatus
  _gt: Enterprise_EnterpriseCitizenshipStatus
  _gte: Enterprise_EnterpriseCitizenshipStatus
  _in: [Enterprise_EnterpriseCitizenshipStatus!]
  _is_null: Boolean
  _lt: Enterprise_EnterpriseCitizenshipStatus
  _lte: Enterprise_EnterpriseCitizenshipStatus
  _neq: Enterprise_EnterpriseCitizenshipStatus
  _not: Enterprise_EnterpriseCitizenshipStatusBoolExp
  _or: [Enterprise_EnterpriseCitizenshipStatusBoolExp!]
}

"""
Stores information about the various departments within the enterprise.
"""
type Enterprise_EnterpriseDepartments {
  """Name of the department."""
  departmentName: Enterprise_Varchar
  enterpriseAssociates(limit: Int, offset: Int, order_by: [Enterprise_EnterpriseAssociatesOrderByExp!], where: Enterprise_EnterpriseAssociatesBoolExp): [Enterprise_EnterpriseAssociates!]
  enterpriseAssociatesAggregate(filter_input: Enterprise_EnterpriseAssociatesFilterInput): Enterprise_EnterpriseAssociatesAggExp!

  """Unique identifier for each department."""
  enterpriseDepartmentId: Enterprise_Int4!

  """Physical location of the department."""
  location: Enterprise_Varchar

  """This department is managed under this operating unit."""
  operatingUnit: Enterprise_EnterpriseOperatingUnit
}

type Enterprise_EnterpriseDepartmentsAggExp {
  _count: Int!
  departmentName: Enterprise_VarcharAggExp!
  enterpriseDepartmentId: Enterprise_Int4AggExp!
  location: Enterprise_VarcharAggExp!
  operatingUnit: Enterprise_EnterpriseOperatingUnitAggExp!
}

input Enterprise_EnterpriseDepartmentsBoolExp {
  _and: [Enterprise_EnterpriseDepartmentsBoolExp!]
  _not: Enterprise_EnterpriseDepartmentsBoolExp
  _or: [Enterprise_EnterpriseDepartmentsBoolExp!]
  departmentName: Enterprise_VarcharBoolExp
  enterpriseAssociates: Enterprise_EnterpriseAssociatesBoolExp
  enterpriseDepartmentId: Enterprise_Int4BoolExp
  location: Enterprise_VarcharBoolExp
  operatingUnit: Enterprise_EnterpriseOperatingUnitBoolExp
}

input Enterprise_EnterpriseDepartmentsFilterInput {
  limit: Int
  offset: Int
  order_by: [Enterprise_EnterpriseDepartmentsOrderByExp!]
  where: Enterprise_EnterpriseDepartmentsBoolExp
}

input Enterprise_EnterpriseDepartmentsOrderByExp {
  departmentName: OrderBy
  enterpriseDepartmentId: OrderBy
  location: OrderBy
  operatingUnit: OrderBy
}

"""
Registry of identifiers applicable to accounts, individuals, or institutions — referenced by business-line accounts
"""
type Enterprise_EnterpriseIdentifiers {
  """Unique identifier for each identifier entry in the registry"""
  enterpriseIdentifierId: Enterprise_Int4!

  """Actual identifier value such as a BIC code or national ID"""
  identification: Enterprise_Varchar!

  """Optional Legal Entity Identifier if known"""
  lei: Enterprise_Varchar

  """Optional display name for this identifier (e.g., institution name)"""
  name: Enterprise_Varchar

  """Free-form notes or metadata about this identifier"""
  note: Enterprise_Text

  """Type of identifier (e.g., BIC, IBAN, SSN, LEI, etc.)"""
  schemeName: Enterprise_EnterpriseIdentifierScheme!

  """Additional identifier component if applicable (e.g., sub-ID)"""
  secondaryIdentification: Enterprise_Varchar
}

type Enterprise_EnterpriseIdentifiersAggExp {
  _count: Int!
  enterpriseIdentifierId: Enterprise_Int4AggExp!
  identification: Enterprise_VarcharAggExp!
  lei: Enterprise_VarcharAggExp!
  name: Enterprise_VarcharAggExp!
  note: Enterprise_TextAggExp!
  schemeName: Enterprise_EnterpriseIdentifierSchemeAggExp!
  secondaryIdentification: Enterprise_VarcharAggExp!
}

input Enterprise_EnterpriseIdentifiersBoolExp {
  _and: [Enterprise_EnterpriseIdentifiersBoolExp!]
  _not: Enterprise_EnterpriseIdentifiersBoolExp
  _or: [Enterprise_EnterpriseIdentifiersBoolExp!]
  enterpriseIdentifierId: Enterprise_Int4BoolExp
  identification: Enterprise_VarcharBoolExp
  lei: Enterprise_VarcharBoolExp
  name: Enterprise_VarcharBoolExp
  note: Enterprise_TextBoolExp
  schemeName: Enterprise_EnterpriseIdentifierSchemeBoolExp
  secondaryIdentification: Enterprise_VarcharBoolExp
}

scalar Enterprise_EnterpriseIdentifierScheme

type Enterprise_EnterpriseIdentifierSchemeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: Enterprise_EnterpriseIdentifierScheme
  min: Enterprise_EnterpriseIdentifierScheme
}

input Enterprise_EnterpriseIdentifierSchemeBoolExp {
  _and: [Enterprise_EnterpriseIdentifierSchemeBoolExp!]
  _eq: Enterprise_EnterpriseIdentifierScheme
  _gt: Enterprise_EnterpriseIdentifierScheme
  _gte: Enterprise_EnterpriseIdentifierScheme
  _in: [Enterprise_EnterpriseIdentifierScheme!]
  _is_null: Boolean
  _lt: Enterprise_EnterpriseIdentifierScheme
  _lte: Enterprise_EnterpriseIdentifierScheme
  _neq: Enterprise_EnterpriseIdentifierScheme
  _not: Enterprise_EnterpriseIdentifierSchemeBoolExp
  _or: [Enterprise_EnterpriseIdentifierSchemeBoolExp!]
}

input Enterprise_EnterpriseIdentifiersFilterInput {
  limit: Int
  offset: Int
  order_by: [Enterprise_EnterpriseIdentifiersOrderByExp!]
  where: Enterprise_EnterpriseIdentifiersBoolExp
}

input Enterprise_EnterpriseIdentifiersOrderByExp {
  enterpriseIdentifierId: OrderBy
  identification: OrderBy
  lei: OrderBy
  name: OrderBy
  note: OrderBy
  schemeName: OrderBy
  secondaryIdentification: OrderBy
}

scalar Enterprise_EnterpriseLegalStructure

type Enterprise_EnterpriseLegalStructureAggExp {
  _count: Int!
  _count_distinct: Int!
  max: Enterprise_EnterpriseLegalStructure
  min: Enterprise_EnterpriseLegalStructure
}

input Enterprise_EnterpriseLegalStructureBoolExp {
  _and: [Enterprise_EnterpriseLegalStructureBoolExp!]
  _eq: Enterprise_EnterpriseLegalStructure
  _gt: Enterprise_EnterpriseLegalStructure
  _gte: Enterprise_EnterpriseLegalStructure
  _in: [Enterprise_EnterpriseLegalStructure!]
  _is_null: Boolean
  _lt: Enterprise_EnterpriseLegalStructure
  _lte: Enterprise_EnterpriseLegalStructure
  _neq: Enterprise_EnterpriseLegalStructure
  _not: Enterprise_EnterpriseLegalStructureBoolExp
  _or: [Enterprise_EnterpriseLegalStructureBoolExp!]
}

scalar Enterprise_EnterpriseMaritalStatus

type Enterprise_EnterpriseMaritalStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: Enterprise_EnterpriseMaritalStatus
  min: Enterprise_EnterpriseMaritalStatus
}

input Enterprise_EnterpriseMaritalStatusBoolExp {
  _and: [Enterprise_EnterpriseMaritalStatusBoolExp!]
  _eq: Enterprise_EnterpriseMaritalStatus
  _gt: Enterprise_EnterpriseMaritalStatus
  _gte: Enterprise_EnterpriseMaritalStatus
  _in: [Enterprise_EnterpriseMaritalStatus!]
  _is_null: Boolean
  _lt: Enterprise_EnterpriseMaritalStatus
  _lte: Enterprise_EnterpriseMaritalStatus
  _neq: Enterprise_EnterpriseMaritalStatus
  _not: Enterprise_EnterpriseMaritalStatusBoolExp
  _or: [Enterprise_EnterpriseMaritalStatusBoolExp!]
}

scalar Enterprise_EnterpriseOperatingUnit

type Enterprise_EnterpriseOperatingUnitAggExp {
  _count: Int!
  _count_distinct: Int!
  max: Enterprise_EnterpriseOperatingUnit
  min: Enterprise_EnterpriseOperatingUnit
}

input Enterprise_EnterpriseOperatingUnitBoolExp {
  _and: [Enterprise_EnterpriseOperatingUnitBoolExp!]
  _eq: Enterprise_EnterpriseOperatingUnit
  _gt: Enterprise_EnterpriseOperatingUnit
  _gte: Enterprise_EnterpriseOperatingUnit
  _in: [Enterprise_EnterpriseOperatingUnit!]
  _is_null: Boolean
  _lt: Enterprise_EnterpriseOperatingUnit
  _lte: Enterprise_EnterpriseOperatingUnit
  _neq: Enterprise_EnterpriseOperatingUnit
  _not: Enterprise_EnterpriseOperatingUnitBoolExp
  _or: [Enterprise_EnterpriseOperatingUnitBoolExp!]
}

"""
Stores information about individuals and organizations that interact with
accounts, now with additional common personal attributes for individuals
"""
type Enterprise_EnterpriseParties {
  """Indicates if this party has beneficial ownership"""
  beneficialOwnership: Enterprise_Bool

  """Citizenship or residency status (for individuals)"""
  citizenshipStatus: Enterprise_EnterpriseCitizenshipStatus

  """Party's date of birth (for individuals)"""
  dateOfBirth: Enterprise_Date

  """Primary email contact"""
  emailAddress: Enterprise_Varchar
  enterpriseAccountOwnerships(limit: Int, offset: Int, order_by: [Enterprise_EnterpriseAccountOwnershipOrderByExp!], where: Enterprise_EnterpriseAccountOwnershipBoolExp): [Enterprise_EnterpriseAccountOwnership!]
  enterpriseAccountOwnershipsAggregate(filter_input: Enterprise_EnterpriseAccountOwnershipFilterInput): Enterprise_EnterpriseAccountOwnershipAggExp!
  enterprisePartyEntityAddresses(limit: Int, offset: Int, order_by: [Enterprise_EnterprisePartyEntityAddressesOrderByExp!], where: Enterprise_EnterprisePartyEntityAddressesBoolExp): [Enterprise_EnterprisePartyEntityAddresses!]
  enterprisePartyEntityAddressesAggregate(filter_input: Enterprise_EnterprisePartyEntityAddressesFilterInput): Enterprise_EnterprisePartyEntityAddressesAggExp!

  """Unique identifier for each party"""
  enterprisePartyId: Enterprise_Int4!
  enterprisePartyRelationships(limit: Int, offset: Int, order_by: [Enterprise_EnterprisePartyRelationshipsOrderByExp!], where: Enterprise_EnterprisePartyRelationshipsBoolExp): [Enterprise_EnterprisePartyRelationships!]
  enterprisePartyRelationshipsAggregate(filter_input: Enterprise_EnterprisePartyRelationshipsFilterInput): Enterprise_EnterprisePartyRelationshipsAggExp!
  enterprisePartyRelationshipsByRelatedPartyId(limit: Int, offset: Int, order_by: [Enterprise_EnterprisePartyRelationshipsOrderByExp!], where: Enterprise_EnterprisePartyRelationshipsBoolExp): [Enterprise_EnterprisePartyRelationships!]
  enterprisePartyRelationshipsByRelatedPartyIdAggregate(filter_input: Enterprise_EnterprisePartyRelationshipsFilterInput): Enterprise_EnterprisePartyRelationshipsAggExp!

  """Complete legal name for business entities"""
  fullBusinessLegalName: Enterprise_Varchar

  """Legal structure of the organization"""
  legalStructure: Enterprise_EnterpriseLegalStructure

  """Legal Entity Identifier for organizations"""
  lei: Enterprise_Varchar

  """Marital status (for individuals)"""
  maritalStatus: Enterprise_EnterpriseMaritalStatus

  """Mobile phone contact"""
  mobile: Enterprise_Varchar

  """Name of the party"""
  name: Enterprise_Varchar!

  """Alternative reference number for the party"""
  partyNumber: Enterprise_Varchar

  """Current status of the party"""
  partyStatus: Enterprise_EnterprisePartyStatus!

  """Type of party (individual or organization)"""
  partyType: Enterprise_EnterprisePartyType!

  """Primary phone contact"""
  phone: Enterprise_Varchar

  """Social Security Number (for US individuals)"""
  ssn: Enterprise_Varchar
}

type Enterprise_EnterprisePartiesAggExp {
  _count: Int!
  beneficialOwnership: Enterprise_BoolAggExp!
  citizenshipStatus: Enterprise_EnterpriseCitizenshipStatusAggExp!
  dateOfBirth: Enterprise_DateAggExp!
  emailAddress: Enterprise_VarcharAggExp!
  enterprisePartyId: Enterprise_Int4AggExp!
  fullBusinessLegalName: Enterprise_VarcharAggExp!
  legalStructure: Enterprise_EnterpriseLegalStructureAggExp!
  lei: Enterprise_VarcharAggExp!
  maritalStatus: Enterprise_EnterpriseMaritalStatusAggExp!
  mobile: Enterprise_VarcharAggExp!
  name: Enterprise_VarcharAggExp!
  partyNumber: Enterprise_VarcharAggExp!
  partyStatus: Enterprise_EnterprisePartyStatusAggExp!
  partyType: Enterprise_EnterprisePartyTypeAggExp!
  phone: Enterprise_VarcharAggExp!
  ssn: Enterprise_VarcharAggExp!
}

input Enterprise_EnterprisePartiesBoolExp {
  _and: [Enterprise_EnterprisePartiesBoolExp!]
  _not: Enterprise_EnterprisePartiesBoolExp
  _or: [Enterprise_EnterprisePartiesBoolExp!]
  beneficialOwnership: Enterprise_BoolBoolExp
  citizenshipStatus: Enterprise_EnterpriseCitizenshipStatusBoolExp
  dateOfBirth: Enterprise_DateBoolExp
  emailAddress: Enterprise_VarcharBoolExp
  enterpriseAccountOwnerships: Enterprise_EnterpriseAccountOwnershipBoolExp
  enterprisePartyEntityAddresses: Enterprise_EnterprisePartyEntityAddressesBoolExp
  enterprisePartyId: Enterprise_Int4BoolExp
  enterprisePartyRelationships: Enterprise_EnterprisePartyRelationshipsBoolExp
  enterprisePartyRelationshipsByRelatedPartyId: Enterprise_EnterprisePartyRelationshipsBoolExp
  fullBusinessLegalName: Enterprise_VarcharBoolExp
  legalStructure: Enterprise_EnterpriseLegalStructureBoolExp
  lei: Enterprise_VarcharBoolExp
  maritalStatus: Enterprise_EnterpriseMaritalStatusBoolExp
  mobile: Enterprise_VarcharBoolExp
  name: Enterprise_VarcharBoolExp
  partyNumber: Enterprise_VarcharBoolExp
  partyStatus: Enterprise_EnterprisePartyStatusBoolExp
  partyType: Enterprise_EnterprisePartyTypeBoolExp
  phone: Enterprise_VarcharBoolExp
  ssn: Enterprise_VarcharBoolExp
}

input Enterprise_EnterprisePartiesFilterInput {
  limit: Int
  offset: Int
  order_by: [Enterprise_EnterprisePartiesOrderByExp!]
  where: Enterprise_EnterprisePartiesBoolExp
}

input Enterprise_EnterprisePartiesOrderByExp {
  beneficialOwnership: OrderBy
  citizenshipStatus: OrderBy
  dateOfBirth: OrderBy
  emailAddress: OrderBy
  enterprisePartyId: OrderBy
  fullBusinessLegalName: OrderBy
  legalStructure: OrderBy
  lei: OrderBy
  maritalStatus: OrderBy
  mobile: OrderBy
  name: OrderBy
  partyNumber: OrderBy
  partyStatus: OrderBy
  partyType: OrderBy
  phone: OrderBy
  ssn: OrderBy
}

"""Links parties to entity addresses with a defined relationship"""
type Enterprise_EnterprisePartyEntityAddresses {
  enterpriseAddress: Enterprise_EnterpriseAddresses

  """Reference to the entity address"""
  enterpriseAddressId: Enterprise_Int4!
  enterpriseParty: Enterprise_EnterpriseParties

  """Unique identifier for party-entity address association"""
  enterprisePartyEntityAddressId: Enterprise_Int4!

  """Reference to the party"""
  enterprisePartyId: Enterprise_Int4!

  """Type of relationship between the party and the address"""
  relationshipType: Enterprise_EnterpriseAddressRelationshipType
}

type Enterprise_EnterprisePartyEntityAddressesAggExp {
  _count: Int!
  enterpriseAddressId: Enterprise_Int4AggExp!
  enterprisePartyEntityAddressId: Enterprise_Int4AggExp!
  enterprisePartyId: Enterprise_Int4AggExp!
  relationshipType: Enterprise_EnterpriseAddressRelationshipTypeAggExp!
}

input Enterprise_EnterprisePartyEntityAddressesBoolExp {
  _and: [Enterprise_EnterprisePartyEntityAddressesBoolExp!]
  _not: Enterprise_EnterprisePartyEntityAddressesBoolExp
  _or: [Enterprise_EnterprisePartyEntityAddressesBoolExp!]
  enterpriseAddress: Enterprise_EnterpriseAddressesBoolExp
  enterpriseAddressId: Enterprise_Int4BoolExp
  enterpriseParty: Enterprise_EnterprisePartiesBoolExp
  enterprisePartyEntityAddressId: Enterprise_Int4BoolExp
  enterprisePartyId: Enterprise_Int4BoolExp
  relationshipType: Enterprise_EnterpriseAddressRelationshipTypeBoolExp
}

input Enterprise_EnterprisePartyEntityAddressesFilterInput {
  limit: Int
  offset: Int
  order_by: [Enterprise_EnterprisePartyEntityAddressesOrderByExp!]
  where: Enterprise_EnterprisePartyEntityAddressesBoolExp
}

input Enterprise_EnterprisePartyEntityAddressesOrderByExp {
  enterpriseAddress: Enterprise_EnterpriseAddressesOrderByExp
  enterpriseAddressId: OrderBy
  enterpriseParty: Enterprise_EnterprisePartiesOrderByExp
  enterprisePartyEntityAddressId: OrderBy
  enterprisePartyId: OrderBy
  relationshipType: OrderBy
}

"""
Defines the role of related party acts to the the enterprise party, such as
power of attorney, beneficiary designations, etc.
"""
type Enterprise_EnterprisePartyRelationships {
  enterpriseParty: Enterprise_EnterpriseParties
  enterprisePartyByRelatedPartyId: Enterprise_EnterpriseParties

  """References the to the party being represented or acted upon"""
  enterprisePartyId: Enterprise_Int4!

  """Auto-incrementing identifier for each relationship record"""
  enterprisePartyRelationshipId: Enterprise_Int4!

  """
  Order of precedence for the relationship type (lower number = higher priority)
  """
  priority: Enterprise_Int4

  """
  References the party taking the role e.g. power of attorney, guardian, etc.
  """
  relatedPartyId: Enterprise_Int4!

  """
  Describes the role of the related party relative to the enterprise party
  """
  relationshipType: Enterprise_EnterprisePartyRelationshipType
}

type Enterprise_EnterprisePartyRelationshipsAggExp {
  _count: Int!
  enterprisePartyId: Enterprise_Int4AggExp!
  enterprisePartyRelationshipId: Enterprise_Int4AggExp!
  priority: Enterprise_Int4AggExp!
  relatedPartyId: Enterprise_Int4AggExp!
  relationshipType: Enterprise_EnterprisePartyRelationshipTypeAggExp!
}

input Enterprise_EnterprisePartyRelationshipsBoolExp {
  _and: [Enterprise_EnterprisePartyRelationshipsBoolExp!]
  _not: Enterprise_EnterprisePartyRelationshipsBoolExp
  _or: [Enterprise_EnterprisePartyRelationshipsBoolExp!]
  enterpriseParty: Enterprise_EnterprisePartiesBoolExp
  enterprisePartyByRelatedPartyId: Enterprise_EnterprisePartiesBoolExp
  enterprisePartyId: Enterprise_Int4BoolExp
  enterprisePartyRelationshipId: Enterprise_Int4BoolExp
  priority: Enterprise_Int4BoolExp
  relatedPartyId: Enterprise_Int4BoolExp
  relationshipType: Enterprise_EnterprisePartyRelationshipTypeBoolExp
}

input Enterprise_EnterprisePartyRelationshipsFilterInput {
  limit: Int
  offset: Int
  order_by: [Enterprise_EnterprisePartyRelationshipsOrderByExp!]
  where: Enterprise_EnterprisePartyRelationshipsBoolExp
}

input Enterprise_EnterprisePartyRelationshipsOrderByExp {
  enterpriseParty: Enterprise_EnterprisePartiesOrderByExp
  enterprisePartyByRelatedPartyId: Enterprise_EnterprisePartiesOrderByExp
  enterprisePartyId: OrderBy
  enterprisePartyRelationshipId: OrderBy
  priority: OrderBy
  relatedPartyId: OrderBy
  relationshipType: OrderBy
}

scalar Enterprise_EnterprisePartyRelationshipType

type Enterprise_EnterprisePartyRelationshipTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: Enterprise_EnterprisePartyRelationshipType
  min: Enterprise_EnterprisePartyRelationshipType
}

input Enterprise_EnterprisePartyRelationshipTypeBoolExp {
  _and: [Enterprise_EnterprisePartyRelationshipTypeBoolExp!]
  _eq: Enterprise_EnterprisePartyRelationshipType
  _gt: Enterprise_EnterprisePartyRelationshipType
  _gte: Enterprise_EnterprisePartyRelationshipType
  _in: [Enterprise_EnterprisePartyRelationshipType!]
  _is_null: Boolean
  _lt: Enterprise_EnterprisePartyRelationshipType
  _lte: Enterprise_EnterprisePartyRelationshipType
  _neq: Enterprise_EnterprisePartyRelationshipType
  _not: Enterprise_EnterprisePartyRelationshipTypeBoolExp
  _or: [Enterprise_EnterprisePartyRelationshipTypeBoolExp!]
}

scalar Enterprise_EnterprisePartyStatus

type Enterprise_EnterprisePartyStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: Enterprise_EnterprisePartyStatus
  min: Enterprise_EnterprisePartyStatus
}

input Enterprise_EnterprisePartyStatusBoolExp {
  _and: [Enterprise_EnterprisePartyStatusBoolExp!]
  _eq: Enterprise_EnterprisePartyStatus
  _gt: Enterprise_EnterprisePartyStatus
  _gte: Enterprise_EnterprisePartyStatus
  _in: [Enterprise_EnterprisePartyStatus!]
  _is_null: Boolean
  _lt: Enterprise_EnterprisePartyStatus
  _lte: Enterprise_EnterprisePartyStatus
  _neq: Enterprise_EnterprisePartyStatus
  _not: Enterprise_EnterprisePartyStatusBoolExp
  _or: [Enterprise_EnterprisePartyStatusBoolExp!]
}

scalar Enterprise_EnterprisePartyType

type Enterprise_EnterprisePartyTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: Enterprise_EnterprisePartyType
  min: Enterprise_EnterprisePartyType
}

input Enterprise_EnterprisePartyTypeBoolExp {
  _and: [Enterprise_EnterprisePartyTypeBoolExp!]
  _eq: Enterprise_EnterprisePartyType
  _gt: Enterprise_EnterprisePartyType
  _gte: Enterprise_EnterprisePartyType
  _in: [Enterprise_EnterprisePartyType!]
  _is_null: Boolean
  _lt: Enterprise_EnterprisePartyType
  _lte: Enterprise_EnterprisePartyType
  _neq: Enterprise_EnterprisePartyType
  _not: Enterprise_EnterprisePartyTypeBoolExp
  _or: [Enterprise_EnterprisePartyTypeBoolExp!]
}

"""
Defines all possible permission types that can be granted in the system
"""
type Enterprise_EnterprisePermissions {
  """Auto-incrementing identifier for each permission"""
  enterprisePermissionId: Enterprise_Int4!

  """Unique name describing the permission (e.g., read_balances)"""
  permissionName: Enterprise_Varchar!
}

type Enterprise_EnterprisePermissionsAggExp {
  _count: Int!
  enterprisePermissionId: Enterprise_Int4AggExp!
  permissionName: Enterprise_VarcharAggExp!
}

input Enterprise_EnterprisePermissionsBoolExp {
  _and: [Enterprise_EnterprisePermissionsBoolExp!]
  _not: Enterprise_EnterprisePermissionsBoolExp
  _or: [Enterprise_EnterprisePermissionsBoolExp!]
  enterprisePermissionId: Enterprise_Int4BoolExp
  permissionName: Enterprise_VarcharBoolExp
}

input Enterprise_EnterprisePermissionsFilterInput {
  limit: Int
  offset: Int
  order_by: [Enterprise_EnterprisePermissionsOrderByExp!]
  where: Enterprise_EnterprisePermissionsBoolExp
}

input Enterprise_EnterprisePermissionsOrderByExp {
  enterprisePermissionId: OrderBy
  permissionName: OrderBy
}

scalar Enterprise_EnterpriseRelationshipStatus

type Enterprise_EnterpriseRelationshipStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: Enterprise_EnterpriseRelationshipStatus
  min: Enterprise_EnterpriseRelationshipStatus
}

input Enterprise_EnterpriseRelationshipStatusBoolExp {
  _and: [Enterprise_EnterpriseRelationshipStatusBoolExp!]
  _eq: Enterprise_EnterpriseRelationshipStatus
  _gt: Enterprise_EnterpriseRelationshipStatus
  _gte: Enterprise_EnterpriseRelationshipStatus
  _in: [Enterprise_EnterpriseRelationshipStatus!]
  _is_null: Boolean
  _lt: Enterprise_EnterpriseRelationshipStatus
  _lte: Enterprise_EnterpriseRelationshipStatus
  _neq: Enterprise_EnterpriseRelationshipStatus
  _not: Enterprise_EnterpriseRelationshipStatusBoolExp
  _or: [Enterprise_EnterpriseRelationshipStatusBoolExp!]
}

scalar Enterprise_Int4

type Enterprise_Int4AggExp {
  _count: Int!
  _count_distinct: Int!
  avg: Enterprise_Numeric
  bit_and: Enterprise_Int4
  bit_or: Enterprise_Int4
  bit_xor: Enterprise_Int4
  max: Enterprise_Int4
  min: Enterprise_Int4
  stddev: Enterprise_Numeric
  stddev_pop: Enterprise_Numeric
  stddev_samp: Enterprise_Numeric
  sum: Enterprise_Int8
  var_pop: Enterprise_Numeric
  var_samp: Enterprise_Numeric
  variance: Enterprise_Numeric
}

input Enterprise_Int4BoolExp {
  _and: [Enterprise_Int4BoolExp!]
  _eq: Enterprise_Int4
  _gt: Enterprise_Int4
  _gte: Enterprise_Int4
  _in: [Enterprise_Int4!]
  _is_null: Boolean
  _lt: Enterprise_Int4
  _lte: Enterprise_Int4
  _neq: Enterprise_Int4
  _not: Enterprise_Int4BoolExp
  _or: [Enterprise_Int4BoolExp!]
}

scalar Enterprise_Int8

scalar Enterprise_Numeric

type Enterprise_NumericAggExp {
  _count: Int!
  _count_distinct: Int!
  avg: Enterprise_Numeric
  max: Enterprise_Numeric
  min: Enterprise_Numeric
  stddev: Enterprise_Numeric
  stddev_pop: Enterprise_Numeric
  stddev_samp: Enterprise_Numeric
  sum: Enterprise_Numeric
  var_pop: Enterprise_Numeric
  var_samp: Enterprise_Numeric
  variance: Enterprise_Numeric
}

input Enterprise_NumericBoolExp {
  _and: [Enterprise_NumericBoolExp!]
  _eq: Enterprise_Numeric
  _gt: Enterprise_Numeric
  _gte: Enterprise_Numeric
  _in: [Enterprise_Numeric!]
  _is_null: Boolean
  _lt: Enterprise_Numeric
  _lte: Enterprise_Numeric
  _neq: Enterprise_Numeric
  _not: Enterprise_NumericBoolExp
  _or: [Enterprise_NumericBoolExp!]
}

scalar Enterprise_Text

type Enterprise_TextAggExp {
  _count: Int!
  _count_distinct: Int!
  max: Enterprise_Text
  min: Enterprise_Text
}

input Enterprise_TextBoolExp {
  _and: [Enterprise_TextBoolExp!]
  _eq: Enterprise_Text
  _gt: Enterprise_Text
  _gte: Enterprise_Text
  _ilike: Enterprise_Text
  _in: [Enterprise_Text!]
  _iregex: Enterprise_Text
  _is_null: Boolean
  _like: Enterprise_Text
  _lt: Enterprise_Text
  _lte: Enterprise_Text
  _neq: Enterprise_Text
  _nilike: Enterprise_Text
  _niregex: Enterprise_Text
  _nlike: Enterprise_Text
  _not: Enterprise_TextBoolExp
  _nregex: Enterprise_Text
  _or: [Enterprise_TextBoolExp!]
  _regex: Enterprise_Text
  starts_with: Enterprise_Text
  ts_match_tt: Enterprise_Text
}

scalar Enterprise_Timestamptz

type Enterprise_TimestamptzAggExp {
  _count: Int!
  _count_distinct: Int!
  max: Enterprise_Timestamptz
  min: Enterprise_Timestamptz
}

input Enterprise_TimestamptzBoolExp {
  _and: [Enterprise_TimestamptzBoolExp!]
  _eq: Enterprise_Timestamptz
  _gt: Enterprise_Timestamptz
  _gte: Enterprise_Timestamptz
  _in: [Enterprise_Timestamptz!]
  _is_null: Boolean
  _lt: Enterprise_Timestamptz
  _lte: Enterprise_Timestamptz
  _neq: Enterprise_Timestamptz
  _not: Enterprise_TimestamptzBoolExp
  _or: [Enterprise_TimestamptzBoolExp!]
}

scalar Enterprise_Varchar

type Enterprise_VarcharAggExp {
  _count: Int!
  _count_distinct: Int!
  max: Enterprise_Text
  min: Enterprise_Text
}

input Enterprise_VarcharBoolExp {
  _and: [Enterprise_VarcharBoolExp!]
  _eq: Enterprise_Varchar
  _gt: Enterprise_Varchar
  _gte: Enterprise_Varchar
  _ilike: Enterprise_Varchar
  _in: [Enterprise_Varchar!]
  _iregex: Enterprise_Varchar
  _is_null: Boolean
  _like: Enterprise_Varchar
  _lt: Enterprise_Varchar
  _lte: Enterprise_Varchar
  _neq: Enterprise_Varchar
  _nilike: Enterprise_Varchar
  _niregex: Enterprise_Varchar
  _nlike: Enterprise_Varchar
  _not: Enterprise_VarcharBoolExp
  _nregex: Enterprise_Varchar
  _or: [Enterprise_VarcharBoolExp!]
  _regex: Enterprise_Varchar
  starts_with: Enterprise_Varchar
  ts_match_tt: Enterprise_Varchar
}

scalar MortgageServices_Bool

type MortgageServices_BoolAggExp {
  _count: Int!
  _count_distinct: Int!
  bool_and: MortgageServices_Bool
  bool_or: MortgageServices_Bool
  every: MortgageServices_Bool
}

input MortgageServices_BoolBoolExp {
  _and: [MortgageServices_BoolBoolExp!]
  _eq: MortgageServices_Bool
  _gt: MortgageServices_Bool
  _gte: MortgageServices_Bool
  _in: [MortgageServices_Bool!]
  _is_null: Boolean
  _lt: MortgageServices_Bool
  _lte: MortgageServices_Bool
  _neq: MortgageServices_Bool
  _not: MortgageServices_BoolBoolExp
  _or: [MortgageServices_BoolBoolExp!]
}

scalar MortgageServices_Date

type MortgageServices_DateAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_Date
  min: MortgageServices_Date
}

input MortgageServices_DateBoolExp {
  _and: [MortgageServices_DateBoolExp!]
  _eq: MortgageServices_Date
  _gt: MortgageServices_Date
  _gte: MortgageServices_Date
  _in: [MortgageServices_Date!]
  _is_null: Boolean
  _lt: MortgageServices_Date
  _lte: MortgageServices_Date
  _neq: MortgageServices_Date
  _not: MortgageServices_DateBoolExp
  _or: [MortgageServices_DateBoolExp!]
}

scalar MortgageServices_Int4

type MortgageServices_Int4AggExp {
  _count: Int!
  _count_distinct: Int!
  avg: MortgageServices_Numeric
  bit_and: MortgageServices_Int4
  bit_or: MortgageServices_Int4
  bit_xor: MortgageServices_Int4
  max: MortgageServices_Int4
  min: MortgageServices_Int4
  stddev: MortgageServices_Numeric
  stddev_pop: MortgageServices_Numeric
  stddev_samp: MortgageServices_Numeric
  sum: MortgageServices_Int8
  var_pop: MortgageServices_Numeric
  var_samp: MortgageServices_Numeric
  variance: MortgageServices_Numeric
}

input MortgageServices_Int4BoolExp {
  _and: [MortgageServices_Int4BoolExp!]
  _eq: MortgageServices_Int4
  _gt: MortgageServices_Int4
  _gte: MortgageServices_Int4
  _in: [MortgageServices_Int4!]
  _is_null: Boolean
  _lt: MortgageServices_Int4
  _lte: MortgageServices_Int4
  _neq: MortgageServices_Int4
  _not: MortgageServices_Int4BoolExp
  _or: [MortgageServices_Int4BoolExp!]
}

scalar MortgageServices_Int8

"""
Junction table linking mortgage applications to borrowers, supporting multiple
borrowers per application and tracking their roles and relationships
"""
type MortgageServices_MortgageServicesApplicationBorrowers {
  """Role of this borrower (Primary, Co-Borrower, etc.)"""
  borrowerType: MortgageServices_MortgageServicesBorrowerType!

  """Percentage of financial contribution to the loan"""
  contributionPercentage: MortgageServices_Numeric
  mortgageServicesApplication: MortgageServices_MortgageServicesApplications

  """
  Auto-incrementing identifier for each application-borrower relationship
  """
  mortgageServicesApplicationBorrowerId: MortgageServices_Int4!

  """References the mortgage application"""
  mortgageServicesApplicationId: MortgageServices_Int4!
  mortgageServicesBorrower: MortgageServices_MortgageServicesBorrowers

  """References the borrower associated with this application"""
  mortgageServicesBorrowerId: MortgageServices_Int4!

  """Relationship of co-borrower to primary borrower"""
  relationshipToPrimary: MortgageServices_MortgageServicesRelationshipType
}

type MortgageServices_MortgageServicesApplicationBorrowersAggExp {
  _count: Int!
  borrowerType: MortgageServices_MortgageServicesBorrowerTypeAggExp!
  contributionPercentage: MortgageServices_NumericAggExp!
  mortgageServicesApplicationBorrowerId: MortgageServices_Int4AggExp!
  mortgageServicesApplicationId: MortgageServices_Int4AggExp!
  mortgageServicesBorrowerId: MortgageServices_Int4AggExp!
  relationshipToPrimary: MortgageServices_MortgageServicesRelationshipTypeAggExp!
}

input MortgageServices_MortgageServicesApplicationBorrowersBoolExp {
  _and: [MortgageServices_MortgageServicesApplicationBorrowersBoolExp!]
  _not: MortgageServices_MortgageServicesApplicationBorrowersBoolExp
  _or: [MortgageServices_MortgageServicesApplicationBorrowersBoolExp!]
  borrowerType: MortgageServices_MortgageServicesBorrowerTypeBoolExp
  contributionPercentage: MortgageServices_NumericBoolExp
  mortgageServicesApplication: MortgageServices_MortgageServicesApplicationsBoolExp
  mortgageServicesApplicationBorrowerId: MortgageServices_Int4BoolExp
  mortgageServicesApplicationId: MortgageServices_Int4BoolExp
  mortgageServicesBorrower: MortgageServices_MortgageServicesBorrowersBoolExp
  mortgageServicesBorrowerId: MortgageServices_Int4BoolExp
  relationshipToPrimary: MortgageServices_MortgageServicesRelationshipTypeBoolExp
}

input MortgageServices_MortgageServicesApplicationBorrowersFilterInput {
  limit: Int
  offset: Int
  order_by: [MortgageServices_MortgageServicesApplicationBorrowersOrderByExp!]
  where: MortgageServices_MortgageServicesApplicationBorrowersBoolExp
}

input MortgageServices_MortgageServicesApplicationBorrowersOrderByExp {
  borrowerType: OrderBy
  contributionPercentage: OrderBy
  mortgageServicesApplication: MortgageServices_MortgageServicesApplicationsOrderByExp
  mortgageServicesApplicationBorrowerId: OrderBy
  mortgageServicesApplicationId: OrderBy
  mortgageServicesBorrower: MortgageServices_MortgageServicesBorrowersOrderByExp
  mortgageServicesBorrowerId: OrderBy
  relationshipToPrimary: OrderBy
}

"""
Stores mortgage application details and tracks application status. Note that the
primary borrower is accessible through the application_borrowers table, not
directly from this table.
"""
type MortgageServices_MortgageServicesApplications {
  """Type of mortgage application"""
  applicationType: MortgageServices_MortgageServicesApplicationType!
  assignedLoanOfficer: Enterprise_EnterpriseAssociates

  """References the branch processing the application"""
  branchId: MortgageServices_Int4

  """When the application was created"""
  creationDateTime: MortgageServices_Timestamptz!

  """Estimated credit score of primary applicant"""
  estimatedCreditScore: MortgageServices_Int4

  """Estimated value of the property"""
  estimatedPropertyValue: MortgageServices_Numeric

  """When the application was last modified"""
  lastUpdatedDateTime: MortgageServices_Timestamptz!

  """References the loan officer handling the application"""
  loanOfficerId: MortgageServices_Int4

  """Purpose of the loan"""
  loanPurpose: MortgageServices_MortgageServicesLoanPurpose
  mortgageServicesApplicationBorrowers(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesApplicationBorrowersOrderByExp!], where: MortgageServices_MortgageServicesApplicationBorrowersBoolExp): [MortgageServices_MortgageServicesApplicationBorrowers!]
  mortgageServicesApplicationBorrowersAggregate(filter_input: MortgageServices_MortgageServicesApplicationBorrowersFilterInput): MortgageServices_MortgageServicesApplicationBorrowersAggExp!

  """Unique identifier for each mortgage application"""
  mortgageServicesApplicationId: MortgageServices_Int4!
  mortgageServicesAppraisals(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesAppraisalsOrderByExp!], where: MortgageServices_MortgageServicesAppraisalsBoolExp): [MortgageServices_MortgageServicesAppraisals!]
  mortgageServicesAppraisalsAggregate(filter_input: MortgageServices_MortgageServicesAppraisalsFilterInput): MortgageServices_MortgageServicesAppraisalsAggExp!
  mortgageServicesConditions(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesConditionsOrderByExp!], where: MortgageServices_MortgageServicesConditionsBoolExp): [MortgageServices_MortgageServicesConditions!]
  mortgageServicesConditionsAggregate(filter_input: MortgageServices_MortgageServicesConditionsFilterInput): MortgageServices_MortgageServicesConditionsAggExp!
  mortgageServicesCreditReports(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesCreditReportsOrderByExp!], where: MortgageServices_MortgageServicesCreditReportsBoolExp): [MortgageServices_MortgageServicesCreditReports!]
  mortgageServicesCreditReportsAggregate(filter_input: MortgageServices_MortgageServicesCreditReportsFilterInput): MortgageServices_MortgageServicesCreditReportsAggExp!
  mortgageServicesCustomerCommunications(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesCustomerCommunicationsOrderByExp!], where: MortgageServices_MortgageServicesCustomerCommunicationsBoolExp): [MortgageServices_MortgageServicesCustomerCommunications!]
  mortgageServicesCustomerCommunicationsAggregate(filter_input: MortgageServices_MortgageServicesCustomerCommunicationsFilterInput): MortgageServices_MortgageServicesCustomerCommunicationsAggExp!
  mortgageServicesDocuments(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesDocumentsOrderByExp!], where: MortgageServices_MortgageServicesDocumentsBoolExp): [MortgageServices_MortgageServicesDocuments!]
  mortgageServicesDocumentsAggregate(filter_input: MortgageServices_MortgageServicesDocumentsFilterInput): MortgageServices_MortgageServicesDocumentsAggExp!
  mortgageServicesHmdaRecords(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesHmdaRecordsOrderByExp!], where: MortgageServices_MortgageServicesHmdaRecordsBoolExp): [MortgageServices_MortgageServicesHmdaRecords!]
  mortgageServicesHmdaRecordsAggregate(filter_input: MortgageServices_MortgageServicesHmdaRecordsFilterInput): MortgageServices_MortgageServicesHmdaRecordsAggExp!
  mortgageServicesLoanProduct: MortgageServices_MortgageServicesLoanProducts

  """References the loan product being applied for"""
  mortgageServicesLoanProductId: MortgageServices_Int4!
  mortgageServicesLoans(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesLoansOrderByExp!], where: MortgageServices_MortgageServicesLoansBoolExp): [MortgageServices_MortgageServicesLoans!]
  mortgageServicesLoansAggregate(filter_input: MortgageServices_MortgageServicesLoansFilterInput): MortgageServices_MortgageServicesLoansAggExp!
  mortgageServicesProperties(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesPropertiesOrderByExp!], where: MortgageServices_MortgageServicesPropertiesBoolExp): [MortgageServices_MortgageServicesProperties!]
  mortgageServicesPropertiesAggregate(filter_input: MortgageServices_MortgageServicesPropertiesFilterInput): MortgageServices_MortgageServicesPropertiesAggExp!
  processedAtBranch: Enterprise_EnterpriseBuildings

  """How the applicant learned about the mortgage product"""
  referralSource: MortgageServices_Varchar

  """Amount of financing requested"""
  requestedLoanAmount: MortgageServices_Numeric!

  """Requested duration of the loan in months"""
  requestedLoanTermMonths: MortgageServices_Int4!

  """Current status in the application workflow"""
  status: MortgageServices_MortgageServicesApplicationStatus!

  """Channel through which application was submitted"""
  submissionChannel: MortgageServices_MortgageServicesSubmissionChannel

  """When the application was formally submitted"""
  submissionDateTime: MortgageServices_Timestamptz
}

type MortgageServices_MortgageServicesApplicationsAggExp {
  _count: Int!
  applicationType: MortgageServices_MortgageServicesApplicationTypeAggExp!
  branchId: MortgageServices_Int4AggExp!
  creationDateTime: MortgageServices_TimestamptzAggExp!
  estimatedCreditScore: MortgageServices_Int4AggExp!
  estimatedPropertyValue: MortgageServices_NumericAggExp!
  lastUpdatedDateTime: MortgageServices_TimestamptzAggExp!
  loanOfficerId: MortgageServices_Int4AggExp!
  loanPurpose: MortgageServices_MortgageServicesLoanPurposeAggExp!
  mortgageServicesApplicationId: MortgageServices_Int4AggExp!
  mortgageServicesLoanProductId: MortgageServices_Int4AggExp!
  referralSource: MortgageServices_VarcharAggExp!
  requestedLoanAmount: MortgageServices_NumericAggExp!
  requestedLoanTermMonths: MortgageServices_Int4AggExp!
  status: MortgageServices_MortgageServicesApplicationStatusAggExp!
  submissionChannel: MortgageServices_MortgageServicesSubmissionChannelAggExp!
  submissionDateTime: MortgageServices_TimestamptzAggExp!
}

input MortgageServices_MortgageServicesApplicationsBoolExp {
  _and: [MortgageServices_MortgageServicesApplicationsBoolExp!]
  _not: MortgageServices_MortgageServicesApplicationsBoolExp
  _or: [MortgageServices_MortgageServicesApplicationsBoolExp!]
  applicationType: MortgageServices_MortgageServicesApplicationTypeBoolExp
  branchId: MortgageServices_Int4BoolExp
  creationDateTime: MortgageServices_TimestamptzBoolExp
  estimatedCreditScore: MortgageServices_Int4BoolExp
  estimatedPropertyValue: MortgageServices_NumericBoolExp
  lastUpdatedDateTime: MortgageServices_TimestamptzBoolExp
  loanOfficerId: MortgageServices_Int4BoolExp
  loanPurpose: MortgageServices_MortgageServicesLoanPurposeBoolExp
  mortgageServicesApplicationBorrowers: MortgageServices_MortgageServicesApplicationBorrowersBoolExp
  mortgageServicesApplicationId: MortgageServices_Int4BoolExp
  mortgageServicesAppraisals: MortgageServices_MortgageServicesAppraisalsBoolExp
  mortgageServicesConditions: MortgageServices_MortgageServicesConditionsBoolExp
  mortgageServicesCreditReports: MortgageServices_MortgageServicesCreditReportsBoolExp
  mortgageServicesCustomerCommunications: MortgageServices_MortgageServicesCustomerCommunicationsBoolExp
  mortgageServicesDocuments: MortgageServices_MortgageServicesDocumentsBoolExp
  mortgageServicesHmdaRecords: MortgageServices_MortgageServicesHmdaRecordsBoolExp
  mortgageServicesLoanProduct: MortgageServices_MortgageServicesLoanProductsBoolExp
  mortgageServicesLoanProductId: MortgageServices_Int4BoolExp
  mortgageServicesLoans: MortgageServices_MortgageServicesLoansBoolExp
  mortgageServicesProperties: MortgageServices_MortgageServicesPropertiesBoolExp
  referralSource: MortgageServices_VarcharBoolExp
  requestedLoanAmount: MortgageServices_NumericBoolExp
  requestedLoanTermMonths: MortgageServices_Int4BoolExp
  status: MortgageServices_MortgageServicesApplicationStatusBoolExp
  submissionChannel: MortgageServices_MortgageServicesSubmissionChannelBoolExp
  submissionDateTime: MortgageServices_TimestamptzBoolExp
}

input MortgageServices_MortgageServicesApplicationsFilterInput {
  limit: Int
  offset: Int
  order_by: [MortgageServices_MortgageServicesApplicationsOrderByExp!]
  where: MortgageServices_MortgageServicesApplicationsBoolExp
}

input MortgageServices_MortgageServicesApplicationsOrderByExp {
  applicationType: OrderBy
  branchId: OrderBy
  creationDateTime: OrderBy
  estimatedCreditScore: OrderBy
  estimatedPropertyValue: OrderBy
  lastUpdatedDateTime: OrderBy
  loanOfficerId: OrderBy
  loanPurpose: OrderBy
  mortgageServicesApplicationId: OrderBy
  mortgageServicesLoanProduct: MortgageServices_MortgageServicesLoanProductsOrderByExp
  mortgageServicesLoanProductId: OrderBy
  referralSource: OrderBy
  requestedLoanAmount: OrderBy
  requestedLoanTermMonths: OrderBy
  status: OrderBy
  submissionChannel: OrderBy
  submissionDateTime: OrderBy
}

scalar MortgageServices_MortgageServicesApplicationStatus

type MortgageServices_MortgageServicesApplicationStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesApplicationStatus
  min: MortgageServices_MortgageServicesApplicationStatus
}

input MortgageServices_MortgageServicesApplicationStatusBoolExp {
  _and: [MortgageServices_MortgageServicesApplicationStatusBoolExp!]
  _eq: MortgageServices_MortgageServicesApplicationStatus
  _gt: MortgageServices_MortgageServicesApplicationStatus
  _gte: MortgageServices_MortgageServicesApplicationStatus
  _in: [MortgageServices_MortgageServicesApplicationStatus!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesApplicationStatus
  _lte: MortgageServices_MortgageServicesApplicationStatus
  _neq: MortgageServices_MortgageServicesApplicationStatus
  _not: MortgageServices_MortgageServicesApplicationStatusBoolExp
  _or: [MortgageServices_MortgageServicesApplicationStatusBoolExp!]
}

scalar MortgageServices_MortgageServicesApplicationType

type MortgageServices_MortgageServicesApplicationTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesApplicationType
  min: MortgageServices_MortgageServicesApplicationType
}

input MortgageServices_MortgageServicesApplicationTypeBoolExp {
  _and: [MortgageServices_MortgageServicesApplicationTypeBoolExp!]
  _eq: MortgageServices_MortgageServicesApplicationType
  _gt: MortgageServices_MortgageServicesApplicationType
  _gte: MortgageServices_MortgageServicesApplicationType
  _in: [MortgageServices_MortgageServicesApplicationType!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesApplicationType
  _lte: MortgageServices_MortgageServicesApplicationType
  _neq: MortgageServices_MortgageServicesApplicationType
  _not: MortgageServices_MortgageServicesApplicationTypeBoolExp
  _or: [MortgageServices_MortgageServicesApplicationTypeBoolExp!]
}

scalar MortgageServices_MortgageServicesAppointmentStatus

type MortgageServices_MortgageServicesAppointmentStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesAppointmentStatus
  min: MortgageServices_MortgageServicesAppointmentStatus
}

input MortgageServices_MortgageServicesAppointmentStatusBoolExp {
  _and: [MortgageServices_MortgageServicesAppointmentStatusBoolExp!]
  _eq: MortgageServices_MortgageServicesAppointmentStatus
  _gt: MortgageServices_MortgageServicesAppointmentStatus
  _gte: MortgageServices_MortgageServicesAppointmentStatus
  _in: [MortgageServices_MortgageServicesAppointmentStatus!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesAppointmentStatus
  _lte: MortgageServices_MortgageServicesAppointmentStatus
  _neq: MortgageServices_MortgageServicesAppointmentStatus
  _not: MortgageServices_MortgageServicesAppointmentStatusBoolExp
  _or: [MortgageServices_MortgageServicesAppointmentStatusBoolExp!]
}

"""Manages property appraisals for mortgage loans"""
type MortgageServices_MortgageServicesAppraisals {
  """Company performing the appraisal"""
  appraisalCompany: MortgageServices_Varchar

  """Fee charged for the appraisal"""
  appraisalFee: MortgageServices_Numeric

  """Type of appraisal being performed"""
  appraisalType: MortgageServices_MortgageServicesAppraisalType!

  """Value determined by the appraisal"""
  appraisedValue: MortgageServices_Numeric

  """Name of the assigned appraiser"""
  appraiserName: MortgageServices_Varchar

  """When the appraisal was completed"""
  completionDate: MortgageServices_Date

  """When the property was inspected"""
  inspectionDate: MortgageServices_Date
  mortgageServicesApplication: MortgageServices_MortgageServicesApplications

  """References the application this appraisal is for"""
  mortgageServicesApplicationId: MortgageServices_Int4!

  """Auto-incrementing identifier for each appraisal"""
  mortgageServicesAppraisalId: MortgageServices_Int4!
  mortgageServicesProperty: MortgageServices_MortgageServicesProperties

  """References the property being appraised"""
  mortgageServicesPropertyId: MortgageServices_Int4!

  """When the appraisal was ordered"""
  orderedDate: MortgageServices_Timestamptz!

  """Storage location of the appraisal report"""
  reportPath: MortgageServices_Varchar

  """Current status of the appraisal process"""
  status: MortgageServices_MortgageServicesAppraisalStatus!
}

type MortgageServices_MortgageServicesAppraisalsAggExp {
  _count: Int!
  appraisalCompany: MortgageServices_VarcharAggExp!
  appraisalFee: MortgageServices_NumericAggExp!
  appraisalType: MortgageServices_MortgageServicesAppraisalTypeAggExp!
  appraisedValue: MortgageServices_NumericAggExp!
  appraiserName: MortgageServices_VarcharAggExp!
  completionDate: MortgageServices_DateAggExp!
  inspectionDate: MortgageServices_DateAggExp!
  mortgageServicesApplicationId: MortgageServices_Int4AggExp!
  mortgageServicesAppraisalId: MortgageServices_Int4AggExp!
  mortgageServicesPropertyId: MortgageServices_Int4AggExp!
  orderedDate: MortgageServices_TimestamptzAggExp!
  reportPath: MortgageServices_VarcharAggExp!
  status: MortgageServices_MortgageServicesAppraisalStatusAggExp!
}

input MortgageServices_MortgageServicesAppraisalsBoolExp {
  _and: [MortgageServices_MortgageServicesAppraisalsBoolExp!]
  _not: MortgageServices_MortgageServicesAppraisalsBoolExp
  _or: [MortgageServices_MortgageServicesAppraisalsBoolExp!]
  appraisalCompany: MortgageServices_VarcharBoolExp
  appraisalFee: MortgageServices_NumericBoolExp
  appraisalType: MortgageServices_MortgageServicesAppraisalTypeBoolExp
  appraisedValue: MortgageServices_NumericBoolExp
  appraiserName: MortgageServices_VarcharBoolExp
  completionDate: MortgageServices_DateBoolExp
  inspectionDate: MortgageServices_DateBoolExp
  mortgageServicesApplication: MortgageServices_MortgageServicesApplicationsBoolExp
  mortgageServicesApplicationId: MortgageServices_Int4BoolExp
  mortgageServicesAppraisalId: MortgageServices_Int4BoolExp
  mortgageServicesProperty: MortgageServices_MortgageServicesPropertiesBoolExp
  mortgageServicesPropertyId: MortgageServices_Int4BoolExp
  orderedDate: MortgageServices_TimestamptzBoolExp
  reportPath: MortgageServices_VarcharBoolExp
  status: MortgageServices_MortgageServicesAppraisalStatusBoolExp
}

input MortgageServices_MortgageServicesAppraisalsFilterInput {
  limit: Int
  offset: Int
  order_by: [MortgageServices_MortgageServicesAppraisalsOrderByExp!]
  where: MortgageServices_MortgageServicesAppraisalsBoolExp
}

input MortgageServices_MortgageServicesAppraisalsOrderByExp {
  appraisalCompany: OrderBy
  appraisalFee: OrderBy
  appraisalType: OrderBy
  appraisedValue: OrderBy
  appraiserName: OrderBy
  completionDate: OrderBy
  inspectionDate: OrderBy
  mortgageServicesApplication: MortgageServices_MortgageServicesApplicationsOrderByExp
  mortgageServicesApplicationId: OrderBy
  mortgageServicesAppraisalId: OrderBy
  mortgageServicesProperty: MortgageServices_MortgageServicesPropertiesOrderByExp
  mortgageServicesPropertyId: OrderBy
  orderedDate: OrderBy
  reportPath: OrderBy
  status: OrderBy
}

scalar MortgageServices_MortgageServicesAppraisalStatus

type MortgageServices_MortgageServicesAppraisalStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesAppraisalStatus
  min: MortgageServices_MortgageServicesAppraisalStatus
}

input MortgageServices_MortgageServicesAppraisalStatusBoolExp {
  _and: [MortgageServices_MortgageServicesAppraisalStatusBoolExp!]
  _eq: MortgageServices_MortgageServicesAppraisalStatus
  _gt: MortgageServices_MortgageServicesAppraisalStatus
  _gte: MortgageServices_MortgageServicesAppraisalStatus
  _in: [MortgageServices_MortgageServicesAppraisalStatus!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesAppraisalStatus
  _lte: MortgageServices_MortgageServicesAppraisalStatus
  _neq: MortgageServices_MortgageServicesAppraisalStatus
  _not: MortgageServices_MortgageServicesAppraisalStatusBoolExp
  _or: [MortgageServices_MortgageServicesAppraisalStatusBoolExp!]
}

scalar MortgageServices_MortgageServicesAppraisalType

type MortgageServices_MortgageServicesAppraisalTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesAppraisalType
  min: MortgageServices_MortgageServicesAppraisalType
}

input MortgageServices_MortgageServicesAppraisalTypeBoolExp {
  _and: [MortgageServices_MortgageServicesAppraisalTypeBoolExp!]
  _eq: MortgageServices_MortgageServicesAppraisalType
  _gt: MortgageServices_MortgageServicesAppraisalType
  _gte: MortgageServices_MortgageServicesAppraisalType
  _in: [MortgageServices_MortgageServicesAppraisalType!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesAppraisalType
  _lte: MortgageServices_MortgageServicesAppraisalType
  _neq: MortgageServices_MortgageServicesAppraisalType
  _not: MortgageServices_MortgageServicesAppraisalTypeBoolExp
  _or: [MortgageServices_MortgageServicesAppraisalTypeBoolExp!]
}

scalar MortgageServices_MortgageServicesAssetType

type MortgageServices_MortgageServicesAssetTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesAssetType
  min: MortgageServices_MortgageServicesAssetType
}

input MortgageServices_MortgageServicesAssetTypeBoolExp {
  _and: [MortgageServices_MortgageServicesAssetTypeBoolExp!]
  _eq: MortgageServices_MortgageServicesAssetType
  _gt: MortgageServices_MortgageServicesAssetType
  _gte: MortgageServices_MortgageServicesAssetType
  _in: [MortgageServices_MortgageServicesAssetType!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesAssetType
  _lte: MortgageServices_MortgageServicesAssetType
  _neq: MortgageServices_MortgageServicesAssetType
  _not: MortgageServices_MortgageServicesAssetTypeBoolExp
  _or: [MortgageServices_MortgageServicesAssetTypeBoolExp!]
}

"""
Tracks assets owned by borrowers that may be relevant to mortgage qualification
"""
type MortgageServices_MortgageServicesBorrowerAssets {
  """Account number for financial assets"""
  accountNumber: MortgageServices_Varchar

  """Type of asset (e.g., bank account, property)"""
  assetType: MortgageServices_MortgageServicesAssetType!

  """Current estimated value of the asset"""
  currentValue: MortgageServices_Numeric!

  """Financial institution holding the asset"""
  institutionName: MortgageServices_Varchar

  """Auto-incrementing identifier for each asset record"""
  mortgageServicesAssetId: MortgageServices_Int4!
  mortgageServicesBorrower: MortgageServices_MortgageServicesBorrowers

  """References the borrower this asset belongs to"""
  mortgageServicesBorrowerId: MortgageServices_Int4!

  """Full text address for real estate assets"""
  propertyAddress: MortgageServices_Varchar

  """When the asset was verified"""
  verificationDate: MortgageServices_Date

  """Status of asset verification process"""
  verificationStatus: MortgageServices_MortgageServicesVerificationStatus!
}

type MortgageServices_MortgageServicesBorrowerAssetsAggExp {
  _count: Int!
  accountNumber: MortgageServices_VarcharAggExp!
  assetType: MortgageServices_MortgageServicesAssetTypeAggExp!
  currentValue: MortgageServices_NumericAggExp!
  institutionName: MortgageServices_VarcharAggExp!
  mortgageServicesAssetId: MortgageServices_Int4AggExp!
  mortgageServicesBorrowerId: MortgageServices_Int4AggExp!
  propertyAddress: MortgageServices_VarcharAggExp!
  verificationDate: MortgageServices_DateAggExp!
  verificationStatus: MortgageServices_MortgageServicesVerificationStatusAggExp!
}

input MortgageServices_MortgageServicesBorrowerAssetsBoolExp {
  _and: [MortgageServices_MortgageServicesBorrowerAssetsBoolExp!]
  _not: MortgageServices_MortgageServicesBorrowerAssetsBoolExp
  _or: [MortgageServices_MortgageServicesBorrowerAssetsBoolExp!]
  accountNumber: MortgageServices_VarcharBoolExp
  assetType: MortgageServices_MortgageServicesAssetTypeBoolExp
  currentValue: MortgageServices_NumericBoolExp
  institutionName: MortgageServices_VarcharBoolExp
  mortgageServicesAssetId: MortgageServices_Int4BoolExp
  mortgageServicesBorrower: MortgageServices_MortgageServicesBorrowersBoolExp
  mortgageServicesBorrowerId: MortgageServices_Int4BoolExp
  propertyAddress: MortgageServices_VarcharBoolExp
  verificationDate: MortgageServices_DateBoolExp
  verificationStatus: MortgageServices_MortgageServicesVerificationStatusBoolExp
}

input MortgageServices_MortgageServicesBorrowerAssetsFilterInput {
  limit: Int
  offset: Int
  order_by: [MortgageServices_MortgageServicesBorrowerAssetsOrderByExp!]
  where: MortgageServices_MortgageServicesBorrowerAssetsBoolExp
}

input MortgageServices_MortgageServicesBorrowerAssetsOrderByExp {
  accountNumber: OrderBy
  assetType: OrderBy
  currentValue: OrderBy
  institutionName: OrderBy
  mortgageServicesAssetId: OrderBy
  mortgageServicesBorrower: MortgageServices_MortgageServicesBorrowersOrderByExp
  mortgageServicesBorrowerId: OrderBy
  propertyAddress: OrderBy
  verificationDate: OrderBy
  verificationStatus: OrderBy
}

"""Tracks employment history and income sources for mortgage borrowers"""
type MortgageServices_MortgageServicesBorrowerEmployments {
  """Name of the employer"""
  employerName: MortgageServices_Varchar!

  """Type of employment arrangement"""
  employmentType: MortgageServices_MortgageServicesEmploymentType!

  """When employment ended, if applicable"""
  endDate: MortgageServices_Date

  """Indicates if this is the borrower's current job"""
  isCurrent: MortgageServices_Bool!

  """Gross monthly income from this employment"""
  monthlyIncome: MortgageServices_Numeric!
  mortgageServicesBorrower: MortgageServices_MortgageServicesBorrowers

  """References the borrower this employment belongs to"""
  mortgageServicesBorrowerId: MortgageServices_Int4!

  """Auto-incrementing identifier for each employment record"""
  mortgageServicesEmploymentId: MortgageServices_Int4!

  """Employer's phone number"""
  phone: MortgageServices_Varchar

  """Job title or position"""
  position: MortgageServices_Varchar!

  """When employment began"""
  startDate: MortgageServices_Date!

  """When the income was verified"""
  verificationDate: MortgageServices_Date

  """Status of income verification process"""
  verificationStatus: MortgageServices_MortgageServicesVerificationStatus!

  """Total years in this profession, even at different employers"""
  yearsInProfession: MortgageServices_Int4
}

type MortgageServices_MortgageServicesBorrowerEmploymentsAggExp {
  _count: Int!
  employerName: MortgageServices_VarcharAggExp!
  employmentType: MortgageServices_MortgageServicesEmploymentTypeAggExp!
  endDate: MortgageServices_DateAggExp!
  isCurrent: MortgageServices_BoolAggExp!
  monthlyIncome: MortgageServices_NumericAggExp!
  mortgageServicesBorrowerId: MortgageServices_Int4AggExp!
  mortgageServicesEmploymentId: MortgageServices_Int4AggExp!
  phone: MortgageServices_VarcharAggExp!
  position: MortgageServices_VarcharAggExp!
  startDate: MortgageServices_DateAggExp!
  verificationDate: MortgageServices_DateAggExp!
  verificationStatus: MortgageServices_MortgageServicesVerificationStatusAggExp!
  yearsInProfession: MortgageServices_Int4AggExp!
}

input MortgageServices_MortgageServicesBorrowerEmploymentsBoolExp {
  _and: [MortgageServices_MortgageServicesBorrowerEmploymentsBoolExp!]
  _not: MortgageServices_MortgageServicesBorrowerEmploymentsBoolExp
  _or: [MortgageServices_MortgageServicesBorrowerEmploymentsBoolExp!]
  employerName: MortgageServices_VarcharBoolExp
  employmentType: MortgageServices_MortgageServicesEmploymentTypeBoolExp
  endDate: MortgageServices_DateBoolExp
  isCurrent: MortgageServices_BoolBoolExp
  monthlyIncome: MortgageServices_NumericBoolExp
  mortgageServicesBorrower: MortgageServices_MortgageServicesBorrowersBoolExp
  mortgageServicesBorrowerId: MortgageServices_Int4BoolExp
  mortgageServicesEmploymentId: MortgageServices_Int4BoolExp
  phone: MortgageServices_VarcharBoolExp
  position: MortgageServices_VarcharBoolExp
  startDate: MortgageServices_DateBoolExp
  verificationDate: MortgageServices_DateBoolExp
  verificationStatus: MortgageServices_MortgageServicesVerificationStatusBoolExp
  yearsInProfession: MortgageServices_Int4BoolExp
}

input MortgageServices_MortgageServicesBorrowerEmploymentsFilterInput {
  limit: Int
  offset: Int
  order_by: [MortgageServices_MortgageServicesBorrowerEmploymentsOrderByExp!]
  where: MortgageServices_MortgageServicesBorrowerEmploymentsBoolExp
}

input MortgageServices_MortgageServicesBorrowerEmploymentsOrderByExp {
  employerName: OrderBy
  employmentType: OrderBy
  endDate: OrderBy
  isCurrent: OrderBy
  monthlyIncome: OrderBy
  mortgageServicesBorrower: MortgageServices_MortgageServicesBorrowersOrderByExp
  mortgageServicesBorrowerId: OrderBy
  mortgageServicesEmploymentId: OrderBy
  phone: OrderBy
  position: OrderBy
  startDate: OrderBy
  verificationDate: OrderBy
  verificationStatus: OrderBy
  yearsInProfession: OrderBy
}

"""Tracks various income sources for mortgage borrowers beyond employment"""
type MortgageServices_MortgageServicesBorrowerIncomes {
  """Income amount"""
  amount: MortgageServices_Numeric!

  """How often income is received"""
  frequency: MortgageServices_MortgageServicesIncomeFrequency!

  """Source or type of income"""
  incomeType: MortgageServices_MortgageServicesIncomeType!
  mortgageServicesBorrower: MortgageServices_MortgageServicesBorrowers

  """References the borrower this income belongs to"""
  mortgageServicesBorrowerId: MortgageServices_Int4!

  """Auto-incrementing identifier for each income record"""
  mortgageServicesIncomeId: MortgageServices_Int4!

  """When the income was verified"""
  verificationDate: MortgageServices_Date

  """Status of income verification process"""
  verificationStatus: MortgageServices_MortgageServicesVerificationStatus!
}

type MortgageServices_MortgageServicesBorrowerIncomesAggExp {
  _count: Int!
  amount: MortgageServices_NumericAggExp!
  frequency: MortgageServices_MortgageServicesIncomeFrequencyAggExp!
  incomeType: MortgageServices_MortgageServicesIncomeTypeAggExp!
  mortgageServicesBorrowerId: MortgageServices_Int4AggExp!
  mortgageServicesIncomeId: MortgageServices_Int4AggExp!
  verificationDate: MortgageServices_DateAggExp!
  verificationStatus: MortgageServices_MortgageServicesVerificationStatusAggExp!
}

input MortgageServices_MortgageServicesBorrowerIncomesBoolExp {
  _and: [MortgageServices_MortgageServicesBorrowerIncomesBoolExp!]
  _not: MortgageServices_MortgageServicesBorrowerIncomesBoolExp
  _or: [MortgageServices_MortgageServicesBorrowerIncomesBoolExp!]
  amount: MortgageServices_NumericBoolExp
  frequency: MortgageServices_MortgageServicesIncomeFrequencyBoolExp
  incomeType: MortgageServices_MortgageServicesIncomeTypeBoolExp
  mortgageServicesBorrower: MortgageServices_MortgageServicesBorrowersBoolExp
  mortgageServicesBorrowerId: MortgageServices_Int4BoolExp
  mortgageServicesIncomeId: MortgageServices_Int4BoolExp
  verificationDate: MortgageServices_DateBoolExp
  verificationStatus: MortgageServices_MortgageServicesVerificationStatusBoolExp
}

input MortgageServices_MortgageServicesBorrowerIncomesFilterInput {
  limit: Int
  offset: Int
  order_by: [MortgageServices_MortgageServicesBorrowerIncomesOrderByExp!]
  where: MortgageServices_MortgageServicesBorrowerIncomesBoolExp
}

input MortgageServices_MortgageServicesBorrowerIncomesOrderByExp {
  amount: OrderBy
  frequency: OrderBy
  incomeType: OrderBy
  mortgageServicesBorrower: MortgageServices_MortgageServicesBorrowersOrderByExp
  mortgageServicesBorrowerId: OrderBy
  mortgageServicesIncomeId: OrderBy
  verificationDate: OrderBy
  verificationStatus: OrderBy
}

"""Tracks debts and financial obligations of mortgage borrowers"""
type MortgageServices_MortgageServicesBorrowerLiabilities {
  """Account number for the liability"""
  accountNumber: MortgageServices_Varchar

  """Name of creditor"""
  creditorName: MortgageServices_Varchar!

  """Current outstanding balance"""
  currentBalance: MortgageServices_Numeric!

  """Current interest rate on the liability"""
  interestRate: MortgageServices_Numeric

  """Type of debt or obligation"""
  liabilityType: MortgageServices_MortgageServicesLiabilityType!

  """When the liability is scheduled to be fully paid"""
  maturityDate: MortgageServices_Date

  """Regular monthly payment amount"""
  monthlyPayment: MortgageServices_Numeric!
  mortgageServicesBorrower: MortgageServices_MortgageServicesBorrowers

  """References the borrower this liability belongs to"""
  mortgageServicesBorrowerId: MortgageServices_Int4!

  """Auto-incrementing identifier for each liability record"""
  mortgageServicesLiabilityId: MortgageServices_Int4!

  """Original amount of the liability"""
  originalAmount: MortgageServices_Numeric

  """When the liability was originated"""
  originationDate: MortgageServices_Date

  """When the liability was verified"""
  verificationDate: MortgageServices_Date

  """Status of liability verification process"""
  verificationStatus: MortgageServices_MortgageServicesVerificationStatus!

  """Whether this liability will be paid off with the mortgage proceeds"""
  willBePaidOff: MortgageServices_Bool!
}

type MortgageServices_MortgageServicesBorrowerLiabilitiesAggExp {
  _count: Int!
  accountNumber: MortgageServices_VarcharAggExp!
  creditorName: MortgageServices_VarcharAggExp!
  currentBalance: MortgageServices_NumericAggExp!
  interestRate: MortgageServices_NumericAggExp!
  liabilityType: MortgageServices_MortgageServicesLiabilityTypeAggExp!
  maturityDate: MortgageServices_DateAggExp!
  monthlyPayment: MortgageServices_NumericAggExp!
  mortgageServicesBorrowerId: MortgageServices_Int4AggExp!
  mortgageServicesLiabilityId: MortgageServices_Int4AggExp!
  originalAmount: MortgageServices_NumericAggExp!
  originationDate: MortgageServices_DateAggExp!
  verificationDate: MortgageServices_DateAggExp!
  verificationStatus: MortgageServices_MortgageServicesVerificationStatusAggExp!
  willBePaidOff: MortgageServices_BoolAggExp!
}

input MortgageServices_MortgageServicesBorrowerLiabilitiesBoolExp {
  _and: [MortgageServices_MortgageServicesBorrowerLiabilitiesBoolExp!]
  _not: MortgageServices_MortgageServicesBorrowerLiabilitiesBoolExp
  _or: [MortgageServices_MortgageServicesBorrowerLiabilitiesBoolExp!]
  accountNumber: MortgageServices_VarcharBoolExp
  creditorName: MortgageServices_VarcharBoolExp
  currentBalance: MortgageServices_NumericBoolExp
  interestRate: MortgageServices_NumericBoolExp
  liabilityType: MortgageServices_MortgageServicesLiabilityTypeBoolExp
  maturityDate: MortgageServices_DateBoolExp
  monthlyPayment: MortgageServices_NumericBoolExp
  mortgageServicesBorrower: MortgageServices_MortgageServicesBorrowersBoolExp
  mortgageServicesBorrowerId: MortgageServices_Int4BoolExp
  mortgageServicesLiabilityId: MortgageServices_Int4BoolExp
  originalAmount: MortgageServices_NumericBoolExp
  originationDate: MortgageServices_DateBoolExp
  verificationDate: MortgageServices_DateBoolExp
  verificationStatus: MortgageServices_MortgageServicesVerificationStatusBoolExp
  willBePaidOff: MortgageServices_BoolBoolExp
}

input MortgageServices_MortgageServicesBorrowerLiabilitiesFilterInput {
  limit: Int
  offset: Int
  order_by: [MortgageServices_MortgageServicesBorrowerLiabilitiesOrderByExp!]
  where: MortgageServices_MortgageServicesBorrowerLiabilitiesBoolExp
}

input MortgageServices_MortgageServicesBorrowerLiabilitiesOrderByExp {
  accountNumber: OrderBy
  creditorName: OrderBy
  currentBalance: OrderBy
  interestRate: OrderBy
  liabilityType: OrderBy
  maturityDate: OrderBy
  monthlyPayment: OrderBy
  mortgageServicesBorrower: MortgageServices_MortgageServicesBorrowersOrderByExp
  mortgageServicesBorrowerId: OrderBy
  mortgageServicesLiabilityId: OrderBy
  originalAmount: OrderBy
  originationDate: OrderBy
  verificationDate: OrderBy
  verificationStatus: OrderBy
  willBePaidOff: OrderBy
}

"""
Stores mortgage-specific information about borrowers, note additional personal
information stored in the enterprise parties table
"""
type MortgageServices_MortgageServicesBorrowers {
  currentAddress: Enterprise_EnterpriseAddresses

  """References borrower's current address"""
  currentAddressId: MortgageServices_Int4

  """Number of dependents claimed by borrower"""
  dependentCount: MortgageServices_Int4

  """
  Reference to enterprise party record - the source of truth for personal information
  """
  enterprisePartyId: MortgageServices_Int4!
  mailingAddress: Enterprise_EnterpriseAddresses

  """References borrower's mailing address if different"""
  mailingAddressId: MortgageServices_Int4
  mortgageServicesApplicationBorrowers(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesApplicationBorrowersOrderByExp!], where: MortgageServices_MortgageServicesApplicationBorrowersBoolExp): [MortgageServices_MortgageServicesApplicationBorrowers!]
  mortgageServicesApplicationBorrowersAggregate(filter_input: MortgageServices_MortgageServicesApplicationBorrowersFilterInput): MortgageServices_MortgageServicesApplicationBorrowersAggExp!
  mortgageServicesBorrowerAssets(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesBorrowerAssetsOrderByExp!], where: MortgageServices_MortgageServicesBorrowerAssetsBoolExp): [MortgageServices_MortgageServicesBorrowerAssets!]
  mortgageServicesBorrowerAssetsAggregate(filter_input: MortgageServices_MortgageServicesBorrowerAssetsFilterInput): MortgageServices_MortgageServicesBorrowerAssetsAggExp!
  mortgageServicesBorrowerEmployments(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesBorrowerEmploymentsOrderByExp!], where: MortgageServices_MortgageServicesBorrowerEmploymentsBoolExp): [MortgageServices_MortgageServicesBorrowerEmployments!]
  mortgageServicesBorrowerEmploymentsAggregate(filter_input: MortgageServices_MortgageServicesBorrowerEmploymentsFilterInput): MortgageServices_MortgageServicesBorrowerEmploymentsAggExp!

  """Unique identifier for each borrower"""
  mortgageServicesBorrowerId: MortgageServices_Int4!
  mortgageServicesBorrowerIncomes(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesBorrowerIncomesOrderByExp!], where: MortgageServices_MortgageServicesBorrowerIncomesBoolExp): [MortgageServices_MortgageServicesBorrowerIncomes!]
  mortgageServicesBorrowerIncomesAggregate(filter_input: MortgageServices_MortgageServicesBorrowerIncomesFilterInput): MortgageServices_MortgageServicesBorrowerIncomesAggExp!
  mortgageServicesBorrowerLiabilities(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesBorrowerLiabilitiesOrderByExp!], where: MortgageServices_MortgageServicesBorrowerLiabilitiesBoolExp): [MortgageServices_MortgageServicesBorrowerLiabilities!]
  mortgageServicesBorrowerLiabilitiesAggregate(filter_input: MortgageServices_MortgageServicesBorrowerLiabilitiesFilterInput): MortgageServices_MortgageServicesBorrowerLiabilitiesAggExp!
  mortgageServicesCreditReports(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesCreditReportsOrderByExp!], where: MortgageServices_MortgageServicesCreditReportsBoolExp): [MortgageServices_MortgageServicesCreditReports!]
  mortgageServicesCreditReportsAggregate(filter_input: MortgageServices_MortgageServicesCreditReportsFilterInput): MortgageServices_MortgageServicesCreditReportsAggExp!
  previousAddress: Enterprise_EnterpriseAddresses

  """References borrower's previous address if relevant"""
  previousAddressId: MortgageServices_Int4

  """Total years of education"""
  yearsInSchool: MortgageServices_Int4
}

type MortgageServices_MortgageServicesBorrowersAggExp {
  _count: Int!
  currentAddressId: MortgageServices_Int4AggExp!
  dependentCount: MortgageServices_Int4AggExp!
  enterprisePartyId: MortgageServices_Int4AggExp!
  mailingAddressId: MortgageServices_Int4AggExp!
  mortgageServicesBorrowerId: MortgageServices_Int4AggExp!
  previousAddressId: MortgageServices_Int4AggExp!
  yearsInSchool: MortgageServices_Int4AggExp!
}

input MortgageServices_MortgageServicesBorrowersBoolExp {
  _and: [MortgageServices_MortgageServicesBorrowersBoolExp!]
  _not: MortgageServices_MortgageServicesBorrowersBoolExp
  _or: [MortgageServices_MortgageServicesBorrowersBoolExp!]
  currentAddressId: MortgageServices_Int4BoolExp
  dependentCount: MortgageServices_Int4BoolExp
  enterprisePartyId: MortgageServices_Int4BoolExp
  mailingAddressId: MortgageServices_Int4BoolExp
  mortgageServicesApplicationBorrowers: MortgageServices_MortgageServicesApplicationBorrowersBoolExp
  mortgageServicesBorrowerAssets: MortgageServices_MortgageServicesBorrowerAssetsBoolExp
  mortgageServicesBorrowerEmployments: MortgageServices_MortgageServicesBorrowerEmploymentsBoolExp
  mortgageServicesBorrowerId: MortgageServices_Int4BoolExp
  mortgageServicesBorrowerIncomes: MortgageServices_MortgageServicesBorrowerIncomesBoolExp
  mortgageServicesBorrowerLiabilities: MortgageServices_MortgageServicesBorrowerLiabilitiesBoolExp
  mortgageServicesCreditReports: MortgageServices_MortgageServicesCreditReportsBoolExp
  previousAddressId: MortgageServices_Int4BoolExp
  yearsInSchool: MortgageServices_Int4BoolExp
}

input MortgageServices_MortgageServicesBorrowersFilterInput {
  limit: Int
  offset: Int
  order_by: [MortgageServices_MortgageServicesBorrowersOrderByExp!]
  where: MortgageServices_MortgageServicesBorrowersBoolExp
}

input MortgageServices_MortgageServicesBorrowersOrderByExp {
  currentAddressId: OrderBy
  dependentCount: OrderBy
  enterprisePartyId: OrderBy
  mailingAddressId: OrderBy
  mortgageServicesBorrowerId: OrderBy
  previousAddressId: OrderBy
  yearsInSchool: OrderBy
}

scalar MortgageServices_MortgageServicesBorrowerType

type MortgageServices_MortgageServicesBorrowerTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesBorrowerType
  min: MortgageServices_MortgageServicesBorrowerType
}

input MortgageServices_MortgageServicesBorrowerTypeBoolExp {
  _and: [MortgageServices_MortgageServicesBorrowerTypeBoolExp!]
  _eq: MortgageServices_MortgageServicesBorrowerType
  _gt: MortgageServices_MortgageServicesBorrowerType
  _gte: MortgageServices_MortgageServicesBorrowerType
  _in: [MortgageServices_MortgageServicesBorrowerType!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesBorrowerType
  _lte: MortgageServices_MortgageServicesBorrowerType
  _neq: MortgageServices_MortgageServicesBorrowerType
  _not: MortgageServices_MortgageServicesBorrowerTypeBoolExp
  _or: [MortgageServices_MortgageServicesBorrowerTypeBoolExp!]
}

"""Records final details of closed mortgage loans"""
type MortgageServices_MortgageServicesClosedLoans {
  """When loan documents were signed"""
  closingDate: MortgageServices_Date!

  """When funds were disbursed to relevant parties"""
  disbursementDate: MortgageServices_Date

  """Final amount borrower paid at closing"""
  finalCashToClose: MortgageServices_Numeric!

  """Final interest rate of the loan"""
  finalInterestRate: MortgageServices_Numeric!

  """Final principal amount of the loan"""
  finalLoanAmount: MortgageServices_Numeric!

  """Final principal and interest payment"""
  finalMonthlyPayment: MortgageServices_Numeric!

  """When first loan payment is due"""
  firstPaymentDate: MortgageServices_Date!

  """When loan funds were disbursed"""
  fundingDate: MortgageServices_Date!

  """When loan is scheduled to be fully paid off"""
  maturityDate: MortgageServices_Date!

  """Auto-incrementing identifier for each closed loan record"""
  mortgageServicesClosedLoanId: MortgageServices_Int4!
  mortgageServicesLoan: MortgageServices_MortgageServicesLoans

  """References the loan that was closed"""
  mortgageServicesLoanId: MortgageServices_Int4!

  """When mortgage was recorded with government office"""
  recordingDate: MortgageServices_Date

  """Name of the settlement agent"""
  settlementAgent: MortgageServices_Varchar

  """Company handling the settlement"""
  settlementCompany: MortgageServices_Varchar
}

type MortgageServices_MortgageServicesClosedLoansAggExp {
  _count: Int!
  closingDate: MortgageServices_DateAggExp!
  disbursementDate: MortgageServices_DateAggExp!
  finalCashToClose: MortgageServices_NumericAggExp!
  finalInterestRate: MortgageServices_NumericAggExp!
  finalLoanAmount: MortgageServices_NumericAggExp!
  finalMonthlyPayment: MortgageServices_NumericAggExp!
  firstPaymentDate: MortgageServices_DateAggExp!
  fundingDate: MortgageServices_DateAggExp!
  maturityDate: MortgageServices_DateAggExp!
  mortgageServicesClosedLoanId: MortgageServices_Int4AggExp!
  mortgageServicesLoanId: MortgageServices_Int4AggExp!
  recordingDate: MortgageServices_DateAggExp!
  settlementAgent: MortgageServices_VarcharAggExp!
  settlementCompany: MortgageServices_VarcharAggExp!
}

input MortgageServices_MortgageServicesClosedLoansBoolExp {
  _and: [MortgageServices_MortgageServicesClosedLoansBoolExp!]
  _not: MortgageServices_MortgageServicesClosedLoansBoolExp
  _or: [MortgageServices_MortgageServicesClosedLoansBoolExp!]
  closingDate: MortgageServices_DateBoolExp
  disbursementDate: MortgageServices_DateBoolExp
  finalCashToClose: MortgageServices_NumericBoolExp
  finalInterestRate: MortgageServices_NumericBoolExp
  finalLoanAmount: MortgageServices_NumericBoolExp
  finalMonthlyPayment: MortgageServices_NumericBoolExp
  firstPaymentDate: MortgageServices_DateBoolExp
  fundingDate: MortgageServices_DateBoolExp
  maturityDate: MortgageServices_DateBoolExp
  mortgageServicesClosedLoanId: MortgageServices_Int4BoolExp
  mortgageServicesLoan: MortgageServices_MortgageServicesLoansBoolExp
  mortgageServicesLoanId: MortgageServices_Int4BoolExp
  recordingDate: MortgageServices_DateBoolExp
  settlementAgent: MortgageServices_VarcharBoolExp
  settlementCompany: MortgageServices_VarcharBoolExp
}

input MortgageServices_MortgageServicesClosedLoansFilterInput {
  limit: Int
  offset: Int
  order_by: [MortgageServices_MortgageServicesClosedLoansOrderByExp!]
  where: MortgageServices_MortgageServicesClosedLoansBoolExp
}

input MortgageServices_MortgageServicesClosedLoansOrderByExp {
  closingDate: OrderBy
  disbursementDate: OrderBy
  finalCashToClose: OrderBy
  finalInterestRate: OrderBy
  finalLoanAmount: OrderBy
  finalMonthlyPayment: OrderBy
  firstPaymentDate: OrderBy
  fundingDate: OrderBy
  maturityDate: OrderBy
  mortgageServicesClosedLoanId: OrderBy
  mortgageServicesLoan: MortgageServices_MortgageServicesLoansOrderByExp
  mortgageServicesLoanId: OrderBy
  recordingDate: OrderBy
  settlementAgent: OrderBy
  settlementCompany: OrderBy
}

"""Schedules and tracks mortgage closing appointments"""
type MortgageServices_MortgageServicesClosingAppointments {
  """When the closing actually occurred"""
  actualClosingDate: MortgageServices_Timestamptz

  """Name of the closing agent"""
  closingAgent: MortgageServices_Varchar

  """Company handling the closing"""
  closingCompany: MortgageServices_Varchar

  """Fee charged for closing services"""
  closingFee: MortgageServices_Numeric

  """Type of closing process being used"""
  closingType: MortgageServices_MortgageServicesClosingType!
  locationAddress: Enterprise_EnterpriseAddresses

  """References the address where closing will occur"""
  locationAddressId: MortgageServices_Int4

  """Auto-incrementing identifier for each appointment"""
  mortgageServicesAppointmentId: MortgageServices_Int4!
  mortgageServicesLoan: MortgageServices_MortgageServicesLoans

  """Reference to the loan this closing is for"""
  mortgageServicesLoanId: MortgageServices_Int4!

  """Additional information about the closing"""
  notes: MortgageServices_Text

  """When the closing is scheduled"""
  scheduledDate: MortgageServices_Timestamptz!

  """Current status of the closing appointment"""
  status: MortgageServices_MortgageServicesAppointmentStatus!
}

type MortgageServices_MortgageServicesClosingAppointmentsAggExp {
  _count: Int!
  actualClosingDate: MortgageServices_TimestamptzAggExp!
  closingAgent: MortgageServices_VarcharAggExp!
  closingCompany: MortgageServices_VarcharAggExp!
  closingFee: MortgageServices_NumericAggExp!
  closingType: MortgageServices_MortgageServicesClosingTypeAggExp!
  locationAddressId: MortgageServices_Int4AggExp!
  mortgageServicesAppointmentId: MortgageServices_Int4AggExp!
  mortgageServicesLoanId: MortgageServices_Int4AggExp!
  notes: MortgageServices_TextAggExp!
  scheduledDate: MortgageServices_TimestamptzAggExp!
  status: MortgageServices_MortgageServicesAppointmentStatusAggExp!
}

input MortgageServices_MortgageServicesClosingAppointmentsBoolExp {
  _and: [MortgageServices_MortgageServicesClosingAppointmentsBoolExp!]
  _not: MortgageServices_MortgageServicesClosingAppointmentsBoolExp
  _or: [MortgageServices_MortgageServicesClosingAppointmentsBoolExp!]
  actualClosingDate: MortgageServices_TimestamptzBoolExp
  closingAgent: MortgageServices_VarcharBoolExp
  closingCompany: MortgageServices_VarcharBoolExp
  closingFee: MortgageServices_NumericBoolExp
  closingType: MortgageServices_MortgageServicesClosingTypeBoolExp
  locationAddressId: MortgageServices_Int4BoolExp
  mortgageServicesAppointmentId: MortgageServices_Int4BoolExp
  mortgageServicesLoan: MortgageServices_MortgageServicesLoansBoolExp
  mortgageServicesLoanId: MortgageServices_Int4BoolExp
  notes: MortgageServices_TextBoolExp
  scheduledDate: MortgageServices_TimestamptzBoolExp
  status: MortgageServices_MortgageServicesAppointmentStatusBoolExp
}

input MortgageServices_MortgageServicesClosingAppointmentsFilterInput {
  limit: Int
  offset: Int
  order_by: [MortgageServices_MortgageServicesClosingAppointmentsOrderByExp!]
  where: MortgageServices_MortgageServicesClosingAppointmentsBoolExp
}

input MortgageServices_MortgageServicesClosingAppointmentsOrderByExp {
  actualClosingDate: OrderBy
  closingAgent: OrderBy
  closingCompany: OrderBy
  closingFee: OrderBy
  closingType: OrderBy
  locationAddressId: OrderBy
  mortgageServicesAppointmentId: OrderBy
  mortgageServicesLoan: MortgageServices_MortgageServicesLoansOrderByExp
  mortgageServicesLoanId: OrderBy
  notes: OrderBy
  scheduledDate: OrderBy
  status: OrderBy
}

"""Manages closing disclosure documents required by regulations"""
type MortgageServices_MortgageServicesClosingDisclosures {
  """Cash to close shown on disclosure"""
  cashToClose: MortgageServices_Numeric!

  """When the disclosure was created"""
  createdDate: MortgageServices_Timestamptz!

  """How disclosure was delivered"""
  deliveryMethod: MortgageServices_MortgageServicesDeliveryMethod!

  """Type of disclosure document"""
  disclosureType: MortgageServices_MortgageServicesDisclosureType!

  """Storage location of the disclosure document"""
  documentPath: MortgageServices_Varchar

  """Interest rate shown on disclosure"""
  interestRate: MortgageServices_Numeric!

  """Loan amount shown on disclosure"""
  loanAmount: MortgageServices_Numeric!

  """Monthly payment shown on disclosure"""
  monthlyPayment: MortgageServices_Numeric!

  """Auto-incrementing identifier for each disclosure"""
  mortgageServicesDisclosureId: MortgageServices_Int4!
  mortgageServicesLoan: MortgageServices_MortgageServicesLoans

  """Reference to the loan this disclosure is for"""
  mortgageServicesLoanId: MortgageServices_Int4!

  """When signed disclosure was received back"""
  receivedDate: MortgageServices_Timestamptz

  """When the disclosure was sent to borrowers"""
  sentDate: MortgageServices_Timestamptz

  """Total closing costs shown on disclosure"""
  totalClosingCosts: MortgageServices_Numeric!
}

type MortgageServices_MortgageServicesClosingDisclosuresAggExp {
  _count: Int!
  cashToClose: MortgageServices_NumericAggExp!
  createdDate: MortgageServices_TimestamptzAggExp!
  deliveryMethod: MortgageServices_MortgageServicesDeliveryMethodAggExp!
  disclosureType: MortgageServices_MortgageServicesDisclosureTypeAggExp!
  documentPath: MortgageServices_VarcharAggExp!
  interestRate: MortgageServices_NumericAggExp!
  loanAmount: MortgageServices_NumericAggExp!
  monthlyPayment: MortgageServices_NumericAggExp!
  mortgageServicesDisclosureId: MortgageServices_Int4AggExp!
  mortgageServicesLoanId: MortgageServices_Int4AggExp!
  receivedDate: MortgageServices_TimestamptzAggExp!
  sentDate: MortgageServices_TimestamptzAggExp!
  totalClosingCosts: MortgageServices_NumericAggExp!
}

input MortgageServices_MortgageServicesClosingDisclosuresBoolExp {
  _and: [MortgageServices_MortgageServicesClosingDisclosuresBoolExp!]
  _not: MortgageServices_MortgageServicesClosingDisclosuresBoolExp
  _or: [MortgageServices_MortgageServicesClosingDisclosuresBoolExp!]
  cashToClose: MortgageServices_NumericBoolExp
  createdDate: MortgageServices_TimestamptzBoolExp
  deliveryMethod: MortgageServices_MortgageServicesDeliveryMethodBoolExp
  disclosureType: MortgageServices_MortgageServicesDisclosureTypeBoolExp
  documentPath: MortgageServices_VarcharBoolExp
  interestRate: MortgageServices_NumericBoolExp
  loanAmount: MortgageServices_NumericBoolExp
  monthlyPayment: MortgageServices_NumericBoolExp
  mortgageServicesDisclosureId: MortgageServices_Int4BoolExp
  mortgageServicesLoan: MortgageServices_MortgageServicesLoansBoolExp
  mortgageServicesLoanId: MortgageServices_Int4BoolExp
  receivedDate: MortgageServices_TimestamptzBoolExp
  sentDate: MortgageServices_TimestamptzBoolExp
  totalClosingCosts: MortgageServices_NumericBoolExp
}

input MortgageServices_MortgageServicesClosingDisclosuresFilterInput {
  limit: Int
  offset: Int
  order_by: [MortgageServices_MortgageServicesClosingDisclosuresOrderByExp!]
  where: MortgageServices_MortgageServicesClosingDisclosuresBoolExp
}

input MortgageServices_MortgageServicesClosingDisclosuresOrderByExp {
  cashToClose: OrderBy
  createdDate: OrderBy
  deliveryMethod: OrderBy
  disclosureType: OrderBy
  documentPath: OrderBy
  interestRate: OrderBy
  loanAmount: OrderBy
  monthlyPayment: OrderBy
  mortgageServicesDisclosureId: OrderBy
  mortgageServicesLoan: MortgageServices_MortgageServicesLoansOrderByExp
  mortgageServicesLoanId: OrderBy
  receivedDate: OrderBy
  sentDate: OrderBy
  totalClosingCosts: OrderBy
}

scalar MortgageServices_MortgageServicesClosingType

type MortgageServices_MortgageServicesClosingTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesClosingType
  min: MortgageServices_MortgageServicesClosingType
}

input MortgageServices_MortgageServicesClosingTypeBoolExp {
  _and: [MortgageServices_MortgageServicesClosingTypeBoolExp!]
  _eq: MortgageServices_MortgageServicesClosingType
  _gt: MortgageServices_MortgageServicesClosingType
  _gte: MortgageServices_MortgageServicesClosingType
  _in: [MortgageServices_MortgageServicesClosingType!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesClosingType
  _lte: MortgageServices_MortgageServicesClosingType
  _neq: MortgageServices_MortgageServicesClosingType
  _not: MortgageServices_MortgageServicesClosingTypeBoolExp
  _or: [MortgageServices_MortgageServicesClosingTypeBoolExp!]
}

scalar MortgageServices_MortgageServicesCommunicationDirection

type MortgageServices_MortgageServicesCommunicationDirectionAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesCommunicationDirection
  min: MortgageServices_MortgageServicesCommunicationDirection
}

input MortgageServices_MortgageServicesCommunicationDirectionBoolExp {
  _and: [MortgageServices_MortgageServicesCommunicationDirectionBoolExp!]
  _eq: MortgageServices_MortgageServicesCommunicationDirection
  _gt: MortgageServices_MortgageServicesCommunicationDirection
  _gte: MortgageServices_MortgageServicesCommunicationDirection
  _in: [MortgageServices_MortgageServicesCommunicationDirection!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesCommunicationDirection
  _lte: MortgageServices_MortgageServicesCommunicationDirection
  _neq: MortgageServices_MortgageServicesCommunicationDirection
  _not: MortgageServices_MortgageServicesCommunicationDirectionBoolExp
  _or: [MortgageServices_MortgageServicesCommunicationDirectionBoolExp!]
}

scalar MortgageServices_MortgageServicesCommunicationPurpose

type MortgageServices_MortgageServicesCommunicationPurposeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesCommunicationPurpose
  min: MortgageServices_MortgageServicesCommunicationPurpose
}

input MortgageServices_MortgageServicesCommunicationPurposeBoolExp {
  _and: [MortgageServices_MortgageServicesCommunicationPurposeBoolExp!]
  _eq: MortgageServices_MortgageServicesCommunicationPurpose
  _gt: MortgageServices_MortgageServicesCommunicationPurpose
  _gte: MortgageServices_MortgageServicesCommunicationPurpose
  _in: [MortgageServices_MortgageServicesCommunicationPurpose!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesCommunicationPurpose
  _lte: MortgageServices_MortgageServicesCommunicationPurpose
  _neq: MortgageServices_MortgageServicesCommunicationPurpose
  _not: MortgageServices_MortgageServicesCommunicationPurposeBoolExp
  _or: [MortgageServices_MortgageServicesCommunicationPurposeBoolExp!]
}

scalar MortgageServices_MortgageServicesCommunicationStatus

type MortgageServices_MortgageServicesCommunicationStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesCommunicationStatus
  min: MortgageServices_MortgageServicesCommunicationStatus
}

input MortgageServices_MortgageServicesCommunicationStatusBoolExp {
  _and: [MortgageServices_MortgageServicesCommunicationStatusBoolExp!]
  _eq: MortgageServices_MortgageServicesCommunicationStatus
  _gt: MortgageServices_MortgageServicesCommunicationStatus
  _gte: MortgageServices_MortgageServicesCommunicationStatus
  _in: [MortgageServices_MortgageServicesCommunicationStatus!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesCommunicationStatus
  _lte: MortgageServices_MortgageServicesCommunicationStatus
  _neq: MortgageServices_MortgageServicesCommunicationStatus
  _not: MortgageServices_MortgageServicesCommunicationStatusBoolExp
  _or: [MortgageServices_MortgageServicesCommunicationStatusBoolExp!]
}

scalar MortgageServices_MortgageServicesCommunicationType

type MortgageServices_MortgageServicesCommunicationTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesCommunicationType
  min: MortgageServices_MortgageServicesCommunicationType
}

input MortgageServices_MortgageServicesCommunicationTypeBoolExp {
  _and: [MortgageServices_MortgageServicesCommunicationTypeBoolExp!]
  _eq: MortgageServices_MortgageServicesCommunicationType
  _gt: MortgageServices_MortgageServicesCommunicationType
  _gte: MortgageServices_MortgageServicesCommunicationType
  _in: [MortgageServices_MortgageServicesCommunicationType!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesCommunicationType
  _lte: MortgageServices_MortgageServicesCommunicationType
  _neq: MortgageServices_MortgageServicesCommunicationType
  _not: MortgageServices_MortgageServicesCommunicationTypeBoolExp
  _or: [MortgageServices_MortgageServicesCommunicationTypeBoolExp!]
}

"""Tracks underwriting conditions that must be cleared for loan approval"""
type MortgageServices_MortgageServicesConditions {
  """References the staff member who cleared the condition"""
  clearedById: MortgageServices_Int4

  """When the condition was satisfied or waived"""
  clearedDate: MortgageServices_Timestamptz
  conditionClearedBy: Enterprise_EnterpriseAssociates
  conditionCreatedBy: Enterprise_EnterpriseAssociates

  """When the condition must be satisfied"""
  conditionType: MortgageServices_MortgageServicesConditionType!

  """References the staff member who created the condition"""
  createdById: MortgageServices_Int4!

  """When the condition was created"""
  createdDate: MortgageServices_Timestamptz!

  """Detailed explanation of what must be provided or resolved"""
  description: MortgageServices_Text!

  """Deadline for satisfying the condition"""
  dueDate: MortgageServices_Date
  mortgageServicesApplication: MortgageServices_MortgageServicesApplications

  """References the application this condition applies to"""
  mortgageServicesApplicationId: MortgageServices_Int4!

  """Auto-incrementing identifier for each condition"""
  mortgageServicesConditionId: MortgageServices_Int4!

  """Current status of the condition"""
  status: MortgageServices_MortgageServicesConditionStatus!
}

type MortgageServices_MortgageServicesConditionsAggExp {
  _count: Int!
  clearedById: MortgageServices_Int4AggExp!
  clearedDate: MortgageServices_TimestamptzAggExp!
  conditionType: MortgageServices_MortgageServicesConditionTypeAggExp!
  createdById: MortgageServices_Int4AggExp!
  createdDate: MortgageServices_TimestamptzAggExp!
  description: MortgageServices_TextAggExp!
  dueDate: MortgageServices_DateAggExp!
  mortgageServicesApplicationId: MortgageServices_Int4AggExp!
  mortgageServicesConditionId: MortgageServices_Int4AggExp!
  status: MortgageServices_MortgageServicesConditionStatusAggExp!
}

input MortgageServices_MortgageServicesConditionsBoolExp {
  _and: [MortgageServices_MortgageServicesConditionsBoolExp!]
  _not: MortgageServices_MortgageServicesConditionsBoolExp
  _or: [MortgageServices_MortgageServicesConditionsBoolExp!]
  clearedById: MortgageServices_Int4BoolExp
  clearedDate: MortgageServices_TimestamptzBoolExp
  conditionType: MortgageServices_MortgageServicesConditionTypeBoolExp
  createdById: MortgageServices_Int4BoolExp
  createdDate: MortgageServices_TimestamptzBoolExp
  description: MortgageServices_TextBoolExp
  dueDate: MortgageServices_DateBoolExp
  mortgageServicesApplication: MortgageServices_MortgageServicesApplicationsBoolExp
  mortgageServicesApplicationId: MortgageServices_Int4BoolExp
  mortgageServicesConditionId: MortgageServices_Int4BoolExp
  status: MortgageServices_MortgageServicesConditionStatusBoolExp
}

input MortgageServices_MortgageServicesConditionsFilterInput {
  limit: Int
  offset: Int
  order_by: [MortgageServices_MortgageServicesConditionsOrderByExp!]
  where: MortgageServices_MortgageServicesConditionsBoolExp
}

input MortgageServices_MortgageServicesConditionsOrderByExp {
  clearedById: OrderBy
  clearedDate: OrderBy
  conditionType: OrderBy
  createdById: OrderBy
  createdDate: OrderBy
  description: OrderBy
  dueDate: OrderBy
  mortgageServicesApplication: MortgageServices_MortgageServicesApplicationsOrderByExp
  mortgageServicesApplicationId: OrderBy
  mortgageServicesConditionId: OrderBy
  status: OrderBy
}

scalar MortgageServices_MortgageServicesConditionStatus

type MortgageServices_MortgageServicesConditionStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesConditionStatus
  min: MortgageServices_MortgageServicesConditionStatus
}

input MortgageServices_MortgageServicesConditionStatusBoolExp {
  _and: [MortgageServices_MortgageServicesConditionStatusBoolExp!]
  _eq: MortgageServices_MortgageServicesConditionStatus
  _gt: MortgageServices_MortgageServicesConditionStatus
  _gte: MortgageServices_MortgageServicesConditionStatus
  _in: [MortgageServices_MortgageServicesConditionStatus!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesConditionStatus
  _lte: MortgageServices_MortgageServicesConditionStatus
  _neq: MortgageServices_MortgageServicesConditionStatus
  _not: MortgageServices_MortgageServicesConditionStatusBoolExp
  _or: [MortgageServices_MortgageServicesConditionStatusBoolExp!]
}

scalar MortgageServices_MortgageServicesConditionType

type MortgageServices_MortgageServicesConditionTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesConditionType
  min: MortgageServices_MortgageServicesConditionType
}

input MortgageServices_MortgageServicesConditionTypeBoolExp {
  _and: [MortgageServices_MortgageServicesConditionTypeBoolExp!]
  _eq: MortgageServices_MortgageServicesConditionType
  _gt: MortgageServices_MortgageServicesConditionType
  _gte: MortgageServices_MortgageServicesConditionType
  _in: [MortgageServices_MortgageServicesConditionType!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesConditionType
  _lte: MortgageServices_MortgageServicesConditionType
  _neq: MortgageServices_MortgageServicesConditionType
  _not: MortgageServices_MortgageServicesConditionTypeBoolExp
  _or: [MortgageServices_MortgageServicesConditionTypeBoolExp!]
}

scalar MortgageServices_MortgageServicesCreditBureau

type MortgageServices_MortgageServicesCreditBureauAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesCreditBureau
  min: MortgageServices_MortgageServicesCreditBureau
}

input MortgageServices_MortgageServicesCreditBureauBoolExp {
  _and: [MortgageServices_MortgageServicesCreditBureauBoolExp!]
  _eq: MortgageServices_MortgageServicesCreditBureau
  _gt: MortgageServices_MortgageServicesCreditBureau
  _gte: MortgageServices_MortgageServicesCreditBureau
  _in: [MortgageServices_MortgageServicesCreditBureau!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesCreditBureau
  _lte: MortgageServices_MortgageServicesCreditBureau
  _neq: MortgageServices_MortgageServicesCreditBureau
  _not: MortgageServices_MortgageServicesCreditBureauBoolExp
  _or: [MortgageServices_MortgageServicesCreditBureauBoolExp!]
}

"""Tracks credit reports pulled for mortgage applications"""
type MortgageServices_MortgageServicesCreditReports {
  """Credit bureau providing the report"""
  bureauName: MortgageServices_MortgageServicesCreditBureau

  """Credit score from the report"""
  creditScore: MortgageServices_Int4

  """When credit report expires"""
  expirationDate: MortgageServices_Date!
  mortgageServicesApplication: MortgageServices_MortgageServicesApplications

  """Reference to applications"""
  mortgageServicesApplicationId: MortgageServices_Int4!
  mortgageServicesBorrower: MortgageServices_MortgageServicesBorrowers

  """Reference to borrower this credit report is for"""
  mortgageServicesBorrowerId: MortgageServices_Int4!

  """Auto-incrementing identifier for each credit report"""
  mortgageServicesCreditReportId: MortgageServices_Int4!

  """When credit report was pulled"""
  reportDate: MortgageServices_Timestamptz!

  """Path to stored credit report"""
  reportPath: MortgageServices_Varchar

  """Type of credit report pulled"""
  reportType: MortgageServices_MortgageServicesCreditReportType!

  """Status of credit report retrieval"""
  status: MortgageServices_MortgageServicesVerificationStatus!
}

type MortgageServices_MortgageServicesCreditReportsAggExp {
  _count: Int!
  bureauName: MortgageServices_MortgageServicesCreditBureauAggExp!
  creditScore: MortgageServices_Int4AggExp!
  expirationDate: MortgageServices_DateAggExp!
  mortgageServicesApplicationId: MortgageServices_Int4AggExp!
  mortgageServicesBorrowerId: MortgageServices_Int4AggExp!
  mortgageServicesCreditReportId: MortgageServices_Int4AggExp!
  reportDate: MortgageServices_TimestamptzAggExp!
  reportPath: MortgageServices_VarcharAggExp!
  reportType: MortgageServices_MortgageServicesCreditReportTypeAggExp!
  status: MortgageServices_MortgageServicesVerificationStatusAggExp!
}

input MortgageServices_MortgageServicesCreditReportsBoolExp {
  _and: [MortgageServices_MortgageServicesCreditReportsBoolExp!]
  _not: MortgageServices_MortgageServicesCreditReportsBoolExp
  _or: [MortgageServices_MortgageServicesCreditReportsBoolExp!]
  bureauName: MortgageServices_MortgageServicesCreditBureauBoolExp
  creditScore: MortgageServices_Int4BoolExp
  expirationDate: MortgageServices_DateBoolExp
  mortgageServicesApplication: MortgageServices_MortgageServicesApplicationsBoolExp
  mortgageServicesApplicationId: MortgageServices_Int4BoolExp
  mortgageServicesBorrower: MortgageServices_MortgageServicesBorrowersBoolExp
  mortgageServicesBorrowerId: MortgageServices_Int4BoolExp
  mortgageServicesCreditReportId: MortgageServices_Int4BoolExp
  reportDate: MortgageServices_TimestamptzBoolExp
  reportPath: MortgageServices_VarcharBoolExp
  reportType: MortgageServices_MortgageServicesCreditReportTypeBoolExp
  status: MortgageServices_MortgageServicesVerificationStatusBoolExp
}

input MortgageServices_MortgageServicesCreditReportsFilterInput {
  limit: Int
  offset: Int
  order_by: [MortgageServices_MortgageServicesCreditReportsOrderByExp!]
  where: MortgageServices_MortgageServicesCreditReportsBoolExp
}

input MortgageServices_MortgageServicesCreditReportsOrderByExp {
  bureauName: OrderBy
  creditScore: OrderBy
  expirationDate: OrderBy
  mortgageServicesApplication: MortgageServices_MortgageServicesApplicationsOrderByExp
  mortgageServicesApplicationId: OrderBy
  mortgageServicesBorrower: MortgageServices_MortgageServicesBorrowersOrderByExp
  mortgageServicesBorrowerId: OrderBy
  mortgageServicesCreditReportId: OrderBy
  reportDate: OrderBy
  reportPath: OrderBy
  reportType: OrderBy
  status: OrderBy
}

scalar MortgageServices_MortgageServicesCreditReportType

type MortgageServices_MortgageServicesCreditReportTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesCreditReportType
  min: MortgageServices_MortgageServicesCreditReportType
}

input MortgageServices_MortgageServicesCreditReportTypeBoolExp {
  _and: [MortgageServices_MortgageServicesCreditReportTypeBoolExp!]
  _eq: MortgageServices_MortgageServicesCreditReportType
  _gt: MortgageServices_MortgageServicesCreditReportType
  _gte: MortgageServices_MortgageServicesCreditReportType
  _in: [MortgageServices_MortgageServicesCreditReportType!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesCreditReportType
  _lte: MortgageServices_MortgageServicesCreditReportType
  _neq: MortgageServices_MortgageServicesCreditReportType
  _not: MortgageServices_MortgageServicesCreditReportTypeBoolExp
  _or: [MortgageServices_MortgageServicesCreditReportTypeBoolExp!]
}

"""
Tracks all communications with customers throughout application and servicing
"""
type MortgageServices_MortgageServicesCustomerCommunications {
  """When the communication occurred"""
  communicationDate: MortgageServices_Timestamptz!

  """Method of communication"""
  communicationType: MortgageServices_MortgageServicesCommunicationType!

  """Content of the communication"""
  content: MortgageServices_Text

  """Whether communication was incoming or outgoing"""
  direction: MortgageServices_MortgageServicesCommunicationDirection!

  """Storage location for communication document if applicable"""
  documentPath: MortgageServices_Varchar
  mortgageServicesApplication: MortgageServices_MortgageServicesApplications

  """References the application if communication is about application"""
  mortgageServicesApplicationId: MortgageServices_Int4

  """Unique identifier for each communication record"""
  mortgageServicesCommunicationId: MortgageServices_Int4!
  mortgageServicesServicingAccount: MortgageServices_MortgageServicesServicingAccounts

  """References the servicing account if communication is about servicing"""
  mortgageServicesServicingAccountId: MortgageServices_Int4

  """Person or entity that received the communication"""
  recipient: MortgageServices_Varchar

  """Purpose or context of the communication"""
  relatedTo: MortgageServices_MortgageServicesCommunicationPurpose

  """Person or system that sent the communication"""
  sender: MortgageServices_Varchar

  """Delivery status of the communication"""
  status: MortgageServices_MortgageServicesCommunicationStatus!

  """Subject or topic of communication"""
  subject: MortgageServices_Varchar

  """Template used for the communication if applicable"""
  templateId: MortgageServices_Varchar
}

type MortgageServices_MortgageServicesCustomerCommunicationsAggExp {
  _count: Int!
  communicationDate: MortgageServices_TimestamptzAggExp!
  communicationType: MortgageServices_MortgageServicesCommunicationTypeAggExp!
  content: MortgageServices_TextAggExp!
  direction: MortgageServices_MortgageServicesCommunicationDirectionAggExp!
  documentPath: MortgageServices_VarcharAggExp!
  mortgageServicesApplicationId: MortgageServices_Int4AggExp!
  mortgageServicesCommunicationId: MortgageServices_Int4AggExp!
  mortgageServicesServicingAccountId: MortgageServices_Int4AggExp!
  recipient: MortgageServices_VarcharAggExp!
  relatedTo: MortgageServices_MortgageServicesCommunicationPurposeAggExp!
  sender: MortgageServices_VarcharAggExp!
  status: MortgageServices_MortgageServicesCommunicationStatusAggExp!
  subject: MortgageServices_VarcharAggExp!
  templateId: MortgageServices_VarcharAggExp!
}

input MortgageServices_MortgageServicesCustomerCommunicationsBoolExp {
  _and: [MortgageServices_MortgageServicesCustomerCommunicationsBoolExp!]
  _not: MortgageServices_MortgageServicesCustomerCommunicationsBoolExp
  _or: [MortgageServices_MortgageServicesCustomerCommunicationsBoolExp!]
  communicationDate: MortgageServices_TimestamptzBoolExp
  communicationType: MortgageServices_MortgageServicesCommunicationTypeBoolExp
  content: MortgageServices_TextBoolExp
  direction: MortgageServices_MortgageServicesCommunicationDirectionBoolExp
  documentPath: MortgageServices_VarcharBoolExp
  mortgageServicesApplication: MortgageServices_MortgageServicesApplicationsBoolExp
  mortgageServicesApplicationId: MortgageServices_Int4BoolExp
  mortgageServicesCommunicationId: MortgageServices_Int4BoolExp
  mortgageServicesServicingAccount: MortgageServices_MortgageServicesServicingAccountsBoolExp
  mortgageServicesServicingAccountId: MortgageServices_Int4BoolExp
  recipient: MortgageServices_VarcharBoolExp
  relatedTo: MortgageServices_MortgageServicesCommunicationPurposeBoolExp
  sender: MortgageServices_VarcharBoolExp
  status: MortgageServices_MortgageServicesCommunicationStatusBoolExp
  subject: MortgageServices_VarcharBoolExp
  templateId: MortgageServices_VarcharBoolExp
}

input MortgageServices_MortgageServicesCustomerCommunicationsFilterInput {
  limit: Int
  offset: Int
  order_by: [MortgageServices_MortgageServicesCustomerCommunicationsOrderByExp!]
  where: MortgageServices_MortgageServicesCustomerCommunicationsBoolExp
}

input MortgageServices_MortgageServicesCustomerCommunicationsOrderByExp {
  communicationDate: OrderBy
  communicationType: OrderBy
  content: OrderBy
  direction: OrderBy
  documentPath: OrderBy
  mortgageServicesApplication: MortgageServices_MortgageServicesApplicationsOrderByExp
  mortgageServicesApplicationId: OrderBy
  mortgageServicesCommunicationId: OrderBy
  mortgageServicesServicingAccount: MortgageServices_MortgageServicesServicingAccountsOrderByExp
  mortgageServicesServicingAccountId: OrderBy
  recipient: OrderBy
  relatedTo: OrderBy
  sender: OrderBy
  status: OrderBy
  subject: OrderBy
  templateId: OrderBy
}

scalar MortgageServices_MortgageServicesDeliveryMethod

type MortgageServices_MortgageServicesDeliveryMethodAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesDeliveryMethod
  min: MortgageServices_MortgageServicesDeliveryMethod
}

input MortgageServices_MortgageServicesDeliveryMethodBoolExp {
  _and: [MortgageServices_MortgageServicesDeliveryMethodBoolExp!]
  _eq: MortgageServices_MortgageServicesDeliveryMethod
  _gt: MortgageServices_MortgageServicesDeliveryMethod
  _gte: MortgageServices_MortgageServicesDeliveryMethod
  _in: [MortgageServices_MortgageServicesDeliveryMethod!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesDeliveryMethod
  _lte: MortgageServices_MortgageServicesDeliveryMethod
  _neq: MortgageServices_MortgageServicesDeliveryMethod
  _not: MortgageServices_MortgageServicesDeliveryMethodBoolExp
  _or: [MortgageServices_MortgageServicesDeliveryMethodBoolExp!]
}

scalar MortgageServices_MortgageServicesDisbursementStatus

type MortgageServices_MortgageServicesDisbursementStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesDisbursementStatus
  min: MortgageServices_MortgageServicesDisbursementStatus
}

input MortgageServices_MortgageServicesDisbursementStatusBoolExp {
  _and: [MortgageServices_MortgageServicesDisbursementStatusBoolExp!]
  _eq: MortgageServices_MortgageServicesDisbursementStatus
  _gt: MortgageServices_MortgageServicesDisbursementStatus
  _gte: MortgageServices_MortgageServicesDisbursementStatus
  _in: [MortgageServices_MortgageServicesDisbursementStatus!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesDisbursementStatus
  _lte: MortgageServices_MortgageServicesDisbursementStatus
  _neq: MortgageServices_MortgageServicesDisbursementStatus
  _not: MortgageServices_MortgageServicesDisbursementStatusBoolExp
  _or: [MortgageServices_MortgageServicesDisbursementStatusBoolExp!]
}

scalar MortgageServices_MortgageServicesDisbursementType

type MortgageServices_MortgageServicesDisbursementTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesDisbursementType
  min: MortgageServices_MortgageServicesDisbursementType
}

input MortgageServices_MortgageServicesDisbursementTypeBoolExp {
  _and: [MortgageServices_MortgageServicesDisbursementTypeBoolExp!]
  _eq: MortgageServices_MortgageServicesDisbursementType
  _gt: MortgageServices_MortgageServicesDisbursementType
  _gte: MortgageServices_MortgageServicesDisbursementType
  _in: [MortgageServices_MortgageServicesDisbursementType!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesDisbursementType
  _lte: MortgageServices_MortgageServicesDisbursementType
  _neq: MortgageServices_MortgageServicesDisbursementType
  _not: MortgageServices_MortgageServicesDisbursementTypeBoolExp
  _or: [MortgageServices_MortgageServicesDisbursementTypeBoolExp!]
}

scalar MortgageServices_MortgageServicesDisclosureType

type MortgageServices_MortgageServicesDisclosureTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesDisclosureType
  min: MortgageServices_MortgageServicesDisclosureType
}

input MortgageServices_MortgageServicesDisclosureTypeBoolExp {
  _and: [MortgageServices_MortgageServicesDisclosureTypeBoolExp!]
  _eq: MortgageServices_MortgageServicesDisclosureType
  _gt: MortgageServices_MortgageServicesDisclosureType
  _gte: MortgageServices_MortgageServicesDisclosureType
  _in: [MortgageServices_MortgageServicesDisclosureType!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesDisclosureType
  _lte: MortgageServices_MortgageServicesDisclosureType
  _neq: MortgageServices_MortgageServicesDisclosureType
  _not: MortgageServices_MortgageServicesDisclosureTypeBoolExp
  _or: [MortgageServices_MortgageServicesDisclosureTypeBoolExp!]
}

"""Stores and tracks documents submitted for mortgage applications"""
type MortgageServices_MortgageServicesDocuments {
  """Filename or display name of the document"""
  documentName: MortgageServices_Varchar!

  """Storage location or path to access the document"""
  documentPath: MortgageServices_Varchar!
  documentReviewer: Enterprise_EnterpriseAssociates

  """Category of document (e.g., W2, Tax Return)"""
  documentType: MortgageServices_MortgageServicesDocumentType!

  """When the document expires or needs to be updated"""
  expirationDate: MortgageServices_Date
  mortgageServicesApplication: MortgageServices_MortgageServicesApplications

  """References the application this document belongs to"""
  mortgageServicesApplicationId: MortgageServices_Int4!

  """Auto-incrementing identifier for each document"""
  mortgageServicesDocumentId: MortgageServices_Int4!

  """Additional information about the document"""
  notes: MortgageServices_Text

  """When the document was reviewed"""
  reviewDate: MortgageServices_Timestamptz

  """References the staff member who reviewed the document"""
  reviewerId: MortgageServices_Int4

  """Current review status of the document"""
  status: MortgageServices_MortgageServicesDocumentStatus!

  """When the document was uploaded"""
  uploadDate: MortgageServices_Timestamptz!
}

type MortgageServices_MortgageServicesDocumentsAggExp {
  _count: Int!
  documentName: MortgageServices_VarcharAggExp!
  documentPath: MortgageServices_VarcharAggExp!
  documentType: MortgageServices_MortgageServicesDocumentTypeAggExp!
  expirationDate: MortgageServices_DateAggExp!
  mortgageServicesApplicationId: MortgageServices_Int4AggExp!
  mortgageServicesDocumentId: MortgageServices_Int4AggExp!
  notes: MortgageServices_TextAggExp!
  reviewDate: MortgageServices_TimestamptzAggExp!
  reviewerId: MortgageServices_Int4AggExp!
  status: MortgageServices_MortgageServicesDocumentStatusAggExp!
  uploadDate: MortgageServices_TimestamptzAggExp!
}

input MortgageServices_MortgageServicesDocumentsBoolExp {
  _and: [MortgageServices_MortgageServicesDocumentsBoolExp!]
  _not: MortgageServices_MortgageServicesDocumentsBoolExp
  _or: [MortgageServices_MortgageServicesDocumentsBoolExp!]
  documentName: MortgageServices_VarcharBoolExp
  documentPath: MortgageServices_VarcharBoolExp
  documentType: MortgageServices_MortgageServicesDocumentTypeBoolExp
  expirationDate: MortgageServices_DateBoolExp
  mortgageServicesApplication: MortgageServices_MortgageServicesApplicationsBoolExp
  mortgageServicesApplicationId: MortgageServices_Int4BoolExp
  mortgageServicesDocumentId: MortgageServices_Int4BoolExp
  notes: MortgageServices_TextBoolExp
  reviewDate: MortgageServices_TimestamptzBoolExp
  reviewerId: MortgageServices_Int4BoolExp
  status: MortgageServices_MortgageServicesDocumentStatusBoolExp
  uploadDate: MortgageServices_TimestamptzBoolExp
}

input MortgageServices_MortgageServicesDocumentsFilterInput {
  limit: Int
  offset: Int
  order_by: [MortgageServices_MortgageServicesDocumentsOrderByExp!]
  where: MortgageServices_MortgageServicesDocumentsBoolExp
}

input MortgageServices_MortgageServicesDocumentsOrderByExp {
  documentName: OrderBy
  documentPath: OrderBy
  documentType: OrderBy
  expirationDate: OrderBy
  mortgageServicesApplication: MortgageServices_MortgageServicesApplicationsOrderByExp
  mortgageServicesApplicationId: OrderBy
  mortgageServicesDocumentId: OrderBy
  notes: OrderBy
  reviewDate: OrderBy
  reviewerId: OrderBy
  status: OrderBy
  uploadDate: OrderBy
}

scalar MortgageServices_MortgageServicesDocumentStatus

type MortgageServices_MortgageServicesDocumentStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesDocumentStatus
  min: MortgageServices_MortgageServicesDocumentStatus
}

input MortgageServices_MortgageServicesDocumentStatusBoolExp {
  _and: [MortgageServices_MortgageServicesDocumentStatusBoolExp!]
  _eq: MortgageServices_MortgageServicesDocumentStatus
  _gt: MortgageServices_MortgageServicesDocumentStatus
  _gte: MortgageServices_MortgageServicesDocumentStatus
  _in: [MortgageServices_MortgageServicesDocumentStatus!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesDocumentStatus
  _lte: MortgageServices_MortgageServicesDocumentStatus
  _neq: MortgageServices_MortgageServicesDocumentStatus
  _not: MortgageServices_MortgageServicesDocumentStatusBoolExp
  _or: [MortgageServices_MortgageServicesDocumentStatusBoolExp!]
}

scalar MortgageServices_MortgageServicesDocumentType

type MortgageServices_MortgageServicesDocumentTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesDocumentType
  min: MortgageServices_MortgageServicesDocumentType
}

input MortgageServices_MortgageServicesDocumentTypeBoolExp {
  _and: [MortgageServices_MortgageServicesDocumentTypeBoolExp!]
  _eq: MortgageServices_MortgageServicesDocumentType
  _gt: MortgageServices_MortgageServicesDocumentType
  _gte: MortgageServices_MortgageServicesDocumentType
  _in: [MortgageServices_MortgageServicesDocumentType!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesDocumentType
  _lte: MortgageServices_MortgageServicesDocumentType
  _neq: MortgageServices_MortgageServicesDocumentType
  _not: MortgageServices_MortgageServicesDocumentTypeBoolExp
  _or: [MortgageServices_MortgageServicesDocumentTypeBoolExp!]
}

scalar MortgageServices_MortgageServicesEmploymentType

type MortgageServices_MortgageServicesEmploymentTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesEmploymentType
  min: MortgageServices_MortgageServicesEmploymentType
}

input MortgageServices_MortgageServicesEmploymentTypeBoolExp {
  _and: [MortgageServices_MortgageServicesEmploymentTypeBoolExp!]
  _eq: MortgageServices_MortgageServicesEmploymentType
  _gt: MortgageServices_MortgageServicesEmploymentType
  _gte: MortgageServices_MortgageServicesEmploymentType
  _in: [MortgageServices_MortgageServicesEmploymentType!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesEmploymentType
  _lte: MortgageServices_MortgageServicesEmploymentType
  _neq: MortgageServices_MortgageServicesEmploymentType
  _not: MortgageServices_MortgageServicesEmploymentTypeBoolExp
  _or: [MortgageServices_MortgageServicesEmploymentTypeBoolExp!]
}

"""
Records periodic analyses of escrow accounts to determine payment adjustments
"""
type MortgageServices_MortgageServicesEscrowAnalyses {
  """When the analysis was performed"""
  analysisDate: MortgageServices_Date!

  """When the customer was notified of the analysis results"""
  customerNotificationDate: MortgageServices_Date

  """When the analysis results take effect"""
  effectiveDate: MortgageServices_Date!

  """Amount by which the escrow account is short"""
  escrowShortage: MortgageServices_Numeric

  """Amount by which the escrow account exceeds requirements"""
  escrowSurplus: MortgageServices_Numeric

  """Auto-incrementing identifier for each analysis"""
  mortgageServicesAnalysisId: MortgageServices_Int4!
  mortgageServicesServicingAccount: MortgageServices_MortgageServicesServicingAccounts

  """References the servicing account being analyzed"""
  mortgageServicesServicingAccountId: MortgageServices_Int4!

  """New monthly escrow payment amount"""
  newMonthlyEscrow: MortgageServices_Numeric!

  """Previous monthly escrow payment amount"""
  previousMonthlyEscrow: MortgageServices_Numeric

  """Number of months to spread shortage payment"""
  shortageSpreadMonths: MortgageServices_Int4

  """Current status of the analysis"""
  status: MortgageServices_MortgageServicesEscrowAnalysisStatus!

  """Amount of surplus to be refunded"""
  surplusRefundAmount: MortgageServices_Numeric
}

type MortgageServices_MortgageServicesEscrowAnalysesAggExp {
  _count: Int!
  analysisDate: MortgageServices_DateAggExp!
  customerNotificationDate: MortgageServices_DateAggExp!
  effectiveDate: MortgageServices_DateAggExp!
  escrowShortage: MortgageServices_NumericAggExp!
  escrowSurplus: MortgageServices_NumericAggExp!
  mortgageServicesAnalysisId: MortgageServices_Int4AggExp!
  mortgageServicesServicingAccountId: MortgageServices_Int4AggExp!
  newMonthlyEscrow: MortgageServices_NumericAggExp!
  previousMonthlyEscrow: MortgageServices_NumericAggExp!
  shortageSpreadMonths: MortgageServices_Int4AggExp!
  status: MortgageServices_MortgageServicesEscrowAnalysisStatusAggExp!
  surplusRefundAmount: MortgageServices_NumericAggExp!
}

input MortgageServices_MortgageServicesEscrowAnalysesBoolExp {
  _and: [MortgageServices_MortgageServicesEscrowAnalysesBoolExp!]
  _not: MortgageServices_MortgageServicesEscrowAnalysesBoolExp
  _or: [MortgageServices_MortgageServicesEscrowAnalysesBoolExp!]
  analysisDate: MortgageServices_DateBoolExp
  customerNotificationDate: MortgageServices_DateBoolExp
  effectiveDate: MortgageServices_DateBoolExp
  escrowShortage: MortgageServices_NumericBoolExp
  escrowSurplus: MortgageServices_NumericBoolExp
  mortgageServicesAnalysisId: MortgageServices_Int4BoolExp
  mortgageServicesServicingAccount: MortgageServices_MortgageServicesServicingAccountsBoolExp
  mortgageServicesServicingAccountId: MortgageServices_Int4BoolExp
  newMonthlyEscrow: MortgageServices_NumericBoolExp
  previousMonthlyEscrow: MortgageServices_NumericBoolExp
  shortageSpreadMonths: MortgageServices_Int4BoolExp
  status: MortgageServices_MortgageServicesEscrowAnalysisStatusBoolExp
  surplusRefundAmount: MortgageServices_NumericBoolExp
}

input MortgageServices_MortgageServicesEscrowAnalysesFilterInput {
  limit: Int
  offset: Int
  order_by: [MortgageServices_MortgageServicesEscrowAnalysesOrderByExp!]
  where: MortgageServices_MortgageServicesEscrowAnalysesBoolExp
}

input MortgageServices_MortgageServicesEscrowAnalysesOrderByExp {
  analysisDate: OrderBy
  customerNotificationDate: OrderBy
  effectiveDate: OrderBy
  escrowShortage: OrderBy
  escrowSurplus: OrderBy
  mortgageServicesAnalysisId: OrderBy
  mortgageServicesServicingAccount: MortgageServices_MortgageServicesServicingAccountsOrderByExp
  mortgageServicesServicingAccountId: OrderBy
  newMonthlyEscrow: OrderBy
  previousMonthlyEscrow: OrderBy
  shortageSpreadMonths: OrderBy
  status: OrderBy
  surplusRefundAmount: OrderBy
}

scalar MortgageServices_MortgageServicesEscrowAnalysisStatus

type MortgageServices_MortgageServicesEscrowAnalysisStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesEscrowAnalysisStatus
  min: MortgageServices_MortgageServicesEscrowAnalysisStatus
}

input MortgageServices_MortgageServicesEscrowAnalysisStatusBoolExp {
  _and: [MortgageServices_MortgageServicesEscrowAnalysisStatusBoolExp!]
  _eq: MortgageServices_MortgageServicesEscrowAnalysisStatus
  _gt: MortgageServices_MortgageServicesEscrowAnalysisStatus
  _gte: MortgageServices_MortgageServicesEscrowAnalysisStatus
  _in: [MortgageServices_MortgageServicesEscrowAnalysisStatus!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesEscrowAnalysisStatus
  _lte: MortgageServices_MortgageServicesEscrowAnalysisStatus
  _neq: MortgageServices_MortgageServicesEscrowAnalysisStatus
  _not: MortgageServices_MortgageServicesEscrowAnalysisStatusBoolExp
  _or: [MortgageServices_MortgageServicesEscrowAnalysisStatusBoolExp!]
}

"""Tracks payments made from escrow accounts for taxes, insurance, etc."""
type MortgageServices_MortgageServicesEscrowDisbursements {
  """Amount of the disbursement"""
  amount: MortgageServices_Numeric!

  """Check number for paper disbursements"""
  checkNumber: MortgageServices_Varchar

  """End of coverage period (for insurance payments)"""
  coverageEndDate: MortgageServices_Date

  """Start of coverage period (for insurance payments)"""
  coverageStartDate: MortgageServices_Date

  """When the disbursement was made"""
  disbursementDate: MortgageServices_Date!

  """Type of disbursement (e.g., Property Tax, Insurance, PMI)"""
  disbursementType: MortgageServices_MortgageServicesDisbursementType!

  """When the payment was due"""
  dueDate: MortgageServices_Date

  """Auto-incrementing identifier for each disbursement"""
  mortgageServicesDisbursementId: MortgageServices_Int4!
  mortgageServicesServicingAccount: MortgageServices_MortgageServicesServicingAccounts

  """References the servicing account for this disbursement"""
  mortgageServicesServicingAccountId: MortgageServices_Int4!

  """Account number for electronic payments"""
  payeeAccountNumber: MortgageServices_Varchar

  """Entity receiving the disbursement"""
  payeeName: MortgageServices_Varchar!

  """Current status of the disbursement"""
  status: MortgageServices_MortgageServicesDisbursementStatus!
}

type MortgageServices_MortgageServicesEscrowDisbursementsAggExp {
  _count: Int!
  amount: MortgageServices_NumericAggExp!
  checkNumber: MortgageServices_VarcharAggExp!
  coverageEndDate: MortgageServices_DateAggExp!
  coverageStartDate: MortgageServices_DateAggExp!
  disbursementDate: MortgageServices_DateAggExp!
  disbursementType: MortgageServices_MortgageServicesDisbursementTypeAggExp!
  dueDate: MortgageServices_DateAggExp!
  mortgageServicesDisbursementId: MortgageServices_Int4AggExp!
  mortgageServicesServicingAccountId: MortgageServices_Int4AggExp!
  payeeAccountNumber: MortgageServices_VarcharAggExp!
  payeeName: MortgageServices_VarcharAggExp!
  status: MortgageServices_MortgageServicesDisbursementStatusAggExp!
}

input MortgageServices_MortgageServicesEscrowDisbursementsBoolExp {
  _and: [MortgageServices_MortgageServicesEscrowDisbursementsBoolExp!]
  _not: MortgageServices_MortgageServicesEscrowDisbursementsBoolExp
  _or: [MortgageServices_MortgageServicesEscrowDisbursementsBoolExp!]
  amount: MortgageServices_NumericBoolExp
  checkNumber: MortgageServices_VarcharBoolExp
  coverageEndDate: MortgageServices_DateBoolExp
  coverageStartDate: MortgageServices_DateBoolExp
  disbursementDate: MortgageServices_DateBoolExp
  disbursementType: MortgageServices_MortgageServicesDisbursementTypeBoolExp
  dueDate: MortgageServices_DateBoolExp
  mortgageServicesDisbursementId: MortgageServices_Int4BoolExp
  mortgageServicesServicingAccount: MortgageServices_MortgageServicesServicingAccountsBoolExp
  mortgageServicesServicingAccountId: MortgageServices_Int4BoolExp
  payeeAccountNumber: MortgageServices_VarcharBoolExp
  payeeName: MortgageServices_VarcharBoolExp
  status: MortgageServices_MortgageServicesDisbursementStatusBoolExp
}

input MortgageServices_MortgageServicesEscrowDisbursementsFilterInput {
  limit: Int
  offset: Int
  order_by: [MortgageServices_MortgageServicesEscrowDisbursementsOrderByExp!]
  where: MortgageServices_MortgageServicesEscrowDisbursementsBoolExp
}

input MortgageServices_MortgageServicesEscrowDisbursementsOrderByExp {
  amount: OrderBy
  checkNumber: OrderBy
  coverageEndDate: OrderBy
  coverageStartDate: OrderBy
  disbursementDate: OrderBy
  disbursementType: OrderBy
  dueDate: OrderBy
  mortgageServicesDisbursementId: OrderBy
  mortgageServicesServicingAccount: MortgageServices_MortgageServicesServicingAccountsOrderByExp
  mortgageServicesServicingAccountId: OrderBy
  payeeAccountNumber: OrderBy
  payeeName: OrderBy
  status: OrderBy
}

scalar MortgageServices_MortgageServicesHardshipReason

type MortgageServices_MortgageServicesHardshipReasonAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesHardshipReason
  min: MortgageServices_MortgageServicesHardshipReason
}

input MortgageServices_MortgageServicesHardshipReasonBoolExp {
  _and: [MortgageServices_MortgageServicesHardshipReasonBoolExp!]
  _eq: MortgageServices_MortgageServicesHardshipReason
  _gt: MortgageServices_MortgageServicesHardshipReason
  _gte: MortgageServices_MortgageServicesHardshipReason
  _in: [MortgageServices_MortgageServicesHardshipReason!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesHardshipReason
  _lte: MortgageServices_MortgageServicesHardshipReason
  _neq: MortgageServices_MortgageServicesHardshipReason
  _not: MortgageServices_MortgageServicesHardshipReasonBoolExp
  _or: [MortgageServices_MortgageServicesHardshipReasonBoolExp!]
}

scalar MortgageServices_MortgageServicesHmdaActionTaken

type MortgageServices_MortgageServicesHmdaActionTakenAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesHmdaActionTaken
  min: MortgageServices_MortgageServicesHmdaActionTaken
}

input MortgageServices_MortgageServicesHmdaActionTakenBoolExp {
  _and: [MortgageServices_MortgageServicesHmdaActionTakenBoolExp!]
  _eq: MortgageServices_MortgageServicesHmdaActionTaken
  _gt: MortgageServices_MortgageServicesHmdaActionTaken
  _gte: MortgageServices_MortgageServicesHmdaActionTaken
  _in: [MortgageServices_MortgageServicesHmdaActionTaken!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesHmdaActionTaken
  _lte: MortgageServices_MortgageServicesHmdaActionTaken
  _neq: MortgageServices_MortgageServicesHmdaActionTaken
  _not: MortgageServices_MortgageServicesHmdaActionTakenBoolExp
  _or: [MortgageServices_MortgageServicesHmdaActionTakenBoolExp!]
}

scalar MortgageServices_MortgageServicesHmdaAgeGroup

type MortgageServices_MortgageServicesHmdaAgeGroupAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesHmdaAgeGroup
  min: MortgageServices_MortgageServicesHmdaAgeGroup
}

input MortgageServices_MortgageServicesHmdaAgeGroupBoolExp {
  _and: [MortgageServices_MortgageServicesHmdaAgeGroupBoolExp!]
  _eq: MortgageServices_MortgageServicesHmdaAgeGroup
  _gt: MortgageServices_MortgageServicesHmdaAgeGroup
  _gte: MortgageServices_MortgageServicesHmdaAgeGroup
  _in: [MortgageServices_MortgageServicesHmdaAgeGroup!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesHmdaAgeGroup
  _lte: MortgageServices_MortgageServicesHmdaAgeGroup
  _neq: MortgageServices_MortgageServicesHmdaAgeGroup
  _not: MortgageServices_MortgageServicesHmdaAgeGroupBoolExp
  _or: [MortgageServices_MortgageServicesHmdaAgeGroupBoolExp!]
}

"""Stores demographic information about applicants for HMDA reporting"""
type MortgageServices_MortgageServicesHmdaApplicantDemographics {
  """Applicant's age in years"""
  age: MortgageServices_Int4

  """Applicant's age group for reporting"""
  ageGroup: MortgageServices_MortgageServicesHmdaAgeGroup

  """Whether applicant was present during application"""
  applicantPresent: MortgageServices_MortgageServicesHmdaApplicantPresent

  """Indicates if record is for primary applicant or co-applicant"""
  applicantType: MortgageServices_MortgageServicesHmdaApplicantType!

  """When the demographic record was created"""
  createdDate: MortgageServices_Timestamptz!

  """Applicant's debt-to-income ratio percentage"""
  debtToIncomeRatio: MortgageServices_Numeric

  """Primary ethnicity selection"""
  ethnicity1: MortgageServices_MortgageServicesHmdaEthnicity

  """Secondary ethnicity selection if applicable"""
  ethnicity2: MortgageServices_MortgageServicesHmdaEthnicityDetail

  """Additional ethnicity selection if applicable"""
  ethnicity3: MortgageServices_MortgageServicesHmdaEthnicityDetail

  """Additional ethnicity selection if applicable"""
  ethnicity4: MortgageServices_MortgageServicesHmdaEthnicityDetail

  """Additional ethnicity selection if applicable"""
  ethnicity5: MortgageServices_MortgageServicesHmdaEthnicityDetail

  """Free-form text description of ethnicity"""
  ethnicityFreeForm: MortgageServices_Varchar

  """How ethnicity was determined if not provided by applicant"""
  ethnicityObserved: MortgageServices_MortgageServicesHmdaCollectionMethod

  """Applicant's annual income in thousands of dollars"""
  income: MortgageServices_Numeric

  """When the demographic record was last modified"""
  modifiedDate: MortgageServices_Timestamptz

  """Auto-incrementing identifier for each demographics record"""
  mortgageServicesApplicantDemographicsId: MortgageServices_Int4!
  mortgageServicesHmdaRecord: MortgageServices_MortgageServicesHmdaRecords

  """References the associated HMDA record"""
  mortgageServicesHmdaRecordId: MortgageServices_Int4!

  """Primary race selection"""
  race1: MortgageServices_MortgageServicesHmdaRace

  """Secondary race selection if applicable"""
  race2: MortgageServices_MortgageServicesHmdaRace

  """Additional race selection if applicable"""
  race3: MortgageServices_MortgageServicesHmdaRace

  """Additional race selection if applicable"""
  race4: MortgageServices_MortgageServicesHmdaRace

  """Additional race selection if applicable"""
  race5: MortgageServices_MortgageServicesHmdaRace

  """Race detail for race_1 if applicable"""
  raceDetail1: MortgageServices_Varchar

  """Race detail for race_2 if applicable"""
  raceDetail2: MortgageServices_Varchar

  """Race detail for race_3 if applicable"""
  raceDetail3: MortgageServices_Varchar

  """Race detail for race_4 if applicable"""
  raceDetail4: MortgageServices_Varchar

  """Race detail for race_5 if applicable"""
  raceDetail5: MortgageServices_Varchar

  """Free-form text description of race"""
  raceFreeForm: MortgageServices_Varchar

  """How race was determined if not provided by applicant"""
  raceObserved: MortgageServices_MortgageServicesHmdaCollectionMethod

  """Applicant's reported sex"""
  sex: MortgageServices_MortgageServicesHmdaSex

  """How sex was determined if not provided by applicant"""
  sexObserved: MortgageServices_MortgageServicesHmdaCollectionMethod
}

type MortgageServices_MortgageServicesHmdaApplicantDemographicsAggExp {
  _count: Int!
  age: MortgageServices_Int4AggExp!
  ageGroup: MortgageServices_MortgageServicesHmdaAgeGroupAggExp!
  applicantPresent: MortgageServices_MortgageServicesHmdaApplicantPresentAggExp!
  applicantType: MortgageServices_MortgageServicesHmdaApplicantTypeAggExp!
  createdDate: MortgageServices_TimestamptzAggExp!
  debtToIncomeRatio: MortgageServices_NumericAggExp!
  ethnicity1: MortgageServices_MortgageServicesHmdaEthnicityAggExp!
  ethnicity2: MortgageServices_MortgageServicesHmdaEthnicityDetailAggExp!
  ethnicity3: MortgageServices_MortgageServicesHmdaEthnicityDetailAggExp!
  ethnicity4: MortgageServices_MortgageServicesHmdaEthnicityDetailAggExp!
  ethnicity5: MortgageServices_MortgageServicesHmdaEthnicityDetailAggExp!
  ethnicityFreeForm: MortgageServices_VarcharAggExp!
  ethnicityObserved: MortgageServices_MortgageServicesHmdaCollectionMethodAggExp!
  income: MortgageServices_NumericAggExp!
  modifiedDate: MortgageServices_TimestamptzAggExp!
  mortgageServicesApplicantDemographicsId: MortgageServices_Int4AggExp!
  mortgageServicesHmdaRecordId: MortgageServices_Int4AggExp!
  race1: MortgageServices_MortgageServicesHmdaRaceAggExp!
  race2: MortgageServices_MortgageServicesHmdaRaceAggExp!
  race3: MortgageServices_MortgageServicesHmdaRaceAggExp!
  race4: MortgageServices_MortgageServicesHmdaRaceAggExp!
  race5: MortgageServices_MortgageServicesHmdaRaceAggExp!
  raceDetail1: MortgageServices_VarcharAggExp!
  raceDetail2: MortgageServices_VarcharAggExp!
  raceDetail3: MortgageServices_VarcharAggExp!
  raceDetail4: MortgageServices_VarcharAggExp!
  raceDetail5: MortgageServices_VarcharAggExp!
  raceFreeForm: MortgageServices_VarcharAggExp!
  raceObserved: MortgageServices_MortgageServicesHmdaCollectionMethodAggExp!
  sex: MortgageServices_MortgageServicesHmdaSexAggExp!
  sexObserved: MortgageServices_MortgageServicesHmdaCollectionMethodAggExp!
}

input MortgageServices_MortgageServicesHmdaApplicantDemographicsBoolExp {
  _and: [MortgageServices_MortgageServicesHmdaApplicantDemographicsBoolExp!]
  _not: MortgageServices_MortgageServicesHmdaApplicantDemographicsBoolExp
  _or: [MortgageServices_MortgageServicesHmdaApplicantDemographicsBoolExp!]
  age: MortgageServices_Int4BoolExp
  ageGroup: MortgageServices_MortgageServicesHmdaAgeGroupBoolExp
  applicantPresent: MortgageServices_MortgageServicesHmdaApplicantPresentBoolExp
  applicantType: MortgageServices_MortgageServicesHmdaApplicantTypeBoolExp
  createdDate: MortgageServices_TimestamptzBoolExp
  debtToIncomeRatio: MortgageServices_NumericBoolExp
  ethnicity1: MortgageServices_MortgageServicesHmdaEthnicityBoolExp
  ethnicity2: MortgageServices_MortgageServicesHmdaEthnicityDetailBoolExp
  ethnicity3: MortgageServices_MortgageServicesHmdaEthnicityDetailBoolExp
  ethnicity4: MortgageServices_MortgageServicesHmdaEthnicityDetailBoolExp
  ethnicity5: MortgageServices_MortgageServicesHmdaEthnicityDetailBoolExp
  ethnicityFreeForm: MortgageServices_VarcharBoolExp
  ethnicityObserved: MortgageServices_MortgageServicesHmdaCollectionMethodBoolExp
  income: MortgageServices_NumericBoolExp
  modifiedDate: MortgageServices_TimestamptzBoolExp
  mortgageServicesApplicantDemographicsId: MortgageServices_Int4BoolExp
  mortgageServicesHmdaRecord: MortgageServices_MortgageServicesHmdaRecordsBoolExp
  mortgageServicesHmdaRecordId: MortgageServices_Int4BoolExp
  race1: MortgageServices_MortgageServicesHmdaRaceBoolExp
  race2: MortgageServices_MortgageServicesHmdaRaceBoolExp
  race3: MortgageServices_MortgageServicesHmdaRaceBoolExp
  race4: MortgageServices_MortgageServicesHmdaRaceBoolExp
  race5: MortgageServices_MortgageServicesHmdaRaceBoolExp
  raceDetail1: MortgageServices_VarcharBoolExp
  raceDetail2: MortgageServices_VarcharBoolExp
  raceDetail3: MortgageServices_VarcharBoolExp
  raceDetail4: MortgageServices_VarcharBoolExp
  raceDetail5: MortgageServices_VarcharBoolExp
  raceFreeForm: MortgageServices_VarcharBoolExp
  raceObserved: MortgageServices_MortgageServicesHmdaCollectionMethodBoolExp
  sex: MortgageServices_MortgageServicesHmdaSexBoolExp
  sexObserved: MortgageServices_MortgageServicesHmdaCollectionMethodBoolExp
}

input MortgageServices_MortgageServicesHmdaApplicantDemographicsFilterInput {
  limit: Int
  offset: Int
  order_by: [MortgageServices_MortgageServicesHmdaApplicantDemographicsOrderByExp!]
  where: MortgageServices_MortgageServicesHmdaApplicantDemographicsBoolExp
}

input MortgageServices_MortgageServicesHmdaApplicantDemographicsOrderByExp {
  age: OrderBy
  ageGroup: OrderBy
  applicantPresent: OrderBy
  applicantType: OrderBy
  createdDate: OrderBy
  debtToIncomeRatio: OrderBy
  ethnicity1: OrderBy
  ethnicity2: OrderBy
  ethnicity3: OrderBy
  ethnicity4: OrderBy
  ethnicity5: OrderBy
  ethnicityFreeForm: OrderBy
  ethnicityObserved: OrderBy
  income: OrderBy
  modifiedDate: OrderBy
  mortgageServicesApplicantDemographicsId: OrderBy
  mortgageServicesHmdaRecord: MortgageServices_MortgageServicesHmdaRecordsOrderByExp
  mortgageServicesHmdaRecordId: OrderBy
  race1: OrderBy
  race2: OrderBy
  race3: OrderBy
  race4: OrderBy
  race5: OrderBy
  raceDetail1: OrderBy
  raceDetail2: OrderBy
  raceDetail3: OrderBy
  raceDetail4: OrderBy
  raceDetail5: OrderBy
  raceFreeForm: OrderBy
  raceObserved: OrderBy
  sex: OrderBy
  sexObserved: OrderBy
}

scalar MortgageServices_MortgageServicesHmdaApplicantPresent

type MortgageServices_MortgageServicesHmdaApplicantPresentAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesHmdaApplicantPresent
  min: MortgageServices_MortgageServicesHmdaApplicantPresent
}

input MortgageServices_MortgageServicesHmdaApplicantPresentBoolExp {
  _and: [MortgageServices_MortgageServicesHmdaApplicantPresentBoolExp!]
  _eq: MortgageServices_MortgageServicesHmdaApplicantPresent
  _gt: MortgageServices_MortgageServicesHmdaApplicantPresent
  _gte: MortgageServices_MortgageServicesHmdaApplicantPresent
  _in: [MortgageServices_MortgageServicesHmdaApplicantPresent!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesHmdaApplicantPresent
  _lte: MortgageServices_MortgageServicesHmdaApplicantPresent
  _neq: MortgageServices_MortgageServicesHmdaApplicantPresent
  _not: MortgageServices_MortgageServicesHmdaApplicantPresentBoolExp
  _or: [MortgageServices_MortgageServicesHmdaApplicantPresentBoolExp!]
}

scalar MortgageServices_MortgageServicesHmdaApplicantType

type MortgageServices_MortgageServicesHmdaApplicantTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesHmdaApplicantType
  min: MortgageServices_MortgageServicesHmdaApplicantType
}

input MortgageServices_MortgageServicesHmdaApplicantTypeBoolExp {
  _and: [MortgageServices_MortgageServicesHmdaApplicantTypeBoolExp!]
  _eq: MortgageServices_MortgageServicesHmdaApplicantType
  _gt: MortgageServices_MortgageServicesHmdaApplicantType
  _gte: MortgageServices_MortgageServicesHmdaApplicantType
  _in: [MortgageServices_MortgageServicesHmdaApplicantType!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesHmdaApplicantType
  _lte: MortgageServices_MortgageServicesHmdaApplicantType
  _neq: MortgageServices_MortgageServicesHmdaApplicantType
  _not: MortgageServices_MortgageServicesHmdaApplicantTypeBoolExp
  _or: [MortgageServices_MortgageServicesHmdaApplicantTypeBoolExp!]
}

scalar MortgageServices_MortgageServicesHmdaAus

type MortgageServices_MortgageServicesHmdaAusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesHmdaAus
  min: MortgageServices_MortgageServicesHmdaAus
}

input MortgageServices_MortgageServicesHmdaAusBoolExp {
  _and: [MortgageServices_MortgageServicesHmdaAusBoolExp!]
  _eq: MortgageServices_MortgageServicesHmdaAus
  _gt: MortgageServices_MortgageServicesHmdaAus
  _gte: MortgageServices_MortgageServicesHmdaAus
  _in: [MortgageServices_MortgageServicesHmdaAus!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesHmdaAus
  _lte: MortgageServices_MortgageServicesHmdaAus
  _neq: MortgageServices_MortgageServicesHmdaAus
  _not: MortgageServices_MortgageServicesHmdaAusBoolExp
  _or: [MortgageServices_MortgageServicesHmdaAusBoolExp!]
}

scalar MortgageServices_MortgageServicesHmdaBalloonPayment

type MortgageServices_MortgageServicesHmdaBalloonPaymentAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesHmdaBalloonPayment
  min: MortgageServices_MortgageServicesHmdaBalloonPayment
}

input MortgageServices_MortgageServicesHmdaBalloonPaymentBoolExp {
  _and: [MortgageServices_MortgageServicesHmdaBalloonPaymentBoolExp!]
  _eq: MortgageServices_MortgageServicesHmdaBalloonPayment
  _gt: MortgageServices_MortgageServicesHmdaBalloonPayment
  _gte: MortgageServices_MortgageServicesHmdaBalloonPayment
  _in: [MortgageServices_MortgageServicesHmdaBalloonPayment!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesHmdaBalloonPayment
  _lte: MortgageServices_MortgageServicesHmdaBalloonPayment
  _neq: MortgageServices_MortgageServicesHmdaBalloonPayment
  _not: MortgageServices_MortgageServicesHmdaBalloonPaymentBoolExp
  _or: [MortgageServices_MortgageServicesHmdaBalloonPaymentBoolExp!]
}

scalar MortgageServices_MortgageServicesHmdaBusinessOrCommercialPurpose

type MortgageServices_MortgageServicesHmdaBusinessOrCommercialPurposeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesHmdaBusinessOrCommercialPurpose
  min: MortgageServices_MortgageServicesHmdaBusinessOrCommercialPurpose
}

input MortgageServices_MortgageServicesHmdaBusinessOrCommercialPurposeBoolExp {
  _and: [MortgageServices_MortgageServicesHmdaBusinessOrCommercialPurposeBoolExp!]
  _eq: MortgageServices_MortgageServicesHmdaBusinessOrCommercialPurpose
  _gt: MortgageServices_MortgageServicesHmdaBusinessOrCommercialPurpose
  _gte: MortgageServices_MortgageServicesHmdaBusinessOrCommercialPurpose
  _in: [MortgageServices_MortgageServicesHmdaBusinessOrCommercialPurpose!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesHmdaBusinessOrCommercialPurpose
  _lte: MortgageServices_MortgageServicesHmdaBusinessOrCommercialPurpose
  _neq: MortgageServices_MortgageServicesHmdaBusinessOrCommercialPurpose
  _not: MortgageServices_MortgageServicesHmdaBusinessOrCommercialPurposeBoolExp
  _or: [MortgageServices_MortgageServicesHmdaBusinessOrCommercialPurposeBoolExp!]
}

scalar MortgageServices_MortgageServicesHmdaCollectionMethod

type MortgageServices_MortgageServicesHmdaCollectionMethodAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesHmdaCollectionMethod
  min: MortgageServices_MortgageServicesHmdaCollectionMethod
}

input MortgageServices_MortgageServicesHmdaCollectionMethodBoolExp {
  _and: [MortgageServices_MortgageServicesHmdaCollectionMethodBoolExp!]
  _eq: MortgageServices_MortgageServicesHmdaCollectionMethod
  _gt: MortgageServices_MortgageServicesHmdaCollectionMethod
  _gte: MortgageServices_MortgageServicesHmdaCollectionMethod
  _in: [MortgageServices_MortgageServicesHmdaCollectionMethod!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesHmdaCollectionMethod
  _lte: MortgageServices_MortgageServicesHmdaCollectionMethod
  _neq: MortgageServices_MortgageServicesHmdaCollectionMethod
  _not: MortgageServices_MortgageServicesHmdaCollectionMethodBoolExp
  _or: [MortgageServices_MortgageServicesHmdaCollectionMethodBoolExp!]
}

scalar MortgageServices_MortgageServicesHmdaConstructionMethod

type MortgageServices_MortgageServicesHmdaConstructionMethodAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesHmdaConstructionMethod
  min: MortgageServices_MortgageServicesHmdaConstructionMethod
}

input MortgageServices_MortgageServicesHmdaConstructionMethodBoolExp {
  _and: [MortgageServices_MortgageServicesHmdaConstructionMethodBoolExp!]
  _eq: MortgageServices_MortgageServicesHmdaConstructionMethod
  _gt: MortgageServices_MortgageServicesHmdaConstructionMethod
  _gte: MortgageServices_MortgageServicesHmdaConstructionMethod
  _in: [MortgageServices_MortgageServicesHmdaConstructionMethod!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesHmdaConstructionMethod
  _lte: MortgageServices_MortgageServicesHmdaConstructionMethod
  _neq: MortgageServices_MortgageServicesHmdaConstructionMethod
  _not: MortgageServices_MortgageServicesHmdaConstructionMethodBoolExp
  _or: [MortgageServices_MortgageServicesHmdaConstructionMethodBoolExp!]
}

scalar MortgageServices_MortgageServicesHmdaCreditScoreModel

type MortgageServices_MortgageServicesHmdaCreditScoreModelAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesHmdaCreditScoreModel
  min: MortgageServices_MortgageServicesHmdaCreditScoreModel
}

input MortgageServices_MortgageServicesHmdaCreditScoreModelBoolExp {
  _and: [MortgageServices_MortgageServicesHmdaCreditScoreModelBoolExp!]
  _eq: MortgageServices_MortgageServicesHmdaCreditScoreModel
  _gt: MortgageServices_MortgageServicesHmdaCreditScoreModel
  _gte: MortgageServices_MortgageServicesHmdaCreditScoreModel
  _in: [MortgageServices_MortgageServicesHmdaCreditScoreModel!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesHmdaCreditScoreModel
  _lte: MortgageServices_MortgageServicesHmdaCreditScoreModel
  _neq: MortgageServices_MortgageServicesHmdaCreditScoreModel
  _not: MortgageServices_MortgageServicesHmdaCreditScoreModelBoolExp
  _or: [MortgageServices_MortgageServicesHmdaCreditScoreModelBoolExp!]
}

scalar MortgageServices_MortgageServicesHmdaDenialReason

type MortgageServices_MortgageServicesHmdaDenialReasonAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesHmdaDenialReason
  min: MortgageServices_MortgageServicesHmdaDenialReason
}

input MortgageServices_MortgageServicesHmdaDenialReasonBoolExp {
  _and: [MortgageServices_MortgageServicesHmdaDenialReasonBoolExp!]
  _eq: MortgageServices_MortgageServicesHmdaDenialReason
  _gt: MortgageServices_MortgageServicesHmdaDenialReason
  _gte: MortgageServices_MortgageServicesHmdaDenialReason
  _in: [MortgageServices_MortgageServicesHmdaDenialReason!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesHmdaDenialReason
  _lte: MortgageServices_MortgageServicesHmdaDenialReason
  _neq: MortgageServices_MortgageServicesHmdaDenialReason
  _not: MortgageServices_MortgageServicesHmdaDenialReasonBoolExp
  _or: [MortgageServices_MortgageServicesHmdaDenialReasonBoolExp!]
}

"""Tracks validation issues with HMDA data and their resolution"""
type MortgageServices_MortgageServicesHmdaEdits {
  """When the edit was first identified"""
  createdDate: MortgageServices_Timestamptz!

  """Standardized code identifying the specific edit rule"""
  editCode: MortgageServices_Varchar!

  """Description of the edit issue"""
  editDescription: MortgageServices_Text!

  """Category of edit (SYNTACTICAL, VALIDITY, QUALITY, MACRO)"""
  editType: MortgageServices_MortgageServicesHmdaEditType!
  hmdaEditResolvedBy: Enterprise_EnterpriseAssociates

  """Auto-incrementing identifier for each edit finding"""
  mortgageServicesEditId: MortgageServices_Int4!
  mortgageServicesHmdaRecord: MortgageServices_MortgageServicesHmdaRecords

  """References the HMDA record with the edit issue"""
  mortgageServicesHmdaRecordId: MortgageServices_Int4!

  """Notes explaining how the edit was resolved"""
  resolutionNotes: MortgageServices_Text

  """User who resolved the edit"""
  resolvedById: MortgageServices_Int4

  """When the edit was resolved if applicable"""
  resolvedDate: MortgageServices_Timestamptz

  """Current status of the edit (OPEN, VERIFIED, CORRECTED)"""
  status: MortgageServices_MortgageServicesHmdaEditStatus!
}

type MortgageServices_MortgageServicesHmdaEditsAggExp {
  _count: Int!
  createdDate: MortgageServices_TimestamptzAggExp!
  editCode: MortgageServices_VarcharAggExp!
  editDescription: MortgageServices_TextAggExp!
  editType: MortgageServices_MortgageServicesHmdaEditTypeAggExp!
  mortgageServicesEditId: MortgageServices_Int4AggExp!
  mortgageServicesHmdaRecordId: MortgageServices_Int4AggExp!
  resolutionNotes: MortgageServices_TextAggExp!
  resolvedById: MortgageServices_Int4AggExp!
  resolvedDate: MortgageServices_TimestamptzAggExp!
  status: MortgageServices_MortgageServicesHmdaEditStatusAggExp!
}

input MortgageServices_MortgageServicesHmdaEditsBoolExp {
  _and: [MortgageServices_MortgageServicesHmdaEditsBoolExp!]
  _not: MortgageServices_MortgageServicesHmdaEditsBoolExp
  _or: [MortgageServices_MortgageServicesHmdaEditsBoolExp!]
  createdDate: MortgageServices_TimestamptzBoolExp
  editCode: MortgageServices_VarcharBoolExp
  editDescription: MortgageServices_TextBoolExp
  editType: MortgageServices_MortgageServicesHmdaEditTypeBoolExp
  mortgageServicesEditId: MortgageServices_Int4BoolExp
  mortgageServicesHmdaRecord: MortgageServices_MortgageServicesHmdaRecordsBoolExp
  mortgageServicesHmdaRecordId: MortgageServices_Int4BoolExp
  resolutionNotes: MortgageServices_TextBoolExp
  resolvedById: MortgageServices_Int4BoolExp
  resolvedDate: MortgageServices_TimestamptzBoolExp
  status: MortgageServices_MortgageServicesHmdaEditStatusBoolExp
}

input MortgageServices_MortgageServicesHmdaEditsFilterInput {
  limit: Int
  offset: Int
  order_by: [MortgageServices_MortgageServicesHmdaEditsOrderByExp!]
  where: MortgageServices_MortgageServicesHmdaEditsBoolExp
}

input MortgageServices_MortgageServicesHmdaEditsOrderByExp {
  createdDate: OrderBy
  editCode: OrderBy
  editDescription: OrderBy
  editType: OrderBy
  mortgageServicesEditId: OrderBy
  mortgageServicesHmdaRecord: MortgageServices_MortgageServicesHmdaRecordsOrderByExp
  mortgageServicesHmdaRecordId: OrderBy
  resolutionNotes: OrderBy
  resolvedById: OrderBy
  resolvedDate: OrderBy
  status: OrderBy
}

scalar MortgageServices_MortgageServicesHmdaEditStatus

type MortgageServices_MortgageServicesHmdaEditStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesHmdaEditStatus
  min: MortgageServices_MortgageServicesHmdaEditStatus
}

input MortgageServices_MortgageServicesHmdaEditStatusBoolExp {
  _and: [MortgageServices_MortgageServicesHmdaEditStatusBoolExp!]
  _eq: MortgageServices_MortgageServicesHmdaEditStatus
  _gt: MortgageServices_MortgageServicesHmdaEditStatus
  _gte: MortgageServices_MortgageServicesHmdaEditStatus
  _in: [MortgageServices_MortgageServicesHmdaEditStatus!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesHmdaEditStatus
  _lte: MortgageServices_MortgageServicesHmdaEditStatus
  _neq: MortgageServices_MortgageServicesHmdaEditStatus
  _not: MortgageServices_MortgageServicesHmdaEditStatusBoolExp
  _or: [MortgageServices_MortgageServicesHmdaEditStatusBoolExp!]
}

scalar MortgageServices_MortgageServicesHmdaEditType

type MortgageServices_MortgageServicesHmdaEditTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesHmdaEditType
  min: MortgageServices_MortgageServicesHmdaEditType
}

input MortgageServices_MortgageServicesHmdaEditTypeBoolExp {
  _and: [MortgageServices_MortgageServicesHmdaEditTypeBoolExp!]
  _eq: MortgageServices_MortgageServicesHmdaEditType
  _gt: MortgageServices_MortgageServicesHmdaEditType
  _gte: MortgageServices_MortgageServicesHmdaEditType
  _in: [MortgageServices_MortgageServicesHmdaEditType!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesHmdaEditType
  _lte: MortgageServices_MortgageServicesHmdaEditType
  _neq: MortgageServices_MortgageServicesHmdaEditType
  _not: MortgageServices_MortgageServicesHmdaEditTypeBoolExp
  _or: [MortgageServices_MortgageServicesHmdaEditTypeBoolExp!]
}

scalar MortgageServices_MortgageServicesHmdaEthnicity

type MortgageServices_MortgageServicesHmdaEthnicityAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesHmdaEthnicity
  min: MortgageServices_MortgageServicesHmdaEthnicity
}

input MortgageServices_MortgageServicesHmdaEthnicityBoolExp {
  _and: [MortgageServices_MortgageServicesHmdaEthnicityBoolExp!]
  _eq: MortgageServices_MortgageServicesHmdaEthnicity
  _gt: MortgageServices_MortgageServicesHmdaEthnicity
  _gte: MortgageServices_MortgageServicesHmdaEthnicity
  _in: [MortgageServices_MortgageServicesHmdaEthnicity!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesHmdaEthnicity
  _lte: MortgageServices_MortgageServicesHmdaEthnicity
  _neq: MortgageServices_MortgageServicesHmdaEthnicity
  _not: MortgageServices_MortgageServicesHmdaEthnicityBoolExp
  _or: [MortgageServices_MortgageServicesHmdaEthnicityBoolExp!]
}

scalar MortgageServices_MortgageServicesHmdaEthnicityDetail

type MortgageServices_MortgageServicesHmdaEthnicityDetailAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesHmdaEthnicityDetail
  min: MortgageServices_MortgageServicesHmdaEthnicityDetail
}

input MortgageServices_MortgageServicesHmdaEthnicityDetailBoolExp {
  _and: [MortgageServices_MortgageServicesHmdaEthnicityDetailBoolExp!]
  _eq: MortgageServices_MortgageServicesHmdaEthnicityDetail
  _gt: MortgageServices_MortgageServicesHmdaEthnicityDetail
  _gte: MortgageServices_MortgageServicesHmdaEthnicityDetail
  _in: [MortgageServices_MortgageServicesHmdaEthnicityDetail!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesHmdaEthnicityDetail
  _lte: MortgageServices_MortgageServicesHmdaEthnicityDetail
  _neq: MortgageServices_MortgageServicesHmdaEthnicityDetail
  _not: MortgageServices_MortgageServicesHmdaEthnicityDetailBoolExp
  _or: [MortgageServices_MortgageServicesHmdaEthnicityDetailBoolExp!]
}

scalar MortgageServices_MortgageServicesHmdaHoepaStatus

type MortgageServices_MortgageServicesHmdaHoepaStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesHmdaHoepaStatus
  min: MortgageServices_MortgageServicesHmdaHoepaStatus
}

input MortgageServices_MortgageServicesHmdaHoepaStatusBoolExp {
  _and: [MortgageServices_MortgageServicesHmdaHoepaStatusBoolExp!]
  _eq: MortgageServices_MortgageServicesHmdaHoepaStatus
  _gt: MortgageServices_MortgageServicesHmdaHoepaStatus
  _gte: MortgageServices_MortgageServicesHmdaHoepaStatus
  _in: [MortgageServices_MortgageServicesHmdaHoepaStatus!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesHmdaHoepaStatus
  _lte: MortgageServices_MortgageServicesHmdaHoepaStatus
  _neq: MortgageServices_MortgageServicesHmdaHoepaStatus
  _not: MortgageServices_MortgageServicesHmdaHoepaStatusBoolExp
  _or: [MortgageServices_MortgageServicesHmdaHoepaStatusBoolExp!]
}

scalar MortgageServices_MortgageServicesHmdaInterestOnly

type MortgageServices_MortgageServicesHmdaInterestOnlyAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesHmdaInterestOnly
  min: MortgageServices_MortgageServicesHmdaInterestOnly
}

input MortgageServices_MortgageServicesHmdaInterestOnlyBoolExp {
  _and: [MortgageServices_MortgageServicesHmdaInterestOnlyBoolExp!]
  _eq: MortgageServices_MortgageServicesHmdaInterestOnly
  _gt: MortgageServices_MortgageServicesHmdaInterestOnly
  _gte: MortgageServices_MortgageServicesHmdaInterestOnly
  _in: [MortgageServices_MortgageServicesHmdaInterestOnly!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesHmdaInterestOnly
  _lte: MortgageServices_MortgageServicesHmdaInterestOnly
  _neq: MortgageServices_MortgageServicesHmdaInterestOnly
  _not: MortgageServices_MortgageServicesHmdaInterestOnlyBoolExp
  _or: [MortgageServices_MortgageServicesHmdaInterestOnlyBoolExp!]
}

scalar MortgageServices_MortgageServicesHmdaLienStatus

type MortgageServices_MortgageServicesHmdaLienStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesHmdaLienStatus
  min: MortgageServices_MortgageServicesHmdaLienStatus
}

input MortgageServices_MortgageServicesHmdaLienStatusBoolExp {
  _and: [MortgageServices_MortgageServicesHmdaLienStatusBoolExp!]
  _eq: MortgageServices_MortgageServicesHmdaLienStatus
  _gt: MortgageServices_MortgageServicesHmdaLienStatus
  _gte: MortgageServices_MortgageServicesHmdaLienStatus
  _in: [MortgageServices_MortgageServicesHmdaLienStatus!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesHmdaLienStatus
  _lte: MortgageServices_MortgageServicesHmdaLienStatus
  _neq: MortgageServices_MortgageServicesHmdaLienStatus
  _not: MortgageServices_MortgageServicesHmdaLienStatusBoolExp
  _or: [MortgageServices_MortgageServicesHmdaLienStatusBoolExp!]
}

scalar MortgageServices_MortgageServicesHmdaLoanPurpose

type MortgageServices_MortgageServicesHmdaLoanPurposeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesHmdaLoanPurpose
  min: MortgageServices_MortgageServicesHmdaLoanPurpose
}

input MortgageServices_MortgageServicesHmdaLoanPurposeBoolExp {
  _and: [MortgageServices_MortgageServicesHmdaLoanPurposeBoolExp!]
  _eq: MortgageServices_MortgageServicesHmdaLoanPurpose
  _gt: MortgageServices_MortgageServicesHmdaLoanPurpose
  _gte: MortgageServices_MortgageServicesHmdaLoanPurpose
  _in: [MortgageServices_MortgageServicesHmdaLoanPurpose!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesHmdaLoanPurpose
  _lte: MortgageServices_MortgageServicesHmdaLoanPurpose
  _neq: MortgageServices_MortgageServicesHmdaLoanPurpose
  _not: MortgageServices_MortgageServicesHmdaLoanPurposeBoolExp
  _or: [MortgageServices_MortgageServicesHmdaLoanPurposeBoolExp!]
}

scalar MortgageServices_MortgageServicesHmdaManufacturedHomeType

type MortgageServices_MortgageServicesHmdaManufacturedHomeTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesHmdaManufacturedHomeType
  min: MortgageServices_MortgageServicesHmdaManufacturedHomeType
}

input MortgageServices_MortgageServicesHmdaManufacturedHomeTypeBoolExp {
  _and: [MortgageServices_MortgageServicesHmdaManufacturedHomeTypeBoolExp!]
  _eq: MortgageServices_MortgageServicesHmdaManufacturedHomeType
  _gt: MortgageServices_MortgageServicesHmdaManufacturedHomeType
  _gte: MortgageServices_MortgageServicesHmdaManufacturedHomeType
  _in: [MortgageServices_MortgageServicesHmdaManufacturedHomeType!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesHmdaManufacturedHomeType
  _lte: MortgageServices_MortgageServicesHmdaManufacturedHomeType
  _neq: MortgageServices_MortgageServicesHmdaManufacturedHomeType
  _not: MortgageServices_MortgageServicesHmdaManufacturedHomeTypeBoolExp
  _or: [MortgageServices_MortgageServicesHmdaManufacturedHomeTypeBoolExp!]
}

scalar MortgageServices_MortgageServicesHmdaManufacturedLandPropertyInterest

type MortgageServices_MortgageServicesHmdaManufacturedLandPropertyInterestAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesHmdaManufacturedLandPropertyInterest
  min: MortgageServices_MortgageServicesHmdaManufacturedLandPropertyInterest
}

input MortgageServices_MortgageServicesHmdaManufacturedLandPropertyInterestBoolExp {
  _and: [MortgageServices_MortgageServicesHmdaManufacturedLandPropertyInterestBoolExp!]
  _eq: MortgageServices_MortgageServicesHmdaManufacturedLandPropertyInterest
  _gt: MortgageServices_MortgageServicesHmdaManufacturedLandPropertyInterest
  _gte: MortgageServices_MortgageServicesHmdaManufacturedLandPropertyInterest
  _in: [MortgageServices_MortgageServicesHmdaManufacturedLandPropertyInterest!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesHmdaManufacturedLandPropertyInterest
  _lte: MortgageServices_MortgageServicesHmdaManufacturedLandPropertyInterest
  _neq: MortgageServices_MortgageServicesHmdaManufacturedLandPropertyInterest
  _not: MortgageServices_MortgageServicesHmdaManufacturedLandPropertyInterestBoolExp
  _or: [MortgageServices_MortgageServicesHmdaManufacturedLandPropertyInterestBoolExp!]
}

scalar MortgageServices_MortgageServicesHmdaNegativeAmortization

type MortgageServices_MortgageServicesHmdaNegativeAmortizationAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesHmdaNegativeAmortization
  min: MortgageServices_MortgageServicesHmdaNegativeAmortization
}

input MortgageServices_MortgageServicesHmdaNegativeAmortizationBoolExp {
  _and: [MortgageServices_MortgageServicesHmdaNegativeAmortizationBoolExp!]
  _eq: MortgageServices_MortgageServicesHmdaNegativeAmortization
  _gt: MortgageServices_MortgageServicesHmdaNegativeAmortization
  _gte: MortgageServices_MortgageServicesHmdaNegativeAmortization
  _in: [MortgageServices_MortgageServicesHmdaNegativeAmortization!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesHmdaNegativeAmortization
  _lte: MortgageServices_MortgageServicesHmdaNegativeAmortization
  _neq: MortgageServices_MortgageServicesHmdaNegativeAmortization
  _not: MortgageServices_MortgageServicesHmdaNegativeAmortizationBoolExp
  _or: [MortgageServices_MortgageServicesHmdaNegativeAmortizationBoolExp!]
}

scalar MortgageServices_MortgageServicesHmdaOccupancyType

type MortgageServices_MortgageServicesHmdaOccupancyTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesHmdaOccupancyType
  min: MortgageServices_MortgageServicesHmdaOccupancyType
}

input MortgageServices_MortgageServicesHmdaOccupancyTypeBoolExp {
  _and: [MortgageServices_MortgageServicesHmdaOccupancyTypeBoolExp!]
  _eq: MortgageServices_MortgageServicesHmdaOccupancyType
  _gt: MortgageServices_MortgageServicesHmdaOccupancyType
  _gte: MortgageServices_MortgageServicesHmdaOccupancyType
  _in: [MortgageServices_MortgageServicesHmdaOccupancyType!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesHmdaOccupancyType
  _lte: MortgageServices_MortgageServicesHmdaOccupancyType
  _neq: MortgageServices_MortgageServicesHmdaOccupancyType
  _not: MortgageServices_MortgageServicesHmdaOccupancyTypeBoolExp
  _or: [MortgageServices_MortgageServicesHmdaOccupancyTypeBoolExp!]
}

scalar MortgageServices_MortgageServicesHmdaOpenEndLineOfCredit

type MortgageServices_MortgageServicesHmdaOpenEndLineOfCreditAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesHmdaOpenEndLineOfCredit
  min: MortgageServices_MortgageServicesHmdaOpenEndLineOfCredit
}

input MortgageServices_MortgageServicesHmdaOpenEndLineOfCreditBoolExp {
  _and: [MortgageServices_MortgageServicesHmdaOpenEndLineOfCreditBoolExp!]
  _eq: MortgageServices_MortgageServicesHmdaOpenEndLineOfCredit
  _gt: MortgageServices_MortgageServicesHmdaOpenEndLineOfCredit
  _gte: MortgageServices_MortgageServicesHmdaOpenEndLineOfCredit
  _in: [MortgageServices_MortgageServicesHmdaOpenEndLineOfCredit!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesHmdaOpenEndLineOfCredit
  _lte: MortgageServices_MortgageServicesHmdaOpenEndLineOfCredit
  _neq: MortgageServices_MortgageServicesHmdaOpenEndLineOfCredit
  _not: MortgageServices_MortgageServicesHmdaOpenEndLineOfCreditBoolExp
  _or: [MortgageServices_MortgageServicesHmdaOpenEndLineOfCreditBoolExp!]
}

scalar MortgageServices_MortgageServicesHmdaOtherNonAmortizing

type MortgageServices_MortgageServicesHmdaOtherNonAmortizingAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesHmdaOtherNonAmortizing
  min: MortgageServices_MortgageServicesHmdaOtherNonAmortizing
}

input MortgageServices_MortgageServicesHmdaOtherNonAmortizingBoolExp {
  _and: [MortgageServices_MortgageServicesHmdaOtherNonAmortizingBoolExp!]
  _eq: MortgageServices_MortgageServicesHmdaOtherNonAmortizing
  _gt: MortgageServices_MortgageServicesHmdaOtherNonAmortizing
  _gte: MortgageServices_MortgageServicesHmdaOtherNonAmortizing
  _in: [MortgageServices_MortgageServicesHmdaOtherNonAmortizing!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesHmdaOtherNonAmortizing
  _lte: MortgageServices_MortgageServicesHmdaOtherNonAmortizing
  _neq: MortgageServices_MortgageServicesHmdaOtherNonAmortizing
  _not: MortgageServices_MortgageServicesHmdaOtherNonAmortizingBoolExp
  _or: [MortgageServices_MortgageServicesHmdaOtherNonAmortizingBoolExp!]
}

scalar MortgageServices_MortgageServicesHmdaPreapproval

type MortgageServices_MortgageServicesHmdaPreapprovalAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesHmdaPreapproval
  min: MortgageServices_MortgageServicesHmdaPreapproval
}

input MortgageServices_MortgageServicesHmdaPreapprovalBoolExp {
  _and: [MortgageServices_MortgageServicesHmdaPreapprovalBoolExp!]
  _eq: MortgageServices_MortgageServicesHmdaPreapproval
  _gt: MortgageServices_MortgageServicesHmdaPreapproval
  _gte: MortgageServices_MortgageServicesHmdaPreapproval
  _in: [MortgageServices_MortgageServicesHmdaPreapproval!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesHmdaPreapproval
  _lte: MortgageServices_MortgageServicesHmdaPreapproval
  _neq: MortgageServices_MortgageServicesHmdaPreapproval
  _not: MortgageServices_MortgageServicesHmdaPreapprovalBoolExp
  _or: [MortgageServices_MortgageServicesHmdaPreapprovalBoolExp!]
}

scalar MortgageServices_MortgageServicesHmdaRace

type MortgageServices_MortgageServicesHmdaRaceAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesHmdaRace
  min: MortgageServices_MortgageServicesHmdaRace
}

input MortgageServices_MortgageServicesHmdaRaceBoolExp {
  _and: [MortgageServices_MortgageServicesHmdaRaceBoolExp!]
  _eq: MortgageServices_MortgageServicesHmdaRace
  _gt: MortgageServices_MortgageServicesHmdaRace
  _gte: MortgageServices_MortgageServicesHmdaRace
  _in: [MortgageServices_MortgageServicesHmdaRace!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesHmdaRace
  _lte: MortgageServices_MortgageServicesHmdaRace
  _neq: MortgageServices_MortgageServicesHmdaRace
  _not: MortgageServices_MortgageServicesHmdaRaceBoolExp
  _or: [MortgageServices_MortgageServicesHmdaRaceBoolExp!]
}

scalar MortgageServices_MortgageServicesHmdaRecordEditStatus

type MortgageServices_MortgageServicesHmdaRecordEditStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesHmdaRecordEditStatus
  min: MortgageServices_MortgageServicesHmdaRecordEditStatus
}

input MortgageServices_MortgageServicesHmdaRecordEditStatusBoolExp {
  _and: [MortgageServices_MortgageServicesHmdaRecordEditStatusBoolExp!]
  _eq: MortgageServices_MortgageServicesHmdaRecordEditStatus
  _gt: MortgageServices_MortgageServicesHmdaRecordEditStatus
  _gte: MortgageServices_MortgageServicesHmdaRecordEditStatus
  _in: [MortgageServices_MortgageServicesHmdaRecordEditStatus!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesHmdaRecordEditStatus
  _lte: MortgageServices_MortgageServicesHmdaRecordEditStatus
  _neq: MortgageServices_MortgageServicesHmdaRecordEditStatus
  _not: MortgageServices_MortgageServicesHmdaRecordEditStatusBoolExp
  _or: [MortgageServices_MortgageServicesHmdaRecordEditStatusBoolExp!]
}

"""
Stores data required for Home Mortgage Disclosure Act (HMDA) regulatory reporting
"""
type MortgageServices_MortgageServicesHmdaRecords {
  """Code indicating final disposition"""
  actionTaken: MortgageServices_MortgageServicesHmdaActionTaken!

  """Date of final action"""
  actionTakenDate: MortgageServices_Date!

  """Primary automated underwriting system used"""
  aus1: MortgageServices_MortgageServicesHmdaAus

  """Secondary automated underwriting system used if applicable"""
  aus2: MortgageServices_MortgageServicesHmdaAus

  """Additional automated underwriting system if applicable"""
  aus3: MortgageServices_MortgageServicesHmdaAus

  """Additional automated underwriting system if applicable"""
  aus4: MortgageServices_MortgageServicesHmdaAus

  """Additional automated underwriting system if applicable"""
  aus5: MortgageServices_MortgageServicesHmdaAus

  """Whether loan has balloon payment feature"""
  balloonPayment: MortgageServices_MortgageServicesHmdaBalloonPayment

  """Whether loan is for business purpose"""
  businessOrCommercialPurpose: MortgageServices_MortgageServicesHmdaBusinessOrCommercialPurpose

  """Census tract for property location"""
  censusTract: MortgageServices_Varchar!

  """Code indicating construction method"""
  constructionMethod: MortgageServices_MortgageServicesHmdaConstructionMethod!

  """County code for property location"""
  county: MortgageServices_Varchar!

  """Credit score of primary applicant"""
  creditScoreApplicant: MortgageServices_Int4

  """Credit score of co-applicant if applicable"""
  creditScoreCoApplicant: MortgageServices_Int4

  """Code indicating credit scoring model used"""
  creditScoreModel: MortgageServices_MortgageServicesHmdaCreditScoreModel

  """Primary reason for denial if applicable"""
  denialReason1: MortgageServices_MortgageServicesHmdaDenialReason

  """Secondary reason for denial if applicable"""
  denialReason2: MortgageServices_MortgageServicesHmdaDenialReason

  """Additional reason for denial if applicable"""
  denialReason3: MortgageServices_MortgageServicesHmdaDenialReason

  """Additional reason for denial if applicable"""
  denialReason4: MortgageServices_MortgageServicesHmdaDenialReason

  """Discount points paid by borrower"""
  discountPoints: MortgageServices_Numeric

  """Status of edit checks for this record"""
  editStatus: MortgageServices_MortgageServicesHmdaRecordEditStatus!

  """Code indicating if loan is subject to HOEPA"""
  hoepaStatus: MortgageServices_MortgageServicesHmdaHoepaStatus!

  """Whether loan was initially payable to reporting institution"""
  initiallyPayableToInstitution: MortgageServices_Bool

  """Whether loan has interest-only payments"""
  interestOnlyPayment: MortgageServices_MortgageServicesHmdaInterestOnly

  """Months until first rate adjustment for ARMs"""
  introRatePeriod: MortgageServices_Int4

  """When record was last modified"""
  lastModifiedDate: MortgageServices_Timestamptz!

  """When record was last submitted to regulators"""
  lastSubmissionDate: MortgageServices_Date

  """Legal Entity Identifier of the reporting institution"""
  lei: MortgageServices_Varchar!

  """Credits provided by lender"""
  lenderCredits: MortgageServices_Numeric

  """Code indicating lien position"""
  lienStatus: MortgageServices_MortgageServicesHmdaLienStatus!

  """Amount of the loan or application"""
  loanAmount: MortgageServices_Numeric!

  """Code indicating loan purpose"""
  loanPurpose: MortgageServices_MortgageServicesHmdaLoanPurpose!

  """Term of the loan in months"""
  loanTerm: MortgageServices_Int4

  """Code for land ownership with manufactured home"""
  manufacturedHomeLandPropertyInterest: MortgageServices_MortgageServicesHmdaManufacturedLandPropertyInterest

  """Code for manufactured home property type"""
  manufacturedHomeSecuredPropertyType: MortgageServices_MortgageServicesHmdaManufacturedHomeType
  mortgageServicesApplication: MortgageServices_MortgageServicesApplications

  """References the associated mortgage application"""
  mortgageServicesApplicationId: MortgageServices_Int4!
  mortgageServicesHmdaApplicantDemographics(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesHmdaApplicantDemographicsOrderByExp!], where: MortgageServices_MortgageServicesHmdaApplicantDemographicsBoolExp): [MortgageServices_MortgageServicesHmdaApplicantDemographics!]
  mortgageServicesHmdaApplicantDemographicsAggregate(filter_input: MortgageServices_MortgageServicesHmdaApplicantDemographicsFilterInput): MortgageServices_MortgageServicesHmdaApplicantDemographicsAggExp!
  mortgageServicesHmdaEdits(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesHmdaEditsOrderByExp!], where: MortgageServices_MortgageServicesHmdaEditsBoolExp): [MortgageServices_MortgageServicesHmdaEdits!]
  mortgageServicesHmdaEditsAggregate(filter_input: MortgageServices_MortgageServicesHmdaEditsFilterInput): MortgageServices_MortgageServicesHmdaEditsAggExp!

  """Auto-incrementing identifier for each HMDA record"""
  mortgageServicesHmdaRecordId: MortgageServices_Int4!
  mortgageServicesLoan: MortgageServices_MortgageServicesLoans

  """References the associated loan if originated"""
  mortgageServicesLoanId: MortgageServices_Int4
  mortgageServicesLoanProduct: MortgageServices_MortgageServicesLoanProducts

  """Type of mortgage loan product"""
  mortgageServicesLoanProductId: MortgageServices_Int4!

  """Number of income-restricted units in multifamily property"""
  multifamilyAffordableUnits: MortgageServices_Int4

  """Whether loan allows negative amortization"""
  negativeAmortization: MortgageServices_MortgageServicesHmdaNegativeAmortization

  """Code indicating intended property use"""
  occupancyType: MortgageServices_MortgageServicesHmdaOccupancyType!

  """Whether loan is an open-end line of credit"""
  openEndLineOfCredit: MortgageServices_MortgageServicesHmdaOpenEndLineOfCredit

  """Total origination charges"""
  originationCharges: MortgageServices_Numeric

  """Whether loan has other non-amortizing features"""
  otherNonAmortizingFeatures: MortgageServices_MortgageServicesHmdaOtherNonAmortizing

  """Code indicating if preapproval was requested"""
  preapproval: MortgageServices_MortgageServicesHmdaPreapproval!

  """Value of the property securing the loan"""
  propertyValue: MortgageServices_Numeric

  """Difference between APR and average prime offer rate"""
  rateSpread: MortgageServices_Numeric

  """Calendar year for HMDA reporting"""
  reportingYear: MortgageServices_Int4!

  """Whether loan is a reverse mortgage"""
  reverseMortgage: MortgageServices_MortgageServicesHmdaReverseMortgage

  """Two-letter state code for property location"""
  state: MortgageServices_Varchar!

  """How application was submitted"""
  submissionOfApplication: MortgageServices_MortgageServicesHmdaSubmissionMethod

  """Status of HMDA submission for this record"""
  submissionStatus: MortgageServices_MortgageServicesHmdaSubmissionStatus!

  """Total loan costs as disclosed"""
  totalLoanCosts: MortgageServices_Numeric

  """Total points and fees charged"""
  totalPointsAndFees: MortgageServices_Numeric

  """Number of dwelling units in the property"""
  totalUnits: MortgageServices_Int4!
}

type MortgageServices_MortgageServicesHmdaRecordsAggExp {
  _count: Int!
  actionTaken: MortgageServices_MortgageServicesHmdaActionTakenAggExp!
  actionTakenDate: MortgageServices_DateAggExp!
  aus1: MortgageServices_MortgageServicesHmdaAusAggExp!
  aus2: MortgageServices_MortgageServicesHmdaAusAggExp!
  aus3: MortgageServices_MortgageServicesHmdaAusAggExp!
  aus4: MortgageServices_MortgageServicesHmdaAusAggExp!
  aus5: MortgageServices_MortgageServicesHmdaAusAggExp!
  balloonPayment: MortgageServices_MortgageServicesHmdaBalloonPaymentAggExp!
  businessOrCommercialPurpose: MortgageServices_MortgageServicesHmdaBusinessOrCommercialPurposeAggExp!
  censusTract: MortgageServices_VarcharAggExp!
  constructionMethod: MortgageServices_MortgageServicesHmdaConstructionMethodAggExp!
  county: MortgageServices_VarcharAggExp!
  creditScoreApplicant: MortgageServices_Int4AggExp!
  creditScoreCoApplicant: MortgageServices_Int4AggExp!
  creditScoreModel: MortgageServices_MortgageServicesHmdaCreditScoreModelAggExp!
  denialReason1: MortgageServices_MortgageServicesHmdaDenialReasonAggExp!
  denialReason2: MortgageServices_MortgageServicesHmdaDenialReasonAggExp!
  denialReason3: MortgageServices_MortgageServicesHmdaDenialReasonAggExp!
  denialReason4: MortgageServices_MortgageServicesHmdaDenialReasonAggExp!
  discountPoints: MortgageServices_NumericAggExp!
  editStatus: MortgageServices_MortgageServicesHmdaRecordEditStatusAggExp!
  hoepaStatus: MortgageServices_MortgageServicesHmdaHoepaStatusAggExp!
  initiallyPayableToInstitution: MortgageServices_BoolAggExp!
  interestOnlyPayment: MortgageServices_MortgageServicesHmdaInterestOnlyAggExp!
  introRatePeriod: MortgageServices_Int4AggExp!
  lastModifiedDate: MortgageServices_TimestamptzAggExp!
  lastSubmissionDate: MortgageServices_DateAggExp!
  lei: MortgageServices_VarcharAggExp!
  lenderCredits: MortgageServices_NumericAggExp!
  lienStatus: MortgageServices_MortgageServicesHmdaLienStatusAggExp!
  loanAmount: MortgageServices_NumericAggExp!
  loanPurpose: MortgageServices_MortgageServicesHmdaLoanPurposeAggExp!
  loanTerm: MortgageServices_Int4AggExp!
  manufacturedHomeLandPropertyInterest: MortgageServices_MortgageServicesHmdaManufacturedLandPropertyInterestAggExp!
  manufacturedHomeSecuredPropertyType: MortgageServices_MortgageServicesHmdaManufacturedHomeTypeAggExp!
  mortgageServicesApplicationId: MortgageServices_Int4AggExp!
  mortgageServicesHmdaRecordId: MortgageServices_Int4AggExp!
  mortgageServicesLoanId: MortgageServices_Int4AggExp!
  mortgageServicesLoanProductId: MortgageServices_Int4AggExp!
  multifamilyAffordableUnits: MortgageServices_Int4AggExp!
  negativeAmortization: MortgageServices_MortgageServicesHmdaNegativeAmortizationAggExp!
  occupancyType: MortgageServices_MortgageServicesHmdaOccupancyTypeAggExp!
  openEndLineOfCredit: MortgageServices_MortgageServicesHmdaOpenEndLineOfCreditAggExp!
  originationCharges: MortgageServices_NumericAggExp!
  otherNonAmortizingFeatures: MortgageServices_MortgageServicesHmdaOtherNonAmortizingAggExp!
  preapproval: MortgageServices_MortgageServicesHmdaPreapprovalAggExp!
  propertyValue: MortgageServices_NumericAggExp!
  rateSpread: MortgageServices_NumericAggExp!
  reportingYear: MortgageServices_Int4AggExp!
  reverseMortgage: MortgageServices_MortgageServicesHmdaReverseMortgageAggExp!
  state: MortgageServices_VarcharAggExp!
  submissionOfApplication: MortgageServices_MortgageServicesHmdaSubmissionMethodAggExp!
  submissionStatus: MortgageServices_MortgageServicesHmdaSubmissionStatusAggExp!
  totalLoanCosts: MortgageServices_NumericAggExp!
  totalPointsAndFees: MortgageServices_NumericAggExp!
  totalUnits: MortgageServices_Int4AggExp!
}

input MortgageServices_MortgageServicesHmdaRecordsBoolExp {
  _and: [MortgageServices_MortgageServicesHmdaRecordsBoolExp!]
  _not: MortgageServices_MortgageServicesHmdaRecordsBoolExp
  _or: [MortgageServices_MortgageServicesHmdaRecordsBoolExp!]
  actionTaken: MortgageServices_MortgageServicesHmdaActionTakenBoolExp
  actionTakenDate: MortgageServices_DateBoolExp
  aus1: MortgageServices_MortgageServicesHmdaAusBoolExp
  aus2: MortgageServices_MortgageServicesHmdaAusBoolExp
  aus3: MortgageServices_MortgageServicesHmdaAusBoolExp
  aus4: MortgageServices_MortgageServicesHmdaAusBoolExp
  aus5: MortgageServices_MortgageServicesHmdaAusBoolExp
  balloonPayment: MortgageServices_MortgageServicesHmdaBalloonPaymentBoolExp
  businessOrCommercialPurpose: MortgageServices_MortgageServicesHmdaBusinessOrCommercialPurposeBoolExp
  censusTract: MortgageServices_VarcharBoolExp
  constructionMethod: MortgageServices_MortgageServicesHmdaConstructionMethodBoolExp
  county: MortgageServices_VarcharBoolExp
  creditScoreApplicant: MortgageServices_Int4BoolExp
  creditScoreCoApplicant: MortgageServices_Int4BoolExp
  creditScoreModel: MortgageServices_MortgageServicesHmdaCreditScoreModelBoolExp
  denialReason1: MortgageServices_MortgageServicesHmdaDenialReasonBoolExp
  denialReason2: MortgageServices_MortgageServicesHmdaDenialReasonBoolExp
  denialReason3: MortgageServices_MortgageServicesHmdaDenialReasonBoolExp
  denialReason4: MortgageServices_MortgageServicesHmdaDenialReasonBoolExp
  discountPoints: MortgageServices_NumericBoolExp
  editStatus: MortgageServices_MortgageServicesHmdaRecordEditStatusBoolExp
  hoepaStatus: MortgageServices_MortgageServicesHmdaHoepaStatusBoolExp
  initiallyPayableToInstitution: MortgageServices_BoolBoolExp
  interestOnlyPayment: MortgageServices_MortgageServicesHmdaInterestOnlyBoolExp
  introRatePeriod: MortgageServices_Int4BoolExp
  lastModifiedDate: MortgageServices_TimestamptzBoolExp
  lastSubmissionDate: MortgageServices_DateBoolExp
  lei: MortgageServices_VarcharBoolExp
  lenderCredits: MortgageServices_NumericBoolExp
  lienStatus: MortgageServices_MortgageServicesHmdaLienStatusBoolExp
  loanAmount: MortgageServices_NumericBoolExp
  loanPurpose: MortgageServices_MortgageServicesHmdaLoanPurposeBoolExp
  loanTerm: MortgageServices_Int4BoolExp
  manufacturedHomeLandPropertyInterest: MortgageServices_MortgageServicesHmdaManufacturedLandPropertyInterestBoolExp
  manufacturedHomeSecuredPropertyType: MortgageServices_MortgageServicesHmdaManufacturedHomeTypeBoolExp
  mortgageServicesApplication: MortgageServices_MortgageServicesApplicationsBoolExp
  mortgageServicesApplicationId: MortgageServices_Int4BoolExp
  mortgageServicesHmdaApplicantDemographics: MortgageServices_MortgageServicesHmdaApplicantDemographicsBoolExp
  mortgageServicesHmdaEdits: MortgageServices_MortgageServicesHmdaEditsBoolExp
  mortgageServicesHmdaRecordId: MortgageServices_Int4BoolExp
  mortgageServicesLoan: MortgageServices_MortgageServicesLoansBoolExp
  mortgageServicesLoanId: MortgageServices_Int4BoolExp
  mortgageServicesLoanProduct: MortgageServices_MortgageServicesLoanProductsBoolExp
  mortgageServicesLoanProductId: MortgageServices_Int4BoolExp
  multifamilyAffordableUnits: MortgageServices_Int4BoolExp
  negativeAmortization: MortgageServices_MortgageServicesHmdaNegativeAmortizationBoolExp
  occupancyType: MortgageServices_MortgageServicesHmdaOccupancyTypeBoolExp
  openEndLineOfCredit: MortgageServices_MortgageServicesHmdaOpenEndLineOfCreditBoolExp
  originationCharges: MortgageServices_NumericBoolExp
  otherNonAmortizingFeatures: MortgageServices_MortgageServicesHmdaOtherNonAmortizingBoolExp
  preapproval: MortgageServices_MortgageServicesHmdaPreapprovalBoolExp
  propertyValue: MortgageServices_NumericBoolExp
  rateSpread: MortgageServices_NumericBoolExp
  reportingYear: MortgageServices_Int4BoolExp
  reverseMortgage: MortgageServices_MortgageServicesHmdaReverseMortgageBoolExp
  state: MortgageServices_VarcharBoolExp
  submissionOfApplication: MortgageServices_MortgageServicesHmdaSubmissionMethodBoolExp
  submissionStatus: MortgageServices_MortgageServicesHmdaSubmissionStatusBoolExp
  totalLoanCosts: MortgageServices_NumericBoolExp
  totalPointsAndFees: MortgageServices_NumericBoolExp
  totalUnits: MortgageServices_Int4BoolExp
}

input MortgageServices_MortgageServicesHmdaRecordsFilterInput {
  limit: Int
  offset: Int
  order_by: [MortgageServices_MortgageServicesHmdaRecordsOrderByExp!]
  where: MortgageServices_MortgageServicesHmdaRecordsBoolExp
}

input MortgageServices_MortgageServicesHmdaRecordsOrderByExp {
  actionTaken: OrderBy
  actionTakenDate: OrderBy
  aus1: OrderBy
  aus2: OrderBy
  aus3: OrderBy
  aus4: OrderBy
  aus5: OrderBy
  balloonPayment: OrderBy
  businessOrCommercialPurpose: OrderBy
  censusTract: OrderBy
  constructionMethod: OrderBy
  county: OrderBy
  creditScoreApplicant: OrderBy
  creditScoreCoApplicant: OrderBy
  creditScoreModel: OrderBy
  denialReason1: OrderBy
  denialReason2: OrderBy
  denialReason3: OrderBy
  denialReason4: OrderBy
  discountPoints: OrderBy
  editStatus: OrderBy
  hoepaStatus: OrderBy
  initiallyPayableToInstitution: OrderBy
  interestOnlyPayment: OrderBy
  introRatePeriod: OrderBy
  lastModifiedDate: OrderBy
  lastSubmissionDate: OrderBy
  lei: OrderBy
  lenderCredits: OrderBy
  lienStatus: OrderBy
  loanAmount: OrderBy
  loanPurpose: OrderBy
  loanTerm: OrderBy
  manufacturedHomeLandPropertyInterest: OrderBy
  manufacturedHomeSecuredPropertyType: OrderBy
  mortgageServicesApplication: MortgageServices_MortgageServicesApplicationsOrderByExp
  mortgageServicesApplicationId: OrderBy
  mortgageServicesHmdaRecordId: OrderBy
  mortgageServicesLoan: MortgageServices_MortgageServicesLoansOrderByExp
  mortgageServicesLoanId: OrderBy
  mortgageServicesLoanProduct: MortgageServices_MortgageServicesLoanProductsOrderByExp
  mortgageServicesLoanProductId: OrderBy
  multifamilyAffordableUnits: OrderBy
  negativeAmortization: OrderBy
  occupancyType: OrderBy
  openEndLineOfCredit: OrderBy
  originationCharges: OrderBy
  otherNonAmortizingFeatures: OrderBy
  preapproval: OrderBy
  propertyValue: OrderBy
  rateSpread: OrderBy
  reportingYear: OrderBy
  reverseMortgage: OrderBy
  state: OrderBy
  submissionOfApplication: OrderBy
  submissionStatus: OrderBy
  totalLoanCosts: OrderBy
  totalPointsAndFees: OrderBy
  totalUnits: OrderBy
}

scalar MortgageServices_MortgageServicesHmdaReverseMortgage

type MortgageServices_MortgageServicesHmdaReverseMortgageAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesHmdaReverseMortgage
  min: MortgageServices_MortgageServicesHmdaReverseMortgage
}

input MortgageServices_MortgageServicesHmdaReverseMortgageBoolExp {
  _and: [MortgageServices_MortgageServicesHmdaReverseMortgageBoolExp!]
  _eq: MortgageServices_MortgageServicesHmdaReverseMortgage
  _gt: MortgageServices_MortgageServicesHmdaReverseMortgage
  _gte: MortgageServices_MortgageServicesHmdaReverseMortgage
  _in: [MortgageServices_MortgageServicesHmdaReverseMortgage!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesHmdaReverseMortgage
  _lte: MortgageServices_MortgageServicesHmdaReverseMortgage
  _neq: MortgageServices_MortgageServicesHmdaReverseMortgage
  _not: MortgageServices_MortgageServicesHmdaReverseMortgageBoolExp
  _or: [MortgageServices_MortgageServicesHmdaReverseMortgageBoolExp!]
}

scalar MortgageServices_MortgageServicesHmdaSex

type MortgageServices_MortgageServicesHmdaSexAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesHmdaSex
  min: MortgageServices_MortgageServicesHmdaSex
}

input MortgageServices_MortgageServicesHmdaSexBoolExp {
  _and: [MortgageServices_MortgageServicesHmdaSexBoolExp!]
  _eq: MortgageServices_MortgageServicesHmdaSex
  _gt: MortgageServices_MortgageServicesHmdaSex
  _gte: MortgageServices_MortgageServicesHmdaSex
  _in: [MortgageServices_MortgageServicesHmdaSex!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesHmdaSex
  _lte: MortgageServices_MortgageServicesHmdaSex
  _neq: MortgageServices_MortgageServicesHmdaSex
  _not: MortgageServices_MortgageServicesHmdaSexBoolExp
  _or: [MortgageServices_MortgageServicesHmdaSexBoolExp!]
}

scalar MortgageServices_MortgageServicesHmdaSubmissionMethod

type MortgageServices_MortgageServicesHmdaSubmissionMethodAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesHmdaSubmissionMethod
  min: MortgageServices_MortgageServicesHmdaSubmissionMethod
}

input MortgageServices_MortgageServicesHmdaSubmissionMethodBoolExp {
  _and: [MortgageServices_MortgageServicesHmdaSubmissionMethodBoolExp!]
  _eq: MortgageServices_MortgageServicesHmdaSubmissionMethod
  _gt: MortgageServices_MortgageServicesHmdaSubmissionMethod
  _gte: MortgageServices_MortgageServicesHmdaSubmissionMethod
  _in: [MortgageServices_MortgageServicesHmdaSubmissionMethod!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesHmdaSubmissionMethod
  _lte: MortgageServices_MortgageServicesHmdaSubmissionMethod
  _neq: MortgageServices_MortgageServicesHmdaSubmissionMethod
  _not: MortgageServices_MortgageServicesHmdaSubmissionMethodBoolExp
  _or: [MortgageServices_MortgageServicesHmdaSubmissionMethodBoolExp!]
}

"""Tracks submissions of HMDA data to regulatory agencies"""
type MortgageServices_MortgageServicesHmdaSubmissions {
  """When the submission was accepted as complete"""
  completionDate: MortgageServices_Timestamptz

  """Confirmation number provided by the regulatory agency"""
  confirmationNumber: MortgageServices_Varchar

  """Number of errors found in the submission"""
  errorCount: MortgageServices_Int4

  """Name of the submitted file"""
  fileName: MortgageServices_Varchar

  """Size of the submitted file in bytes"""
  fileSize: MortgageServices_Int4
  hmdaSubmissionSubmittedBy: Enterprise_EnterpriseAssociates

  """Legal Entity Identifier of the reporting institution"""
  institutionLei: MortgageServices_Varchar!

  """Auto-incrementing identifier for each submission"""
  mortgageServicesSubmissionId: MortgageServices_Int4!

  """Number of records in the submission"""
  recordCount: MortgageServices_Int4

  """Reporting period (ANNUAL, QUARTERLY_Q1, etc.)"""
  reportingPeriod: MortgageServices_MortgageServicesReportingPeriod!

  """Calendar year for this submission"""
  reportingYear: MortgageServices_Int4!

  """When the submission was made"""
  submissionDate: MortgageServices_Timestamptz!

  """Additional notes about the submission"""
  submissionNotes: MortgageServices_Text

  """Current status of the submission process"""
  submissionStatus: MortgageServices_MortgageServicesSubmissionStatus!

  """User who made the submission"""
  submittedById: MortgageServices_Int4

  """Number of warnings found in the submission"""
  warningCount: MortgageServices_Int4
}

type MortgageServices_MortgageServicesHmdaSubmissionsAggExp {
  _count: Int!
  completionDate: MortgageServices_TimestamptzAggExp!
  confirmationNumber: MortgageServices_VarcharAggExp!
  errorCount: MortgageServices_Int4AggExp!
  fileName: MortgageServices_VarcharAggExp!
  fileSize: MortgageServices_Int4AggExp!
  institutionLei: MortgageServices_VarcharAggExp!
  mortgageServicesSubmissionId: MortgageServices_Int4AggExp!
  recordCount: MortgageServices_Int4AggExp!
  reportingPeriod: MortgageServices_MortgageServicesReportingPeriodAggExp!
  reportingYear: MortgageServices_Int4AggExp!
  submissionDate: MortgageServices_TimestamptzAggExp!
  submissionNotes: MortgageServices_TextAggExp!
  submissionStatus: MortgageServices_MortgageServicesSubmissionStatusAggExp!
  submittedById: MortgageServices_Int4AggExp!
  warningCount: MortgageServices_Int4AggExp!
}

input MortgageServices_MortgageServicesHmdaSubmissionsBoolExp {
  _and: [MortgageServices_MortgageServicesHmdaSubmissionsBoolExp!]
  _not: MortgageServices_MortgageServicesHmdaSubmissionsBoolExp
  _or: [MortgageServices_MortgageServicesHmdaSubmissionsBoolExp!]
  completionDate: MortgageServices_TimestamptzBoolExp
  confirmationNumber: MortgageServices_VarcharBoolExp
  errorCount: MortgageServices_Int4BoolExp
  fileName: MortgageServices_VarcharBoolExp
  fileSize: MortgageServices_Int4BoolExp
  institutionLei: MortgageServices_VarcharBoolExp
  mortgageServicesSubmissionId: MortgageServices_Int4BoolExp
  recordCount: MortgageServices_Int4BoolExp
  reportingPeriod: MortgageServices_MortgageServicesReportingPeriodBoolExp
  reportingYear: MortgageServices_Int4BoolExp
  submissionDate: MortgageServices_TimestamptzBoolExp
  submissionNotes: MortgageServices_TextBoolExp
  submissionStatus: MortgageServices_MortgageServicesSubmissionStatusBoolExp
  submittedById: MortgageServices_Int4BoolExp
  warningCount: MortgageServices_Int4BoolExp
}

input MortgageServices_MortgageServicesHmdaSubmissionsFilterInput {
  limit: Int
  offset: Int
  order_by: [MortgageServices_MortgageServicesHmdaSubmissionsOrderByExp!]
  where: MortgageServices_MortgageServicesHmdaSubmissionsBoolExp
}

input MortgageServices_MortgageServicesHmdaSubmissionsOrderByExp {
  completionDate: OrderBy
  confirmationNumber: OrderBy
  errorCount: OrderBy
  fileName: OrderBy
  fileSize: OrderBy
  institutionLei: OrderBy
  mortgageServicesSubmissionId: OrderBy
  recordCount: OrderBy
  reportingPeriod: OrderBy
  reportingYear: OrderBy
  submissionDate: OrderBy
  submissionNotes: OrderBy
  submissionStatus: OrderBy
  submittedById: OrderBy
  warningCount: OrderBy
}

scalar MortgageServices_MortgageServicesHmdaSubmissionStatus

type MortgageServices_MortgageServicesHmdaSubmissionStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesHmdaSubmissionStatus
  min: MortgageServices_MortgageServicesHmdaSubmissionStatus
}

input MortgageServices_MortgageServicesHmdaSubmissionStatusBoolExp {
  _and: [MortgageServices_MortgageServicesHmdaSubmissionStatusBoolExp!]
  _eq: MortgageServices_MortgageServicesHmdaSubmissionStatus
  _gt: MortgageServices_MortgageServicesHmdaSubmissionStatus
  _gte: MortgageServices_MortgageServicesHmdaSubmissionStatus
  _in: [MortgageServices_MortgageServicesHmdaSubmissionStatus!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesHmdaSubmissionStatus
  _lte: MortgageServices_MortgageServicesHmdaSubmissionStatus
  _neq: MortgageServices_MortgageServicesHmdaSubmissionStatus
  _not: MortgageServices_MortgageServicesHmdaSubmissionStatusBoolExp
  _or: [MortgageServices_MortgageServicesHmdaSubmissionStatusBoolExp!]
}

scalar MortgageServices_MortgageServicesIncomeFrequency

type MortgageServices_MortgageServicesIncomeFrequencyAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesIncomeFrequency
  min: MortgageServices_MortgageServicesIncomeFrequency
}

input MortgageServices_MortgageServicesIncomeFrequencyBoolExp {
  _and: [MortgageServices_MortgageServicesIncomeFrequencyBoolExp!]
  _eq: MortgageServices_MortgageServicesIncomeFrequency
  _gt: MortgageServices_MortgageServicesIncomeFrequency
  _gte: MortgageServices_MortgageServicesIncomeFrequency
  _in: [MortgageServices_MortgageServicesIncomeFrequency!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesIncomeFrequency
  _lte: MortgageServices_MortgageServicesIncomeFrequency
  _neq: MortgageServices_MortgageServicesIncomeFrequency
  _not: MortgageServices_MortgageServicesIncomeFrequencyBoolExp
  _or: [MortgageServices_MortgageServicesIncomeFrequencyBoolExp!]
}

scalar MortgageServices_MortgageServicesIncomeType

type MortgageServices_MortgageServicesIncomeTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesIncomeType
  min: MortgageServices_MortgageServicesIncomeType
}

input MortgageServices_MortgageServicesIncomeTypeBoolExp {
  _and: [MortgageServices_MortgageServicesIncomeTypeBoolExp!]
  _eq: MortgageServices_MortgageServicesIncomeType
  _gt: MortgageServices_MortgageServicesIncomeType
  _gte: MortgageServices_MortgageServicesIncomeType
  _in: [MortgageServices_MortgageServicesIncomeType!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesIncomeType
  _lte: MortgageServices_MortgageServicesIncomeType
  _neq: MortgageServices_MortgageServicesIncomeType
  _not: MortgageServices_MortgageServicesIncomeTypeBoolExp
  _or: [MortgageServices_MortgageServicesIncomeTypeBoolExp!]
}

"""Tracks insurance policies protecting mortgaged properties"""
type MortgageServices_MortgageServicesInsurancePolicies {
  """Insurance agent's name"""
  agentName: MortgageServices_Varchar

  """Insurance agent's contact number"""
  agentPhone: MortgageServices_Varchar

  """Annual cost of the insurance policy"""
  annualPremium: MortgageServices_Numeric!

  """Insurance company providing coverage"""
  carrierName: MortgageServices_Varchar!

  """Amount of insurance coverage"""
  coverageAmount: MortgageServices_Numeric!

  """Start date of policy coverage"""
  effectiveDate: MortgageServices_Date!

  """End date of policy coverage"""
  expirationDate: MortgageServices_Date!

  """Type of insurance coverage"""
  insuranceType: MortgageServices_MortgageServicesInsuranceType!

  """Auto-incrementing identifier for each policy"""
  mortgageServicesPolicyId: MortgageServices_Int4!
  mortgageServicesServicingAccount: MortgageServices_MortgageServicesServicingAccounts

  """References the servicing account this policy protects"""
  mortgageServicesServicingAccountId: MortgageServices_Int4!

  """Whether premium is paid from escrow account"""
  paidThroughEscrow: MortgageServices_Bool!

  """Insurance policy identifier"""
  policyNumber: MortgageServices_Varchar!

  """Current status of the policy"""
  status: MortgageServices_MortgageServicesInsurancePolicyStatus!
}

type MortgageServices_MortgageServicesInsurancePoliciesAggExp {
  _count: Int!
  agentName: MortgageServices_VarcharAggExp!
  agentPhone: MortgageServices_VarcharAggExp!
  annualPremium: MortgageServices_NumericAggExp!
  carrierName: MortgageServices_VarcharAggExp!
  coverageAmount: MortgageServices_NumericAggExp!
  effectiveDate: MortgageServices_DateAggExp!
  expirationDate: MortgageServices_DateAggExp!
  insuranceType: MortgageServices_MortgageServicesInsuranceTypeAggExp!
  mortgageServicesPolicyId: MortgageServices_Int4AggExp!
  mortgageServicesServicingAccountId: MortgageServices_Int4AggExp!
  paidThroughEscrow: MortgageServices_BoolAggExp!
  policyNumber: MortgageServices_VarcharAggExp!
  status: MortgageServices_MortgageServicesInsurancePolicyStatusAggExp!
}

input MortgageServices_MortgageServicesInsurancePoliciesBoolExp {
  _and: [MortgageServices_MortgageServicesInsurancePoliciesBoolExp!]
  _not: MortgageServices_MortgageServicesInsurancePoliciesBoolExp
  _or: [MortgageServices_MortgageServicesInsurancePoliciesBoolExp!]
  agentName: MortgageServices_VarcharBoolExp
  agentPhone: MortgageServices_VarcharBoolExp
  annualPremium: MortgageServices_NumericBoolExp
  carrierName: MortgageServices_VarcharBoolExp
  coverageAmount: MortgageServices_NumericBoolExp
  effectiveDate: MortgageServices_DateBoolExp
  expirationDate: MortgageServices_DateBoolExp
  insuranceType: MortgageServices_MortgageServicesInsuranceTypeBoolExp
  mortgageServicesPolicyId: MortgageServices_Int4BoolExp
  mortgageServicesServicingAccount: MortgageServices_MortgageServicesServicingAccountsBoolExp
  mortgageServicesServicingAccountId: MortgageServices_Int4BoolExp
  paidThroughEscrow: MortgageServices_BoolBoolExp
  policyNumber: MortgageServices_VarcharBoolExp
  status: MortgageServices_MortgageServicesInsurancePolicyStatusBoolExp
}

input MortgageServices_MortgageServicesInsurancePoliciesFilterInput {
  limit: Int
  offset: Int
  order_by: [MortgageServices_MortgageServicesInsurancePoliciesOrderByExp!]
  where: MortgageServices_MortgageServicesInsurancePoliciesBoolExp
}

input MortgageServices_MortgageServicesInsurancePoliciesOrderByExp {
  agentName: OrderBy
  agentPhone: OrderBy
  annualPremium: OrderBy
  carrierName: OrderBy
  coverageAmount: OrderBy
  effectiveDate: OrderBy
  expirationDate: OrderBy
  insuranceType: OrderBy
  mortgageServicesPolicyId: OrderBy
  mortgageServicesServicingAccount: MortgageServices_MortgageServicesServicingAccountsOrderByExp
  mortgageServicesServicingAccountId: OrderBy
  paidThroughEscrow: OrderBy
  policyNumber: OrderBy
  status: OrderBy
}

scalar MortgageServices_MortgageServicesInsurancePolicyStatus

type MortgageServices_MortgageServicesInsurancePolicyStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesInsurancePolicyStatus
  min: MortgageServices_MortgageServicesInsurancePolicyStatus
}

input MortgageServices_MortgageServicesInsurancePolicyStatusBoolExp {
  _and: [MortgageServices_MortgageServicesInsurancePolicyStatusBoolExp!]
  _eq: MortgageServices_MortgageServicesInsurancePolicyStatus
  _gt: MortgageServices_MortgageServicesInsurancePolicyStatus
  _gte: MortgageServices_MortgageServicesInsurancePolicyStatus
  _in: [MortgageServices_MortgageServicesInsurancePolicyStatus!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesInsurancePolicyStatus
  _lte: MortgageServices_MortgageServicesInsurancePolicyStatus
  _neq: MortgageServices_MortgageServicesInsurancePolicyStatus
  _not: MortgageServices_MortgageServicesInsurancePolicyStatusBoolExp
  _or: [MortgageServices_MortgageServicesInsurancePolicyStatusBoolExp!]
}

scalar MortgageServices_MortgageServicesInsuranceType

type MortgageServices_MortgageServicesInsuranceTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesInsuranceType
  min: MortgageServices_MortgageServicesInsuranceType
}

input MortgageServices_MortgageServicesInsuranceTypeBoolExp {
  _and: [MortgageServices_MortgageServicesInsuranceTypeBoolExp!]
  _eq: MortgageServices_MortgageServicesInsuranceType
  _gt: MortgageServices_MortgageServicesInsuranceType
  _gte: MortgageServices_MortgageServicesInsuranceType
  _in: [MortgageServices_MortgageServicesInsuranceType!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesInsuranceType
  _lte: MortgageServices_MortgageServicesInsuranceType
  _neq: MortgageServices_MortgageServicesInsuranceType
  _not: MortgageServices_MortgageServicesInsuranceTypeBoolExp
  _or: [MortgageServices_MortgageServicesInsuranceTypeBoolExp!]
}

scalar MortgageServices_MortgageServicesInterestRateType

type MortgageServices_MortgageServicesInterestRateTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesInterestRateType
  min: MortgageServices_MortgageServicesInterestRateType
}

input MortgageServices_MortgageServicesInterestRateTypeBoolExp {
  _and: [MortgageServices_MortgageServicesInterestRateTypeBoolExp!]
  _eq: MortgageServices_MortgageServicesInterestRateType
  _gt: MortgageServices_MortgageServicesInterestRateType
  _gte: MortgageServices_MortgageServicesInterestRateType
  _in: [MortgageServices_MortgageServicesInterestRateType!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesInterestRateType
  _lte: MortgageServices_MortgageServicesInterestRateType
  _neq: MortgageServices_MortgageServicesInterestRateType
  _not: MortgageServices_MortgageServicesInterestRateTypeBoolExp
  _or: [MortgageServices_MortgageServicesInterestRateTypeBoolExp!]
}

scalar MortgageServices_MortgageServicesLiabilityType

type MortgageServices_MortgageServicesLiabilityTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesLiabilityType
  min: MortgageServices_MortgageServicesLiabilityType
}

input MortgageServices_MortgageServicesLiabilityTypeBoolExp {
  _and: [MortgageServices_MortgageServicesLiabilityTypeBoolExp!]
  _eq: MortgageServices_MortgageServicesLiabilityType
  _gt: MortgageServices_MortgageServicesLiabilityType
  _gte: MortgageServices_MortgageServicesLiabilityType
  _in: [MortgageServices_MortgageServicesLiabilityType!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesLiabilityType
  _lte: MortgageServices_MortgageServicesLiabilityType
  _neq: MortgageServices_MortgageServicesLiabilityType
  _not: MortgageServices_MortgageServicesLiabilityTypeBoolExp
  _or: [MortgageServices_MortgageServicesLiabilityTypeBoolExp!]
}

"""
Tracks modifications made to existing loan accounts, such as changes to interest rates, terms, or principal balance.
"""
type MortgageServices_MortgageServicesLoanModifications {
  """Date modification was approved"""
  approvalDate: MortgageServices_Date

  """User who approved modification"""
  approvedById: MortgageServices_Int4

  """Amount of interest or fees capitalized"""
  capitalizedAmount: MortgageServices_Numeric

  """Path to modification agreement document"""
  documentPath: MortgageServices_Varchar

  """Date modification takes effect"""
  effectiveDate: MortgageServices_Date

  """Customer's reason for hardship"""
  hardshipReason: MortgageServices_MortgageServicesHardshipReason!

  """Reference to loan account"""
  loanAccountId: MortgageServices_Int4!

  """Type of loan modification"""
  modificationType: MortgageServices_MortgageServicesLoanModificationType!

  """Unique identifier for loan modification"""
  mortgageServicesModificationId: MortgageServices_Int4!

  """Principal balance after modification"""
  newPrincipalBalance: MortgageServices_Numeric

  """Interest rate after modification"""
  newRate: MortgageServices_Numeric

  """Loan term after modification"""
  newTermMonths: MortgageServices_Int4

  """Principal balance before modification"""
  originalPrincipalBalance: MortgageServices_Numeric

  """Interest rate before modification"""
  originalRate: MortgageServices_Numeric

  """Loan term before modification"""
  originalTermMonths: MortgageServices_Int4

  """Date modification was requested"""
  requestDate: MortgageServices_Date!

  """Current status of the modification"""
  status: MortgageServices_MortgageServicesLoanModificationStatus!
}

type MortgageServices_MortgageServicesLoanModificationsAggExp {
  _count: Int!
  approvalDate: MortgageServices_DateAggExp!
  approvedById: MortgageServices_Int4AggExp!
  capitalizedAmount: MortgageServices_NumericAggExp!
  documentPath: MortgageServices_VarcharAggExp!
  effectiveDate: MortgageServices_DateAggExp!
  hardshipReason: MortgageServices_MortgageServicesHardshipReasonAggExp!
  loanAccountId: MortgageServices_Int4AggExp!
  modificationType: MortgageServices_MortgageServicesLoanModificationTypeAggExp!
  mortgageServicesModificationId: MortgageServices_Int4AggExp!
  newPrincipalBalance: MortgageServices_NumericAggExp!
  newRate: MortgageServices_NumericAggExp!
  newTermMonths: MortgageServices_Int4AggExp!
  originalPrincipalBalance: MortgageServices_NumericAggExp!
  originalRate: MortgageServices_NumericAggExp!
  originalTermMonths: MortgageServices_Int4AggExp!
  requestDate: MortgageServices_DateAggExp!
  status: MortgageServices_MortgageServicesLoanModificationStatusAggExp!
}

input MortgageServices_MortgageServicesLoanModificationsBoolExp {
  _and: [MortgageServices_MortgageServicesLoanModificationsBoolExp!]
  _not: MortgageServices_MortgageServicesLoanModificationsBoolExp
  _or: [MortgageServices_MortgageServicesLoanModificationsBoolExp!]
  approvalDate: MortgageServices_DateBoolExp
  approvedById: MortgageServices_Int4BoolExp
  capitalizedAmount: MortgageServices_NumericBoolExp
  documentPath: MortgageServices_VarcharBoolExp
  effectiveDate: MortgageServices_DateBoolExp
  hardshipReason: MortgageServices_MortgageServicesHardshipReasonBoolExp
  loanAccountId: MortgageServices_Int4BoolExp
  modificationType: MortgageServices_MortgageServicesLoanModificationTypeBoolExp
  mortgageServicesModificationId: MortgageServices_Int4BoolExp
  newPrincipalBalance: MortgageServices_NumericBoolExp
  newRate: MortgageServices_NumericBoolExp
  newTermMonths: MortgageServices_Int4BoolExp
  originalPrincipalBalance: MortgageServices_NumericBoolExp
  originalRate: MortgageServices_NumericBoolExp
  originalTermMonths: MortgageServices_Int4BoolExp
  requestDate: MortgageServices_DateBoolExp
  status: MortgageServices_MortgageServicesLoanModificationStatusBoolExp
}

input MortgageServices_MortgageServicesLoanModificationsFilterInput {
  limit: Int
  offset: Int
  order_by: [MortgageServices_MortgageServicesLoanModificationsOrderByExp!]
  where: MortgageServices_MortgageServicesLoanModificationsBoolExp
}

input MortgageServices_MortgageServicesLoanModificationsOrderByExp {
  approvalDate: OrderBy
  approvedById: OrderBy
  capitalizedAmount: OrderBy
  documentPath: OrderBy
  effectiveDate: OrderBy
  hardshipReason: OrderBy
  loanAccountId: OrderBy
  modificationType: OrderBy
  mortgageServicesModificationId: OrderBy
  newPrincipalBalance: OrderBy
  newRate: OrderBy
  newTermMonths: OrderBy
  originalPrincipalBalance: OrderBy
  originalRate: OrderBy
  originalTermMonths: OrderBy
  requestDate: OrderBy
  status: OrderBy
}

scalar MortgageServices_MortgageServicesLoanModificationStatus

type MortgageServices_MortgageServicesLoanModificationStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesLoanModificationStatus
  min: MortgageServices_MortgageServicesLoanModificationStatus
}

input MortgageServices_MortgageServicesLoanModificationStatusBoolExp {
  _and: [MortgageServices_MortgageServicesLoanModificationStatusBoolExp!]
  _eq: MortgageServices_MortgageServicesLoanModificationStatus
  _gt: MortgageServices_MortgageServicesLoanModificationStatus
  _gte: MortgageServices_MortgageServicesLoanModificationStatus
  _in: [MortgageServices_MortgageServicesLoanModificationStatus!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesLoanModificationStatus
  _lte: MortgageServices_MortgageServicesLoanModificationStatus
  _neq: MortgageServices_MortgageServicesLoanModificationStatus
  _not: MortgageServices_MortgageServicesLoanModificationStatusBoolExp
  _or: [MortgageServices_MortgageServicesLoanModificationStatusBoolExp!]
}

scalar MortgageServices_MortgageServicesLoanModificationType

type MortgageServices_MortgageServicesLoanModificationTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesLoanModificationType
  min: MortgageServices_MortgageServicesLoanModificationType
}

input MortgageServices_MortgageServicesLoanModificationTypeBoolExp {
  _and: [MortgageServices_MortgageServicesLoanModificationTypeBoolExp!]
  _eq: MortgageServices_MortgageServicesLoanModificationType
  _gt: MortgageServices_MortgageServicesLoanModificationType
  _gte: MortgageServices_MortgageServicesLoanModificationType
  _in: [MortgageServices_MortgageServicesLoanModificationType!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesLoanModificationType
  _lte: MortgageServices_MortgageServicesLoanModificationType
  _neq: MortgageServices_MortgageServicesLoanModificationType
  _not: MortgageServices_MortgageServicesLoanModificationTypeBoolExp
  _or: [MortgageServices_MortgageServicesLoanModificationTypeBoolExp!]
}

"""Defines mortgage loan products available to applicants"""
type MortgageServices_MortgageServicesLoanProducts {
  """Starting interest rate for this product"""
  baseInterestRate: MortgageServices_Numeric!

  """Detailed description of the loan product and its features"""
  description: MortgageServices_Text

  """Date when product was discontinued if applicable"""
  discontinueDate: MortgageServices_Date

  """Type of interest rate structure"""
  interestRateType: MortgageServices_MortgageServicesInterestRateType!

  """Whether this product is currently offered"""
  isActive: MortgageServices_Bool!

  """Date when product was launched"""
  launchDate: MortgageServices_Date

  """Type of loan product"""
  loanType: MortgageServices_MortgageServicesLoanType!

  """Maximum principal amount for this product"""
  maxLoanAmount: MortgageServices_Numeric

  """Maximum loan duration in months"""
  maxTermMonths: MortgageServices_Int4!

  """Minimum credit score typically required"""
  minCreditScore: MortgageServices_Int4

  """Minimum down payment as percentage of purchase price"""
  minDownPaymentPercentage: MortgageServices_Numeric

  """Minimum principal amount for this product"""
  minLoanAmount: MortgageServices_Numeric

  """Minimum loan duration in months"""
  minTermMonths: MortgageServices_Int4!
  mortgageServicesApplications(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesApplicationsOrderByExp!], where: MortgageServices_MortgageServicesApplicationsBoolExp): [MortgageServices_MortgageServicesApplications!]
  mortgageServicesApplicationsAggregate(filter_input: MortgageServices_MortgageServicesApplicationsFilterInput): MortgageServices_MortgageServicesApplicationsAggExp!
  mortgageServicesHmdaRecords(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesHmdaRecordsOrderByExp!], where: MortgageServices_MortgageServicesHmdaRecordsBoolExp): [MortgageServices_MortgageServicesHmdaRecords!]
  mortgageServicesHmdaRecordsAggregate(filter_input: MortgageServices_MortgageServicesHmdaRecordsFilterInput): MortgageServices_MortgageServicesHmdaRecordsAggExp!

  """Unique identifier for each loan product"""
  mortgageServicesLoanProductId: MortgageServices_Int4!

  """Internal code identifying the loan product"""
  productCode: MortgageServices_Varchar!

  """Marketing name of the loan product"""
  productName: MortgageServices_Varchar!

  """Whether private mortgage insurance is required"""
  requiresPmi: MortgageServices_Bool
}

type MortgageServices_MortgageServicesLoanProductsAggExp {
  _count: Int!
  baseInterestRate: MortgageServices_NumericAggExp!
  description: MortgageServices_TextAggExp!
  discontinueDate: MortgageServices_DateAggExp!
  interestRateType: MortgageServices_MortgageServicesInterestRateTypeAggExp!
  isActive: MortgageServices_BoolAggExp!
  launchDate: MortgageServices_DateAggExp!
  loanType: MortgageServices_MortgageServicesLoanTypeAggExp!
  maxLoanAmount: MortgageServices_NumericAggExp!
  maxTermMonths: MortgageServices_Int4AggExp!
  minCreditScore: MortgageServices_Int4AggExp!
  minDownPaymentPercentage: MortgageServices_NumericAggExp!
  minLoanAmount: MortgageServices_NumericAggExp!
  minTermMonths: MortgageServices_Int4AggExp!
  mortgageServicesLoanProductId: MortgageServices_Int4AggExp!
  productCode: MortgageServices_VarcharAggExp!
  productName: MortgageServices_VarcharAggExp!
  requiresPmi: MortgageServices_BoolAggExp!
}

input MortgageServices_MortgageServicesLoanProductsBoolExp {
  _and: [MortgageServices_MortgageServicesLoanProductsBoolExp!]
  _not: MortgageServices_MortgageServicesLoanProductsBoolExp
  _or: [MortgageServices_MortgageServicesLoanProductsBoolExp!]
  baseInterestRate: MortgageServices_NumericBoolExp
  description: MortgageServices_TextBoolExp
  discontinueDate: MortgageServices_DateBoolExp
  interestRateType: MortgageServices_MortgageServicesInterestRateTypeBoolExp
  isActive: MortgageServices_BoolBoolExp
  launchDate: MortgageServices_DateBoolExp
  loanType: MortgageServices_MortgageServicesLoanTypeBoolExp
  maxLoanAmount: MortgageServices_NumericBoolExp
  maxTermMonths: MortgageServices_Int4BoolExp
  minCreditScore: MortgageServices_Int4BoolExp
  minDownPaymentPercentage: MortgageServices_NumericBoolExp
  minLoanAmount: MortgageServices_NumericBoolExp
  minTermMonths: MortgageServices_Int4BoolExp
  mortgageServicesApplications: MortgageServices_MortgageServicesApplicationsBoolExp
  mortgageServicesHmdaRecords: MortgageServices_MortgageServicesHmdaRecordsBoolExp
  mortgageServicesLoanProductId: MortgageServices_Int4BoolExp
  productCode: MortgageServices_VarcharBoolExp
  productName: MortgageServices_VarcharBoolExp
  requiresPmi: MortgageServices_BoolBoolExp
}

input MortgageServices_MortgageServicesLoanProductsFilterInput {
  limit: Int
  offset: Int
  order_by: [MortgageServices_MortgageServicesLoanProductsOrderByExp!]
  where: MortgageServices_MortgageServicesLoanProductsBoolExp
}

input MortgageServices_MortgageServicesLoanProductsOrderByExp {
  baseInterestRate: OrderBy
  description: OrderBy
  discontinueDate: OrderBy
  interestRateType: OrderBy
  isActive: OrderBy
  launchDate: OrderBy
  loanType: OrderBy
  maxLoanAmount: OrderBy
  maxTermMonths: OrderBy
  minCreditScore: OrderBy
  minDownPaymentPercentage: OrderBy
  minLoanAmount: OrderBy
  minTermMonths: OrderBy
  mortgageServicesLoanProductId: OrderBy
  productCode: OrderBy
  productName: OrderBy
  requiresPmi: OrderBy
}

scalar MortgageServices_MortgageServicesLoanPurpose

type MortgageServices_MortgageServicesLoanPurposeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesLoanPurpose
  min: MortgageServices_MortgageServicesLoanPurpose
}

input MortgageServices_MortgageServicesLoanPurposeBoolExp {
  _and: [MortgageServices_MortgageServicesLoanPurposeBoolExp!]
  _eq: MortgageServices_MortgageServicesLoanPurpose
  _gt: MortgageServices_MortgageServicesLoanPurpose
  _gte: MortgageServices_MortgageServicesLoanPurpose
  _in: [MortgageServices_MortgageServicesLoanPurpose!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesLoanPurpose
  _lte: MortgageServices_MortgageServicesLoanPurpose
  _neq: MortgageServices_MortgageServicesLoanPurpose
  _not: MortgageServices_MortgageServicesLoanPurposeBoolExp
  _or: [MortgageServices_MortgageServicesLoanPurposeBoolExp!]
}

"""Tracks interest rate locks for mortgage loans"""
type MortgageServices_MortgageServicesLoanRateLocks {
  """When the rate lock expires"""
  expirationDate: MortgageServices_Timestamptz!

  """Date the lock was extended, if applicable"""
  extensionDate: MortgageServices_Timestamptz

  """Fee charged for extending the lock, if any"""
  extensionFee: MortgageServices_Numeric

  """When the interest rate was locked"""
  lockDate: MortgageServices_Timestamptz!

  """Fee charged for the rate lock, if any"""
  lockFee: MortgageServices_Numeric

  """Duration of the lock in days"""
  lockPeriodDays: MortgageServices_Int4!

  """The interest rate secured by this lock"""
  lockedInterestRate: MortgageServices_Numeric!
  mortgageServicesLoan: MortgageServices_MortgageServicesLoans

  """References the loan this rate lock applies to"""
  mortgageServicesLoanId: MortgageServices_Int4!

  """Auto-incrementing identifier for each rate lock"""
  mortgageServicesRateLockId: MortgageServices_Int4!

  """Current status of the rate lock"""
  status: MortgageServices_MortgageServicesLoanRateLockStatus!
}

type MortgageServices_MortgageServicesLoanRateLocksAggExp {
  _count: Int!
  expirationDate: MortgageServices_TimestamptzAggExp!
  extensionDate: MortgageServices_TimestamptzAggExp!
  extensionFee: MortgageServices_NumericAggExp!
  lockDate: MortgageServices_TimestamptzAggExp!
  lockFee: MortgageServices_NumericAggExp!
  lockPeriodDays: MortgageServices_Int4AggExp!
  lockedInterestRate: MortgageServices_NumericAggExp!
  mortgageServicesLoanId: MortgageServices_Int4AggExp!
  mortgageServicesRateLockId: MortgageServices_Int4AggExp!
  status: MortgageServices_MortgageServicesLoanRateLockStatusAggExp!
}

input MortgageServices_MortgageServicesLoanRateLocksBoolExp {
  _and: [MortgageServices_MortgageServicesLoanRateLocksBoolExp!]
  _not: MortgageServices_MortgageServicesLoanRateLocksBoolExp
  _or: [MortgageServices_MortgageServicesLoanRateLocksBoolExp!]
  expirationDate: MortgageServices_TimestamptzBoolExp
  extensionDate: MortgageServices_TimestamptzBoolExp
  extensionFee: MortgageServices_NumericBoolExp
  lockDate: MortgageServices_TimestamptzBoolExp
  lockFee: MortgageServices_NumericBoolExp
  lockPeriodDays: MortgageServices_Int4BoolExp
  lockedInterestRate: MortgageServices_NumericBoolExp
  mortgageServicesLoan: MortgageServices_MortgageServicesLoansBoolExp
  mortgageServicesLoanId: MortgageServices_Int4BoolExp
  mortgageServicesRateLockId: MortgageServices_Int4BoolExp
  status: MortgageServices_MortgageServicesLoanRateLockStatusBoolExp
}

input MortgageServices_MortgageServicesLoanRateLocksFilterInput {
  limit: Int
  offset: Int
  order_by: [MortgageServices_MortgageServicesLoanRateLocksOrderByExp!]
  where: MortgageServices_MortgageServicesLoanRateLocksBoolExp
}

input MortgageServices_MortgageServicesLoanRateLocksOrderByExp {
  expirationDate: OrderBy
  extensionDate: OrderBy
  extensionFee: OrderBy
  lockDate: OrderBy
  lockFee: OrderBy
  lockPeriodDays: OrderBy
  lockedInterestRate: OrderBy
  mortgageServicesLoan: MortgageServices_MortgageServicesLoansOrderByExp
  mortgageServicesLoanId: OrderBy
  mortgageServicesRateLockId: OrderBy
  status: OrderBy
}

scalar MortgageServices_MortgageServicesLoanRateLockStatus

type MortgageServices_MortgageServicesLoanRateLockStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesLoanRateLockStatus
  min: MortgageServices_MortgageServicesLoanRateLockStatus
}

input MortgageServices_MortgageServicesLoanRateLockStatusBoolExp {
  _and: [MortgageServices_MortgageServicesLoanRateLockStatusBoolExp!]
  _eq: MortgageServices_MortgageServicesLoanRateLockStatus
  _gt: MortgageServices_MortgageServicesLoanRateLockStatus
  _gte: MortgageServices_MortgageServicesLoanRateLockStatus
  _in: [MortgageServices_MortgageServicesLoanRateLockStatus!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesLoanRateLockStatus
  _lte: MortgageServices_MortgageServicesLoanRateLockStatus
  _neq: MortgageServices_MortgageServicesLoanRateLockStatus
  _not: MortgageServices_MortgageServicesLoanRateLockStatusBoolExp
  _or: [MortgageServices_MortgageServicesLoanRateLockStatusBoolExp!]
}

"""
Stores final, actual loan details after closing. Now includes reference to enterprise account.
"""
type MortgageServices_MortgageServicesLoans {
  """Actual fees and costs paid at closing"""
  closingCosts: MortgageServices_Numeric

  """Final amount paid upfront by the borrower"""
  downPayment: MortgageServices_Numeric

  """Final down payment as a percentage of purchase price"""
  downPaymentPercentage: MortgageServices_Numeric

  """References the enterprise account for this loan"""
  enterpriseAccountId: MortgageServices_Int4!

  """Actual monthly amount collected for taxes and insurance"""
  escrowAmount: MortgageServices_Numeric

  """Due date of the first loan payment"""
  firstPaymentDate: MortgageServices_Date

  """Final annual percentage rate for the loan"""
  interestRate: MortgageServices_Numeric

  """Final principal amount of the loan"""
  loanAmount: MortgageServices_Numeric

  """Final duration of the loan in months"""
  loanTermMonths: MortgageServices_Int4

  """When the loan will be fully paid off"""
  maturityDate: MortgageServices_Date

  """Actual monthly payment including principal and interest"""
  monthlyPayment: MortgageServices_Numeric
  mortgageServicesApplication: MortgageServices_MortgageServicesApplications

  """References the mortgage application this loan is associated with"""
  mortgageServicesApplicationId: MortgageServices_Int4!
  mortgageServicesClosedLoans(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesClosedLoansOrderByExp!], where: MortgageServices_MortgageServicesClosedLoansBoolExp): [MortgageServices_MortgageServicesClosedLoans!]
  mortgageServicesClosedLoansAggregate(filter_input: MortgageServices_MortgageServicesClosedLoansFilterInput): MortgageServices_MortgageServicesClosedLoansAggExp!
  mortgageServicesClosingAppointments(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesClosingAppointmentsOrderByExp!], where: MortgageServices_MortgageServicesClosingAppointmentsBoolExp): [MortgageServices_MortgageServicesClosingAppointments!]
  mortgageServicesClosingAppointmentsAggregate(filter_input: MortgageServices_MortgageServicesClosingAppointmentsFilterInput): MortgageServices_MortgageServicesClosingAppointmentsAggExp!
  mortgageServicesClosingDisclosures(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesClosingDisclosuresOrderByExp!], where: MortgageServices_MortgageServicesClosingDisclosuresBoolExp): [MortgageServices_MortgageServicesClosingDisclosures!]
  mortgageServicesClosingDisclosuresAggregate(filter_input: MortgageServices_MortgageServicesClosingDisclosuresFilterInput): MortgageServices_MortgageServicesClosingDisclosuresAggExp!
  mortgageServicesHmdaRecords(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesHmdaRecordsOrderByExp!], where: MortgageServices_MortgageServicesHmdaRecordsBoolExp): [MortgageServices_MortgageServicesHmdaRecords!]
  mortgageServicesHmdaRecordsAggregate(filter_input: MortgageServices_MortgageServicesHmdaRecordsFilterInput): MortgageServices_MortgageServicesHmdaRecordsAggExp!

  """Unique identifier for each loan"""
  mortgageServicesLoanId: MortgageServices_Int4!
  mortgageServicesLoanRateLocks(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesLoanRateLocksOrderByExp!], where: MortgageServices_MortgageServicesLoanRateLocksBoolExp): [MortgageServices_MortgageServicesLoanRateLocks!]
  mortgageServicesLoanRateLocksAggregate(filter_input: MortgageServices_MortgageServicesLoanRateLocksFilterInput): MortgageServices_MortgageServicesLoanRateLocksAggExp!
  mortgageServicesServicingAccounts(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesServicingAccountsOrderByExp!], where: MortgageServices_MortgageServicesServicingAccountsBoolExp): [MortgageServices_MortgageServicesServicingAccounts!]
  mortgageServicesServicingAccountsAggregate(filter_input: MortgageServices_MortgageServicesServicingAccountsFilterInput): MortgageServices_MortgageServicesServicingAccountsAggExp!

  """When the loan was originated"""
  originationDate: MortgageServices_Date

  """Actual PMI rate applied to this loan"""
  pmiRate: MortgageServices_Numeric

  """Whether PMI is required for this loan"""
  privateMortgageInsurance: MortgageServices_Bool
}

type MortgageServices_MortgageServicesLoansAggExp {
  _count: Int!
  closingCosts: MortgageServices_NumericAggExp!
  downPayment: MortgageServices_NumericAggExp!
  downPaymentPercentage: MortgageServices_NumericAggExp!
  enterpriseAccountId: MortgageServices_Int4AggExp!
  escrowAmount: MortgageServices_NumericAggExp!
  firstPaymentDate: MortgageServices_DateAggExp!
  interestRate: MortgageServices_NumericAggExp!
  loanAmount: MortgageServices_NumericAggExp!
  loanTermMonths: MortgageServices_Int4AggExp!
  maturityDate: MortgageServices_DateAggExp!
  monthlyPayment: MortgageServices_NumericAggExp!
  mortgageServicesApplicationId: MortgageServices_Int4AggExp!
  mortgageServicesLoanId: MortgageServices_Int4AggExp!
  originationDate: MortgageServices_DateAggExp!
  pmiRate: MortgageServices_NumericAggExp!
  privateMortgageInsurance: MortgageServices_BoolAggExp!
}

input MortgageServices_MortgageServicesLoansBoolExp {
  _and: [MortgageServices_MortgageServicesLoansBoolExp!]
  _not: MortgageServices_MortgageServicesLoansBoolExp
  _or: [MortgageServices_MortgageServicesLoansBoolExp!]
  closingCosts: MortgageServices_NumericBoolExp
  downPayment: MortgageServices_NumericBoolExp
  downPaymentPercentage: MortgageServices_NumericBoolExp
  enterpriseAccountId: MortgageServices_Int4BoolExp
  escrowAmount: MortgageServices_NumericBoolExp
  firstPaymentDate: MortgageServices_DateBoolExp
  interestRate: MortgageServices_NumericBoolExp
  loanAmount: MortgageServices_NumericBoolExp
  loanTermMonths: MortgageServices_Int4BoolExp
  maturityDate: MortgageServices_DateBoolExp
  monthlyPayment: MortgageServices_NumericBoolExp
  mortgageServicesApplication: MortgageServices_MortgageServicesApplicationsBoolExp
  mortgageServicesApplicationId: MortgageServices_Int4BoolExp
  mortgageServicesClosedLoans: MortgageServices_MortgageServicesClosedLoansBoolExp
  mortgageServicesClosingAppointments: MortgageServices_MortgageServicesClosingAppointmentsBoolExp
  mortgageServicesClosingDisclosures: MortgageServices_MortgageServicesClosingDisclosuresBoolExp
  mortgageServicesHmdaRecords: MortgageServices_MortgageServicesHmdaRecordsBoolExp
  mortgageServicesLoanId: MortgageServices_Int4BoolExp
  mortgageServicesLoanRateLocks: MortgageServices_MortgageServicesLoanRateLocksBoolExp
  mortgageServicesServicingAccounts: MortgageServices_MortgageServicesServicingAccountsBoolExp
  originationDate: MortgageServices_DateBoolExp
  pmiRate: MortgageServices_NumericBoolExp
  privateMortgageInsurance: MortgageServices_BoolBoolExp
}

input MortgageServices_MortgageServicesLoansFilterInput {
  limit: Int
  offset: Int
  order_by: [MortgageServices_MortgageServicesLoansOrderByExp!]
  where: MortgageServices_MortgageServicesLoansBoolExp
}

input MortgageServices_MortgageServicesLoansOrderByExp {
  closingCosts: OrderBy
  downPayment: OrderBy
  downPaymentPercentage: OrderBy
  enterpriseAccountId: OrderBy
  escrowAmount: OrderBy
  firstPaymentDate: OrderBy
  interestRate: OrderBy
  loanAmount: OrderBy
  loanTermMonths: OrderBy
  maturityDate: OrderBy
  monthlyPayment: OrderBy
  mortgageServicesApplication: MortgageServices_MortgageServicesApplicationsOrderByExp
  mortgageServicesApplicationId: OrderBy
  mortgageServicesLoanId: OrderBy
  originationDate: OrderBy
  pmiRate: OrderBy
  privateMortgageInsurance: OrderBy
}

scalar MortgageServices_MortgageServicesLoanType

type MortgageServices_MortgageServicesLoanTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesLoanType
  min: MortgageServices_MortgageServicesLoanType
}

input MortgageServices_MortgageServicesLoanTypeBoolExp {
  _and: [MortgageServices_MortgageServicesLoanTypeBoolExp!]
  _eq: MortgageServices_MortgageServicesLoanType
  _gt: MortgageServices_MortgageServicesLoanType
  _gte: MortgageServices_MortgageServicesLoanType
  _in: [MortgageServices_MortgageServicesLoanType!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesLoanType
  _lte: MortgageServices_MortgageServicesLoanType
  _neq: MortgageServices_MortgageServicesLoanType
  _not: MortgageServices_MortgageServicesLoanTypeBoolExp
  _or: [MortgageServices_MortgageServicesLoanTypeBoolExp!]
}

scalar MortgageServices_MortgageServicesOccupancyType

type MortgageServices_MortgageServicesOccupancyTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesOccupancyType
  min: MortgageServices_MortgageServicesOccupancyType
}

input MortgageServices_MortgageServicesOccupancyTypeBoolExp {
  _and: [MortgageServices_MortgageServicesOccupancyTypeBoolExp!]
  _eq: MortgageServices_MortgageServicesOccupancyType
  _gt: MortgageServices_MortgageServicesOccupancyType
  _gte: MortgageServices_MortgageServicesOccupancyType
  _in: [MortgageServices_MortgageServicesOccupancyType!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesOccupancyType
  _lte: MortgageServices_MortgageServicesOccupancyType
  _neq: MortgageServices_MortgageServicesOccupancyType
  _not: MortgageServices_MortgageServicesOccupancyTypeBoolExp
  _or: [MortgageServices_MortgageServicesOccupancyTypeBoolExp!]
}

"""Tracks mortgage loan payments made by borrowers"""
type MortgageServices_MortgageServicesPayments {
  """Confirmation number provided to customer"""
  confirmationNumber: MortgageServices_Varchar

  """Portion of payment applied to escrow"""
  escrowAmount: MortgageServices_Numeric

  """Portion of payment applied to interest"""
  interestAmount: MortgageServices_Numeric!

  """Portion of payment applied to late fees"""
  lateFeeAmount: MortgageServices_Numeric

  """Auto-incrementing identifier for each payment"""
  mortgageServicesPaymentId: MortgageServices_Int4!
  mortgageServicesServicingAccount: MortgageServices_MortgageServicesServicingAccounts

  """References the servicing account receiving the payment"""
  mortgageServicesServicingAccountId: MortgageServices_Int4!

  """Portion of payment applied to other fees"""
  otherFeeAmount: MortgageServices_Numeric

  """Total amount of the payment"""
  paymentAmount: MortgageServices_Numeric!

  """When the payment was made"""
  paymentDate: MortgageServices_Timestamptz!

  """Method used to make payment (e.g., ACH, Check, Online)"""
  paymentMethod: MortgageServices_Varchar!

  """Type of payment (e.g., Regular, Extra Principal, Escrow Only)"""
  paymentType: MortgageServices_MortgageServicesPaymentType!

  """Portion of payment applied to principal"""
  principalAmount: MortgageServices_Numeric!

  """Current status of the payment (e.g., Pending, Completed)"""
  status: MortgageServices_Varchar!

  """Financial transaction identifier"""
  transactionId: MortgageServices_Varchar
}

type MortgageServices_MortgageServicesPaymentsAggExp {
  _count: Int!
  confirmationNumber: MortgageServices_VarcharAggExp!
  escrowAmount: MortgageServices_NumericAggExp!
  interestAmount: MortgageServices_NumericAggExp!
  lateFeeAmount: MortgageServices_NumericAggExp!
  mortgageServicesPaymentId: MortgageServices_Int4AggExp!
  mortgageServicesServicingAccountId: MortgageServices_Int4AggExp!
  otherFeeAmount: MortgageServices_NumericAggExp!
  paymentAmount: MortgageServices_NumericAggExp!
  paymentDate: MortgageServices_TimestamptzAggExp!
  paymentMethod: MortgageServices_VarcharAggExp!
  paymentType: MortgageServices_MortgageServicesPaymentTypeAggExp!
  principalAmount: MortgageServices_NumericAggExp!
  status: MortgageServices_VarcharAggExp!
  transactionId: MortgageServices_VarcharAggExp!
}

input MortgageServices_MortgageServicesPaymentsBoolExp {
  _and: [MortgageServices_MortgageServicesPaymentsBoolExp!]
  _not: MortgageServices_MortgageServicesPaymentsBoolExp
  _or: [MortgageServices_MortgageServicesPaymentsBoolExp!]
  confirmationNumber: MortgageServices_VarcharBoolExp
  escrowAmount: MortgageServices_NumericBoolExp
  interestAmount: MortgageServices_NumericBoolExp
  lateFeeAmount: MortgageServices_NumericBoolExp
  mortgageServicesPaymentId: MortgageServices_Int4BoolExp
  mortgageServicesServicingAccount: MortgageServices_MortgageServicesServicingAccountsBoolExp
  mortgageServicesServicingAccountId: MortgageServices_Int4BoolExp
  otherFeeAmount: MortgageServices_NumericBoolExp
  paymentAmount: MortgageServices_NumericBoolExp
  paymentDate: MortgageServices_TimestamptzBoolExp
  paymentMethod: MortgageServices_VarcharBoolExp
  paymentType: MortgageServices_MortgageServicesPaymentTypeBoolExp
  principalAmount: MortgageServices_NumericBoolExp
  status: MortgageServices_VarcharBoolExp
  transactionId: MortgageServices_VarcharBoolExp
}

input MortgageServices_MortgageServicesPaymentsFilterInput {
  limit: Int
  offset: Int
  order_by: [MortgageServices_MortgageServicesPaymentsOrderByExp!]
  where: MortgageServices_MortgageServicesPaymentsBoolExp
}

input MortgageServices_MortgageServicesPaymentsOrderByExp {
  confirmationNumber: OrderBy
  escrowAmount: OrderBy
  interestAmount: OrderBy
  lateFeeAmount: OrderBy
  mortgageServicesPaymentId: OrderBy
  mortgageServicesServicingAccount: MortgageServices_MortgageServicesServicingAccountsOrderByExp
  mortgageServicesServicingAccountId: OrderBy
  otherFeeAmount: OrderBy
  paymentAmount: OrderBy
  paymentDate: OrderBy
  paymentMethod: OrderBy
  paymentType: OrderBy
  principalAmount: OrderBy
  status: OrderBy
  transactionId: OrderBy
}

scalar MortgageServices_MortgageServicesPaymentType

type MortgageServices_MortgageServicesPaymentTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesPaymentType
  min: MortgageServices_MortgageServicesPaymentType
}

input MortgageServices_MortgageServicesPaymentTypeBoolExp {
  _and: [MortgageServices_MortgageServicesPaymentTypeBoolExp!]
  _eq: MortgageServices_MortgageServicesPaymentType
  _gt: MortgageServices_MortgageServicesPaymentType
  _gte: MortgageServices_MortgageServicesPaymentType
  _in: [MortgageServices_MortgageServicesPaymentType!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesPaymentType
  _lte: MortgageServices_MortgageServicesPaymentType
  _neq: MortgageServices_MortgageServicesPaymentType
  _not: MortgageServices_MortgageServicesPaymentTypeBoolExp
  _or: [MortgageServices_MortgageServicesPaymentTypeBoolExp!]
}

"""Stores information about properties being purchased or refinanced"""
type MortgageServices_MortgageServicesProperties {
  """References the complete property address"""
  address: MortgageServices_Varchar!

  """Number of bathrooms (allows for half baths)"""
  bathrooms: MortgageServices_Numeric

  """Number of bedrooms"""
  bedrooms: MortgageServices_Int4

  """Expected completion date for new construction"""
  constructionCompletionDate: MortgageServices_Date

  """Monthly homeowners association fees if applicable"""
  hoaDues: MortgageServices_Numeric

  """Indicates if the property is newly constructed"""
  isNewConstruction: MortgageServices_Bool

  """Size of the property lot"""
  lotSize: MortgageServices_Numeric
  mortgageServicesApplication: MortgageServices_MortgageServicesApplications

  """References the mortgage application this property is associated with"""
  mortgageServicesApplicationId: MortgageServices_Int4!
  mortgageServicesAppraisals(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesAppraisalsOrderByExp!], where: MortgageServices_MortgageServicesAppraisalsBoolExp): [MortgageServices_MortgageServicesAppraisals!]
  mortgageServicesAppraisalsAggregate(filter_input: MortgageServices_MortgageServicesAppraisalsFilterInput): MortgageServices_MortgageServicesAppraisalsAggExp!

  """Auto-incrementing identifier for each property record"""
  mortgageServicesPropertyId: MortgageServices_Int4!

  """How the property will be used by the borrower"""
  occupancyType: MortgageServices_MortgageServicesOccupancyType!

  """Type of property"""
  propertyType: MortgageServices_MortgageServicesPropertyType!

  """Total living area in square feet"""
  squareFeet: MortgageServices_Int4

  """Year the property was constructed"""
  yearBuilt: MortgageServices_Int4
}

type MortgageServices_MortgageServicesPropertiesAggExp {
  _count: Int!
  address: MortgageServices_VarcharAggExp!
  bathrooms: MortgageServices_NumericAggExp!
  bedrooms: MortgageServices_Int4AggExp!
  constructionCompletionDate: MortgageServices_DateAggExp!
  hoaDues: MortgageServices_NumericAggExp!
  isNewConstruction: MortgageServices_BoolAggExp!
  lotSize: MortgageServices_NumericAggExp!
  mortgageServicesApplicationId: MortgageServices_Int4AggExp!
  mortgageServicesPropertyId: MortgageServices_Int4AggExp!
  occupancyType: MortgageServices_MortgageServicesOccupancyTypeAggExp!
  propertyType: MortgageServices_MortgageServicesPropertyTypeAggExp!
  squareFeet: MortgageServices_Int4AggExp!
  yearBuilt: MortgageServices_Int4AggExp!
}

input MortgageServices_MortgageServicesPropertiesBoolExp {
  _and: [MortgageServices_MortgageServicesPropertiesBoolExp!]
  _not: MortgageServices_MortgageServicesPropertiesBoolExp
  _or: [MortgageServices_MortgageServicesPropertiesBoolExp!]
  address: MortgageServices_VarcharBoolExp
  bathrooms: MortgageServices_NumericBoolExp
  bedrooms: MortgageServices_Int4BoolExp
  constructionCompletionDate: MortgageServices_DateBoolExp
  hoaDues: MortgageServices_NumericBoolExp
  isNewConstruction: MortgageServices_BoolBoolExp
  lotSize: MortgageServices_NumericBoolExp
  mortgageServicesApplication: MortgageServices_MortgageServicesApplicationsBoolExp
  mortgageServicesApplicationId: MortgageServices_Int4BoolExp
  mortgageServicesAppraisals: MortgageServices_MortgageServicesAppraisalsBoolExp
  mortgageServicesPropertyId: MortgageServices_Int4BoolExp
  occupancyType: MortgageServices_MortgageServicesOccupancyTypeBoolExp
  propertyType: MortgageServices_MortgageServicesPropertyTypeBoolExp
  squareFeet: MortgageServices_Int4BoolExp
  yearBuilt: MortgageServices_Int4BoolExp
}

input MortgageServices_MortgageServicesPropertiesFilterInput {
  limit: Int
  offset: Int
  order_by: [MortgageServices_MortgageServicesPropertiesOrderByExp!]
  where: MortgageServices_MortgageServicesPropertiesBoolExp
}

input MortgageServices_MortgageServicesPropertiesOrderByExp {
  address: OrderBy
  bathrooms: OrderBy
  bedrooms: OrderBy
  constructionCompletionDate: OrderBy
  hoaDues: OrderBy
  isNewConstruction: OrderBy
  lotSize: OrderBy
  mortgageServicesApplication: MortgageServices_MortgageServicesApplicationsOrderByExp
  mortgageServicesApplicationId: OrderBy
  mortgageServicesPropertyId: OrderBy
  occupancyType: OrderBy
  propertyType: OrderBy
  squareFeet: OrderBy
  yearBuilt: OrderBy
}

scalar MortgageServices_MortgageServicesPropertyType

type MortgageServices_MortgageServicesPropertyTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesPropertyType
  min: MortgageServices_MortgageServicesPropertyType
}

input MortgageServices_MortgageServicesPropertyTypeBoolExp {
  _and: [MortgageServices_MortgageServicesPropertyTypeBoolExp!]
  _eq: MortgageServices_MortgageServicesPropertyType
  _gt: MortgageServices_MortgageServicesPropertyType
  _gte: MortgageServices_MortgageServicesPropertyType
  _in: [MortgageServices_MortgageServicesPropertyType!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesPropertyType
  _lte: MortgageServices_MortgageServicesPropertyType
  _neq: MortgageServices_MortgageServicesPropertyType
  _not: MortgageServices_MortgageServicesPropertyTypeBoolExp
  _or: [MortgageServices_MortgageServicesPropertyTypeBoolExp!]
}

scalar MortgageServices_MortgageServicesRelationshipType

type MortgageServices_MortgageServicesRelationshipTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesRelationshipType
  min: MortgageServices_MortgageServicesRelationshipType
}

input MortgageServices_MortgageServicesRelationshipTypeBoolExp {
  _and: [MortgageServices_MortgageServicesRelationshipTypeBoolExp!]
  _eq: MortgageServices_MortgageServicesRelationshipType
  _gt: MortgageServices_MortgageServicesRelationshipType
  _gte: MortgageServices_MortgageServicesRelationshipType
  _in: [MortgageServices_MortgageServicesRelationshipType!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesRelationshipType
  _lte: MortgageServices_MortgageServicesRelationshipType
  _neq: MortgageServices_MortgageServicesRelationshipType
  _not: MortgageServices_MortgageServicesRelationshipTypeBoolExp
  _or: [MortgageServices_MortgageServicesRelationshipTypeBoolExp!]
}

scalar MortgageServices_MortgageServicesReportingPeriod

type MortgageServices_MortgageServicesReportingPeriodAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesReportingPeriod
  min: MortgageServices_MortgageServicesReportingPeriod
}

input MortgageServices_MortgageServicesReportingPeriodBoolExp {
  _and: [MortgageServices_MortgageServicesReportingPeriodBoolExp!]
  _eq: MortgageServices_MortgageServicesReportingPeriod
  _gt: MortgageServices_MortgageServicesReportingPeriod
  _gte: MortgageServices_MortgageServicesReportingPeriod
  _in: [MortgageServices_MortgageServicesReportingPeriod!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesReportingPeriod
  _lte: MortgageServices_MortgageServicesReportingPeriod
  _neq: MortgageServices_MortgageServicesReportingPeriod
  _not: MortgageServices_MortgageServicesReportingPeriodBoolExp
  _or: [MortgageServices_MortgageServicesReportingPeriodBoolExp!]
}

"""Manages ongoing servicing of closed mortgage loans"""
type MortgageServices_MortgageServicesServicingAccounts {
  """Current applicable interest rate"""
  currentInterestRate: MortgageServices_Numeric!

  """Current remaining principal balance"""
  currentPrincipalBalance: MortgageServices_Numeric!

  """Current balance in escrow account"""
  escrowBalance: MortgageServices_Numeric

  """Escrow paid year-to-date"""
  escrowPaidYtd: MortgageServices_Numeric

  """When next insurance payment is due"""
  homeownersInsuranceDueDate: MortgageServices_Date

  """Interest paid year-to-date"""
  interestPaidYtd: MortgageServices_Numeric

  """Amount of last payment received"""
  lastPaymentAmount: MortgageServices_Numeric

  """When last payment was received"""
  lastPaymentDate: MortgageServices_Date
  mortgageServicesCustomerCommunications(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesCustomerCommunicationsOrderByExp!], where: MortgageServices_MortgageServicesCustomerCommunicationsBoolExp): [MortgageServices_MortgageServicesCustomerCommunications!]
  mortgageServicesCustomerCommunicationsAggregate(filter_input: MortgageServices_MortgageServicesCustomerCommunicationsFilterInput): MortgageServices_MortgageServicesCustomerCommunicationsAggExp!
  mortgageServicesEscrowAnalyses(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesEscrowAnalysesOrderByExp!], where: MortgageServices_MortgageServicesEscrowAnalysesBoolExp): [MortgageServices_MortgageServicesEscrowAnalyses!]
  mortgageServicesEscrowAnalysesAggregate(filter_input: MortgageServices_MortgageServicesEscrowAnalysesFilterInput): MortgageServices_MortgageServicesEscrowAnalysesAggExp!
  mortgageServicesEscrowDisbursements(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesEscrowDisbursementsOrderByExp!], where: MortgageServices_MortgageServicesEscrowDisbursementsBoolExp): [MortgageServices_MortgageServicesEscrowDisbursements!]
  mortgageServicesEscrowDisbursementsAggregate(filter_input: MortgageServices_MortgageServicesEscrowDisbursementsFilterInput): MortgageServices_MortgageServicesEscrowDisbursementsAggExp!
  mortgageServicesInsurancePolicies(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesInsurancePoliciesOrderByExp!], where: MortgageServices_MortgageServicesInsurancePoliciesBoolExp): [MortgageServices_MortgageServicesInsurancePolicies!]
  mortgageServicesInsurancePoliciesAggregate(filter_input: MortgageServices_MortgageServicesInsurancePoliciesFilterInput): MortgageServices_MortgageServicesInsurancePoliciesAggExp!
  mortgageServicesLoan: MortgageServices_MortgageServicesLoans

  """References the originated loan"""
  mortgageServicesLoanId: MortgageServices_Int4!
  mortgageServicesPayments(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesPaymentsOrderByExp!], where: MortgageServices_MortgageServicesPaymentsBoolExp): [MortgageServices_MortgageServicesPayments!]
  mortgageServicesPaymentsAggregate(filter_input: MortgageServices_MortgageServicesPaymentsFilterInput): MortgageServices_MortgageServicesPaymentsAggExp!

  """Unique identifier for each servicing account"""
  mortgageServicesServicingAccountId: MortgageServices_Int4!

  """Amount due for next payment"""
  nextPaymentAmount: MortgageServices_Numeric

  """When next payment is due"""
  nextPaymentDueDate: MortgageServices_Date

  """Original loan amount at closing"""
  originalPrincipalBalance: MortgageServices_Numeric!

  """Principal paid year-to-date"""
  principalPaidYtd: MortgageServices_Numeric

  """When next property tax payment is due"""
  propertyTaxDueDate: MortgageServices_Date

  """When servicing was transferred to current servicer"""
  servicingTransferredDate: MortgageServices_Date

  """Current status of the loan being serviced"""
  status: MortgageServices_MortgageServicesServicingAccountStatus!
}

type MortgageServices_MortgageServicesServicingAccountsAggExp {
  _count: Int!
  currentInterestRate: MortgageServices_NumericAggExp!
  currentPrincipalBalance: MortgageServices_NumericAggExp!
  escrowBalance: MortgageServices_NumericAggExp!
  escrowPaidYtd: MortgageServices_NumericAggExp!
  homeownersInsuranceDueDate: MortgageServices_DateAggExp!
  interestPaidYtd: MortgageServices_NumericAggExp!
  lastPaymentAmount: MortgageServices_NumericAggExp!
  lastPaymentDate: MortgageServices_DateAggExp!
  mortgageServicesLoanId: MortgageServices_Int4AggExp!
  mortgageServicesServicingAccountId: MortgageServices_Int4AggExp!
  nextPaymentAmount: MortgageServices_NumericAggExp!
  nextPaymentDueDate: MortgageServices_DateAggExp!
  originalPrincipalBalance: MortgageServices_NumericAggExp!
  principalPaidYtd: MortgageServices_NumericAggExp!
  propertyTaxDueDate: MortgageServices_DateAggExp!
  servicingTransferredDate: MortgageServices_DateAggExp!
  status: MortgageServices_MortgageServicesServicingAccountStatusAggExp!
}

input MortgageServices_MortgageServicesServicingAccountsBoolExp {
  _and: [MortgageServices_MortgageServicesServicingAccountsBoolExp!]
  _not: MortgageServices_MortgageServicesServicingAccountsBoolExp
  _or: [MortgageServices_MortgageServicesServicingAccountsBoolExp!]
  currentInterestRate: MortgageServices_NumericBoolExp
  currentPrincipalBalance: MortgageServices_NumericBoolExp
  escrowBalance: MortgageServices_NumericBoolExp
  escrowPaidYtd: MortgageServices_NumericBoolExp
  homeownersInsuranceDueDate: MortgageServices_DateBoolExp
  interestPaidYtd: MortgageServices_NumericBoolExp
  lastPaymentAmount: MortgageServices_NumericBoolExp
  lastPaymentDate: MortgageServices_DateBoolExp
  mortgageServicesCustomerCommunications: MortgageServices_MortgageServicesCustomerCommunicationsBoolExp
  mortgageServicesEscrowAnalyses: MortgageServices_MortgageServicesEscrowAnalysesBoolExp
  mortgageServicesEscrowDisbursements: MortgageServices_MortgageServicesEscrowDisbursementsBoolExp
  mortgageServicesInsurancePolicies: MortgageServices_MortgageServicesInsurancePoliciesBoolExp
  mortgageServicesLoan: MortgageServices_MortgageServicesLoansBoolExp
  mortgageServicesLoanId: MortgageServices_Int4BoolExp
  mortgageServicesPayments: MortgageServices_MortgageServicesPaymentsBoolExp
  mortgageServicesServicingAccountId: MortgageServices_Int4BoolExp
  nextPaymentAmount: MortgageServices_NumericBoolExp
  nextPaymentDueDate: MortgageServices_DateBoolExp
  originalPrincipalBalance: MortgageServices_NumericBoolExp
  principalPaidYtd: MortgageServices_NumericBoolExp
  propertyTaxDueDate: MortgageServices_DateBoolExp
  servicingTransferredDate: MortgageServices_DateBoolExp
  status: MortgageServices_MortgageServicesServicingAccountStatusBoolExp
}

input MortgageServices_MortgageServicesServicingAccountsFilterInput {
  limit: Int
  offset: Int
  order_by: [MortgageServices_MortgageServicesServicingAccountsOrderByExp!]
  where: MortgageServices_MortgageServicesServicingAccountsBoolExp
}

input MortgageServices_MortgageServicesServicingAccountsOrderByExp {
  currentInterestRate: OrderBy
  currentPrincipalBalance: OrderBy
  escrowBalance: OrderBy
  escrowPaidYtd: OrderBy
  homeownersInsuranceDueDate: OrderBy
  interestPaidYtd: OrderBy
  lastPaymentAmount: OrderBy
  lastPaymentDate: OrderBy
  mortgageServicesLoan: MortgageServices_MortgageServicesLoansOrderByExp
  mortgageServicesLoanId: OrderBy
  mortgageServicesServicingAccountId: OrderBy
  nextPaymentAmount: OrderBy
  nextPaymentDueDate: OrderBy
  originalPrincipalBalance: OrderBy
  principalPaidYtd: OrderBy
  propertyTaxDueDate: OrderBy
  servicingTransferredDate: OrderBy
  status: OrderBy
}

scalar MortgageServices_MortgageServicesServicingAccountStatus

type MortgageServices_MortgageServicesServicingAccountStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesServicingAccountStatus
  min: MortgageServices_MortgageServicesServicingAccountStatus
}

input MortgageServices_MortgageServicesServicingAccountStatusBoolExp {
  _and: [MortgageServices_MortgageServicesServicingAccountStatusBoolExp!]
  _eq: MortgageServices_MortgageServicesServicingAccountStatus
  _gt: MortgageServices_MortgageServicesServicingAccountStatus
  _gte: MortgageServices_MortgageServicesServicingAccountStatus
  _in: [MortgageServices_MortgageServicesServicingAccountStatus!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesServicingAccountStatus
  _lte: MortgageServices_MortgageServicesServicingAccountStatus
  _neq: MortgageServices_MortgageServicesServicingAccountStatus
  _not: MortgageServices_MortgageServicesServicingAccountStatusBoolExp
  _or: [MortgageServices_MortgageServicesServicingAccountStatusBoolExp!]
}

scalar MortgageServices_MortgageServicesSubmissionChannel

type MortgageServices_MortgageServicesSubmissionChannelAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesSubmissionChannel
  min: MortgageServices_MortgageServicesSubmissionChannel
}

input MortgageServices_MortgageServicesSubmissionChannelBoolExp {
  _and: [MortgageServices_MortgageServicesSubmissionChannelBoolExp!]
  _eq: MortgageServices_MortgageServicesSubmissionChannel
  _gt: MortgageServices_MortgageServicesSubmissionChannel
  _gte: MortgageServices_MortgageServicesSubmissionChannel
  _in: [MortgageServices_MortgageServicesSubmissionChannel!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesSubmissionChannel
  _lte: MortgageServices_MortgageServicesSubmissionChannel
  _neq: MortgageServices_MortgageServicesSubmissionChannel
  _not: MortgageServices_MortgageServicesSubmissionChannelBoolExp
  _or: [MortgageServices_MortgageServicesSubmissionChannelBoolExp!]
}

scalar MortgageServices_MortgageServicesSubmissionStatus

type MortgageServices_MortgageServicesSubmissionStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesSubmissionStatus
  min: MortgageServices_MortgageServicesSubmissionStatus
}

input MortgageServices_MortgageServicesSubmissionStatusBoolExp {
  _and: [MortgageServices_MortgageServicesSubmissionStatusBoolExp!]
  _eq: MortgageServices_MortgageServicesSubmissionStatus
  _gt: MortgageServices_MortgageServicesSubmissionStatus
  _gte: MortgageServices_MortgageServicesSubmissionStatus
  _in: [MortgageServices_MortgageServicesSubmissionStatus!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesSubmissionStatus
  _lte: MortgageServices_MortgageServicesSubmissionStatus
  _neq: MortgageServices_MortgageServicesSubmissionStatus
  _not: MortgageServices_MortgageServicesSubmissionStatusBoolExp
  _or: [MortgageServices_MortgageServicesSubmissionStatusBoolExp!]
}

scalar MortgageServices_MortgageServicesVerificationStatus

type MortgageServices_MortgageServicesVerificationStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_MortgageServicesVerificationStatus
  min: MortgageServices_MortgageServicesVerificationStatus
}

input MortgageServices_MortgageServicesVerificationStatusBoolExp {
  _and: [MortgageServices_MortgageServicesVerificationStatusBoolExp!]
  _eq: MortgageServices_MortgageServicesVerificationStatus
  _gt: MortgageServices_MortgageServicesVerificationStatus
  _gte: MortgageServices_MortgageServicesVerificationStatus
  _in: [MortgageServices_MortgageServicesVerificationStatus!]
  _is_null: Boolean
  _lt: MortgageServices_MortgageServicesVerificationStatus
  _lte: MortgageServices_MortgageServicesVerificationStatus
  _neq: MortgageServices_MortgageServicesVerificationStatus
  _not: MortgageServices_MortgageServicesVerificationStatusBoolExp
  _or: [MortgageServices_MortgageServicesVerificationStatusBoolExp!]
}

scalar MortgageServices_Numeric

type MortgageServices_NumericAggExp {
  _count: Int!
  _count_distinct: Int!
  avg: MortgageServices_Numeric
  max: MortgageServices_Numeric
  min: MortgageServices_Numeric
  stddev: MortgageServices_Numeric
  stddev_pop: MortgageServices_Numeric
  stddev_samp: MortgageServices_Numeric
  sum: MortgageServices_Numeric
  var_pop: MortgageServices_Numeric
  var_samp: MortgageServices_Numeric
  variance: MortgageServices_Numeric
}

input MortgageServices_NumericBoolExp {
  _and: [MortgageServices_NumericBoolExp!]
  _eq: MortgageServices_Numeric
  _gt: MortgageServices_Numeric
  _gte: MortgageServices_Numeric
  _in: [MortgageServices_Numeric!]
  _is_null: Boolean
  _lt: MortgageServices_Numeric
  _lte: MortgageServices_Numeric
  _neq: MortgageServices_Numeric
  _not: MortgageServices_NumericBoolExp
  _or: [MortgageServices_NumericBoolExp!]
}

scalar MortgageServices_Text

type MortgageServices_TextAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_Text
  min: MortgageServices_Text
}

input MortgageServices_TextBoolExp {
  _and: [MortgageServices_TextBoolExp!]
  _eq: MortgageServices_Text
  _gt: MortgageServices_Text
  _gte: MortgageServices_Text
  _ilike: MortgageServices_Text
  _in: [MortgageServices_Text!]
  _iregex: MortgageServices_Text
  _is_null: Boolean
  _like: MortgageServices_Text
  _lt: MortgageServices_Text
  _lte: MortgageServices_Text
  _neq: MortgageServices_Text
  _nilike: MortgageServices_Text
  _niregex: MortgageServices_Text
  _nlike: MortgageServices_Text
  _not: MortgageServices_TextBoolExp
  _nregex: MortgageServices_Text
  _or: [MortgageServices_TextBoolExp!]
  _regex: MortgageServices_Text
  starts_with: MortgageServices_Text
  ts_match_tt: MortgageServices_Text
}

scalar MortgageServices_Timestamptz

type MortgageServices_TimestamptzAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_Timestamptz
  min: MortgageServices_Timestamptz
}

input MortgageServices_TimestamptzBoolExp {
  _and: [MortgageServices_TimestamptzBoolExp!]
  _eq: MortgageServices_Timestamptz
  _gt: MortgageServices_Timestamptz
  _gte: MortgageServices_Timestamptz
  _in: [MortgageServices_Timestamptz!]
  _is_null: Boolean
  _lt: MortgageServices_Timestamptz
  _lte: MortgageServices_Timestamptz
  _neq: MortgageServices_Timestamptz
  _not: MortgageServices_TimestamptzBoolExp
  _or: [MortgageServices_TimestamptzBoolExp!]
}

scalar MortgageServices_Varchar

type MortgageServices_VarcharAggExp {
  _count: Int!
  _count_distinct: Int!
  max: MortgageServices_Text
  min: MortgageServices_Text
}

input MortgageServices_VarcharBoolExp {
  _and: [MortgageServices_VarcharBoolExp!]
  _eq: MortgageServices_Varchar
  _gt: MortgageServices_Varchar
  _gte: MortgageServices_Varchar
  _ilike: MortgageServices_Varchar
  _in: [MortgageServices_Varchar!]
  _iregex: MortgageServices_Varchar
  _is_null: Boolean
  _like: MortgageServices_Varchar
  _lt: MortgageServices_Varchar
  _lte: MortgageServices_Varchar
  _neq: MortgageServices_Varchar
  _nilike: MortgageServices_Varchar
  _niregex: MortgageServices_Varchar
  _nlike: MortgageServices_Varchar
  _not: MortgageServices_VarcharBoolExp
  _nregex: MortgageServices_Varchar
  _or: [MortgageServices_VarcharBoolExp!]
  _regex: MortgageServices_Varchar
  starts_with: MortgageServices_Varchar
  ts_match_tt: MortgageServices_Varchar
}

type Mutation {
  _no_fields_accessible: String
}

enum OrderBy {
  """Sorts the data in ascending order"""
  Asc

  """Sorts the data in descending order"""
  Desc
}

type Query {
  """
  Selects multiple objects from the model. Model description: Table to store
  dependencies between applications and their software components.
  """
  appMgmtApplicationComponents(limit: Int, offset: Int, order_by: [App_Mgmt_AppMgmtApplicationComponentsOrderByExp!], where: App_Mgmt_AppMgmtApplicationComponentsBoolExp): [App_Mgmt_AppMgmtApplicationComponents!]
  appMgmtApplicationComponentsAggregate(filter_input: App_Mgmt_AppMgmtApplicationComponentsFilterInput): App_Mgmt_AppMgmtApplicationComponentsAggExp

  """
  Selects a single object from the model. Model description: Table to store
  dependencies between applications and their software components.
  """
  appMgmtApplicationComponentsByApplicationComponentsPkey(appMgmtApplicationId: App_Mgmt_Uuid!, appMgmtComponentId: App_Mgmt_Uuid!, dependencyType: App_Mgmt_AppMgmtDependencyTypes!): App_Mgmt_AppMgmtApplicationComponents

  """
  Selects multiple objects from the model. Model description: Table to store
  associations between applications and the licenses they use.
  """
  appMgmtApplicationLicenses(limit: Int, offset: Int, order_by: [App_Mgmt_AppMgmtApplicationLicensesOrderByExp!], where: App_Mgmt_AppMgmtApplicationLicensesBoolExp): [App_Mgmt_AppMgmtApplicationLicenses!]
  appMgmtApplicationLicensesAggregate(filter_input: App_Mgmt_AppMgmtApplicationLicensesFilterInput): App_Mgmt_AppMgmtApplicationLicensesAggExp

  """
  Selects a single object from the model. Model description: Table to store
  associations between applications and the licenses they use.
  """
  appMgmtApplicationLicensesByApplicationLicensesPkey(appMgmtApplicationId: App_Mgmt_Uuid!, appMgmtLicenseId: App_Mgmt_Uuid!): App_Mgmt_AppMgmtApplicationLicenses

  """
  Selects multiple objects from the model. Model description: Table to store
  relationships between applications and their criticality levels. Applications
  may have many relationships, even of the same type. They are only
  differentiated through the description.
  """
  appMgmtApplicationRelationships(limit: Int, offset: Int, order_by: [App_Mgmt_AppMgmtApplicationRelationshipsOrderByExp!], where: App_Mgmt_AppMgmtApplicationRelationshipsBoolExp): [App_Mgmt_AppMgmtApplicationRelationships!]
  appMgmtApplicationRelationshipsAggregate(filter_input: App_Mgmt_AppMgmtApplicationRelationshipsFilterInput): App_Mgmt_AppMgmtApplicationRelationshipsAggExp

  """
  Selects a single object from the model. Model description: Table to store
  relationships between applications and their criticality levels. Applications
  may have many relationships, even of the same type. They are only
  differentiated through the description.
  """
  appMgmtApplicationRelationshipsByAppMgmtApplicationRelationshipId(appMgmtApplicationRelationshipId: App_Mgmt_Int4!): App_Mgmt_AppMgmtApplicationRelationships

  """
  Selects multiple objects from the model. Model description: Table to store
  comprehensive information about software applications within the organization.
  """
  appMgmtApplications(limit: Int, offset: Int, order_by: [App_Mgmt_AppMgmtApplicationsOrderByExp!], where: App_Mgmt_AppMgmtApplicationsBoolExp): [App_Mgmt_AppMgmtApplications!]
  appMgmtApplicationsAggregate(filter_input: App_Mgmt_AppMgmtApplicationsFilterInput): App_Mgmt_AppMgmtApplicationsAggExp

  """
  Selects a single object from the model. Model description: Table to store
  comprehensive information about software applications within the organization.
  """
  appMgmtApplicationsByAppMgmtApplicationId(appMgmtApplicationId: App_Mgmt_Uuid!): App_Mgmt_AppMgmtApplications

  """
  Selects multiple objects from the model. Model description: Table to store
  approved architectural designs and their key details.
  """
  appMgmtArchitectures(limit: Int, offset: Int, order_by: [App_Mgmt_AppMgmtArchitecturesOrderByExp!], where: App_Mgmt_AppMgmtArchitecturesBoolExp): [App_Mgmt_AppMgmtArchitectures!]
  appMgmtArchitecturesAggregate(filter_input: App_Mgmt_AppMgmtArchitecturesFilterInput): App_Mgmt_AppMgmtArchitecturesAggExp

  """
  Selects a single object from the model. Model description: Table to store
  approved architectural designs and their key details.
  """
  appMgmtArchitecturesByAppMgmtArchitectureId(appMgmtArchitectureId: App_Mgmt_Uuid!): App_Mgmt_AppMgmtArchitectures

  """
  Selects multiple objects from the model. Model description: Table to store component dependencies (BOM relationships).
  """
  appMgmtComponentDependencies(limit: Int, offset: Int, order_by: [App_Mgmt_AppMgmtComponentDependenciesOrderByExp!], where: App_Mgmt_AppMgmtComponentDependenciesBoolExp): [App_Mgmt_AppMgmtComponentDependencies!]
  appMgmtComponentDependenciesAggregate(filter_input: App_Mgmt_AppMgmtComponentDependenciesFilterInput): App_Mgmt_AppMgmtComponentDependenciesAggExp

  """
  Selects a single object from the model. Model description: Table to store component dependencies (BOM relationships).
  """
  appMgmtComponentDependenciesByComponentDependenciesPkey(childComponentId: App_Mgmt_Uuid!, parentComponentId: App_Mgmt_Uuid!): App_Mgmt_AppMgmtComponentDependencies

  """
  Selects multiple objects from the model. Model description: Table to store
  detailed information about software components (BOM).
  """
  appMgmtComponents(limit: Int, offset: Int, order_by: [App_Mgmt_AppMgmtComponentsOrderByExp!], where: App_Mgmt_AppMgmtComponentsBoolExp): [App_Mgmt_AppMgmtComponents!]
  appMgmtComponentsAggregate(filter_input: App_Mgmt_AppMgmtComponentsFilterInput): App_Mgmt_AppMgmtComponentsAggExp

  """
  Selects a single object from the model. Model description: Table to store
  detailed information about software components (BOM).
  """
  appMgmtComponentsByAppMgmtComponentId(appMgmtComponentId: App_Mgmt_Uuid!): App_Mgmt_AppMgmtComponents

  """
  Selects multiple objects from the model. Model description: Table to store information about software licenses.
  """
  appMgmtLicenses(limit: Int, offset: Int, order_by: [App_Mgmt_AppMgmtLicensesOrderByExp!], where: App_Mgmt_AppMgmtLicensesBoolExp): [App_Mgmt_AppMgmtLicenses!]
  appMgmtLicensesAggregate(filter_input: App_Mgmt_AppMgmtLicensesFilterInput): App_Mgmt_AppMgmtLicensesAggExp

  """
  Selects a single object from the model. Model description: Table to store information about software licenses.
  """
  appMgmtLicensesByAppMgmtLicenseId(appMgmtLicenseId: App_Mgmt_Uuid!): App_Mgmt_AppMgmtLicenses

  """
  Selects multiple objects from the model. Model description: Table to store
  software development lifecycle processes and their attributes.
  """
  appMgmtSdlcProcesses(limit: Int, offset: Int, order_by: [App_Mgmt_AppMgmtSdlcProcessesOrderByExp!], where: App_Mgmt_AppMgmtSdlcProcessesBoolExp): [App_Mgmt_AppMgmtSdlcProcesses!]
  appMgmtSdlcProcessesAggregate(filter_input: App_Mgmt_AppMgmtSdlcProcessesFilterInput): App_Mgmt_AppMgmtSdlcProcessesAggExp

  """
  Selects a single object from the model. Model description: Table to store
  software development lifecycle processes and their attributes.
  """
  appMgmtSdlcProcessesByAppMgmtSdlcProcessId(appMgmtSdlcProcessId: App_Mgmt_Uuid!): App_Mgmt_AppMgmtSdlcProcesses

  """
  Selects multiple objects from the model. Model description: Table to store the
  associations between teams and their members, including member functions.
  """
  appMgmtTeamMembers(limit: Int, offset: Int, order_by: [App_Mgmt_AppMgmtTeamMembersOrderByExp!], where: App_Mgmt_AppMgmtTeamMembersBoolExp): [App_Mgmt_AppMgmtTeamMembers!]
  appMgmtTeamMembersAggregate(filter_input: App_Mgmt_AppMgmtTeamMembersFilterInput): App_Mgmt_AppMgmtTeamMembersAggExp

  """
  Selects a single object from the model. Model description: Table to store the
  associations between teams and their members, including member functions.
  """
  appMgmtTeamMembersByTeamMembersPkey(appMgmtTeamId: App_Mgmt_Uuid!, enterpriseAssociateId: App_Mgmt_Int4!): App_Mgmt_AppMgmtTeamMembers

  """
  Selects multiple objects from the model. Model description: Table to store
  information about development and management teams, including team lead association.
  """
  appMgmtTeams(limit: Int, offset: Int, order_by: [App_Mgmt_AppMgmtTeamsOrderByExp!], where: App_Mgmt_AppMgmtTeamsBoolExp): [App_Mgmt_AppMgmtTeams!]
  appMgmtTeamsAggregate(filter_input: App_Mgmt_AppMgmtTeamsFilterInput): App_Mgmt_AppMgmtTeamsAggExp

  """
  Selects a single object from the model. Model description: Table to store
  information about development and management teams, including team lead association.
  """
  appMgmtTeamsByAppMgmtTeamId(appMgmtTeamId: App_Mgmt_Uuid!): App_Mgmt_AppMgmtTeams

  """
  Selects multiple objects from the model. Model description: Stores consent
  records for account access, tracking when and how third parties are permitted
  to access consumer banking account information
  """
  consumerBankingAccountAccessConsents(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingAccountAccessConsentsOrderByExp!], where: ConsumerBanking_ConsumerBankingAccountAccessConsentsBoolExp): [ConsumerBanking_ConsumerBankingAccountAccessConsents!]
  consumerBankingAccountAccessConsentsAggregate(filter_input: ConsumerBanking_ConsumerBankingAccountAccessConsentsFilterInput): ConsumerBanking_ConsumerBankingAccountAccessConsentsAggExp

  """
  Selects a single object from the model. Model description: Stores consent
  records for account access, tracking when and how third parties are permitted
  to access consumer banking account information
  """
  consumerBankingAccountAccessConsentsByConsumerBankingConsentId(consumerBankingConsentId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingAccountAccessConsents

  """
  Selects multiple objects from the model. Model description: Junction table
  linking consents to specific permissions granted, implements a many-to-many relationship
  """
  consumerBankingAccountAccessConsentsPermissions(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingAccountAccessConsentsPermissionsOrderByExp!], where: ConsumerBanking_ConsumerBankingAccountAccessConsentsPermissionsBoolExp): [ConsumerBanking_ConsumerBankingAccountAccessConsentsPermissions!]
  consumerBankingAccountAccessConsentsPermissionsAggregate(filter_input: ConsumerBanking_ConsumerBankingAccountAccessConsentsPermissionsFilterInput): ConsumerBanking_ConsumerBankingAccountAccessConsentsPermissionsAggExp

  """
  Selects multiple objects from the model. Model description: Stores customer preferences for account statements
  """
  consumerBankingAccountStatementPreferences(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingAccountStatementPreferencesOrderByExp!], where: ConsumerBanking_ConsumerBankingAccountStatementPreferencesBoolExp): [ConsumerBanking_ConsumerBankingAccountStatementPreferences!]
  consumerBankingAccountStatementPreferencesAggregate(filter_input: ConsumerBanking_ConsumerBankingAccountStatementPreferencesFilterInput): ConsumerBanking_ConsumerBankingAccountStatementPreferencesAggExp

  """
  Selects multiple objects from the model. Model description: Deposit account
  linked to enterprise account; always serviced by a this institution
  """
  consumerBankingAccounts(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingAccountsOrderByExp!], where: ConsumerBanking_ConsumerBankingAccountsBoolExp): [ConsumerBanking_ConsumerBankingAccounts!]
  consumerBankingAccountsAggregate(filter_input: ConsumerBanking_ConsumerBankingAccountsFilterInput): ConsumerBanking_ConsumerBankingAccountsAggExp

  """
  Selects a single object from the model. Model description: Deposit account
  linked to enterprise account; always serviced by a this institution
  """
  consumerBankingAccountsByConsumerBankingAccountId(consumerBankingAccountId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingAccounts

  """
  Selects multiple objects from the model. Model description: Tracks account
  balance information with history, stores different types of balances
  """
  consumerBankingBalances(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingBalancesOrderByExp!], where: ConsumerBanking_ConsumerBankingBalancesBoolExp): [ConsumerBanking_ConsumerBankingBalances!]
  consumerBankingBalancesAggregate(filter_input: ConsumerBanking_ConsumerBankingBalancesFilterInput): ConsumerBanking_ConsumerBankingBalancesAggExp

  """
  Selects a single object from the model. Model description: Tracks account
  balance information with history, stores different types of balances
  """
  consumerBankingBalancesByConsumerBankingBalanceId(consumerBankingBalanceId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingBalances

  """
  Selects multiple objects from the model. Model description: Stores beneficiary
  details for account payments, records entities that can receive payments
  """
  consumerBankingBeneficiaries(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingBeneficiariesOrderByExp!], where: ConsumerBanking_ConsumerBankingBeneficiariesBoolExp): [ConsumerBanking_ConsumerBankingBeneficiaries!]
  consumerBankingBeneficiariesAggregate(filter_input: ConsumerBanking_ConsumerBankingBeneficiariesFilterInput): ConsumerBanking_ConsumerBankingBeneficiariesAggExp

  """
  Selects a single object from the model. Model description: Stores beneficiary
  details for account payments, records entities that can receive payments
  """
  consumerBankingBeneficiariesByConsumerBankingBeneficiaryId(consumerBankingBeneficiaryId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingBeneficiaries

  """
  Selects multiple objects from the model. Model description: Stores account details of beneficiaries for payment routing
  """
  consumerBankingBeneficiaryCreditorAccounts(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingBeneficiaryCreditorAccountsOrderByExp!], where: ConsumerBanking_ConsumerBankingBeneficiaryCreditorAccountsBoolExp): [ConsumerBanking_ConsumerBankingBeneficiaryCreditorAccounts!]
  consumerBankingBeneficiaryCreditorAccountsAggregate(filter_input: ConsumerBanking_ConsumerBankingBeneficiaryCreditorAccountsFilterInput): ConsumerBanking_ConsumerBankingBeneficiaryCreditorAccountsAggExp

  """
  Selects a single object from the model. Model description: Stores account details of beneficiaries for payment routing
  """
  consumerBankingBeneficiaryCreditorAccountsByConsumerBankingBeneficiaryCreditorAccountId(consumerBankingBeneficiaryCreditorAccountId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingBeneficiaryCreditorAccounts

  """
  Selects multiple objects from the model. Model description: Stores financial
  institution details for beneficiaries, records information about banks/agents
  """
  consumerBankingBeneficiaryCreditorAgents(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingBeneficiaryCreditorAgentsOrderByExp!], where: ConsumerBanking_ConsumerBankingBeneficiaryCreditorAgentsBoolExp): [ConsumerBanking_ConsumerBankingBeneficiaryCreditorAgents!]
  consumerBankingBeneficiaryCreditorAgentsAggregate(filter_input: ConsumerBanking_ConsumerBankingBeneficiaryCreditorAgentsFilterInput): ConsumerBanking_ConsumerBankingBeneficiaryCreditorAgentsAggExp

  """
  Selects a single object from the model. Model description: Stores financial
  institution details for beneficiaries, records information about banks/agents
  """
  consumerBankingBeneficiaryCreditorAgentsByConsumerBankingBeneficiaryCreditorAgentId(consumerBankingBeneficiaryCreditorAgentId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingBeneficiaryCreditorAgents
  consumerBankingCustomerInteractions(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingCustomerInteractionsOrderByExp!], where: ConsumerBanking_ConsumerBankingCustomerInteractionsBoolExp): [ConsumerBanking_ConsumerBankingCustomerInteractions!]
  consumerBankingCustomerInteractionsAggregate(filter_input: ConsumerBanking_ConsumerBankingCustomerInteractionsFilterInput): ConsumerBanking_ConsumerBankingCustomerInteractionsAggExp
  consumerBankingCustomerInteractionsByConsumerBankingInteractionId(consumerBankingInteractionId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingCustomerInteractions

  """
  Selects multiple objects from the model. Model description: Stores information
  about direct debit arrangements set up on accounts
  """
  consumerBankingDirectDebits(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingDirectDebitsOrderByExp!], where: ConsumerBanking_ConsumerBankingDirectDebitsBoolExp): [ConsumerBanking_ConsumerBankingDirectDebits!]
  consumerBankingDirectDebitsAggregate(filter_input: ConsumerBanking_ConsumerBankingDirectDebitsFilterInput): ConsumerBanking_ConsumerBankingDirectDebitsAggExp

  """
  Selects a single object from the model. Model description: Stores information
  about direct debit arrangements set up on accounts
  """
  consumerBankingDirectDebitsByConsumerBankingDirectDebitId(consumerBankingDirectDebitId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingDirectDebits

  """
  Selects multiple objects from the model. Model description: Stores detailed
  information about direct debit mandates including payment schedules
  """
  consumerBankingMandateRelatedInformation(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingMandateRelatedInformationOrderByExp!], where: ConsumerBanking_ConsumerBankingMandateRelatedInformationBoolExp): [ConsumerBanking_ConsumerBankingMandateRelatedInformation!]
  consumerBankingMandateRelatedInformationAggregate(filter_input: ConsumerBanking_ConsumerBankingMandateRelatedInformationFilterInput): ConsumerBanking_ConsumerBankingMandateRelatedInformationAggExp

  """
  Selects a single object from the model. Model description: Stores detailed
  information about direct debit mandates including payment schedules
  """
  consumerBankingMandateRelatedInformationByConsumerBankingMandateRelatedInformationId(consumerBankingMandateRelatedInformationId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingMandateRelatedInformation

  """
  Selects multiple objects from the model. Model description: Stores promotional offers made to account holders
  """
  consumerBankingOffers(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingOffersOrderByExp!], where: ConsumerBanking_ConsumerBankingOffersBoolExp): [ConsumerBanking_ConsumerBankingOffers!]
  consumerBankingOffersAggregate(filter_input: ConsumerBanking_ConsumerBankingOffersFilterInput): ConsumerBanking_ConsumerBankingOffersAggExp

  """
  Selects a single object from the model. Model description: Stores promotional offers made to account holders
  """
  consumerBankingOffersByConsumerBankingOfferId(consumerBankingOfferId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingOffers

  """
  Selects multiple objects from the model. Model description: Stores information
  about non-standard product types not covered in main categories
  """
  consumerBankingOtherProductTypes(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingOtherProductTypesOrderByExp!], where: ConsumerBanking_ConsumerBankingOtherProductTypesBoolExp): [ConsumerBanking_ConsumerBankingOtherProductTypes!]
  consumerBankingOtherProductTypesAggregate(filter_input: ConsumerBanking_ConsumerBankingOtherProductTypesFilterInput): ConsumerBanking_ConsumerBankingOtherProductTypesAggExp

  """
  Selects a single object from the model. Model description: Stores information
  about non-standard product types not covered in main categories
  """
  consumerBankingOtherProductTypesByConsumerBankingOtherProductTypeId(consumerBankingOtherProductTypeId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingOtherProductTypes

  """
  Selects multiple objects from the model. Model description: Defines the financial products offered to customers
  """
  consumerBankingProducts(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingProductsOrderByExp!], where: ConsumerBanking_ConsumerBankingProductsBoolExp): [ConsumerBanking_ConsumerBankingProducts!]
  consumerBankingProductsAggregate(filter_input: ConsumerBanking_ConsumerBankingProductsFilterInput): ConsumerBanking_ConsumerBankingProductsAggExp

  """
  Selects a single object from the model. Model description: Defines the financial products offered to customers
  """
  consumerBankingProductsByConsumerBankingProductId(consumerBankingProductId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingProducts

  """
  Selects multiple objects from the model. Model description: Stores
  non-standard proprietary codes for transaction categorization
  """
  consumerBankingProprietaryTransactionCodes(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingProprietaryTransactionCodesOrderByExp!], where: ConsumerBanking_ConsumerBankingProprietaryTransactionCodesBoolExp): [ConsumerBanking_ConsumerBankingProprietaryTransactionCodes!]
  consumerBankingProprietaryTransactionCodesAggregate(filter_input: ConsumerBanking_ConsumerBankingProprietaryTransactionCodesFilterInput): ConsumerBanking_ConsumerBankingProprietaryTransactionCodesAggExp

  """
  Selects a single object from the model. Model description: Stores non-standard
  proprietary codes for transaction categorization
  """
  consumerBankingProprietaryTransactionCodesByConsumerBankingProprietaryTransactionCodeId(consumerBankingProprietaryTransactionCodeId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingProprietaryTransactionCodes

  """
  Selects multiple objects from the model. Model description: Stores information about accounts receiving scheduled payments
  """
  consumerBankingScheduledPaymentCreditorAccounts(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAccountsOrderByExp!], where: ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAccountsBoolExp): [ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAccounts!]
  consumerBankingScheduledPaymentCreditorAccountsAggregate(filter_input: ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAccountsFilterInput): ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAccountsAggExp

  """
  Selects a single object from the model. Model description: Stores information about accounts receiving scheduled payments
  """
  consumerBankingScheduledPaymentCreditorAccountsByConsumerBankingScheduledPaymentCreditorAccountId(consumerBankingScheduledPaymentCreditorAccountId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAccounts

  """
  Selects multiple objects from the model. Model description: Stores information
  about financial institutions receiving scheduled payments
  """
  consumerBankingScheduledPaymentCreditorAgents(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAgentsOrderByExp!], where: ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAgentsBoolExp): [ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAgents!]
  consumerBankingScheduledPaymentCreditorAgentsAggregate(filter_input: ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAgentsFilterInput): ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAgentsAggExp

  """
  Selects a single object from the model. Model description: Stores information
  about financial institutions receiving scheduled payments
  """
  consumerBankingScheduledPaymentCreditorAgentsByConsumerBankingScheduledPaymentCreditorAgentId(consumerBankingScheduledPaymentCreditorAgentId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAgents

  """
  Selects multiple objects from the model. Model description: Stores information
  about one-time and recurring scheduled payments
  """
  consumerBankingScheduledPayments(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingScheduledPaymentsOrderByExp!], where: ConsumerBanking_ConsumerBankingScheduledPaymentsBoolExp): [ConsumerBanking_ConsumerBankingScheduledPayments!]
  consumerBankingScheduledPaymentsAggregate(filter_input: ConsumerBanking_ConsumerBankingScheduledPaymentsFilterInput): ConsumerBanking_ConsumerBankingScheduledPaymentsAggExp

  """
  Selects a single object from the model. Model description: Stores information
  about one-time and recurring scheduled payments
  """
  consumerBankingScheduledPaymentsByConsumerBankingScheduledPaymentId(consumerBankingScheduledPaymentId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingScheduledPayments

  """
  Selects multiple objects from the model. Model description: Stores information
  about accounts receiving standing order payments
  """
  consumerBankingStandingOrderCreditorAccounts(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingStandingOrderCreditorAccountsOrderByExp!], where: ConsumerBanking_ConsumerBankingStandingOrderCreditorAccountsBoolExp): [ConsumerBanking_ConsumerBankingStandingOrderCreditorAccounts!]
  consumerBankingStandingOrderCreditorAccountsAggregate(filter_input: ConsumerBanking_ConsumerBankingStandingOrderCreditorAccountsFilterInput): ConsumerBanking_ConsumerBankingStandingOrderCreditorAccountsAggExp

  """
  Selects a single object from the model. Model description: Stores information
  about accounts receiving standing order payments
  """
  consumerBankingStandingOrderCreditorAccountsByConsumerBankingStandingOrderCreditorAccountId(consumerBankingStandingOrderCreditorAccountId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingStandingOrderCreditorAccounts

  """
  Selects multiple objects from the model. Model description: Stores information
  about financial institutions receiving standing order payments
  """
  consumerBankingStandingOrderCreditorAgents(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingStandingOrderCreditorAgentsOrderByExp!], where: ConsumerBanking_ConsumerBankingStandingOrderCreditorAgentsBoolExp): [ConsumerBanking_ConsumerBankingStandingOrderCreditorAgents!]
  consumerBankingStandingOrderCreditorAgentsAggregate(filter_input: ConsumerBanking_ConsumerBankingStandingOrderCreditorAgentsFilterInput): ConsumerBanking_ConsumerBankingStandingOrderCreditorAgentsAggExp

  """
  Selects a single object from the model. Model description: Stores information
  about financial institutions receiving standing order payments
  """
  consumerBankingStandingOrderCreditorAgentsByConsumerBankingStandingOrderCreditorAgentId(consumerBankingStandingOrderCreditorAgentId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingStandingOrderCreditorAgents

  """
  Selects multiple objects from the model. Model description: Stores information
  about recurring payment instructions (standing orders)
  """
  consumerBankingStandingOrders(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingStandingOrdersOrderByExp!], where: ConsumerBanking_ConsumerBankingStandingOrdersBoolExp): [ConsumerBanking_ConsumerBankingStandingOrders!]
  consumerBankingStandingOrdersAggregate(filter_input: ConsumerBanking_ConsumerBankingStandingOrdersFilterInput): ConsumerBanking_ConsumerBankingStandingOrdersAggExp

  """
  Selects a single object from the model. Model description: Stores information
  about recurring payment instructions (standing orders)
  """
  consumerBankingStandingOrdersByConsumerBankingStandingOrderId(consumerBankingStandingOrderId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingStandingOrders

  """
  Selects multiple objects from the model. Model description: Stores various
  monetary amount totals associated with a statement
  """
  consumerBankingStatementAmounts(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingStatementAmountsOrderByExp!], where: ConsumerBanking_ConsumerBankingStatementAmountsBoolExp): [ConsumerBanking_ConsumerBankingStatementAmounts!]
  consumerBankingStatementAmountsAggregate(filter_input: ConsumerBanking_ConsumerBankingStatementAmountsFilterInput): ConsumerBanking_ConsumerBankingStatementAmountsAggExp

  """
  Selects a single object from the model. Model description: Stores various
  monetary amount totals associated with a statement
  """
  consumerBankingStatementAmountsByConsumerBankingStatementAmountId(consumerBankingStatementAmountId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingStatementAmounts

  """
  Selects multiple objects from the model. Model description: Stores information
  about benefits received during a statement period
  """
  consumerBankingStatementBenefits(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingStatementBenefitsOrderByExp!], where: ConsumerBanking_ConsumerBankingStatementBenefitsBoolExp): [ConsumerBanking_ConsumerBankingStatementBenefits!]
  consumerBankingStatementBenefitsAggregate(filter_input: ConsumerBanking_ConsumerBankingStatementBenefitsFilterInput): ConsumerBanking_ConsumerBankingStatementBenefitsAggExp

  """
  Selects a single object from the model. Model description: Stores information
  about benefits received during a statement period
  """
  consumerBankingStatementBenefitsByConsumerBankingStatementBenefitId(consumerBankingStatementBenefitId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingStatementBenefits

  """
  Selects multiple objects from the model. Model description: Stores important dates associated with a statement
  """
  consumerBankingStatementDateTimes(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingStatementDateTimesOrderByExp!], where: ConsumerBanking_ConsumerBankingStatementDateTimesBoolExp): [ConsumerBanking_ConsumerBankingStatementDateTimes!]
  consumerBankingStatementDateTimesAggregate(filter_input: ConsumerBanking_ConsumerBankingStatementDateTimesFilterInput): ConsumerBanking_ConsumerBankingStatementDateTimesAggExp

  """
  Selects a single object from the model. Model description: Stores important dates associated with a statement
  """
  consumerBankingStatementDateTimesByConsumerBankingStatementDateTimeId(consumerBankingStatementDateTimeId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingStatementDateTimes

  """
  Selects multiple objects from the model. Model description: Stores additional descriptive information for statements
  """
  consumerBankingStatementDescriptions(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingStatementDescriptionsOrderByExp!], where: ConsumerBanking_ConsumerBankingStatementDescriptionsBoolExp): [ConsumerBanking_ConsumerBankingStatementDescriptions!]
  consumerBankingStatementDescriptionsAggregate(filter_input: ConsumerBanking_ConsumerBankingStatementDescriptionsFilterInput): ConsumerBanking_ConsumerBankingStatementDescriptionsAggExp

  """
  Selects a single object from the model. Model description: Stores additional descriptive information for statements
  """
  consumerBankingStatementDescriptionsByConsumerBankingStatementDescriptionId(consumerBankingStatementDescriptionId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingStatementDescriptions

  """
  Selects multiple objects from the model. Model description: Stores information
  about fees charged during a statement period
  """
  consumerBankingStatementFees(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingStatementFeesOrderByExp!], where: ConsumerBanking_ConsumerBankingStatementFeesBoolExp): [ConsumerBanking_ConsumerBankingStatementFees!]
  consumerBankingStatementFeesAggregate(filter_input: ConsumerBanking_ConsumerBankingStatementFeesFilterInput): ConsumerBanking_ConsumerBankingStatementFeesAggExp

  """
  Selects a single object from the model. Model description: Stores information about fees charged during a statement period
  """
  consumerBankingStatementFeesByConsumerBankingStatementFeeId(consumerBankingStatementFeeId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingStatementFees

  """
  Selects multiple objects from the model. Model description: Stores information
  about interest earned or charged during a statement period
  """
  consumerBankingStatementInterests(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingStatementInterestsOrderByExp!], where: ConsumerBanking_ConsumerBankingStatementInterestsBoolExp): [ConsumerBanking_ConsumerBankingStatementInterests!]
  consumerBankingStatementInterestsAggregate(filter_input: ConsumerBanking_ConsumerBankingStatementInterestsFilterInput): ConsumerBanking_ConsumerBankingStatementInterestsAggExp

  """
  Selects a single object from the model. Model description: Stores information
  about interest earned or charged during a statement period
  """
  consumerBankingStatementInterestsByConsumerBankingStatementInterestId(consumerBankingStatementInterestId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingStatementInterests

  """
  Selects multiple objects from the model. Model description: Stores various
  rate information associated with statements, including interest rates,
  promotional rates, and exchange rates
  """
  consumerBankingStatementRates(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingStatementRatesOrderByExp!], where: ConsumerBanking_ConsumerBankingStatementRatesBoolExp): [ConsumerBanking_ConsumerBankingStatementRates!]
  consumerBankingStatementRatesAggregate(filter_input: ConsumerBanking_ConsumerBankingStatementRatesFilterInput): ConsumerBanking_ConsumerBankingStatementRatesAggExp

  """
  Selects a single object from the model. Model description: Stores various rate
  information associated with statements, including interest rates, promotional
  rates, and exchange rates
  """
  consumerBankingStatementRatesByConsumerBankingStatementRateId(consumerBankingStatementRateId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingStatementRates

  """
  Selects multiple objects from the model. Model description: Stores
  miscellaneous values associated with a statement that aren't monetary amounts,
  such as loyalty points, credit scores, or tier levels
  """
  consumerBankingStatementValues(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingStatementValuesOrderByExp!], where: ConsumerBanking_ConsumerBankingStatementValuesBoolExp): [ConsumerBanking_ConsumerBankingStatementValues!]
  consumerBankingStatementValuesAggregate(filter_input: ConsumerBanking_ConsumerBankingStatementValuesFilterInput): ConsumerBanking_ConsumerBankingStatementValuesAggExp

  """
  Selects a single object from the model. Model description: Stores
  miscellaneous values associated with a statement that aren't monetary amounts,
  such as loyalty points, credit scores, or tier levels
  """
  consumerBankingStatementValuesByConsumerBankingStatementValueId(consumerBankingStatementValueId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingStatementValues

  """
  Selects multiple objects from the model. Model description: Stores information about account statements
  """
  consumerBankingStatements(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingStatementsOrderByExp!], where: ConsumerBanking_ConsumerBankingStatementsBoolExp): [ConsumerBanking_ConsumerBankingStatements!]
  consumerBankingStatementsAggregate(filter_input: ConsumerBanking_ConsumerBankingStatementsFilterInput): ConsumerBanking_ConsumerBankingStatementsAggExp

  """
  Selects a single object from the model. Model description: Stores information about account statements
  """
  consumerBankingStatementsByConsumerBankingStatementId(consumerBankingStatementId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingStatements

  """
  Selects multiple objects from the model. Model description: Stores account
  balance information at the time of each transaction
  """
  consumerBankingTransactionBalances(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingTransactionBalancesOrderByExp!], where: ConsumerBanking_ConsumerBankingTransactionBalancesBoolExp): [ConsumerBanking_ConsumerBankingTransactionBalances!]
  consumerBankingTransactionBalancesAggregate(filter_input: ConsumerBanking_ConsumerBankingTransactionBalancesFilterInput): ConsumerBanking_ConsumerBankingTransactionBalancesAggExp

  """
  Selects a single object from the model. Model description: Stores account
  balance information at the time of each transaction
  """
  consumerBankingTransactionBalancesByConsumerBankingTransactionBalanceId(consumerBankingTransactionBalanceId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingTransactionBalances

  """
  Selects multiple objects from the model. Model description: Stores
  standardized bank transaction codes that categorize transactions with detailed
  hierarchical classification
  """
  consumerBankingTransactionBankTransactionCodes(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingTransactionBankTransactionCodesOrderByExp!], where: ConsumerBanking_ConsumerBankingTransactionBankTransactionCodesBoolExp): [ConsumerBanking_ConsumerBankingTransactionBankTransactionCodes!]
  consumerBankingTransactionBankTransactionCodesAggregate(filter_input: ConsumerBanking_ConsumerBankingTransactionBankTransactionCodesFilterInput): ConsumerBanking_ConsumerBankingTransactionBankTransactionCodesAggExp

  """
  Selects a single object from the model. Model description: Stores standardized
  bank transaction codes that categorize transactions with detailed hierarchical classification
  """
  consumerBankingTransactionBankTransactionCodesByConsumerBankingTransactionBankTransactionCodeId(consumerBankingTransactionBankTransactionCodeId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingTransactionBankTransactionCodes

  """
  Selects multiple objects from the model. Model description: Stores information about payment cards used in transactions
  """
  consumerBankingTransactionCardInstruments(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingTransactionCardInstrumentsOrderByExp!], where: ConsumerBanking_ConsumerBankingTransactionCardInstrumentsBoolExp): [ConsumerBanking_ConsumerBankingTransactionCardInstruments!]
  consumerBankingTransactionCardInstrumentsAggregate(filter_input: ConsumerBanking_ConsumerBankingTransactionCardInstrumentsFilterInput): ConsumerBanking_ConsumerBankingTransactionCardInstrumentsAggExp

  """
  Selects a single object from the model. Model description: Stores information about payment cards used in transactions
  """
  consumerBankingTransactionCardInstrumentsByConsumerBankingTransactionCardInstrumentId(consumerBankingTransactionCardInstrumentId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingTransactionCardInstruments

  """
  Selects multiple objects from the model. Model description: Stores information
  about accounts receiving funds in transactions
  """
  consumerBankingTransactionCreditorAccounts(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingTransactionCreditorAccountsOrderByExp!], where: ConsumerBanking_ConsumerBankingTransactionCreditorAccountsBoolExp): [ConsumerBanking_ConsumerBankingTransactionCreditorAccounts!]
  consumerBankingTransactionCreditorAccountsAggregate(filter_input: ConsumerBanking_ConsumerBankingTransactionCreditorAccountsFilterInput): ConsumerBanking_ConsumerBankingTransactionCreditorAccountsAggExp

  """
  Selects a single object from the model. Model description: Stores information
  about accounts receiving funds in transactions
  """
  consumerBankingTransactionCreditorAccountsByConsumerBankingTransactionCreditorAccountId(consumerBankingTransactionCreditorAccountId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingTransactionCreditorAccounts

  """
  Selects multiple objects from the model. Model description: Stores information
  about financial institutions receiving funds in transactions
  """
  consumerBankingTransactionCreditorAgents(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingTransactionCreditorAgentsOrderByExp!], where: ConsumerBanking_ConsumerBankingTransactionCreditorAgentsBoolExp): [ConsumerBanking_ConsumerBankingTransactionCreditorAgents!]
  consumerBankingTransactionCreditorAgentsAggregate(filter_input: ConsumerBanking_ConsumerBankingTransactionCreditorAgentsFilterInput): ConsumerBanking_ConsumerBankingTransactionCreditorAgentsAggExp

  """
  Selects a single object from the model. Model description: Stores information
  about financial institutions receiving funds in transactions
  """
  consumerBankingTransactionCreditorAgentsByConsumerBankingTransactionCreditorAgentId(consumerBankingTransactionCreditorAgentId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingTransactionCreditorAgents

  """
  Selects multiple objects from the model. Model description: Stores currency
  exchange details for cross-currency transactions
  """
  consumerBankingTransactionCurrencyExchanges(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingTransactionCurrencyExchangesOrderByExp!], where: ConsumerBanking_ConsumerBankingTransactionCurrencyExchangesBoolExp): [ConsumerBanking_ConsumerBankingTransactionCurrencyExchanges!]
  consumerBankingTransactionCurrencyExchangesAggregate(filter_input: ConsumerBanking_ConsumerBankingTransactionCurrencyExchangesFilterInput): ConsumerBanking_ConsumerBankingTransactionCurrencyExchangesAggExp

  """
  Selects a single object from the model. Model description: Stores currency
  exchange details for cross-currency transactions
  """
  consumerBankingTransactionCurrencyExchangesByConsumerBankingTransactionCurrencyExchangeId(consumerBankingTransactionCurrencyExchangeId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingTransactionCurrencyExchanges

  """
  Selects multiple objects from the model. Model description: Stores information
  about accounts sending funds in transactions
  """
  consumerBankingTransactionDebtorAccounts(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingTransactionDebtorAccountsOrderByExp!], where: ConsumerBanking_ConsumerBankingTransactionDebtorAccountsBoolExp): [ConsumerBanking_ConsumerBankingTransactionDebtorAccounts!]
  consumerBankingTransactionDebtorAccountsAggregate(filter_input: ConsumerBanking_ConsumerBankingTransactionDebtorAccountsFilterInput): ConsumerBanking_ConsumerBankingTransactionDebtorAccountsAggExp

  """
  Selects a single object from the model. Model description: Stores information about accounts sending funds in transactions
  """
  consumerBankingTransactionDebtorAccountsByConsumerBankingTransactionDebtorAccountId(consumerBankingTransactionDebtorAccountId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingTransactionDebtorAccounts

  """
  Selects multiple objects from the model. Model description: Stores information
  about financial institutions sending funds in transactions
  """
  consumerBankingTransactionDebtorAgents(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingTransactionDebtorAgentsOrderByExp!], where: ConsumerBanking_ConsumerBankingTransactionDebtorAgentsBoolExp): [ConsumerBanking_ConsumerBankingTransactionDebtorAgents!]
  consumerBankingTransactionDebtorAgentsAggregate(filter_input: ConsumerBanking_ConsumerBankingTransactionDebtorAgentsFilterInput): ConsumerBanking_ConsumerBankingTransactionDebtorAgentsAggExp

  """
  Selects a single object from the model. Model description: Stores information
  about financial institutions sending funds in transactions
  """
  consumerBankingTransactionDebtorAgentsByConsumerBankingTransactionDebtorAgentId(consumerBankingTransactionDebtorAgentId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingTransactionDebtorAgents

  """
  Selects multiple objects from the model. Model description: Stores information about merchants involved in transactions
  """
  consumerBankingTransactionMerchantDetails(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingTransactionMerchantDetailsOrderByExp!], where: ConsumerBanking_ConsumerBankingTransactionMerchantDetailsBoolExp): [ConsumerBanking_ConsumerBankingTransactionMerchantDetails!]
  consumerBankingTransactionMerchantDetailsAggregate(filter_input: ConsumerBanking_ConsumerBankingTransactionMerchantDetailsFilterInput): ConsumerBanking_ConsumerBankingTransactionMerchantDetailsAggExp

  """
  Selects a single object from the model. Model description: Stores information about merchants involved in transactions
  """
  consumerBankingTransactionMerchantDetailsByConsumerBankingTransactionMerchantDetailId(consumerBankingTransactionMerchantDetailId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingTransactionMerchantDetails

  """
  Selects multiple objects from the model. Model description: Links transactions to specific statements they appear on
  """
  consumerBankingTransactionStatementReferences(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingTransactionStatementReferencesOrderByExp!], where: ConsumerBanking_ConsumerBankingTransactionStatementReferencesBoolExp): [ConsumerBanking_ConsumerBankingTransactionStatementReferences!]
  consumerBankingTransactionStatementReferencesAggregate(filter_input: ConsumerBanking_ConsumerBankingTransactionStatementReferencesFilterInput): ConsumerBanking_ConsumerBankingTransactionStatementReferencesAggExp

  """
  Selects a single object from the model. Model description: Links transactions to specific statements they appear on
  """
  consumerBankingTransactionStatementReferencesByConsumerBankingTransactionStatementReferenceId(consumerBankingTransactionStatementReferenceId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingTransactionStatementReferences

  """
  Selects multiple objects from the model. Model description: Stores information
  about the final recipient of funds in a transaction chain
  """
  consumerBankingTransactionUltimateCreditors(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingTransactionUltimateCreditorsOrderByExp!], where: ConsumerBanking_ConsumerBankingTransactionUltimateCreditorsBoolExp): [ConsumerBanking_ConsumerBankingTransactionUltimateCreditors!]
  consumerBankingTransactionUltimateCreditorsAggregate(filter_input: ConsumerBanking_ConsumerBankingTransactionUltimateCreditorsFilterInput): ConsumerBanking_ConsumerBankingTransactionUltimateCreditorsAggExp

  """
  Selects a single object from the model. Model description: Stores information
  about the final recipient of funds in a transaction chain
  """
  consumerBankingTransactionUltimateCreditorsByConsumerBankingTransactionUltimateCreditorId(consumerBankingTransactionUltimateCreditorId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingTransactionUltimateCreditors

  """
  Selects multiple objects from the model. Model description: Stores information
  about the original party that initiated the payment in a transaction chain
  """
  consumerBankingTransactionUltimateDebtors(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingTransactionUltimateDebtorsOrderByExp!], where: ConsumerBanking_ConsumerBankingTransactionUltimateDebtorsBoolExp): [ConsumerBanking_ConsumerBankingTransactionUltimateDebtors!]
  consumerBankingTransactionUltimateDebtorsAggregate(filter_input: ConsumerBanking_ConsumerBankingTransactionUltimateDebtorsFilterInput): ConsumerBanking_ConsumerBankingTransactionUltimateDebtorsAggExp

  """
  Selects a single object from the model. Model description: Stores information
  about the original party that initiated the payment in a transaction chain
  """
  consumerBankingTransactionUltimateDebtorsByConsumerBankingTransactionUltimateDebtorId(consumerBankingTransactionUltimateDebtorId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingTransactionUltimateDebtors

  """
  Selects multiple objects from the model. Model description: Stores detailed information about account transactions
  """
  consumerBankingTransactions(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingTransactionsOrderByExp!], where: ConsumerBanking_ConsumerBankingTransactionsBoolExp): [ConsumerBanking_ConsumerBankingTransactions!]
  consumerBankingTransactionsAggregate(filter_input: ConsumerBanking_ConsumerBankingTransactionsFilterInput): ConsumerBanking_ConsumerBankingTransactionsAggExp

  """
  Selects a single object from the model. Model description: Stores detailed information about account transactions
  """
  consumerBankingTransactionsByConsumerBankingTransactionId(consumerBankingTransactionId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingTransactions

  """
  Selects multiple objects from the model. Model description: Provides detailed
  information about adverse action taken on loan applications, including reasons
  and credit information.
  """
  consumerLendingAdverseActionDetails(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingAdverseActionDetailsOrderByExp!], where: ConsumerLending_ConsumerLendingAdverseActionDetailsBoolExp): [ConsumerLending_ConsumerLendingAdverseActionDetails!]
  consumerLendingAdverseActionDetailsAggregate(filter_input: ConsumerLending_ConsumerLendingAdverseActionDetailsFilterInput): ConsumerLending_ConsumerLendingAdverseActionDetailsAggExp

  """
  Selects a single object from the model. Model description: Provides detailed
  information about adverse action taken on loan applications, including reasons
  and credit information.
  """
  consumerLendingAdverseActionDetailsByConsumerLendingAdverseActionId(consumerLendingAdverseActionId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingAdverseActionDetails

  """
  Selects multiple objects from the model. Model description: Tracks adverse
  action notices sent to applicants when their loan applications are denied.
  """
  consumerLendingAdverseActionNotices(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingAdverseActionNoticesOrderByExp!], where: ConsumerLending_ConsumerLendingAdverseActionNoticesBoolExp): [ConsumerLending_ConsumerLendingAdverseActionNotices!]
  consumerLendingAdverseActionNoticesAggregate(filter_input: ConsumerLending_ConsumerLendingAdverseActionNoticesFilterInput): ConsumerLending_ConsumerLendingAdverseActionNoticesAggExp

  """
  Selects a single object from the model. Model description: Tracks adverse
  action notices sent to applicants when their loan applications are denied.
  """
  consumerLendingAdverseActionNoticesByConsumerLendingNoticeId(consumerLendingNoticeId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingAdverseActionNotices

  """
  Selects multiple objects from the model. Model description: Records assets
  owned by loan applicants, including financial accounts and property.
  """
  consumerLendingApplicantAssets(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingApplicantAssetsOrderByExp!], where: ConsumerLending_ConsumerLendingApplicantAssetsBoolExp): [ConsumerLending_ConsumerLendingApplicantAssets!]
  consumerLendingApplicantAssetsAggregate(filter_input: ConsumerLending_ConsumerLendingApplicantAssetsFilterInput): ConsumerLending_ConsumerLendingApplicantAssetsAggExp

  """
  Selects a single object from the model. Model description: Records assets
  owned by loan applicants, including financial accounts and property.
  """
  consumerLendingApplicantAssetsByConsumerLendingAssetId(consumerLendingAssetId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingApplicantAssets

  """
  Selects multiple objects from the model. Model description: Stores employment
  history and income details for loan applicants.
  """
  consumerLendingApplicantEmployments(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingApplicantEmploymentsOrderByExp!], where: ConsumerLending_ConsumerLendingApplicantEmploymentsBoolExp): [ConsumerLending_ConsumerLendingApplicantEmployments!]
  consumerLendingApplicantEmploymentsAggregate(filter_input: ConsumerLending_ConsumerLendingApplicantEmploymentsFilterInput): ConsumerLending_ConsumerLendingApplicantEmploymentsAggExp

  """
  Selects a single object from the model. Model description: Stores employment
  history and income details for loan applicants.
  """
  consumerLendingApplicantEmploymentsByConsumerLendingEmploymentId(consumerLendingEmploymentId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingApplicantEmployments

  """
  Selects multiple objects from the model. Model description: Tracks various
  income sources for loan applicants, including employment and other income types.
  """
  consumerLendingApplicantIncomes(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingApplicantIncomesOrderByExp!], where: ConsumerLending_ConsumerLendingApplicantIncomesBoolExp): [ConsumerLending_ConsumerLendingApplicantIncomes!]
  consumerLendingApplicantIncomesAggregate(filter_input: ConsumerLending_ConsumerLendingApplicantIncomesFilterInput): ConsumerLending_ConsumerLendingApplicantIncomesAggExp

  """
  Selects a single object from the model. Model description: Tracks various
  income sources for loan applicants, including employment and other income types.
  """
  consumerLendingApplicantIncomesByConsumerLendingIncomeId(consumerLendingIncomeId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingApplicantIncomes

  """
  Selects multiple objects from the model. Model description: Tracks liabilities and debt obligations of loan applicants.
  """
  consumerLendingApplicantLiabilities(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingApplicantLiabilitiesOrderByExp!], where: ConsumerLending_ConsumerLendingApplicantLiabilitiesBoolExp): [ConsumerLending_ConsumerLendingApplicantLiabilities!]
  consumerLendingApplicantLiabilitiesAggregate(filter_input: ConsumerLending_ConsumerLendingApplicantLiabilitiesFilterInput): ConsumerLending_ConsumerLendingApplicantLiabilitiesAggExp

  """
  Selects a single object from the model. Model description: Tracks liabilities and debt obligations of loan applicants.
  """
  consumerLendingApplicantLiabilitiesByConsumerLendingLiabilityId(consumerLendingLiabilityId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingApplicantLiabilities

  """
  Selects multiple objects from the model. Model description: Stores personal and contact information for loan applicants.
  """
  consumerLendingApplicants(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingApplicantsOrderByExp!], where: ConsumerLending_ConsumerLendingApplicantsBoolExp): [ConsumerLending_ConsumerLendingApplicants!]
  consumerLendingApplicantsAggregate(filter_input: ConsumerLending_ConsumerLendingApplicantsFilterInput): ConsumerLending_ConsumerLendingApplicantsAggExp

  """
  Selects a single object from the model. Model description: Stores personal and contact information for loan applicants.
  """
  consumerLendingApplicantsByConsumerLendingApplicantId(consumerLendingApplicantId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingApplicants

  """
  Selects multiple objects from the model. Model description: Links loan
  applications to individual applicants, allowing for multiple applicants per application.
  """
  consumerLendingApplicationApplicants(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingApplicationApplicantsOrderByExp!], where: ConsumerLending_ConsumerLendingApplicationApplicantsBoolExp): [ConsumerLending_ConsumerLendingApplicationApplicants!]
  consumerLendingApplicationApplicantsAggregate(filter_input: ConsumerLending_ConsumerLendingApplicationApplicantsFilterInput): ConsumerLending_ConsumerLendingApplicationApplicantsAggExp

  """
  Selects a single object from the model. Model description: Links loan
  applications to individual applicants, allowing for multiple applicants per application.
  """
  consumerLendingApplicationApplicantsByConsumerLendingApplicationApplicantId(consumerLendingApplicationApplicantId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingApplicationApplicants

  """
  Selects multiple objects from the model. Model description: Records the
  decisions made on loan applications, including approvals, denials, and
  pre-qualifications.
  """
  consumerLendingApplicationDecisions(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingApplicationDecisionsOrderByExp!], where: ConsumerLending_ConsumerLendingApplicationDecisionsBoolExp): [ConsumerLending_ConsumerLendingApplicationDecisions!]
  consumerLendingApplicationDecisionsAggregate(filter_input: ConsumerLending_ConsumerLendingApplicationDecisionsFilterInput): ConsumerLending_ConsumerLendingApplicationDecisionsAggExp

  """
  Selects a single object from the model. Model description: Records the
  decisions made on loan applications, including approvals, denials, and
  pre-qualifications.
  """
  consumerLendingApplicationDecisionsByConsumerLendingDecisionId(consumerLendingDecisionId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingApplicationDecisions

  """
  Selects multiple objects from the model. Model description: Manages appraisal
  disclosures provided to loan applicants, including the type of appraisal and its value.
  """
  consumerLendingAppraisalDisclosures(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingAppraisalDisclosuresOrderByExp!], where: ConsumerLending_ConsumerLendingAppraisalDisclosuresBoolExp): [ConsumerLending_ConsumerLendingAppraisalDisclosures!]
  consumerLendingAppraisalDisclosuresAggregate(filter_input: ConsumerLending_ConsumerLendingAppraisalDisclosuresFilterInput): ConsumerLending_ConsumerLendingAppraisalDisclosuresAggExp

  """
  Selects a single object from the model. Model description: Manages appraisal
  disclosures provided to loan applicants, including the type of appraisal and its value.
  """
  consumerLendingAppraisalDisclosuresByConsumerLendingDisclosureId(consumerLendingDisclosureId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingAppraisalDisclosures

  """
  Selects multiple objects from the model. Model description: Tracks accounts
  that have been placed in collections, including delinquency details and
  collection actions.
  """
  consumerLendingCollectionAccounts(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingCollectionAccountsOrderByExp!], where: ConsumerLending_ConsumerLendingCollectionAccountsBoolExp): [ConsumerLending_ConsumerLendingCollectionAccounts!]
  consumerLendingCollectionAccountsAggregate(filter_input: ConsumerLending_ConsumerLendingCollectionAccountsFilterInput): ConsumerLending_ConsumerLendingCollectionAccountsAggExp

  """
  Selects a single object from the model. Model description: Tracks accounts
  that have been placed in collections, including delinquency details and
  collection actions.
  """
  consumerLendingCollectionAccountsByConsumerLendingCollectionId(consumerLendingCollectionId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingCollectionAccounts

  """
  Selects multiple objects from the model. Model description: Logs specific
  actions taken to collect on delinquent loan accounts, such as calls, letters, and emails.
  """
  consumerLendingCollectionActions(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingCollectionActionsOrderByExp!], where: ConsumerLending_ConsumerLendingCollectionActionsBoolExp): [ConsumerLending_ConsumerLendingCollectionActions!]
  consumerLendingCollectionActionsAggregate(filter_input: ConsumerLending_ConsumerLendingCollectionActionsFilterInput): ConsumerLending_ConsumerLendingCollectionActionsAggExp

  """
  Selects a single object from the model. Model description: Logs specific
  actions taken to collect on delinquent loan accounts, such as calls, letters, and emails.
  """
  consumerLendingCollectionActionsByConsumerLendingActionId(consumerLendingActionId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingCollectionActions

  """
  Selects multiple objects from the model. Model description: Tracks compliance
  exceptions and issues encountered during the lending process, including
  remediation efforts.
  """
  consumerLendingComplianceExceptions(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingComplianceExceptionsOrderByExp!], where: ConsumerLending_ConsumerLendingComplianceExceptionsBoolExp): [ConsumerLending_ConsumerLendingComplianceExceptions!]
  consumerLendingComplianceExceptionsAggregate(filter_input: ConsumerLending_ConsumerLendingComplianceExceptionsFilterInput): ConsumerLending_ConsumerLendingComplianceExceptionsAggExp

  """
  Selects a single object from the model. Model description: Tracks compliance
  exceptions and issues encountered during the lending process, including
  remediation efforts.
  """
  consumerLendingComplianceExceptionsByConsumerLendingExceptionId(consumerLendingExceptionId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingComplianceExceptions

  """
  Selects multiple objects from the model. Model description: Records inquiries
  made on a credit report, indicating potential credit applications or checks.
  """
  consumerLendingCreditInquiries(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingCreditInquiriesOrderByExp!], where: ConsumerLending_ConsumerLendingCreditInquiriesBoolExp): [ConsumerLending_ConsumerLendingCreditInquiries!]
  consumerLendingCreditInquiriesAggregate(filter_input: ConsumerLending_ConsumerLendingCreditInquiriesFilterInput): ConsumerLending_ConsumerLendingCreditInquiriesAggExp

  """
  Selects a single object from the model. Model description: Records inquiries
  made on a credit report, indicating potential credit applications or checks.
  """
  consumerLendingCreditInquiriesByConsumerLendingInquiryId(consumerLendingInquiryId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingCreditInquiries

  """
  Selects multiple objects from the model. Model description: Contains details
  of individual tradelines (credit accounts) reported on a credit report.
  """
  consumerLendingCreditReportTradelines(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingCreditReportTradelinesOrderByExp!], where: ConsumerLending_ConsumerLendingCreditReportTradelinesBoolExp): [ConsumerLending_ConsumerLendingCreditReportTradelines!]
  consumerLendingCreditReportTradelinesAggregate(filter_input: ConsumerLending_ConsumerLendingCreditReportTradelinesFilterInput): ConsumerLending_ConsumerLendingCreditReportTradelinesAggExp

  """
  Selects a single object from the model. Model description: Contains details of
  individual tradelines (credit accounts) reported on a credit report.
  """
  consumerLendingCreditReportTradelinesByConsumerLendingTradelineId(consumerLendingTradelineId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingCreditReportTradelines

  """
  Selects multiple objects from the model. Model description: Stores credit
  reports obtained for loan applicants, including credit scores and other
  relevant information.
  """
  consumerLendingCreditReports(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingCreditReportsOrderByExp!], where: ConsumerLending_ConsumerLendingCreditReportsBoolExp): [ConsumerLending_ConsumerLendingCreditReports!]
  consumerLendingCreditReportsAggregate(filter_input: ConsumerLending_ConsumerLendingCreditReportsFilterInput): ConsumerLending_ConsumerLendingCreditReportsAggExp

  """
  Selects a single object from the model. Model description: Stores credit
  reports obtained for loan applicants, including credit scores and other
  relevant information.
  """
  consumerLendingCreditReportsByConsumerLendingCreditReportId(consumerLendingCreditReportId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingCreditReports

  """
  Selects multiple objects from the model. Model description: Contains
  information about the decision models used to evaluate loan applications,
  including credit scoring, income verification, and fraud detection models.
  """
  consumerLendingDecisionModels(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingDecisionModelsOrderByExp!], where: ConsumerLending_ConsumerLendingDecisionModelsBoolExp): [ConsumerLending_ConsumerLendingDecisionModels!]
  consumerLendingDecisionModelsAggregate(filter_input: ConsumerLending_ConsumerLendingDecisionModelsFilterInput): ConsumerLending_ConsumerLendingDecisionModelsAggExp

  """
  Selects a single object from the model. Model description: Contains
  information about the decision models used to evaluate loan applications,
  including credit scoring, income verification, and fraud detection models.
  """
  consumerLendingDecisionModelsByConsumerLendingModelId(consumerLendingModelId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingDecisionModels

  """
  Selects multiple objects from the model. Model description: Provides specific
  reasons for the decisions made on loan applications, linked to the
  application_decisions table.
  """
  consumerLendingDecisionReasons(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingDecisionReasonsOrderByExp!], where: ConsumerLending_ConsumerLendingDecisionReasonsBoolExp): [ConsumerLending_ConsumerLendingDecisionReasons!]
  consumerLendingDecisionReasonsAggregate(filter_input: ConsumerLending_ConsumerLendingDecisionReasonsFilterInput): ConsumerLending_ConsumerLendingDecisionReasonsAggExp

  """
  Selects a single object from the model. Model description: Provides specific
  reasons for the decisions made on loan applications, linked to the
  application_decisions table.
  """
  consumerLendingDecisionReasonsByConsumerLendingDecisionReasonId(consumerLendingDecisionReasonId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingDecisionReasons

  """
  Selects multiple objects from the model. Model description: Tracks the
  disbursement of funds for loan accounts, including the date, amount, method,
  and recipient information.
  """
  consumerLendingDisbursements(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingDisbursementsOrderByExp!], where: ConsumerLending_ConsumerLendingDisbursementsBoolExp): [ConsumerLending_ConsumerLendingDisbursements!]
  consumerLendingDisbursementsAggregate(filter_input: ConsumerLending_ConsumerLendingDisbursementsFilterInput): ConsumerLending_ConsumerLendingDisbursementsAggExp

  """
  Selects a single object from the model. Model description: Tracks the
  disbursement of funds for loan accounts, including the date, amount, method,
  and recipient information.
  """
  consumerLendingDisbursementsByDisbursementId(disbursementId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingDisbursements

  """
  Selects multiple objects from the model. Model description: Tracks information
  related to the Equal Credit Opportunity Act (ECOA) for monitoring and
  compliance purposes.
  """
  consumerLendingEcoaMonitoring(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingEcoaMonitoringOrderByExp!], where: ConsumerLending_ConsumerLendingEcoaMonitoringBoolExp): [ConsumerLending_ConsumerLendingEcoaMonitoring!]
  consumerLendingEcoaMonitoringAggregate(filter_input: ConsumerLending_ConsumerLendingEcoaMonitoringFilterInput): ConsumerLending_ConsumerLendingEcoaMonitoringAggExp

  """
  Selects a single object from the model. Model description: Tracks information
  related to the Equal Credit Opportunity Act (ECOA) for monitoring and
  compliance purposes.
  """
  consumerLendingEcoaMonitoringByConsumerLendingMonitoringId(consumerLendingMonitoringId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingEcoaMonitoring

  """
  Selects multiple objects from the model. Model description: Records fair
  lending analysis conducted to identify and address potential disparities in
  lending practices.
  """
  consumerLendingFairlendingAnalysis(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingFairlendingAnalysisOrderByExp!], where: ConsumerLending_ConsumerLendingFairlendingAnalysisBoolExp): [ConsumerLending_ConsumerLendingFairlendingAnalysis!]
  consumerLendingFairlendingAnalysisAggregate(filter_input: ConsumerLending_ConsumerLendingFairlendingAnalysisFilterInput): ConsumerLending_ConsumerLendingFairlendingAnalysisAggExp

  """
  Selects a single object from the model. Model description: Records fair
  lending analysis conducted to identify and address potential disparities in
  lending practices.
  """
  consumerLendingFairlendingAnalysisByConsumerLendingAnalysisId(consumerLendingAnalysisId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingFairlendingAnalysis

  """
  Selects multiple objects from the model. Model description: Records the
  results of high-cost mortgage tests performed under the Home Ownership and
  Equity Protection Act (HOEPA).
  """
  consumerLendingHighCostMortgageTests(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingHighCostMortgageTestsOrderByExp!], where: ConsumerLending_ConsumerLendingHighCostMortgageTestsBoolExp): [ConsumerLending_ConsumerLendingHighCostMortgageTests!]
  consumerLendingHighCostMortgageTestsAggregate(filter_input: ConsumerLending_ConsumerLendingHighCostMortgageTestsFilterInput): ConsumerLending_ConsumerLendingHighCostMortgageTestsAggExp

  """
  Selects a single object from the model. Model description: Records the results
  of high-cost mortgage tests performed under the Home Ownership and Equity
  Protection Act (HOEPA).
  """
  consumerLendingHighCostMortgageTestsByConsumerLendingTestId(consumerLendingTestId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingHighCostMortgageTests

  """
  Selects multiple objects from the model. Model description: Stores information
  about active loan accounts, including loan details, payment history, and
  current status.
  """
  consumerLendingLoanAccounts(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingLoanAccountsOrderByExp!], where: ConsumerLending_ConsumerLendingLoanAccountsBoolExp): [ConsumerLending_ConsumerLendingLoanAccounts!]
  consumerLendingLoanAccountsAggregate(filter_input: ConsumerLending_ConsumerLendingLoanAccountsFilterInput): ConsumerLending_ConsumerLendingLoanAccountsAggExp

  """
  Selects a single object from the model. Model description: Stores information
  about active loan accounts, including loan details, payment history, and
  current status.
  """
  consumerLendingLoanAccountsByAccountNumber(accountNumber: ConsumerLending_Varchar!): ConsumerLending_ConsumerLendingLoanAccounts

  """
  Selects a single object from the model. Model description: Stores information
  about active loan accounts, including loan details, payment history, and
  current status.
  """
  consumerLendingLoanAccountsByConsumerLendingLoanAccountId(consumerLendingLoanAccountId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingLoanAccounts

  """
  Selects multiple objects from the model. Model description: Stores consumer lending applications for non-mortgage loans
  """
  consumerLendingLoanApplications(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingLoanApplicationsOrderByExp!], where: ConsumerLending_ConsumerLendingLoanApplicationsBoolExp): [ConsumerLending_ConsumerLendingLoanApplications!]
  consumerLendingLoanApplicationsAggregate(filter_input: ConsumerLending_ConsumerLendingLoanApplicationsFilterInput): ConsumerLending_ConsumerLendingLoanApplicationsAggExp

  """
  Selects a single object from the model. Model description: Stores consumer lending applications for non-mortgage loans
  """
  consumerLendingLoanApplicationsByConsumerLendingApplicationId(consumerLendingApplicationId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingLoanApplications

  """
  Selects multiple objects from the model. Model description: Stores information
  about collateral used to secure loans, including type, value, and insurance requirements.
  """
  consumerLendingLoanCollateral(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingLoanCollateralOrderByExp!], where: ConsumerLending_ConsumerLendingLoanCollateralBoolExp): [ConsumerLending_ConsumerLendingLoanCollateral!]
  consumerLendingLoanCollateralAggregate(filter_input: ConsumerLending_ConsumerLendingLoanCollateralFilterInput): ConsumerLending_ConsumerLendingLoanCollateralAggExp

  """
  Selects a single object from the model. Model description: Stores information
  about collateral used to secure loans, including type, value, and insurance requirements.
  """
  consumerLendingLoanCollateralByConsumerLendingCollateralId(consumerLendingCollateralId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingLoanCollateral

  """
  Selects multiple objects from the model. Model description: Logs various
  communications related to loan applications and accounts, such as emails,
  letters, and phone calls.
  """
  consumerLendingLoanCommunications(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingLoanCommunicationsOrderByExp!], where: ConsumerLending_ConsumerLendingLoanCommunicationsBoolExp): [ConsumerLending_ConsumerLendingLoanCommunications!]
  consumerLendingLoanCommunicationsAggregate(filter_input: ConsumerLending_ConsumerLendingLoanCommunicationsFilterInput): ConsumerLending_ConsumerLendingLoanCommunicationsAggExp

  """
  Selects a single object from the model. Model description: Logs various
  communications related to loan applications and accounts, such as emails,
  letters, and phone calls.
  """
  consumerLendingLoanCommunicationsByConsumerLendingCommunicationId(consumerLendingCommunicationId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingLoanCommunications

  """
  Selects multiple objects from the model. Model description: Tracks documents
  related to loan applications and accounts, including application forms,
  contracts, and statements.
  """
  consumerLendingLoanDocuments(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingLoanDocumentsOrderByExp!], where: ConsumerLending_ConsumerLendingLoanDocumentsBoolExp): [ConsumerLending_ConsumerLendingLoanDocuments!]
  consumerLendingLoanDocumentsAggregate(filter_input: ConsumerLending_ConsumerLendingLoanDocumentsFilterInput): ConsumerLending_ConsumerLendingLoanDocumentsAggExp

  """
  Selects a single object from the model. Model description: Tracks documents
  related to loan applications and accounts, including application forms,
  contracts, and statements.
  """
  consumerLendingLoanDocumentsByConsumerLendingDocumentId(consumerLendingDocumentId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingLoanDocuments

  """
  Selects multiple objects from the model. Model description: Tracks fees
  charged to loan accounts, including fee type, amount, status, and payment details.
  """
  consumerLendingLoanFees(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingLoanFeesOrderByExp!], where: ConsumerLending_ConsumerLendingLoanFeesBoolExp): [ConsumerLending_ConsumerLendingLoanFees!]
  consumerLendingLoanFeesAggregate(filter_input: ConsumerLending_ConsumerLendingLoanFeesFilterInput): ConsumerLending_ConsumerLendingLoanFeesAggExp

  """
  Selects a single object from the model. Model description: Tracks fees charged
  to loan accounts, including fee type, amount, status, and payment details.
  """
  consumerLendingLoanFeesByConsumerLendingFeeId(consumerLendingFeeId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingLoanFees

  """
  Selects multiple objects from the model. Model description: Stores information
  about insurance policies associated with loan accounts or collateral.
  """
  consumerLendingLoanInsurance(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingLoanInsuranceOrderByExp!], where: ConsumerLending_ConsumerLendingLoanInsuranceBoolExp): [ConsumerLending_ConsumerLendingLoanInsurance!]
  consumerLendingLoanInsuranceAggregate(filter_input: ConsumerLending_ConsumerLendingLoanInsuranceFilterInput): ConsumerLending_ConsumerLendingLoanInsuranceAggExp

  """
  Selects a single object from the model. Model description: Stores information
  about insurance policies associated with loan accounts or collateral.
  """
  consumerLendingLoanInsuranceByConsumerLendingInsuranceId(consumerLendingInsuranceId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingLoanInsurance

  """
  Selects multiple objects from the model. Model description: Tracks
  modifications made to existing loan accounts, such as changes to interest
  rates, terms, or principal balance.
  """
  consumerLendingLoanModifications(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingLoanModificationsOrderByExp!], where: ConsumerLending_ConsumerLendingLoanModificationsBoolExp): [ConsumerLending_ConsumerLendingLoanModifications!]
  consumerLendingLoanModificationsAggregate(filter_input: ConsumerLending_ConsumerLendingLoanModificationsFilterInput): ConsumerLending_ConsumerLendingLoanModificationsAggExp

  """
  Selects a single object from the model. Model description: Tracks
  modifications made to existing loan accounts, such as changes to interest
  rates, terms, or principal balance.
  """
  consumerLendingLoanModificationsByConsumerLendingModificationId(consumerLendingModificationId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingLoanModifications

  """
  Selects multiple objects from the model. Model description: Records payments
  made on loan accounts, including payment date, amount, method, and status.
  """
  consumerLendingLoanPayments(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingLoanPaymentsOrderByExp!], where: ConsumerLending_ConsumerLendingLoanPaymentsBoolExp): [ConsumerLending_ConsumerLendingLoanPayments!]
  consumerLendingLoanPaymentsAggregate(filter_input: ConsumerLending_ConsumerLendingLoanPaymentsFilterInput): ConsumerLending_ConsumerLendingLoanPaymentsAggExp

  """
  Selects a single object from the model. Model description: Records payments
  made on loan accounts, including payment date, amount, method, and status.
  """
  consumerLendingLoanPaymentsByConsumerLendingPaymentId(consumerLendingPaymentId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingLoanPayments

  """
  Selects multiple objects from the model. Model description: Defines the
  various loan products offered to consumers, including their terms, fees, and features.
  """
  consumerLendingLoanProducts(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingLoanProductsOrderByExp!], where: ConsumerLending_ConsumerLendingLoanProductsBoolExp): [ConsumerLending_ConsumerLendingLoanProducts!]
  consumerLendingLoanProductsAggregate(filter_input: ConsumerLending_ConsumerLendingLoanProductsFilterInput): ConsumerLending_ConsumerLendingLoanProductsAggExp

  """
  Selects a single object from the model. Model description: Defines the various
  loan products offered to consumers, including their terms, fees, and features.
  """
  consumerLendingLoanProductsByConsumerLendingLoanProductId(consumerLendingLoanProductId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingLoanProducts

  """
  Selects multiple objects from the model. Model description: Stores periodic
  loan statements, providing a summary of account activity, balances, and payments.
  """
  consumerLendingLoanStatements(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingLoanStatementsOrderByExp!], where: ConsumerLending_ConsumerLendingLoanStatementsBoolExp): [ConsumerLending_ConsumerLendingLoanStatements!]
  consumerLendingLoanStatementsAggregate(filter_input: ConsumerLending_ConsumerLendingLoanStatementsFilterInput): ConsumerLending_ConsumerLendingLoanStatementsAggExp

  """
  Selects a single object from the model. Model description: Stores periodic
  loan statements, providing a summary of account activity, balances, and payments.
  """
  consumerLendingLoanStatementsByConsumerLendingStatementId(consumerLendingStatementId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingLoanStatements

  """
  Selects multiple objects from the model. Model description: Tracks compliance
  with the Military Lending Act (MLA), including verification of military status
  and MAPR calculations.
  """
  consumerLendingMilitaryLendingChecks(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingMilitaryLendingChecksOrderByExp!], where: ConsumerLending_ConsumerLendingMilitaryLendingChecksBoolExp): [ConsumerLending_ConsumerLendingMilitaryLendingChecks!]
  consumerLendingMilitaryLendingChecksAggregate(filter_input: ConsumerLending_ConsumerLendingMilitaryLendingChecksFilterInput): ConsumerLending_ConsumerLendingMilitaryLendingChecksAggExp

  """
  Selects a single object from the model. Model description: Tracks compliance
  with the Military Lending Act (MLA), including verification of military status
  and MAPR calculations.
  """
  consumerLendingMilitaryLendingChecksByConsumerLendingCheckId(consumerLendingCheckId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingMilitaryLendingChecks

  """
  Selects multiple objects from the model. Model description: Records payment
  arrangements made with borrowers to resolve delinquent accounts.
  """
  consumerLendingPaymentArrangements(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingPaymentArrangementsOrderByExp!], where: ConsumerLending_ConsumerLendingPaymentArrangementsBoolExp): [ConsumerLending_ConsumerLendingPaymentArrangements!]
  consumerLendingPaymentArrangementsAggregate(filter_input: ConsumerLending_ConsumerLendingPaymentArrangementsFilterInput): ConsumerLending_ConsumerLendingPaymentArrangementsAggExp

  """
  Selects a single object from the model. Model description: Records payment
  arrangements made with borrowers to resolve delinquent accounts.
  """
  consumerLendingPaymentArrangementsByConsumerLendingArrangementId(consumerLendingArrangementId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingPaymentArrangements

  """
  Selects multiple objects from the model. Model description: Contains the
  payment schedule for each loan account, including scheduled dates, amounts,
  and payment status.
  """
  consumerLendingPaymentSchedules(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingPaymentSchedulesOrderByExp!], where: ConsumerLending_ConsumerLendingPaymentSchedulesBoolExp): [ConsumerLending_ConsumerLendingPaymentSchedules!]
  consumerLendingPaymentSchedulesAggregate(filter_input: ConsumerLending_ConsumerLendingPaymentSchedulesFilterInput): ConsumerLending_ConsumerLendingPaymentSchedulesAggExp

  """
  Selects a single object from the model. Model description: Contains the
  payment schedule for each loan account, including scheduled dates, amounts,
  and payment status.
  """
  consumerLendingPaymentSchedulesByPaymentScheduleId(paymentScheduleId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingPaymentSchedules

  """
  Selects multiple objects from the model. Model description: Specifies the
  eligibility criteria for each loan product, such as credit score, income, and
  employment requirements.
  """
  consumerLendingProductEligibilityCriteria(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingProductEligibilityCriteriaOrderByExp!], where: ConsumerLending_ConsumerLendingProductEligibilityCriteriaBoolExp): [ConsumerLending_ConsumerLendingProductEligibilityCriteria!]
  consumerLendingProductEligibilityCriteriaAggregate(filter_input: ConsumerLending_ConsumerLendingProductEligibilityCriteriaFilterInput): ConsumerLending_ConsumerLendingProductEligibilityCriteriaAggExp

  """
  Selects a single object from the model. Model description: Specifies the
  eligibility criteria for each loan product, such as credit score, income, and
  employment requirements.
  """
  consumerLendingProductEligibilityCriteriaByConsumerLendingCriteriaId(consumerLendingCriteriaId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingProductEligibilityCriteria

  """
  Selects multiple objects from the model. Model description: Stores public
  records, such as bankruptcies, liens, and judgments, associated with a credit report.
  """
  consumerLendingPublicRecords(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingPublicRecordsOrderByExp!], where: ConsumerLending_ConsumerLendingPublicRecordsBoolExp): [ConsumerLending_ConsumerLendingPublicRecords!]
  consumerLendingPublicRecordsAggregate(filter_input: ConsumerLending_ConsumerLendingPublicRecordsFilterInput): ConsumerLending_ConsumerLendingPublicRecordsAggExp

  """
  Selects a single object from the model. Model description: Stores public
  records, such as bankruptcies, liens, and judgments, associated with a credit report.
  """
  consumerLendingPublicRecordsByConsumerLendingRecordId(consumerLendingRecordId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingPublicRecords

  """
  Selects multiple objects from the model. Model description: Tracks notices and
  disclosures required by Regulation B (Equal Credit Opportunity Act), such as
  notices of incomplete applications or adverse action.
  """
  consumerLendingRegBNotices(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingRegBNoticesOrderByExp!], where: ConsumerLending_ConsumerLendingRegBNoticesBoolExp): [ConsumerLending_ConsumerLendingRegBNotices!]
  consumerLendingRegBNoticesAggregate(filter_input: ConsumerLending_ConsumerLendingRegBNoticesFilterInput): ConsumerLending_ConsumerLendingRegBNoticesAggExp

  """
  Selects a single object from the model. Model description: Tracks notices and
  disclosures required by Regulation B (Equal Credit Opportunity Act), such as
  notices of incomplete applications or adverse action.
  """
  consumerLendingRegBNoticesByConsumerLendingNoticeId(consumerLendingNoticeId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingRegBNotices

  """
  Selects multiple objects from the model. Model description: Stores disclosures
  required by the Truth in Lending Act (Regulation Z), such as Loan Estimates
  and Closing Disclosures.
  """
  consumerLendingRegZDisclosures(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingRegZDisclosuresOrderByExp!], where: ConsumerLending_ConsumerLendingRegZDisclosuresBoolExp): [ConsumerLending_ConsumerLendingRegZDisclosures!]
  consumerLendingRegZDisclosuresAggregate(filter_input: ConsumerLending_ConsumerLendingRegZDisclosuresFilterInput): ConsumerLending_ConsumerLendingRegZDisclosuresAggExp

  """
  Selects a single object from the model. Model description: Stores disclosures
  required by the Truth in Lending Act (Regulation Z), such as Loan Estimates
  and Closing Disclosures.
  """
  consumerLendingRegZDisclosuresByConsumerLendingDisclosureId(consumerLendingDisclosureId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingRegZDisclosures

  """
  Selects multiple objects from the model. Model description: Defines pricing
  tiers based on risk factors, such as credit score and debt-to-income ratio,
  for loan products.
  """
  consumerLendingRiskBasedPricingTiers(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingRiskBasedPricingTiersOrderByExp!], where: ConsumerLending_ConsumerLendingRiskBasedPricingTiersBoolExp): [ConsumerLending_ConsumerLendingRiskBasedPricingTiers!]
  consumerLendingRiskBasedPricingTiersAggregate(filter_input: ConsumerLending_ConsumerLendingRiskBasedPricingTiersFilterInput): ConsumerLending_ConsumerLendingRiskBasedPricingTiersAggExp

  """
  Selects a single object from the model. Model description: Defines pricing
  tiers based on risk factors, such as credit score and debt-to-income ratio,
  for loan products.
  """
  consumerLendingRiskBasedPricingTiersByConsumerLendingPricingTierId(consumerLendingPricingTierId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingRiskBasedPricingTiers

  """
  Selects multiple objects from the model. Model description: Stores information
  about vehicles involved in auto loan applications, including details like
  make, model, and purchase price.
  """
  consumerLendingVehicles(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingVehiclesOrderByExp!], where: ConsumerLending_ConsumerLendingVehiclesBoolExp): [ConsumerLending_ConsumerLendingVehicles!]
  consumerLendingVehiclesAggregate(filter_input: ConsumerLending_ConsumerLendingVehiclesFilterInput): ConsumerLending_ConsumerLendingVehiclesAggExp

  """
  Selects a single object from the model. Model description: Stores information
  about vehicles involved in auto loan applications, including details like
  make, model, and purchase price.
  """
  consumerLendingVehiclesByVehicleId(vehicleId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingVehicles

  """
  Selects multiple objects from the model. Model description: Documents ability to pay assessments required by Reg Z
  """
  creditCardsAbilityToPayAssessments(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsAbilityToPayAssessmentsOrderByExp!], where: CreditCards_CreditCardsAbilityToPayAssessmentsBoolExp): [CreditCards_CreditCardsAbilityToPayAssessments!]
  creditCardsAbilityToPayAssessmentsAggregate(filter_input: CreditCards_CreditCardsAbilityToPayAssessmentsFilterInput): CreditCards_CreditCardsAbilityToPayAssessmentsAggExp

  """
  Selects a single object from the model. Model description: Documents ability to pay assessments required by Reg Z
  """
  creditCardsAbilityToPayAssessmentsByCreditCardsAssessmentId(creditCardsAssessmentId: CreditCards_Int4!): CreditCards_CreditCardsAbilityToPayAssessments

  """
  Selects multiple objects from the model. Model description: Stores credit card applications and their status
  """
  creditCardsApplications(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsApplicationsOrderByExp!], where: CreditCards_CreditCardsApplicationsBoolExp): [CreditCards_CreditCardsApplications!]
  creditCardsApplicationsAggregate(filter_input: CreditCards_CreditCardsApplicationsFilterInput): CreditCards_CreditCardsApplicationsAggExp

  """
  Selects a single object from the model. Model description: Stores credit card applications and their status
  """
  creditCardsApplicationsByCreditCardsApplicationId(creditCardsApplicationId: CreditCards_Int4!): CreditCards_CreditCardsApplications

  """
  Selects multiple objects from the model. Model description: Tracks authorized users who can use the account
  """
  creditCardsAuthorizedUsers(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsAuthorizedUsersOrderByExp!], where: CreditCards_CreditCardsAuthorizedUsersBoolExp): [CreditCards_CreditCardsAuthorizedUsers!]
  creditCardsAuthorizedUsersAggregate(filter_input: CreditCards_CreditCardsAuthorizedUsersFilterInput): CreditCards_CreditCardsAuthorizedUsersAggExp

  """
  Selects a single object from the model. Model description: Tracks authorized users who can use the account
  """
  creditCardsAuthorizedUsersByCreditCardsAuthorizedUserId(creditCardsAuthorizedUserId: CreditCards_Int4!): CreditCards_CreditCardsAuthorizedUsers

  """
  Selects multiple objects from the model. Model description: Stores automatic payment settings
  """
  creditCardsAutopaySettings(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsAutopaySettingsOrderByExp!], where: CreditCards_CreditCardsAutopaySettingsBoolExp): [CreditCards_CreditCardsAutopaySettings!]
  creditCardsAutopaySettingsAggregate(filter_input: CreditCards_CreditCardsAutopaySettingsFilterInput): CreditCards_CreditCardsAutopaySettingsAggExp

  """
  Selects a single object from the model. Model description: Stores automatic payment settings
  """
  creditCardsAutopaySettingsByCreditCardsAutopayId(creditCardsAutopayId: CreditCards_Int4!): CreditCards_CreditCardsAutopaySettings

  """
  Selects multiple objects from the model. Model description: Tracks balance transfers from other creditors
  """
  creditCardsBalanceTransfers(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsBalanceTransfersOrderByExp!], where: CreditCards_CreditCardsBalanceTransfersBoolExp): [CreditCards_CreditCardsBalanceTransfers!]
  creditCardsBalanceTransfersAggregate(filter_input: CreditCards_CreditCardsBalanceTransfersFilterInput): CreditCards_CreditCardsBalanceTransfersAggExp

  """
  Selects a single object from the model. Model description: Tracks balance transfers from other creditors
  """
  creditCardsBalanceTransfersByCreditCardsTransferId(creditCardsTransferId: CreditCards_Int4!): CreditCards_CreditCardsBalanceTransfers

  """
  Selects multiple objects from the model. Model description: Stores credit card accounts and their current status
  """
  creditCardsCardAccounts(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsCardAccountsOrderByExp!], where: CreditCards_CreditCardsCardAccountsBoolExp): [CreditCards_CreditCardsCardAccounts!]
  creditCardsCardAccountsAggregate(filter_input: CreditCards_CreditCardsCardAccountsFilterInput): CreditCards_CreditCardsCardAccountsAggExp

  """
  Selects a single object from the model. Model description: Stores credit card accounts and their current status
  """
  creditCardsCardAccountsByAccountNumber(accountNumber: CreditCards_Varchar!): CreditCards_CreditCardsCardAccounts

  """
  Selects a single object from the model. Model description: Stores credit card accounts and their current status
  """
  creditCardsCardAccountsByCreditCardsCardAccountId(creditCardsCardAccountId: CreditCards_Int4!): CreditCards_CreditCardsCardAccounts

  """
  Selects multiple objects from the model. Model description: Stores customer alert preferences
  """
  creditCardsCardAlerts(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsCardAlertsOrderByExp!], where: CreditCards_CreditCardsCardAlertsBoolExp): [CreditCards_CreditCardsCardAlerts!]
  creditCardsCardAlertsAggregate(filter_input: CreditCards_CreditCardsCardAlertsFilterInput): CreditCards_CreditCardsCardAlertsAggExp

  """
  Selects a single object from the model. Model description: Stores customer alert preferences
  """
  creditCardsCardAlertsByCreditCardsAlertId(creditCardsAlertId: CreditCards_Int4!): CreditCards_CreditCardsCardAlerts

  """
  Selects multiple objects from the model. Model description: Stores features and benefits associated with card products
  """
  creditCardsCardProductFeatures(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsCardProductFeaturesOrderByExp!], where: CreditCards_CreditCardsCardProductFeaturesBoolExp): [CreditCards_CreditCardsCardProductFeatures!]
  creditCardsCardProductFeaturesAggregate(filter_input: CreditCards_CreditCardsCardProductFeaturesFilterInput): CreditCards_CreditCardsCardProductFeaturesAggExp

  """
  Selects a single object from the model. Model description: Stores features and benefits associated with card products
  """
  creditCardsCardProductFeaturesByCreditCardsFeatureId(creditCardsFeatureId: CreditCards_Int4!): CreditCards_CreditCardsCardProductFeatures

  """
  Selects multiple objects from the model. Model description: Defines reward earning categories for card products
  """
  creditCardsCardProductRewardCategories(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsCardProductRewardCategoriesOrderByExp!], where: CreditCards_CreditCardsCardProductRewardCategoriesBoolExp): [CreditCards_CreditCardsCardProductRewardCategories!]
  creditCardsCardProductRewardCategoriesAggregate(filter_input: CreditCards_CreditCardsCardProductRewardCategoriesFilterInput): CreditCards_CreditCardsCardProductRewardCategoriesAggExp

  """
  Selects a single object from the model. Model description: Defines reward earning categories for card products
  """
  creditCardsCardProductRewardCategoriesByCreditCardsCategoryId(creditCardsCategoryId: CreditCards_Int4!): CreditCards_CreditCardsCardProductRewardCategories

  """
  Selects multiple objects from the model. Model description: Defines credit card products offered by the institution
  """
  creditCardsCardProducts(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsCardProductsOrderByExp!], where: CreditCards_CreditCardsCardProductsBoolExp): [CreditCards_CreditCardsCardProducts!]
  creditCardsCardProductsAggregate(filter_input: CreditCards_CreditCardsCardProductsFilterInput): CreditCards_CreditCardsCardProductsAggExp

  """
  Selects a single object from the model. Model description: Defines credit card products offered by the institution
  """
  creditCardsCardProductsByCreditCardsProductId(creditCardsProductId: CreditCards_Int4!): CreditCards_CreditCardsCardProducts

  """
  Selects multiple objects from the model. Model description: Stores information
  about physical and virtual cards issued for accounts
  """
  creditCardsCards(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsCardsOrderByExp!], where: CreditCards_CreditCardsCardsBoolExp): [CreditCards_CreditCardsCards!]
  creditCardsCardsAggregate(filter_input: CreditCards_CreditCardsCardsFilterInput): CreditCards_CreditCardsCardsAggExp

  """
  Selects a single object from the model. Model description: Stores information
  about physical and virtual cards issued for accounts
  """
  creditCardsCardsByCreditCardsCardId(creditCardsCardId: CreditCards_Int4!): CreditCards_CreditCardsCards

  """
  Selects multiple objects from the model. Model description: Tracks customer complaints about credit card accounts
  """
  creditCardsConsumerComplaints(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsConsumerComplaintsOrderByExp!], where: CreditCards_CreditCardsConsumerComplaintsBoolExp): [CreditCards_CreditCardsConsumerComplaints!]
  creditCardsConsumerComplaintsAggregate(filter_input: CreditCards_CreditCardsConsumerComplaintsFilterInput): CreditCards_CreditCardsConsumerComplaintsAggExp

  """
  Selects a single object from the model. Model description: Tracks customer complaints about credit card accounts
  """
  creditCardsConsumerComplaintsByCreditCardsComplaintId(creditCardsComplaintId: CreditCards_Int4!): CreditCards_CreditCardsConsumerComplaints

  """
  Selects multiple objects from the model. Model description: Regulatory
  reporting data for credit card applications under HMDA
  """
  creditCardsCreditCardApplicationsHmda(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsCreditCardApplicationsHmdaOrderByExp!], where: CreditCards_CreditCardsCreditCardApplicationsHmdaBoolExp): [CreditCards_CreditCardsCreditCardApplicationsHmda!]
  creditCardsCreditCardApplicationsHmdaAggregate(filter_input: CreditCards_CreditCardsCreditCardApplicationsHmdaFilterInput): CreditCards_CreditCardsCreditCardApplicationsHmdaAggExp

  """
  Selects a single object from the model. Model description: Regulatory
  reporting data for credit card applications under HMDA
  """
  creditCardsCreditCardApplicationsHmdaByCreditCardsRecordId(creditCardsRecordId: CreditCards_Int4!): CreditCards_CreditCardsCreditCardApplicationsHmda

  """
  Selects multiple objects from the model. Model description: Tracks history of credit limit changes
  """
  creditCardsCreditLimitChanges(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsCreditLimitChangesOrderByExp!], where: CreditCards_CreditCardsCreditLimitChangesBoolExp): [CreditCards_CreditCardsCreditLimitChanges!]
  creditCardsCreditLimitChangesAggregate(filter_input: CreditCards_CreditCardsCreditLimitChangesFilterInput): CreditCards_CreditCardsCreditLimitChangesAggExp

  """
  Selects a single object from the model. Model description: Tracks history of credit limit changes
  """
  creditCardsCreditLimitChangesByCreditCardsChangeId(creditCardsChangeId: CreditCards_Int4!): CreditCards_CreditCardsCreditLimitChanges

  """
  Selects multiple objects from the model. Model description: Tracks disputed transactions and their resolution
  """
  creditCardsDisputedTransactions(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsDisputedTransactionsOrderByExp!], where: CreditCards_CreditCardsDisputedTransactionsBoolExp): [CreditCards_CreditCardsDisputedTransactions!]
  creditCardsDisputedTransactionsAggregate(filter_input: CreditCards_CreditCardsDisputedTransactionsFilterInput): CreditCards_CreditCardsDisputedTransactionsAggExp

  """
  Selects a single object from the model. Model description: Tracks disputed transactions and their resolution
  """
  creditCardsDisputedTransactionsByCreditCardsDisputeId(creditCardsDisputeId: CreditCards_Int4!): CreditCards_CreditCardsDisputedTransactions

  """
  Selects multiple objects from the model. Model description: Tracks fees charged to card accounts
  """
  creditCardsFees(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsFeesOrderByExp!], where: CreditCards_CreditCardsFeesBoolExp): [CreditCards_CreditCardsFees!]
  creditCardsFeesAggregate(filter_input: CreditCards_CreditCardsFeesFilterInput): CreditCards_CreditCardsFeesAggExp

  """
  Selects a single object from the model. Model description: Tracks fees charged to card accounts
  """
  creditCardsFeesByCreditCardsFeeId(creditCardsFeeId: CreditCards_Int4!): CreditCards_CreditCardsFees

  """
  Selects multiple objects from the model. Model description: Tracks fraud cases related to card accounts
  """
  creditCardsFraudCases(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsFraudCasesOrderByExp!], where: CreditCards_CreditCardsFraudCasesBoolExp): [CreditCards_CreditCardsFraudCases!]
  creditCardsFraudCasesAggregate(filter_input: CreditCards_CreditCardsFraudCasesFilterInput): CreditCards_CreditCardsFraudCasesAggExp

  """
  Selects a single object from the model. Model description: Tracks fraud cases related to card accounts
  """
  creditCardsFraudCasesByCreditCardsCaseId(creditCardsCaseId: CreditCards_Int4!): CreditCards_CreditCardsFraudCases

  """
  Selects multiple objects from the model. Model description: Junction table linking fraud cases to specific transactions
  """
  creditCardsFraudTransactions(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsFraudTransactionsOrderByExp!], where: CreditCards_CreditCardsFraudTransactionsBoolExp): [CreditCards_CreditCardsFraudTransactions!]
  creditCardsFraudTransactionsAggregate(filter_input: CreditCards_CreditCardsFraudTransactionsFilterInput): CreditCards_CreditCardsFraudTransactionsAggExp

  """
  Selects a single object from the model. Model description: Junction table linking fraud cases to specific transactions
  """
  creditCardsFraudTransactionsByCreditCardsFraudTransactionId(creditCardsFraudTransactionId: CreditCards_Int4!): CreditCards_CreditCardsFraudTransactions

  """
  Selects multiple objects from the model. Model description: Tracks interest charges applied to card accounts
  """
  creditCardsInterestCharges(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsInterestChargesOrderByExp!], where: CreditCards_CreditCardsInterestChargesBoolExp): [CreditCards_CreditCardsInterestCharges!]
  creditCardsInterestChargesAggregate(filter_input: CreditCards_CreditCardsInterestChargesFilterInput): CreditCards_CreditCardsInterestChargesAggExp

  """
  Selects a single object from the model. Model description: Tracks interest charges applied to card accounts
  """
  creditCardsInterestChargesByCreditCardsChargeId(creditCardsChargeId: CreditCards_Int4!): CreditCards_CreditCardsInterestCharges

  """
  Selects multiple objects from the model. Model description: Stores payment methods for card account payments
  """
  creditCardsPaymentMethods(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsPaymentMethodsOrderByExp!], where: CreditCards_CreditCardsPaymentMethodsBoolExp): [CreditCards_CreditCardsPaymentMethods!]
  creditCardsPaymentMethodsAggregate(filter_input: CreditCards_CreditCardsPaymentMethodsFilterInput): CreditCards_CreditCardsPaymentMethodsAggExp

  """
  Selects a single object from the model. Model description: Stores payment methods for card account payments
  """
  creditCardsPaymentMethodsByCreditCardsPaymentMethodId(creditCardsPaymentMethodId: CreditCards_Int4!): CreditCards_CreditCardsPaymentMethods

  """
  Selects multiple objects from the model. Model description: Tracks promotional offers made to cardholders
  """
  creditCardsPromotionalOffers(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsPromotionalOffersOrderByExp!], where: CreditCards_CreditCardsPromotionalOffersBoolExp): [CreditCards_CreditCardsPromotionalOffers!]
  creditCardsPromotionalOffersAggregate(filter_input: CreditCards_CreditCardsPromotionalOffersFilterInput): CreditCards_CreditCardsPromotionalOffersAggExp

  """
  Selects a single object from the model. Model description: Tracks promotional offers made to cardholders
  """
  creditCardsPromotionalOffersByCreditCardsOfferId(creditCardsOfferId: CreditCards_Int4!): CreditCards_CreditCardsPromotionalOffers

  """
  Selects multiple objects from the model. Model description: Tracks Truth in
  Lending Act disclosures required for credit cards
  """
  creditCardsRegZCreditCardDisclosures(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsRegZCreditCardDisclosuresOrderByExp!], where: CreditCards_CreditCardsRegZCreditCardDisclosuresBoolExp): [CreditCards_CreditCardsRegZCreditCardDisclosures!]
  creditCardsRegZCreditCardDisclosuresAggregate(filter_input: CreditCards_CreditCardsRegZCreditCardDisclosuresFilterInput): CreditCards_CreditCardsRegZCreditCardDisclosuresAggExp

  """
  Selects a single object from the model. Model description: Tracks Truth in
  Lending Act disclosures required for credit cards
  """
  creditCardsRegZCreditCardDisclosuresByCreditCardsDisclosureId(creditCardsDisclosureId: CreditCards_Int4!): CreditCards_CreditCardsRegZCreditCardDisclosures

  """
  Selects multiple objects from the model. Model description: Stores details of reward point redemptions
  """
  creditCardsRewardRedemptions(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsRewardRedemptionsOrderByExp!], where: CreditCards_CreditCardsRewardRedemptionsBoolExp): [CreditCards_CreditCardsRewardRedemptions!]
  creditCardsRewardRedemptionsAggregate(filter_input: CreditCards_CreditCardsRewardRedemptionsFilterInput): CreditCards_CreditCardsRewardRedemptionsAggExp

  """
  Selects a single object from the model. Model description: Stores details of reward point redemptions
  """
  creditCardsRewardRedemptionsByCreditCardsRedemptionId(creditCardsRedemptionId: CreditCards_Int4!): CreditCards_CreditCardsRewardRedemptions

  """
  Selects multiple objects from the model. Model description: Tracks reward earning and redemption activity
  """
  creditCardsRewards(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsRewardsOrderByExp!], where: CreditCards_CreditCardsRewardsBoolExp): [CreditCards_CreditCardsRewards!]
  creditCardsRewardsAggregate(filter_input: CreditCards_CreditCardsRewardsFilterInput): CreditCards_CreditCardsRewardsAggExp

  """
  Selects a single object from the model. Model description: Tracks reward earning and redemption activity
  """
  creditCardsRewardsByCreditCardsRewardId(creditCardsRewardId: CreditCards_Int4!): CreditCards_CreditCardsRewards

  """
  Selects multiple objects from the model. Model description: Tracks security blocks placed on cards
  """
  creditCardsSecurityBlocks(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsSecurityBlocksOrderByExp!], where: CreditCards_CreditCardsSecurityBlocksBoolExp): [CreditCards_CreditCardsSecurityBlocks!]
  creditCardsSecurityBlocksAggregate(filter_input: CreditCards_CreditCardsSecurityBlocksFilterInput): CreditCards_CreditCardsSecurityBlocksAggExp

  """
  Selects a single object from the model. Model description: Tracks security blocks placed on cards
  """
  creditCardsSecurityBlocksByCreditCardsBlockId(creditCardsBlockId: CreditCards_Int4!): CreditCards_CreditCardsSecurityBlocks

  """
  Selects multiple objects from the model. Model description: Stores monthly billing statements for card accounts
  """
  creditCardsStatements(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsStatementsOrderByExp!], where: CreditCards_CreditCardsStatementsBoolExp): [CreditCards_CreditCardsStatements!]
  creditCardsStatementsAggregate(filter_input: CreditCards_CreditCardsStatementsFilterInput): CreditCards_CreditCardsStatementsAggExp

  """
  Selects a single object from the model. Model description: Stores monthly billing statements for card accounts
  """
  creditCardsStatementsByCreditCardsStatementId(creditCardsStatementId: CreditCards_Int4!): CreditCards_CreditCardsStatements

  """
  Selects multiple objects from the model. Model description: Stores all transaction activity on card accounts
  """
  creditCardsTransactions(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsTransactionsOrderByExp!], where: CreditCards_CreditCardsTransactionsBoolExp): [CreditCards_CreditCardsTransactions!]
  creditCardsTransactionsAggregate(filter_input: CreditCards_CreditCardsTransactionsFilterInput): CreditCards_CreditCardsTransactionsAggExp

  """
  Selects a single object from the model. Model description: Stores all transaction activity on card accounts
  """
  creditCardsTransactionsByCreditCardsTransactionId(creditCardsTransactionId: CreditCards_Int4!): CreditCards_CreditCardsTransactions

  """
  Selects multiple objects from the model. Model description: The only table
  that controls account access rights. Creates the mandatory link between
  parties and accounts. Any query checking account access or ownership must
  start with this table. No direct relationships exist between parties and other
  account tables.
  """
  enterpriseAccountOwnership(limit: Int, offset: Int, order_by: [Enterprise_EnterpriseAccountOwnershipOrderByExp!], where: Enterprise_EnterpriseAccountOwnershipBoolExp): [Enterprise_EnterpriseAccountOwnership!]
  enterpriseAccountOwnershipAggregate(filter_input: Enterprise_EnterpriseAccountOwnershipFilterInput): Enterprise_EnterpriseAccountOwnershipAggExp

  """
  Selects a single object from the model. Model description: The only table that
  controls account access rights. Creates the mandatory link between parties and
  accounts. Any query checking account access or ownership must start with this
  table. No direct relationships exist between parties and other account tables.
  """
  enterpriseAccountOwnershipByEnterpriseAccountOwnershipId(enterpriseAccountOwnershipId: Enterprise_Int4!): Enterprise_EnterpriseAccountOwnership

  """
  Selects multiple objects from the model. Model description: Root account
  record in the account hierarchy. All other account types (consumer, mortgage,
  credit) are children of an enterprise account and cannot exist without it. The
  single source of truth for account ownership and access control.
  """
  enterpriseAccounts(limit: Int, offset: Int, order_by: [Enterprise_EnterpriseAccountsOrderByExp!], where: Enterprise_EnterpriseAccountsBoolExp): [Enterprise_EnterpriseAccounts!]
  enterpriseAccountsAggregate(filter_input: Enterprise_EnterpriseAccountsFilterInput): Enterprise_EnterpriseAccountsAggExp

  """
  Selects a single object from the model. Model description: Root account record
  in the account hierarchy. All other account types (consumer, mortgage, credit)
  are children of an enterprise account and cannot exist without it. The single
  source of truth for account ownership and access control.
  """
  enterpriseAccountsByEnterpriseAccountId(enterpriseAccountId: Enterprise_Int4!): Enterprise_EnterpriseAccounts

  """
  Selects multiple objects from the model. Model description: Central repository
  for address information used across the system
  """
  enterpriseAddresses(limit: Int, offset: Int, order_by: [Enterprise_EnterpriseAddressesOrderByExp!], where: Enterprise_EnterpriseAddressesBoolExp): [Enterprise_EnterpriseAddresses!]
  enterpriseAddressesAggregate(filter_input: Enterprise_EnterpriseAddressesFilterInput): Enterprise_EnterpriseAddressesAggExp

  """
  Selects a single object from the model. Model description: Central repository
  for address information used across the system
  """
  enterpriseAddressesByEnterpriseAddressId(enterpriseAddressId: Enterprise_Int4!): Enterprise_EnterpriseAddresses

  """
  Selects multiple objects from the model. Model description: Stores information
  about employees, contractors, or other individuals associated with the enterprise.
  """
  enterpriseAssociates(limit: Int, offset: Int, order_by: [Enterprise_EnterpriseAssociatesOrderByExp!], where: Enterprise_EnterpriseAssociatesBoolExp): [Enterprise_EnterpriseAssociates!]
  enterpriseAssociatesAggregate(filter_input: Enterprise_EnterpriseAssociatesFilterInput): Enterprise_EnterpriseAssociatesAggExp

  """
  Selects a single object from the model. Model description: Stores information
  about employees, contractors, or other individuals associated with the enterprise.
  """
  enterpriseAssociatesByEmail(email: Enterprise_Varchar): Enterprise_EnterpriseAssociates

  """
  Selects a single object from the model. Model description: Stores information
  about employees, contractors, or other individuals associated with the enterprise.
  """
  enterpriseAssociatesByEnterpriseAssociateId(enterpriseAssociateId: Enterprise_Int4!): Enterprise_EnterpriseAssociates

  """
  Selects multiple objects from the model. Model description: Stores information
  about the physical buildings used by the enterprise, including branches and
  other facilities.
  """
  enterpriseBuildings(limit: Int, offset: Int, order_by: [Enterprise_EnterpriseBuildingsOrderByExp!], where: Enterprise_EnterpriseBuildingsBoolExp): [Enterprise_EnterpriseBuildings!]
  enterpriseBuildingsAggregate(filter_input: Enterprise_EnterpriseBuildingsFilterInput): Enterprise_EnterpriseBuildingsAggExp

  """
  Selects a single object from the model. Model description: Stores information
  about the physical buildings used by the enterprise, including branches and
  other facilities.
  """
  enterpriseBuildingsByEnterpriseBuildingId(enterpriseBuildingId: Enterprise_Int4!): Enterprise_EnterpriseBuildings

  """
  Selects multiple objects from the model. Model description: Stores information
  about the various departments within the enterprise.
  """
  enterpriseDepartments(limit: Int, offset: Int, order_by: [Enterprise_EnterpriseDepartmentsOrderByExp!], where: Enterprise_EnterpriseDepartmentsBoolExp): [Enterprise_EnterpriseDepartments!]
  enterpriseDepartmentsAggregate(filter_input: Enterprise_EnterpriseDepartmentsFilterInput): Enterprise_EnterpriseDepartmentsAggExp

  """
  Selects a single object from the model. Model description: Stores information
  about the various departments within the enterprise.
  """
  enterpriseDepartmentsByDepartmentName(departmentName: Enterprise_Varchar): Enterprise_EnterpriseDepartments

  """
  Selects a single object from the model. Model description: Stores information
  about the various departments within the enterprise.
  """
  enterpriseDepartmentsByEnterpriseDepartmentId(enterpriseDepartmentId: Enterprise_Int4!): Enterprise_EnterpriseDepartments

  """
  Selects multiple objects from the model. Model description: Registry of
  identifiers applicable to accounts, individuals, or institutions — referenced
  by business-line accounts
  """
  enterpriseIdentifiers(limit: Int, offset: Int, order_by: [Enterprise_EnterpriseIdentifiersOrderByExp!], where: Enterprise_EnterpriseIdentifiersBoolExp): [Enterprise_EnterpriseIdentifiers!]
  enterpriseIdentifiersAggregate(filter_input: Enterprise_EnterpriseIdentifiersFilterInput): Enterprise_EnterpriseIdentifiersAggExp

  """
  Selects a single object from the model. Model description: Registry of
  identifiers applicable to accounts, individuals, or institutions — referenced
  by business-line accounts
  """
  enterpriseIdentifiersByEnterpriseIdentifierId(enterpriseIdentifierId: Enterprise_Int4!): Enterprise_EnterpriseIdentifiers

  """
  Selects multiple objects from the model. Model description: Stores information
  about individuals and organizations that interact with accounts, now with
  additional common personal attributes for individuals
  """
  enterpriseParties(limit: Int, offset: Int, order_by: [Enterprise_EnterprisePartiesOrderByExp!], where: Enterprise_EnterprisePartiesBoolExp): [Enterprise_EnterpriseParties!]
  enterprisePartiesAggregate(filter_input: Enterprise_EnterprisePartiesFilterInput): Enterprise_EnterprisePartiesAggExp

  """
  Selects a single object from the model. Model description: Stores information
  about individuals and organizations that interact with accounts, now with
  additional common personal attributes for individuals
  """
  enterprisePartiesByEnterprisePartyId(enterprisePartyId: Enterprise_Int4!): Enterprise_EnterpriseParties

  """
  Selects multiple objects from the model. Model description: Links parties to entity addresses with a defined relationship
  """
  enterprisePartyEntityAddresses(limit: Int, offset: Int, order_by: [Enterprise_EnterprisePartyEntityAddressesOrderByExp!], where: Enterprise_EnterprisePartyEntityAddressesBoolExp): [Enterprise_EnterprisePartyEntityAddresses!]
  enterprisePartyEntityAddressesAggregate(filter_input: Enterprise_EnterprisePartyEntityAddressesFilterInput): Enterprise_EnterprisePartyEntityAddressesAggExp

  """
  Selects a single object from the model. Model description: Links parties to entity addresses with a defined relationship
  """
  enterprisePartyEntityAddressesByEnterprisePartyEntityAddressId(enterprisePartyEntityAddressId: Enterprise_Int4!): Enterprise_EnterprisePartyEntityAddresses

  """
  Selects multiple objects from the model. Model description: Defines the role
  of related party acts to the the enterprise party, such as power of attorney,
  beneficiary designations, etc.
  """
  enterprisePartyRelationships(limit: Int, offset: Int, order_by: [Enterprise_EnterprisePartyRelationshipsOrderByExp!], where: Enterprise_EnterprisePartyRelationshipsBoolExp): [Enterprise_EnterprisePartyRelationships!]
  enterprisePartyRelationshipsAggregate(filter_input: Enterprise_EnterprisePartyRelationshipsFilterInput): Enterprise_EnterprisePartyRelationshipsAggExp

  """
  Selects a single object from the model. Model description: Defines the role of
  related party acts to the the enterprise party, such as power of attorney,
  beneficiary designations, etc.
  """
  enterprisePartyRelationshipsByEnterprisePartyRelationshipId(enterprisePartyRelationshipId: Enterprise_Int4!): Enterprise_EnterprisePartyRelationships

  """
  Selects multiple objects from the model. Model description: Defines all
  possible permission types that can be granted in the system
  """
  enterprisePermissions(limit: Int, offset: Int, order_by: [Enterprise_EnterprisePermissionsOrderByExp!], where: Enterprise_EnterprisePermissionsBoolExp): [Enterprise_EnterprisePermissions!]
  enterprisePermissionsAggregate(filter_input: Enterprise_EnterprisePermissionsFilterInput): Enterprise_EnterprisePermissionsAggExp

  """
  Selects a single object from the model. Model description: Defines all
  possible permission types that can be granted in the system
  """
  enterprisePermissionsByEnterprisePermissionId(enterprisePermissionId: Enterprise_Int4!): Enterprise_EnterprisePermissions

  """
  Selects multiple objects from the model. Model description: Junction table
  linking mortgage applications to borrowers, supporting multiple borrowers per
  application and tracking their roles and relationships
  """
  mortgageServicesApplicationBorrowers(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesApplicationBorrowersOrderByExp!], where: MortgageServices_MortgageServicesApplicationBorrowersBoolExp): [MortgageServices_MortgageServicesApplicationBorrowers!]
  mortgageServicesApplicationBorrowersAggregate(filter_input: MortgageServices_MortgageServicesApplicationBorrowersFilterInput): MortgageServices_MortgageServicesApplicationBorrowersAggExp

  """
  Selects a single object from the model. Model description: Junction table
  linking mortgage applications to borrowers, supporting multiple borrowers per
  application and tracking their roles and relationships
  """
  mortgageServicesApplicationBorrowersByApplicationBorrowersPkey(mortgageServicesApplicationBorrowerId: MortgageServices_Int4!, mortgageServicesApplicationId: MortgageServices_Int4!): MortgageServices_MortgageServicesApplicationBorrowers

  """
  Selects multiple objects from the model. Model description: Stores mortgage
  application details and tracks application status. Note that the primary
  borrower is accessible through the application_borrowers table, not directly
  from this table.
  """
  mortgageServicesApplications(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesApplicationsOrderByExp!], where: MortgageServices_MortgageServicesApplicationsBoolExp): [MortgageServices_MortgageServicesApplications!]
  mortgageServicesApplicationsAggregate(filter_input: MortgageServices_MortgageServicesApplicationsFilterInput): MortgageServices_MortgageServicesApplicationsAggExp

  """
  Selects a single object from the model. Model description: Stores mortgage
  application details and tracks application status. Note that the primary
  borrower is accessible through the application_borrowers table, not directly
  from this table.
  """
  mortgageServicesApplicationsByMortgageServicesApplicationId(mortgageServicesApplicationId: MortgageServices_Int4!): MortgageServices_MortgageServicesApplications

  """
  Selects multiple objects from the model. Model description: Manages property appraisals for mortgage loans
  """
  mortgageServicesAppraisals(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesAppraisalsOrderByExp!], where: MortgageServices_MortgageServicesAppraisalsBoolExp): [MortgageServices_MortgageServicesAppraisals!]
  mortgageServicesAppraisalsAggregate(filter_input: MortgageServices_MortgageServicesAppraisalsFilterInput): MortgageServices_MortgageServicesAppraisalsAggExp

  """
  Selects a single object from the model. Model description: Manages property appraisals for mortgage loans
  """
  mortgageServicesAppraisalsByMortgageServicesAppraisalId(mortgageServicesAppraisalId: MortgageServices_Int4!): MortgageServices_MortgageServicesAppraisals

  """
  Selects multiple objects from the model. Model description: Tracks assets
  owned by borrowers that may be relevant to mortgage qualification
  """
  mortgageServicesBorrowerAssets(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesBorrowerAssetsOrderByExp!], where: MortgageServices_MortgageServicesBorrowerAssetsBoolExp): [MortgageServices_MortgageServicesBorrowerAssets!]
  mortgageServicesBorrowerAssetsAggregate(filter_input: MortgageServices_MortgageServicesBorrowerAssetsFilterInput): MortgageServices_MortgageServicesBorrowerAssetsAggExp

  """
  Selects a single object from the model. Model description: Tracks assets owned
  by borrowers that may be relevant to mortgage qualification
  """
  mortgageServicesBorrowerAssetsByMortgageServicesAssetId(mortgageServicesAssetId: MortgageServices_Int4!): MortgageServices_MortgageServicesBorrowerAssets

  """
  Selects multiple objects from the model. Model description: Tracks employment
  history and income sources for mortgage borrowers
  """
  mortgageServicesBorrowerEmployments(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesBorrowerEmploymentsOrderByExp!], where: MortgageServices_MortgageServicesBorrowerEmploymentsBoolExp): [MortgageServices_MortgageServicesBorrowerEmployments!]
  mortgageServicesBorrowerEmploymentsAggregate(filter_input: MortgageServices_MortgageServicesBorrowerEmploymentsFilterInput): MortgageServices_MortgageServicesBorrowerEmploymentsAggExp

  """
  Selects a single object from the model. Model description: Tracks employment
  history and income sources for mortgage borrowers
  """
  mortgageServicesBorrowerEmploymentsByMortgageServicesEmploymentId(mortgageServicesEmploymentId: MortgageServices_Int4!): MortgageServices_MortgageServicesBorrowerEmployments

  """
  Selects multiple objects from the model. Model description: Tracks various
  income sources for mortgage borrowers beyond employment
  """
  mortgageServicesBorrowerIncomes(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesBorrowerIncomesOrderByExp!], where: MortgageServices_MortgageServicesBorrowerIncomesBoolExp): [MortgageServices_MortgageServicesBorrowerIncomes!]
  mortgageServicesBorrowerIncomesAggregate(filter_input: MortgageServices_MortgageServicesBorrowerIncomesFilterInput): MortgageServices_MortgageServicesBorrowerIncomesAggExp

  """
  Selects a single object from the model. Model description: Tracks various
  income sources for mortgage borrowers beyond employment
  """
  mortgageServicesBorrowerIncomesByMortgageServicesIncomeId(mortgageServicesIncomeId: MortgageServices_Int4!): MortgageServices_MortgageServicesBorrowerIncomes

  """
  Selects multiple objects from the model. Model description: Tracks debts and financial obligations of mortgage borrowers
  """
  mortgageServicesBorrowerLiabilities(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesBorrowerLiabilitiesOrderByExp!], where: MortgageServices_MortgageServicesBorrowerLiabilitiesBoolExp): [MortgageServices_MortgageServicesBorrowerLiabilities!]
  mortgageServicesBorrowerLiabilitiesAggregate(filter_input: MortgageServices_MortgageServicesBorrowerLiabilitiesFilterInput): MortgageServices_MortgageServicesBorrowerLiabilitiesAggExp

  """
  Selects a single object from the model. Model description: Tracks debts and financial obligations of mortgage borrowers
  """
  mortgageServicesBorrowerLiabilitiesByMortgageServicesLiabilityId(mortgageServicesLiabilityId: MortgageServices_Int4!): MortgageServices_MortgageServicesBorrowerLiabilities

  """
  Selects multiple objects from the model. Model description: Stores
  mortgage-specific information about borrowers, note additional personal
  information stored in the enterprise parties table
  """
  mortgageServicesBorrowers(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesBorrowersOrderByExp!], where: MortgageServices_MortgageServicesBorrowersBoolExp): [MortgageServices_MortgageServicesBorrowers!]
  mortgageServicesBorrowersAggregate(filter_input: MortgageServices_MortgageServicesBorrowersFilterInput): MortgageServices_MortgageServicesBorrowersAggExp

  """
  Selects a single object from the model. Model description: Stores
  mortgage-specific information about borrowers, note additional personal
  information stored in the enterprise parties table
  """
  mortgageServicesBorrowersByMortgageServicesBorrowerId(mortgageServicesBorrowerId: MortgageServices_Int4!): MortgageServices_MortgageServicesBorrowers

  """
  Selects multiple objects from the model. Model description: Records final details of closed mortgage loans
  """
  mortgageServicesClosedLoans(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesClosedLoansOrderByExp!], where: MortgageServices_MortgageServicesClosedLoansBoolExp): [MortgageServices_MortgageServicesClosedLoans!]
  mortgageServicesClosedLoansAggregate(filter_input: MortgageServices_MortgageServicesClosedLoansFilterInput): MortgageServices_MortgageServicesClosedLoansAggExp

  """
  Selects a single object from the model. Model description: Records final details of closed mortgage loans
  """
  mortgageServicesClosedLoansByMortgageServicesClosedLoanId(mortgageServicesClosedLoanId: MortgageServices_Int4!): MortgageServices_MortgageServicesClosedLoans

  """
  Selects multiple objects from the model. Model description: Schedules and tracks mortgage closing appointments
  """
  mortgageServicesClosingAppointments(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesClosingAppointmentsOrderByExp!], where: MortgageServices_MortgageServicesClosingAppointmentsBoolExp): [MortgageServices_MortgageServicesClosingAppointments!]
  mortgageServicesClosingAppointmentsAggregate(filter_input: MortgageServices_MortgageServicesClosingAppointmentsFilterInput): MortgageServices_MortgageServicesClosingAppointmentsAggExp

  """
  Selects a single object from the model. Model description: Schedules and tracks mortgage closing appointments
  """
  mortgageServicesClosingAppointmentsByMortgageServicesAppointmentId(mortgageServicesAppointmentId: MortgageServices_Int4!): MortgageServices_MortgageServicesClosingAppointments

  """
  Selects multiple objects from the model. Model description: Manages closing disclosure documents required by regulations
  """
  mortgageServicesClosingDisclosures(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesClosingDisclosuresOrderByExp!], where: MortgageServices_MortgageServicesClosingDisclosuresBoolExp): [MortgageServices_MortgageServicesClosingDisclosures!]
  mortgageServicesClosingDisclosuresAggregate(filter_input: MortgageServices_MortgageServicesClosingDisclosuresFilterInput): MortgageServices_MortgageServicesClosingDisclosuresAggExp

  """
  Selects a single object from the model. Model description: Manages closing disclosure documents required by regulations
  """
  mortgageServicesClosingDisclosuresByMortgageServicesDisclosureId(mortgageServicesDisclosureId: MortgageServices_Int4!): MortgageServices_MortgageServicesClosingDisclosures

  """
  Selects multiple objects from the model. Model description: Tracks
  underwriting conditions that must be cleared for loan approval
  """
  mortgageServicesConditions(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesConditionsOrderByExp!], where: MortgageServices_MortgageServicesConditionsBoolExp): [MortgageServices_MortgageServicesConditions!]
  mortgageServicesConditionsAggregate(filter_input: MortgageServices_MortgageServicesConditionsFilterInput): MortgageServices_MortgageServicesConditionsAggExp

  """
  Selects a single object from the model. Model description: Tracks underwriting
  conditions that must be cleared for loan approval
  """
  mortgageServicesConditionsByMortgageServicesConditionId(mortgageServicesConditionId: MortgageServices_Int4!): MortgageServices_MortgageServicesConditions

  """
  Selects multiple objects from the model. Model description: Tracks credit reports pulled for mortgage applications
  """
  mortgageServicesCreditReports(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesCreditReportsOrderByExp!], where: MortgageServices_MortgageServicesCreditReportsBoolExp): [MortgageServices_MortgageServicesCreditReports!]
  mortgageServicesCreditReportsAggregate(filter_input: MortgageServices_MortgageServicesCreditReportsFilterInput): MortgageServices_MortgageServicesCreditReportsAggExp

  """
  Selects a single object from the model. Model description: Tracks credit reports pulled for mortgage applications
  """
  mortgageServicesCreditReportsByMortgageServicesCreditReportId(mortgageServicesCreditReportId: MortgageServices_Int4!): MortgageServices_MortgageServicesCreditReports

  """
  Selects multiple objects from the model. Model description: Tracks all
  communications with customers throughout application and servicing
  """
  mortgageServicesCustomerCommunications(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesCustomerCommunicationsOrderByExp!], where: MortgageServices_MortgageServicesCustomerCommunicationsBoolExp): [MortgageServices_MortgageServicesCustomerCommunications!]
  mortgageServicesCustomerCommunicationsAggregate(filter_input: MortgageServices_MortgageServicesCustomerCommunicationsFilterInput): MortgageServices_MortgageServicesCustomerCommunicationsAggExp

  """
  Selects a single object from the model. Model description: Tracks all
  communications with customers throughout application and servicing
  """
  mortgageServicesCustomerCommunicationsByMortgageServicesCommunicationId(mortgageServicesCommunicationId: MortgageServices_Int4!): MortgageServices_MortgageServicesCustomerCommunications

  """
  Selects multiple objects from the model. Model description: Stores and tracks
  documents submitted for mortgage applications
  """
  mortgageServicesDocuments(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesDocumentsOrderByExp!], where: MortgageServices_MortgageServicesDocumentsBoolExp): [MortgageServices_MortgageServicesDocuments!]
  mortgageServicesDocumentsAggregate(filter_input: MortgageServices_MortgageServicesDocumentsFilterInput): MortgageServices_MortgageServicesDocumentsAggExp

  """
  Selects a single object from the model. Model description: Stores and tracks documents submitted for mortgage applications
  """
  mortgageServicesDocumentsByMortgageServicesDocumentId(mortgageServicesDocumentId: MortgageServices_Int4!): MortgageServices_MortgageServicesDocuments

  """
  Selects multiple objects from the model. Model description: Records periodic
  analyses of escrow accounts to determine payment adjustments
  """
  mortgageServicesEscrowAnalyses(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesEscrowAnalysesOrderByExp!], where: MortgageServices_MortgageServicesEscrowAnalysesBoolExp): [MortgageServices_MortgageServicesEscrowAnalyses!]
  mortgageServicesEscrowAnalysesAggregate(filter_input: MortgageServices_MortgageServicesEscrowAnalysesFilterInput): MortgageServices_MortgageServicesEscrowAnalysesAggExp

  """
  Selects a single object from the model. Model description: Records periodic
  analyses of escrow accounts to determine payment adjustments
  """
  mortgageServicesEscrowAnalysesByMortgageServicesAnalysisId(mortgageServicesAnalysisId: MortgageServices_Int4!): MortgageServices_MortgageServicesEscrowAnalyses

  """
  Selects multiple objects from the model. Model description: Tracks payments
  made from escrow accounts for taxes, insurance, etc.
  """
  mortgageServicesEscrowDisbursements(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesEscrowDisbursementsOrderByExp!], where: MortgageServices_MortgageServicesEscrowDisbursementsBoolExp): [MortgageServices_MortgageServicesEscrowDisbursements!]
  mortgageServicesEscrowDisbursementsAggregate(filter_input: MortgageServices_MortgageServicesEscrowDisbursementsFilterInput): MortgageServices_MortgageServicesEscrowDisbursementsAggExp

  """
  Selects a single object from the model. Model description: Tracks payments
  made from escrow accounts for taxes, insurance, etc.
  """
  mortgageServicesEscrowDisbursementsByMortgageServicesDisbursementId(mortgageServicesDisbursementId: MortgageServices_Int4!): MortgageServices_MortgageServicesEscrowDisbursements

  """
  Selects multiple objects from the model. Model description: Stores demographic
  information about applicants for HMDA reporting
  """
  mortgageServicesHmdaApplicantDemographics(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesHmdaApplicantDemographicsOrderByExp!], where: MortgageServices_MortgageServicesHmdaApplicantDemographicsBoolExp): [MortgageServices_MortgageServicesHmdaApplicantDemographics!]
  mortgageServicesHmdaApplicantDemographicsAggregate(filter_input: MortgageServices_MortgageServicesHmdaApplicantDemographicsFilterInput): MortgageServices_MortgageServicesHmdaApplicantDemographicsAggExp

  """
  Selects a single object from the model. Model description: Stores demographic
  information about applicants for HMDA reporting
  """
  mortgageServicesHmdaApplicantDemographicsByMortgageServicesApplicantDemographicsId(mortgageServicesApplicantDemographicsId: MortgageServices_Int4!): MortgageServices_MortgageServicesHmdaApplicantDemographics

  """
  Selects multiple objects from the model. Model description: Tracks validation issues with HMDA data and their resolution
  """
  mortgageServicesHmdaEdits(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesHmdaEditsOrderByExp!], where: MortgageServices_MortgageServicesHmdaEditsBoolExp): [MortgageServices_MortgageServicesHmdaEdits!]
  mortgageServicesHmdaEditsAggregate(filter_input: MortgageServices_MortgageServicesHmdaEditsFilterInput): MortgageServices_MortgageServicesHmdaEditsAggExp

  """
  Selects a single object from the model. Model description: Tracks validation issues with HMDA data and their resolution
  """
  mortgageServicesHmdaEditsByMortgageServicesEditId(mortgageServicesEditId: MortgageServices_Int4!): MortgageServices_MortgageServicesHmdaEdits

  """
  Selects multiple objects from the model. Model description: Stores data
  required for Home Mortgage Disclosure Act (HMDA) regulatory reporting
  """
  mortgageServicesHmdaRecords(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesHmdaRecordsOrderByExp!], where: MortgageServices_MortgageServicesHmdaRecordsBoolExp): [MortgageServices_MortgageServicesHmdaRecords!]
  mortgageServicesHmdaRecordsAggregate(filter_input: MortgageServices_MortgageServicesHmdaRecordsFilterInput): MortgageServices_MortgageServicesHmdaRecordsAggExp

  """
  Selects a single object from the model. Model description: Stores data
  required for Home Mortgage Disclosure Act (HMDA) regulatory reporting
  """
  mortgageServicesHmdaRecordsByMortgageServicesHmdaRecordId(mortgageServicesHmdaRecordId: MortgageServices_Int4!): MortgageServices_MortgageServicesHmdaRecords

  """
  Selects multiple objects from the model. Model description: Tracks submissions of HMDA data to regulatory agencies
  """
  mortgageServicesHmdaSubmissions(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesHmdaSubmissionsOrderByExp!], where: MortgageServices_MortgageServicesHmdaSubmissionsBoolExp): [MortgageServices_MortgageServicesHmdaSubmissions!]
  mortgageServicesHmdaSubmissionsAggregate(filter_input: MortgageServices_MortgageServicesHmdaSubmissionsFilterInput): MortgageServices_MortgageServicesHmdaSubmissionsAggExp

  """
  Selects a single object from the model. Model description: Tracks submissions of HMDA data to regulatory agencies
  """
  mortgageServicesHmdaSubmissionsByMortgageServicesSubmissionId(mortgageServicesSubmissionId: MortgageServices_Int4!): MortgageServices_MortgageServicesHmdaSubmissions

  """
  Selects multiple objects from the model. Model description: Tracks insurance policies protecting mortgaged properties
  """
  mortgageServicesInsurancePolicies(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesInsurancePoliciesOrderByExp!], where: MortgageServices_MortgageServicesInsurancePoliciesBoolExp): [MortgageServices_MortgageServicesInsurancePolicies!]
  mortgageServicesInsurancePoliciesAggregate(filter_input: MortgageServices_MortgageServicesInsurancePoliciesFilterInput): MortgageServices_MortgageServicesInsurancePoliciesAggExp

  """
  Selects a single object from the model. Model description: Tracks insurance policies protecting mortgaged properties
  """
  mortgageServicesInsurancePoliciesByMortgageServicesPolicyId(mortgageServicesPolicyId: MortgageServices_Int4!): MortgageServices_MortgageServicesInsurancePolicies

  """
  Selects multiple objects from the model. Model description: Tracks
  modifications made to existing loan accounts, such as changes to interest
  rates, terms, or principal balance.
  """
  mortgageServicesLoanModifications(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesLoanModificationsOrderByExp!], where: MortgageServices_MortgageServicesLoanModificationsBoolExp): [MortgageServices_MortgageServicesLoanModifications!]
  mortgageServicesLoanModificationsAggregate(filter_input: MortgageServices_MortgageServicesLoanModificationsFilterInput): MortgageServices_MortgageServicesLoanModificationsAggExp

  """
  Selects a single object from the model. Model description: Tracks
  modifications made to existing loan accounts, such as changes to interest
  rates, terms, or principal balance.
  """
  mortgageServicesLoanModificationsByMortgageServicesModificationId(mortgageServicesModificationId: MortgageServices_Int4!): MortgageServices_MortgageServicesLoanModifications

  """
  Selects multiple objects from the model. Model description: Defines mortgage loan products available to applicants
  """
  mortgageServicesLoanProducts(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesLoanProductsOrderByExp!], where: MortgageServices_MortgageServicesLoanProductsBoolExp): [MortgageServices_MortgageServicesLoanProducts!]
  mortgageServicesLoanProductsAggregate(filter_input: MortgageServices_MortgageServicesLoanProductsFilterInput): MortgageServices_MortgageServicesLoanProductsAggExp

  """
  Selects a single object from the model. Model description: Defines mortgage loan products available to applicants
  """
  mortgageServicesLoanProductsByMortgageServicesLoanProductId(mortgageServicesLoanProductId: MortgageServices_Int4!): MortgageServices_MortgageServicesLoanProducts

  """
  Selects multiple objects from the model. Model description: Tracks interest rate locks for mortgage loans
  """
  mortgageServicesLoanRateLocks(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesLoanRateLocksOrderByExp!], where: MortgageServices_MortgageServicesLoanRateLocksBoolExp): [MortgageServices_MortgageServicesLoanRateLocks!]
  mortgageServicesLoanRateLocksAggregate(filter_input: MortgageServices_MortgageServicesLoanRateLocksFilterInput): MortgageServices_MortgageServicesLoanRateLocksAggExp

  """
  Selects a single object from the model. Model description: Tracks interest rate locks for mortgage loans
  """
  mortgageServicesLoanRateLocksByMortgageServicesRateLockId(mortgageServicesRateLockId: MortgageServices_Int4!): MortgageServices_MortgageServicesLoanRateLocks

  """
  Selects multiple objects from the model. Model description: Stores final,
  actual loan details after closing. Now includes reference to enterprise account.
  """
  mortgageServicesLoans(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesLoansOrderByExp!], where: MortgageServices_MortgageServicesLoansBoolExp): [MortgageServices_MortgageServicesLoans!]
  mortgageServicesLoansAggregate(filter_input: MortgageServices_MortgageServicesLoansFilterInput): MortgageServices_MortgageServicesLoansAggExp

  """
  Selects a single object from the model. Model description: Stores final,
  actual loan details after closing. Now includes reference to enterprise account.
  """
  mortgageServicesLoansByMortgageServicesLoanId(mortgageServicesLoanId: MortgageServices_Int4!): MortgageServices_MortgageServicesLoans

  """
  Selects multiple objects from the model. Model description: Tracks mortgage loan payments made by borrowers
  """
  mortgageServicesPayments(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesPaymentsOrderByExp!], where: MortgageServices_MortgageServicesPaymentsBoolExp): [MortgageServices_MortgageServicesPayments!]
  mortgageServicesPaymentsAggregate(filter_input: MortgageServices_MortgageServicesPaymentsFilterInput): MortgageServices_MortgageServicesPaymentsAggExp

  """
  Selects a single object from the model. Model description: Tracks mortgage loan payments made by borrowers
  """
  mortgageServicesPaymentsByMortgageServicesPaymentId(mortgageServicesPaymentId: MortgageServices_Int4!): MortgageServices_MortgageServicesPayments

  """
  Selects multiple objects from the model. Model description: Stores information
  about properties being purchased or refinanced
  """
  mortgageServicesProperties(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesPropertiesOrderByExp!], where: MortgageServices_MortgageServicesPropertiesBoolExp): [MortgageServices_MortgageServicesProperties!]
  mortgageServicesPropertiesAggregate(filter_input: MortgageServices_MortgageServicesPropertiesFilterInput): MortgageServices_MortgageServicesPropertiesAggExp

  """
  Selects a single object from the model. Model description: Stores information
  about properties being purchased or refinanced
  """
  mortgageServicesPropertiesByMortgageServicesPropertyId(mortgageServicesPropertyId: MortgageServices_Int4!): MortgageServices_MortgageServicesProperties

  """
  Selects multiple objects from the model. Model description: Manages ongoing servicing of closed mortgage loans
  """
  mortgageServicesServicingAccounts(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesServicingAccountsOrderByExp!], where: MortgageServices_MortgageServicesServicingAccountsBoolExp): [MortgageServices_MortgageServicesServicingAccounts!]
  mortgageServicesServicingAccountsAggregate(filter_input: MortgageServices_MortgageServicesServicingAccountsFilterInput): MortgageServices_MortgageServicesServicingAccountsAggExp

  """
  Selects a single object from the model. Model description: Manages ongoing servicing of closed mortgage loans
  """
  mortgageServicesServicingAccountsByMortgageServicesServicingAccountId(mortgageServicesServicingAccountId: MortgageServices_Int4!): MortgageServices_MortgageServicesServicingAccounts

  """
  Selects multiple objects from the model. Model description: Table storing
  information about user accounts across various systems.
  """
  securityAccounts(limit: Int, offset: Int, order_by: [Security_SecurityAccountsOrderByExp!], where: Security_SecurityAccountsBoolExp): [Security_SecurityAccounts!]
  securityAccountsAggregate(filter_input: Security_SecurityAccountsFilterInput): Security_SecurityAccountsAggExp

  """
  Selects a single object from the model. Model description: Table storing
  information about user accounts across various systems.
  """
  securityAccountsBySecurityAccountId(securityAccountId: Security_Uuid!): Security_SecurityAccounts

  """
  Selects multiple objects from the model. Model description: Stores Common
  Platform Enumeration (CPE) information associated with CVEs.
  """
  securityCpe(limit: Int, offset: Int, order_by: [Security_SecurityCpeOrderByExp!], where: Security_SecurityCpeBoolExp): [Security_SecurityCpe!]
  securityCpeAggregate(filter_input: Security_SecurityCpeFilterInput): Security_SecurityCpeAggExp

  """
  Selects multiple objects from the model. Model description: Stores problem descriptions associated with CVEs.
  """
  securityCveProblem(limit: Int, offset: Int, order_by: [Security_SecurityCveProblemOrderByExp!], where: Security_SecurityCveProblemBoolExp): [Security_SecurityCveProblem!]
  securityCveProblemAggregate(filter_input: Security_SecurityCveProblemFilterInput): Security_SecurityCveProblemAggExp

  """
  Selects multiple objects from the model. Model description: Stores Common
  Vulnerability Scoring System (CVSS) metrics for CVEs, including both CVSS v2 and v3.
  """
  securityCvss(limit: Int, offset: Int, order_by: [Security_SecurityCvssOrderByExp!], where: Security_SecurityCvssBoolExp): [Security_SecurityCvss!]
  securityCvssAggregate(filter_input: Security_SecurityCvssFilterInput): Security_SecurityCvssAggExp

  """
  Selects a single object from the model. Model description: Stores Common
  Vulnerability Scoring System (CVSS) metrics for CVEs, including both CVSS v2 and v3.
  """
  securityCvssByCve(cve: Security_Varchar!): Security_SecurityCvss

  """
  Selects multiple objects from the model. Model description: Stores Common Weakness Enumeration (CWE) information.
  """
  securityCwe(limit: Int, offset: Int, order_by: [Security_SecurityCweOrderByExp!], where: Security_SecurityCweBoolExp): [Security_SecurityCwe!]
  securityCweAggregate(filter_input: Security_SecurityCweFilterInput): Security_SecurityCweAggExp

  """
  Selects a single object from the model. Model description: Stores Common Weakness Enumeration (CWE) information.
  """
  securityCweByCweId(cweId: Security_Int4!): Security_SecurityCwe

  """
  Selects multiple objects from the model. Model description: Table storing information about network devices.
  """
  securityDevices(limit: Int, offset: Int, order_by: [Security_SecurityDevicesOrderByExp!], where: Security_SecurityDevicesBoolExp): [Security_SecurityDevices!]
  securityDevicesAggregate(filter_input: Security_SecurityDevicesFilterInput): Security_SecurityDevicesAggExp

  """
  Selects a single object from the model. Model description: Table storing information about network devices.
  """
  securityDevicesBySecurityDeviceId(securityDeviceId: Security_Inet!): Security_SecurityDevices

  """
  Selects multiple objects from the model. Model description: Defines granular entitlements that can be granted to roles
  """
  securityEnhancedEntitlements(limit: Int, offset: Int, order_by: [Security_SecurityEnhancedEntitlementsOrderByExp!], where: Security_SecurityEnhancedEntitlementsBoolExp): [Security_SecurityEnhancedEntitlements!]
  securityEnhancedEntitlementsAggregate(filter_input: Security_SecurityEnhancedEntitlementsFilterInput): Security_SecurityEnhancedEntitlementsAggExp

  """
  Selects a single object from the model. Model description: Defines granular entitlements that can be granted to roles
  """
  securityEnhancedEntitlementsBySecurityEntitlementId(securityEntitlementId: Security_Uuid!): Security_SecurityEnhancedEntitlements

  """
  Selects multiple objects from the model. Model description: Maps entitlements
  to resources with specific permission types and contexts
  """
  securityEntitlementResources(limit: Int, offset: Int, order_by: [Security_SecurityEntitlementResourcesOrderByExp!], where: Security_SecurityEntitlementResourcesBoolExp): [Security_SecurityEntitlementResources!]
  securityEntitlementResourcesAggregate(filter_input: Security_SecurityEntitlementResourcesFilterInput): Security_SecurityEntitlementResourcesAggExp

  """
  Selects a single object from the model. Model description: Maps entitlements
  to resources with specific permission types and contexts
  """
  securityEntitlementResourcesBySecurityEntitlementResourceId(securityEntitlementResourceId: Security_Uuid!): Security_SecurityEntitlementResources

  """
  Selects multiple objects from the model. Model description: Table storing
  information about file access events, tracking file usage and access patterns.
  """
  securityFileAccesses(limit: Int, offset: Int, order_by: [Security_SecurityFileAccessesOrderByExp!], where: Security_SecurityFileAccessesBoolExp): [Security_SecurityFileAccesses!]
  securityFileAccessesAggregate(filter_input: Security_SecurityFileAccessesFilterInput): Security_SecurityFileAccessesAggExp

  """
  Selects a single object from the model. Model description: Table storing
  information about file access events, tracking file usage and access patterns.
  """
  securityFileAccessesBySecurityFileAccessId(securityFileAccessId: Security_Uuid!): Security_SecurityFileAccesses

  """
  Selects multiple objects from the model. Model description: Table storing
  information about file threats, linking file hashes to threat levels and descriptions.
  """
  securityFileThreats(limit: Int, offset: Int, order_by: [Security_SecurityFileThreatsOrderByExp!], where: Security_SecurityFileThreatsBoolExp): [Security_SecurityFileThreats!]
  securityFileThreatsAggregate(filter_input: Security_SecurityFileThreatsFilterInput): Security_SecurityFileThreatsAggExp

  """
  Selects a single object from the model. Model description: Table storing
  information about file threats, linking file hashes to threat levels and descriptions.
  """
  securityFileThreatsBySecurityFileThreatHash(securityFileThreatHash: Security_Varchar!): Security_SecurityFileThreats

  """
  Selects multiple objects from the model. Model description: Table storing
  information about files on systems, including file paths, hashes, and sizes.
  """
  securityFiles(limit: Int, offset: Int, order_by: [Security_SecurityFilesOrderByExp!], where: Security_SecurityFilesBoolExp): [Security_SecurityFiles!]
  securityFilesAggregate(filter_input: Security_SecurityFilesFilterInput): Security_SecurityFilesAggExp

  """
  Selects a single object from the model. Model description: Table storing
  information about files on systems, including file paths, hashes, and sizes.
  """
  securityFilesBySecurityFileId(securityFileId: Security_Uuid!): Security_SecurityFiles

  """
  Selects multiple objects from the model. Model description: Table storing
  information about governance groups, used for managing access and permissions.
  """
  securityGovernanceGroups(limit: Int, offset: Int, order_by: [Security_SecurityGovernanceGroupsOrderByExp!], where: Security_SecurityGovernanceGroupsBoolExp): [Security_SecurityGovernanceGroups!]
  securityGovernanceGroupsAggregate(filter_input: Security_SecurityGovernanceGroupsFilterInput): Security_SecurityGovernanceGroupsAggExp

  """
  Selects a single object from the model. Model description: Table storing
  information about governance groups, used for managing access and permissions.
  """
  securityGovernanceGroupsBySecurityGovernanceGroupId(securityGovernanceGroupId: Security_Uuid!): Security_SecurityGovernanceGroups

  """
  Selects multiple objects from the model. Model description: Table storing
  information about systems, including hardware, software, and status details.
  """
  securityHosts(limit: Int, offset: Int, order_by: [Security_SecurityHostsOrderByExp!], where: Security_SecurityHostsBoolExp): [Security_SecurityHosts!]
  securityHostsAggregate(filter_input: Security_SecurityHostsFilterInput): Security_SecurityHostsAggExp

  """
  Selects a single object from the model. Model description: Table storing
  information about systems, including hardware, software, and status details.
  """
  securityHostsBySecurityHostId(securityHostId: Security_Uuid!): Security_SecurityHosts

  """
  Selects multiple objects from the model. Model description: Table storing
  information about IAM logins, tracking user access via accounts.
  """
  securityIamLogins(limit: Int, offset: Int, order_by: [Security_SecurityIamLoginsOrderByExp!], where: Security_SecurityIamLoginsBoolExp): [Security_SecurityIamLogins!]
  securityIamLoginsAggregate(filter_input: Security_SecurityIamLoginsFilterInput): Security_SecurityIamLoginsAggExp

  """
  Selects a single object from the model. Model description: Table storing
  information about IAM logins, tracking user access via accounts.
  """
  securityIamLoginsBySecurityLoginId(securityLoginId: Security_Uuid!): Security_SecurityIamLogins

  """
  Selects multiple objects from the model. Model description: Table storing
  information about user identities, representing individuals or entities.
  """
  securityIdentities(limit: Int, offset: Int, order_by: [Security_SecurityIdentitiesOrderByExp!], where: Security_SecurityIdentitiesBoolExp): [Security_SecurityIdentities!]
  securityIdentitiesAggregate(filter_input: Security_SecurityIdentitiesFilterInput): Security_SecurityIdentitiesAggExp

  """
  Selects a single object from the model. Model description: Table storing
  information about user identities, representing individuals or entities.
  """
  securityIdentitiesBySecurityIdentityId(securityIdentityId: Security_Uuid!): Security_SecurityIdentities

  """
  Selects multiple objects from the model. Model description: Table storing
  information about identity profiles, defining sets of attributes and rules for identities.
  """
  securityIdentityProfiles(limit: Int, offset: Int, order_by: [Security_SecurityIdentityProfilesOrderByExp!], where: Security_SecurityIdentityProfilesBoolExp): [Security_SecurityIdentityProfiles!]
  securityIdentityProfilesAggregate(filter_input: Security_SecurityIdentityProfilesFilterInput): Security_SecurityIdentityProfilesAggExp

  """
  Selects a single object from the model. Model description: Table storing
  information about identity profiles, defining sets of attributes and rules for identities.
  """
  securityIdentityProfilesBySecurityIdentityProfileId(securityIdentityProfileId: Security_Uuid!): Security_SecurityIdentityProfiles

  """
  Selects multiple objects from the model. Model description: Associates identities with roles
  """
  securityIdentityRoles(limit: Int, offset: Int, order_by: [Security_SecurityIdentityRolesOrderByExp!], where: Security_SecurityIdentityRolesBoolExp): [Security_SecurityIdentityRoles!]
  securityIdentityRolesAggregate(filter_input: Security_SecurityIdentityRolesFilterInput): Security_SecurityIdentityRolesAggExp

  """
  Selects a single object from the model. Model description: Associates identities with roles
  """
  securityIdentityRolesBySecurityIdentityRoleId(securityIdentityRoleId: Security_Uuid!): Security_SecurityIdentityRoles

  """
  Selects multiple objects from the model. Model description: Table storing
  information about installed applications on servers, tracking software installations.
  """
  securityInstalledApplications(limit: Int, offset: Int, order_by: [Security_SecurityInstalledApplicationsOrderByExp!], where: Security_SecurityInstalledApplicationsBoolExp): [Security_SecurityInstalledApplications!]
  securityInstalledApplicationsAggregate(filter_input: Security_SecurityInstalledApplicationsFilterInput): Security_SecurityInstalledApplicationsAggExp

  """
  Selects a single object from the model. Model description: Table storing
  information about installed applications on servers, tracking software installations.
  """
  securityInstalledApplicationsByInstalledApplicationsPkey(appMgmtApplicationId: Security_Uuid!, securityHostId: Security_Uuid!): Security_SecurityInstalledApplications

  """
  Selects multiple objects from the model. Model description: Table storing
  information about network connections, tracking network traffic and activity.
  """
  securityNetworkConnections(limit: Int, offset: Int, order_by: [Security_SecurityNetworkConnectionsOrderByExp!], where: Security_SecurityNetworkConnectionsBoolExp): [Security_SecurityNetworkConnections!]
  securityNetworkConnectionsAggregate(filter_input: Security_SecurityNetworkConnectionsFilterInput): Security_SecurityNetworkConnectionsAggExp

  """
  Selects a single object from the model. Model description: Table storing
  information about network connections, tracking network traffic and activity.
  """
  securityNetworkConnectionsBySecurityNetworkConnectionId(securityNetworkConnectionId: Security_Uuid!): Security_SecurityNetworkConnections

  """
  Selects multiple objects from the model. Model description: Table storing
  detailed information about network events for security monitoring and analysis.
  """
  securityNetworkEvents(limit: Int, offset: Int, order_by: [Security_SecurityNetworkEventsOrderByExp!], where: Security_SecurityNetworkEventsBoolExp): [Security_SecurityNetworkEvents!]
  securityNetworkEventsAggregate(filter_input: Security_SecurityNetworkEventsFilterInput): Security_SecurityNetworkEventsAggExp

  """
  Selects a single object from the model. Model description: Table storing
  detailed information about network events for security monitoring and analysis.
  """
  securityNetworkEventsBySecurityNetworkEventId(securityNetworkEventId: Security_Int8!): Security_SecurityNetworkEvents

  """
  Selects multiple objects from the model. Model description: Table storing
  information about open ports on systems, tracking network services and
  potential vulnerabilities.
  """
  securityOpenPorts(limit: Int, offset: Int, order_by: [Security_SecurityOpenPortsOrderByExp!], where: Security_SecurityOpenPortsBoolExp): [Security_SecurityOpenPorts!]
  securityOpenPortsAggregate(filter_input: Security_SecurityOpenPortsFilterInput): Security_SecurityOpenPortsAggExp

  """
  Selects a single object from the model. Model description: Table storing
  information about open ports on systems, tracking network services and
  potential vulnerabilities.
  """
  securityOpenPortsByOpenPortsPkey(portNumber: Security_Int4!, protocol: Security_SecurityNetworkProtocols!, securityHostId: Security_Uuid!): Security_SecurityOpenPorts

  """
  Selects multiple objects from the model. Model description: Table storing security policies and their details.
  """
  securityPolicies(limit: Int, offset: Int, order_by: [Security_SecurityPoliciesOrderByExp!], where: Security_SecurityPoliciesBoolExp): [Security_SecurityPolicies!]
  securityPoliciesAggregate(filter_input: Security_SecurityPoliciesFilterInput): Security_SecurityPoliciesAggExp

  """
  Selects a single object from the model. Model description: Table storing security policies and their details.
  """
  securityPoliciesByName(name: Security_Varchar!): Security_SecurityPolicies

  """
  Selects a single object from the model. Model description: Table storing security policies and their details.
  """
  securityPoliciesBySecurityPolicyId(securityPolicyId: Security_Uuid!): Security_SecurityPolicies

  """
  Selects multiple objects from the model. Model description: Table storing
  attributes associated with security policies. Allows for flexible policy configuration.
  """
  securityPolicyAttributes(limit: Int, offset: Int, order_by: [Security_SecurityPolicyAttributesOrderByExp!], where: Security_SecurityPolicyAttributesBoolExp): [Security_SecurityPolicyAttributes!]
  securityPolicyAttributesAggregate(filter_input: Security_SecurityPolicyAttributesFilterInput): Security_SecurityPolicyAttributesAggExp

  """
  Selects multiple objects from the model. Model description: Table storing
  specific rules associated with security policies.
  """
  securityPolicyRules(limit: Int, offset: Int, order_by: [Security_SecurityPolicyRulesOrderByExp!], where: Security_SecurityPolicyRulesBoolExp): [Security_SecurityPolicyRules!]
  securityPolicyRulesAggregate(filter_input: Security_SecurityPolicyRulesFilterInput): Security_SecurityPolicyRulesAggExp

  """
  Selects a single object from the model. Model description: Table storing specific rules associated with security policies.
  """
  securityPolicyRulesBySecurityPolicyRuleId(securityPolicyRuleId: Security_Uuid!): Security_SecurityPolicyRules

  """
  Selects multiple objects from the model. Model description: Table storing
  information about process executions, tracking application activity and system behavior.
  """
  securityProcessExecutions(limit: Int, offset: Int, order_by: [Security_SecurityProcessExecutionsOrderByExp!], where: Security_SecurityProcessExecutionsBoolExp): [Security_SecurityProcessExecutions!]
  securityProcessExecutionsAggregate(filter_input: Security_SecurityProcessExecutionsFilterInput): Security_SecurityProcessExecutionsAggExp

  """
  Selects a single object from the model. Model description: Table storing
  information about process executions, tracking application activity and system behavior.
  """
  securityProcessExecutionsBySecurityProcessExecutionId(securityProcessExecutionId: Security_Uuid!): Security_SecurityProcessExecutions

  """
  Selects multiple objects from the model. Model description: Defines resources that can be secured through entitlements
  """
  securityResourceDefinitions(limit: Int, offset: Int, order_by: [Security_SecurityResourceDefinitionsOrderByExp!], where: Security_SecurityResourceDefinitionsBoolExp): [Security_SecurityResourceDefinitions!]
  securityResourceDefinitionsAggregate(filter_input: Security_SecurityResourceDefinitionsFilterInput): Security_SecurityResourceDefinitionsAggExp

  """
  Selects a single object from the model. Model description: Defines resources that can be secured through entitlements
  """
  securityResourceDefinitionsBySecurityResourceId(securityResourceId: Security_Uuid!): Security_SecurityResourceDefinitions

  """
  Selects multiple objects from the model. Model description: Maps roles to their constituent entitlements
  """
  securityRoleEntitlements(limit: Int, offset: Int, order_by: [Security_SecurityRoleEntitlementsOrderByExp!], where: Security_SecurityRoleEntitlementsBoolExp): [Security_SecurityRoleEntitlements!]
  securityRoleEntitlementsAggregate(filter_input: Security_SecurityRoleEntitlementsFilterInput): Security_SecurityRoleEntitlementsAggExp

  """
  Selects a single object from the model. Model description: Maps roles to their constituent entitlements
  """
  securityRoleEntitlementsBySecurityRoleEntitlementId(securityRoleEntitlementId: Security_Uuid!): Security_SecurityRoleEntitlements

  """
  Selects multiple objects from the model. Model description: Defines roles that can be assigned to identities
  """
  securityRoles(limit: Int, offset: Int, order_by: [Security_SecurityRolesOrderByExp!], where: Security_SecurityRolesBoolExp): [Security_SecurityRoles!]
  securityRolesAggregate(filter_input: Security_SecurityRolesFilterInput): Security_SecurityRolesAggExp

  """
  Selects a single object from the model. Model description: Defines roles that can be assigned to identities
  """
  securityRolesBySecurityRoleId(securityRoleId: Security_Uuid!): Security_SecurityRoles

  """
  Selects multiple objects from the model. Model description: Table storing
  information about running services on systems, tracking system services and their states.
  """
  securityRunningServices(limit: Int, offset: Int, order_by: [Security_SecurityRunningServicesOrderByExp!], where: Security_SecurityRunningServicesBoolExp): [Security_SecurityRunningServices!]
  securityRunningServicesAggregate(filter_input: Security_SecurityRunningServicesFilterInput): Security_SecurityRunningServicesAggExp

  """
  Selects a single object from the model. Model description: Table storing
  information about running services on systems, tracking system services and their states.
  """
  securityRunningServicesByRunningServicesPkey(runningServiceName: Security_Varchar!, securityHostId: Security_Uuid!): Security_SecurityRunningServices

  """
  Selects multiple objects from the model. Model description: Table storing
  system statistics, tracking resource usage and performance metrics.
  """
  securitySystemStats(limit: Int, offset: Int, order_by: [Security_SecuritySystemStatsOrderByExp!], where: Security_SecuritySystemStatsBoolExp): [Security_SecuritySystemStats!]
  securitySystemStatsAggregate(filter_input: Security_SecuritySystemStatsFilterInput): Security_SecuritySystemStatsAggExp

  """
  Selects a single object from the model. Model description: Table storing
  system statistics, tracking resource usage and performance metrics.
  """
  securitySystemStatsBySecuritySystemStatId(securitySystemStatId: Security_Uuid!): Security_SecuritySystemStats

  """
  Selects multiple objects from the model. Model description: Table storing
  information about USB device usage, tracking connection and disconnection times.
  """
  securityUsbDeviceUsage(limit: Int, offset: Int, order_by: [Security_SecurityUsbDeviceUsageOrderByExp!], where: Security_SecurityUsbDeviceUsageBoolExp): [Security_SecurityUsbDeviceUsage!]
  securityUsbDeviceUsageAggregate(filter_input: Security_SecurityUsbDeviceUsageFilterInput): Security_SecurityUsbDeviceUsageAggExp

  """
  Selects a single object from the model. Model description: Table storing
  information about USB device usage, tracking connection and disconnection times.
  """
  securityUsbDeviceUsageBySecurityUsbDeviceUsageId(securityUsbDeviceUsageId: Security_Uuid!): Security_SecurityUsbDeviceUsage

  """
  Selects multiple objects from the model. Model description: Identifies
  individuals who have authority to sign on or manage a business account
  """
  smallBusinessBankingAccountSignatories(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingAccountSignatoriesOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingAccountSignatoriesBoolExp): [SmallBusinessBanking_SmallBusinessBankingAccountSignatories!]
  smallBusinessBankingAccountSignatoriesAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingAccountSignatoriesFilterInput): SmallBusinessBanking_SmallBusinessBankingAccountSignatoriesAggExp

  """
  Selects a single object from the model. Model description: Identifies
  individuals who have authority to sign on or manage a business account
  """
  smallBusinessBankingAccountSignatoriesBySmallBusinessBankingAccountSignatoryId(smallBusinessBankingAccountSignatoryId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingAccountSignatories

  """
  Selects multiple objects from the model. Model description: Stores the
  business deposit and transaction accounts managed by the bank
  """
  smallBusinessBankingAccounts(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingAccountsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingAccountsBoolExp): [SmallBusinessBanking_SmallBusinessBankingAccounts!]
  smallBusinessBankingAccountsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingAccountsFilterInput): SmallBusinessBanking_SmallBusinessBankingAccountsAggExp

  """
  Selects a single object from the model. Model description: Stores the business
  deposit and transaction accounts managed by the bank
  """
  smallBusinessBankingAccountsBySmallBusinessBankingAccountId(smallBusinessBankingAccountId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingAccounts

  """
  Selects multiple objects from the model. Model description: Tracks adverse action notices sent to declined applicants
  """
  smallBusinessBankingAdverseActionNotices(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingAdverseActionNoticesOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingAdverseActionNoticesBoolExp): [SmallBusinessBanking_SmallBusinessBankingAdverseActionNotices!]
  smallBusinessBankingAdverseActionNoticesAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingAdverseActionNoticesFilterInput): SmallBusinessBanking_SmallBusinessBankingAdverseActionNoticesAggExp

  """
  Selects a single object from the model. Model description: Tracks adverse action notices sent to declined applicants
  """
  smallBusinessBankingAdverseActionNoticesBySmallBusinessBankingNoticeId(smallBusinessBankingNoticeId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingAdverseActionNotices

  """
  Selects multiple objects from the model. Model description: Tracks verification of beneficial owners as required by FinCEN
  """
  smallBusinessBankingBeneficialOwnerVerification(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingBeneficialOwnerVerificationOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingBeneficialOwnerVerificationBoolExp): [SmallBusinessBanking_SmallBusinessBankingBeneficialOwnerVerification!]
  smallBusinessBankingBeneficialOwnerVerificationAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingBeneficialOwnerVerificationFilterInput): SmallBusinessBanking_SmallBusinessBankingBeneficialOwnerVerificationAggExp

  """
  Selects a single object from the model. Model description: Tracks verification of beneficial owners as required by FinCEN
  """
  smallBusinessBankingBeneficialOwnerVerificationBySmallBusinessBankingVerificationId(smallBusinessBankingVerificationId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingBeneficialOwnerVerification

  """
  Selects multiple objects from the model. Model description: Links businesses
  to credit card accounts and stores business-specific attributes
  """
  smallBusinessBankingBusinessCardAccounts(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingBusinessCardAccountsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingBusinessCardAccountsBoolExp): [SmallBusinessBanking_SmallBusinessBankingBusinessCardAccounts!]
  smallBusinessBankingBusinessCardAccountsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingBusinessCardAccountsFilterInput): SmallBusinessBanking_SmallBusinessBankingBusinessCardAccountsAggExp

  """
  Selects a single object from the model. Model description: Links businesses to
  credit card accounts and stores business-specific attributes
  """
  smallBusinessBankingBusinessCardAccountsBySmallBusinessBankingBusinessCardAccountId(smallBusinessBankingBusinessCardAccountId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingBusinessCardAccounts

  """
  Selects multiple objects from the model. Model description: Manages employee
  and owner cards issued under a business credit card account
  """
  smallBusinessBankingBusinessCardUsers(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingBusinessCardUsersOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingBusinessCardUsersBoolExp): [SmallBusinessBanking_SmallBusinessBankingBusinessCardUsers!]
  smallBusinessBankingBusinessCardUsersAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingBusinessCardUsersFilterInput): SmallBusinessBanking_SmallBusinessBankingBusinessCardUsersAggExp

  """
  Selects a single object from the model. Model description: Manages employee
  and owner cards issued under a business credit card account
  """
  smallBusinessBankingBusinessCardUsersBySmallBusinessBankingBusinessCardUserId(smallBusinessBankingBusinessCardUserId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingBusinessCardUsers

  """
  Selects multiple objects from the model. Model description: Documents the due diligence process for business customers
  """
  smallBusinessBankingBusinessDueDiligence(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingBusinessDueDiligenceOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingBusinessDueDiligenceBoolExp): [SmallBusinessBanking_SmallBusinessBankingBusinessDueDiligence!]
  smallBusinessBankingBusinessDueDiligenceAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingBusinessDueDiligenceFilterInput): SmallBusinessBanking_SmallBusinessBankingBusinessDueDiligenceAggExp

  """
  Selects a single object from the model. Model description: Documents the due diligence process for business customers
  """
  smallBusinessBankingBusinessDueDiligenceBySmallBusinessBankingDueDiligenceId(smallBusinessBankingDueDiligenceId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingBusinessDueDiligence

  """
  Selects multiple objects from the model. Model description: Defines custom
  expense categories for business card transactions
  """
  smallBusinessBankingBusinessExpenseCategories(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingBusinessExpenseCategoriesOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingBusinessExpenseCategoriesBoolExp): [SmallBusinessBanking_SmallBusinessBankingBusinessExpenseCategories!]
  smallBusinessBankingBusinessExpenseCategoriesAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingBusinessExpenseCategoriesFilterInput): SmallBusinessBanking_SmallBusinessBankingBusinessExpenseCategoriesAggExp

  """
  Selects a single object from the model. Model description: Defines custom
  expense categories for business card transactions
  """
  smallBusinessBankingBusinessExpenseCategoriesBySmallBusinessBankingCategoryId(smallBusinessBankingCategoryId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingBusinessExpenseCategories

  """
  Selects multiple objects from the model. Model description: Identifies
  individuals who own or have significant control over a business entity
  """
  smallBusinessBankingBusinessOwners(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingBusinessOwnersOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingBusinessOwnersBoolExp): [SmallBusinessBanking_SmallBusinessBankingBusinessOwners!]
  smallBusinessBankingBusinessOwnersAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingBusinessOwnersFilterInput): SmallBusinessBanking_SmallBusinessBankingBusinessOwnersAggExp

  """
  Selects a single object from the model. Model description: Identifies
  individuals who own or have significant control over a business entity
  """
  smallBusinessBankingBusinessOwnersBySmallBusinessBankingBusinessOwnerId(smallBusinessBankingBusinessOwnerId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingBusinessOwners

  """
  Selects multiple objects from the model. Model description: Stores risk assessments performed on small business customers
  """
  smallBusinessBankingBusinessRiskAssessments(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingBusinessRiskAssessmentsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingBusinessRiskAssessmentsBoolExp): [SmallBusinessBanking_SmallBusinessBankingBusinessRiskAssessments!]
  smallBusinessBankingBusinessRiskAssessmentsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingBusinessRiskAssessmentsFilterInput): SmallBusinessBanking_SmallBusinessBankingBusinessRiskAssessmentsAggExp

  """
  Selects a single object from the model. Model description: Stores risk assessments performed on small business customers
  """
  smallBusinessBankingBusinessRiskAssessmentsBySmallBusinessBankingAssessmentId(smallBusinessBankingAssessmentId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingBusinessRiskAssessments

  """
  Selects multiple objects from the model. Model description: Maps credit card transactions to business expense categories
  """
  smallBusinessBankingBusinessTransactionCategories(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingBusinessTransactionCategoriesOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingBusinessTransactionCategoriesBoolExp): [SmallBusinessBanking_SmallBusinessBankingBusinessTransactionCategories!]
  smallBusinessBankingBusinessTransactionCategoriesAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingBusinessTransactionCategoriesFilterInput): SmallBusinessBanking_SmallBusinessBankingBusinessTransactionCategoriesAggExp

  """
  Selects a single object from the model. Model description: Maps credit card transactions to business expense categories
  """
  smallBusinessBankingBusinessTransactionCategoriesBySmallBusinessBankingTransactionCategoryId(smallBusinessBankingTransactionCategoryId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingBusinessTransactionCategories

  """
  Selects multiple objects from the model. Model description: Stores core
  information about small businesses that are customers of the bank
  """
  smallBusinessBankingBusinesses(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingBusinessesOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingBusinessesBoolExp): [SmallBusinessBanking_SmallBusinessBankingBusinesses!]
  smallBusinessBankingBusinessesAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingBusinessesFilterInput): SmallBusinessBanking_SmallBusinessBankingBusinessesAggExp

  """
  Selects a single object from the model. Model description: Stores core
  information about small businesses that are customers of the bank
  """
  smallBusinessBankingBusinessesBySmallBusinessBankingBusinessId(smallBusinessBankingBusinessId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingBusinesses

  """
  Selects multiple objects from the model. Model description: Tracks assets
  pledged as security for loans and credit facilities
  """
  smallBusinessBankingCollateral(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingCollateralOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingCollateralBoolExp): [SmallBusinessBanking_SmallBusinessBankingCollateral!]
  smallBusinessBankingCollateralAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingCollateralFilterInput): SmallBusinessBanking_SmallBusinessBankingCollateralAggExp

  """
  Selects a single object from the model. Model description: Tracks assets
  pledged as security for loans and credit facilities
  """
  smallBusinessBankingCollateralBySmallBusinessBankingCollateralId(smallBusinessBankingCollateralId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingCollateral

  """
  Selects multiple objects from the model. Model description: Tracks compliance cases related to small business accounts
  """
  smallBusinessBankingComplianceCases(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingComplianceCasesOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingComplianceCasesBoolExp): [SmallBusinessBanking_SmallBusinessBankingComplianceCases!]
  smallBusinessBankingComplianceCasesAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingComplianceCasesFilterInput): SmallBusinessBanking_SmallBusinessBankingComplianceCasesAggExp

  """
  Selects a single object from the model. Model description: Tracks compliance cases related to small business accounts
  """
  smallBusinessBankingComplianceCasesBySmallBusinessBankingCaseId(smallBusinessBankingCaseId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingComplianceCases

  """
  Selects multiple objects from the model. Model description: Catalogs
  compliance requirements affecting small business banking
  """
  smallBusinessBankingComplianceRequirements(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingComplianceRequirementsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingComplianceRequirementsBoolExp): [SmallBusinessBanking_SmallBusinessBankingComplianceRequirements!]
  smallBusinessBankingComplianceRequirementsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingComplianceRequirementsFilterInput): SmallBusinessBanking_SmallBusinessBankingComplianceRequirementsAggExp

  """
  Selects a single object from the model. Model description: Catalogs compliance
  requirements affecting small business banking
  """
  smallBusinessBankingComplianceRequirementsBySmallBusinessBankingRequirementId(smallBusinessBankingRequirementId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingComplianceRequirements

  """
  Selects multiple objects from the model. Model description: Documents credit
  decisions for regulatory review and fair lending analysis
  """
  smallBusinessBankingCreditDecisions(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingCreditDecisionsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingCreditDecisionsBoolExp): [SmallBusinessBanking_SmallBusinessBankingCreditDecisions!]
  smallBusinessBankingCreditDecisionsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingCreditDecisionsFilterInput): SmallBusinessBanking_SmallBusinessBankingCreditDecisionsAggExp

  """
  Selects a single object from the model. Model description: Documents credit
  decisions for regulatory review and fair lending analysis
  """
  smallBusinessBankingCreditDecisionsBySmallBusinessBankingDecisionId(smallBusinessBankingDecisionId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingCreditDecisions

  """
  Selects multiple objects from the model. Model description: Manages revolving
  credit facilities provided to small businesses
  """
  smallBusinessBankingCreditLines(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingCreditLinesOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingCreditLinesBoolExp): [SmallBusinessBanking_SmallBusinessBankingCreditLines!]
  smallBusinessBankingCreditLinesAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingCreditLinesFilterInput): SmallBusinessBanking_SmallBusinessBankingCreditLinesAggExp

  """
  Selects a single object from the model. Model description: Manages revolving
  credit facilities provided to small businesses
  """
  smallBusinessBankingCreditLinesBySmallBusinessBankingCreditLineId(smallBusinessBankingCreditLineId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingCreditLines

  """
  Selects multiple objects from the model. Model description: Stores metadata
  about business documents with references to their file locations
  """
  smallBusinessBankingDocuments(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingDocumentsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingDocumentsBoolExp): [SmallBusinessBanking_SmallBusinessBankingDocuments!]
  smallBusinessBankingDocumentsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingDocumentsFilterInput): SmallBusinessBanking_SmallBusinessBankingDocumentsAggExp

  """
  Selects a single object from the model. Model description: Stores metadata
  about business documents with references to their file locations
  """
  smallBusinessBankingDocumentsBySmallBusinessBankingDocumentId(smallBusinessBankingDocumentId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingDocuments

  """
  Selects multiple objects from the model. Model description: Junction table
  linking collateral items to specific loans they secure
  """
  smallBusinessBankingLoanCollateral(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingLoanCollateralOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingLoanCollateralBoolExp): [SmallBusinessBanking_SmallBusinessBankingLoanCollateral!]
  smallBusinessBankingLoanCollateralAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingLoanCollateralFilterInput): SmallBusinessBanking_SmallBusinessBankingLoanCollateralAggExp

  """
  Selects a single object from the model. Model description: Junction table
  linking collateral items to specific loans they secure
  """
  smallBusinessBankingLoanCollateralBySmallBusinessBankingLoanCollateralId(smallBusinessBankingLoanCollateralId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingLoanCollateral

  """
  Selects multiple objects from the model. Model description: Captures data
  required for small business lending fair lending analysis and reporting
  """
  smallBusinessBankingLoanFairLending(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingLoanFairLendingOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingLoanFairLendingBoolExp): [SmallBusinessBanking_SmallBusinessBankingLoanFairLending!]
  smallBusinessBankingLoanFairLendingAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingLoanFairLendingFilterInput): SmallBusinessBanking_SmallBusinessBankingLoanFairLendingAggExp

  """
  Selects a single object from the model. Model description: Captures data
  required for small business lending fair lending analysis and reporting
  """
  smallBusinessBankingLoanFairLendingBySmallBusinessBankingLendingRecordId(smallBusinessBankingLendingRecordId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingLoanFairLending

  """
  Selects multiple objects from the model. Model description: Stores information about term loans issued to small businesses
  """
  smallBusinessBankingLoans(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingLoansOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingLoansBoolExp): [SmallBusinessBanking_SmallBusinessBankingLoans!]
  smallBusinessBankingLoansAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingLoansFilterInput): SmallBusinessBanking_SmallBusinessBankingLoansAggExp

  """
  Selects a single object from the model. Model description: Stores information about term loans issued to small businesses
  """
  smallBusinessBankingLoansBySmallBusinessBankingLoanId(smallBusinessBankingLoanId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingLoans

  """
  Selects multiple objects from the model. Model description: Tracks payments
  made against loans, credit lines, credit cards, and between accounts
  """
  smallBusinessBankingPayments(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingPaymentsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingPaymentsBoolExp): [SmallBusinessBanking_SmallBusinessBankingPayments!]
  smallBusinessBankingPaymentsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingPaymentsFilterInput): SmallBusinessBanking_SmallBusinessBankingPaymentsAggExp

  """
  Selects a single object from the model. Model description: Tracks payments
  made against loans, credit lines, credit cards, and between accounts
  """
  smallBusinessBankingPaymentsBySmallBusinessBankingPaymentId(smallBusinessBankingPaymentId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingPayments

  """
  Selects multiple objects from the model. Model description: Defines the
  financial products offered to small business customers
  """
  smallBusinessBankingProducts(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingProductsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingProductsBoolExp): [SmallBusinessBanking_SmallBusinessBankingProducts!]
  smallBusinessBankingProductsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingProductsFilterInput): SmallBusinessBanking_SmallBusinessBankingProductsAggExp

  """
  Selects a single object from the model. Model description: Defines the
  financial products offered to small business customers
  """
  smallBusinessBankingProductsBySmallBusinessBankingProductId(smallBusinessBankingProductId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingProducts

  """
  Selects multiple objects from the model. Model description: Tracks regulatory findings, violations, and corrective actions
  """
  smallBusinessBankingRegulatoryFindings(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingRegulatoryFindingsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingRegulatoryFindingsBoolExp): [SmallBusinessBanking_SmallBusinessBankingRegulatoryFindings!]
  smallBusinessBankingRegulatoryFindingsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingRegulatoryFindingsFilterInput): SmallBusinessBanking_SmallBusinessBankingRegulatoryFindingsAggExp

  """
  Selects a single object from the model. Model description: Tracks regulatory findings, violations, and corrective actions
  """
  smallBusinessBankingRegulatoryFindingsBySmallBusinessBankingFindingId(smallBusinessBankingFindingId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingRegulatoryFindings

  """
  Selects multiple objects from the model. Model description: Tracks required
  regulatory reports related to small business banking
  """
  smallBusinessBankingRegulatoryReports(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingRegulatoryReportsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingRegulatoryReportsBoolExp): [SmallBusinessBanking_SmallBusinessBankingRegulatoryReports!]
  smallBusinessBankingRegulatoryReportsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingRegulatoryReportsFilterInput): SmallBusinessBanking_SmallBusinessBankingRegulatoryReportsAggExp

  """
  Selects a single object from the model. Model description: Tracks required
  regulatory reports related to small business banking
  """
  smallBusinessBankingRegulatoryReportsBySmallBusinessBankingReportId(smallBusinessBankingReportId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingRegulatoryReports

  """
  Selects multiple objects from the model. Model description: Records submissions of regulatory reports to authorities
  """
  smallBusinessBankingReportSubmissions(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingReportSubmissionsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingReportSubmissionsBoolExp): [SmallBusinessBanking_SmallBusinessBankingReportSubmissions!]
  smallBusinessBankingReportSubmissionsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingReportSubmissionsFilterInput): SmallBusinessBanking_SmallBusinessBankingReportSubmissionsAggExp

  """
  Selects a single object from the model. Model description: Records submissions of regulatory reports to authorities
  """
  smallBusinessBankingReportSubmissionsBySmallBusinessBankingSubmissionId(smallBusinessBankingSubmissionId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingReportSubmissions

  """
  Selects multiple objects from the model. Model description: Tracks Suspicious Activity Reports filed with FinCEN
  """
  smallBusinessBankingSuspiciousActivityReports(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingSuspiciousActivityReportsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingSuspiciousActivityReportsBoolExp): [SmallBusinessBanking_SmallBusinessBankingSuspiciousActivityReports!]
  smallBusinessBankingSuspiciousActivityReportsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingSuspiciousActivityReportsFilterInput): SmallBusinessBanking_SmallBusinessBankingSuspiciousActivityReportsAggExp

  """
  Selects a single object from the model. Model description: Tracks Suspicious Activity Reports filed with FinCEN
  """
  smallBusinessBankingSuspiciousActivityReportsBySmallBusinessBankingSarId(smallBusinessBankingSarId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingSuspiciousActivityReports

  """
  Selects multiple objects from the model. Model description: Records all financial transactions across business accounts
  """
  smallBusinessBankingTransactions(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingTransactionsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingTransactionsBoolExp): [SmallBusinessBanking_SmallBusinessBankingTransactions!]
  smallBusinessBankingTransactionsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingTransactionsFilterInput): SmallBusinessBanking_SmallBusinessBankingTransactionsAggExp

  """
  Selects a single object from the model. Model description: Records all financial transactions across business accounts
  """
  smallBusinessBankingTransactionsBySmallBusinessBankingTransactionId(smallBusinessBankingTransactionId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingTransactions
}

scalar Security_Bool

type Security_BoolAggExp {
  _count: Int!
  _count_distinct: Int!
  bool_and: Security_Bool
  bool_or: Security_Bool
  every: Security_Bool
}

input Security_BoolBoolExp {
  _and: [Security_BoolBoolExp!]
  _eq: Security_Bool
  _gt: Security_Bool
  _gte: Security_Bool
  _in: [Security_Bool!]
  _is_null: Boolean
  _lt: Security_Bool
  _lte: Security_Bool
  _neq: Security_Bool
  _not: Security_BoolBoolExp
  _or: [Security_BoolBoolExp!]
}

scalar Security_Date

type Security_DateAggExp {
  _count: Int!
  _count_distinct: Int!
  max: Security_Date
  min: Security_Date
}

input Security_DateBoolExp {
  _and: [Security_DateBoolExp!]
  _eq: Security_Date
  _gt: Security_Date
  _gte: Security_Date
  _in: [Security_Date!]
  _is_null: Boolean
  _lt: Security_Date
  _lte: Security_Date
  _neq: Security_Date
  _not: Security_DateBoolExp
  _or: [Security_DateBoolExp!]
}

scalar Security_Float4

type Security_Float4AggExp {
  _count: Int!
  _count_distinct: Int!
  avg: Security_Float8
  max: Security_Float4
  min: Security_Float4
  stddev: Security_Float8
  stddev_pop: Security_Float8
  stddev_samp: Security_Float8
  sum: Security_Float4
  var_pop: Security_Float8
  var_samp: Security_Float8
  variance: Security_Float8
}

input Security_Float4BoolExp {
  _and: [Security_Float4BoolExp!]
  _eq: Security_Float4
  _gt: Security_Float4
  _gte: Security_Float4
  _in: [Security_Float4!]
  _is_null: Boolean
  _lt: Security_Float4
  _lte: Security_Float4
  _neq: Security_Float4
  _not: Security_Float4BoolExp
  _or: [Security_Float4BoolExp!]
}

scalar Security_Float8

scalar Security_Inet

type Security_InetAggExp {
  _count: Int!
  _count_distinct: Int!
  max: Security_Inet
  min: Security_Inet
}

input Security_InetBoolExp {
  _and: [Security_InetBoolExp!]
  _eq: Security_Inet
  _gt: Security_Inet
  _gte: Security_Inet
  _in: [Security_Inet!]
  _is_null: Boolean
  _lt: Security_Inet
  _lte: Security_Inet
  _neq: Security_Inet
  _not: Security_InetBoolExp
  _or: [Security_InetBoolExp!]
  inet_same_family: Security_Inet
  network_overlap: Security_Inet
  network_sub: Security_Inet
  network_subeq: Security_Inet
  network_sup: Security_Inet
  network_supeq: Security_Inet
}

scalar Security_Int4

type Security_Int4AggExp {
  _count: Int!
  _count_distinct: Int!
  avg: Security_Numeric
  bit_and: Security_Int4
  bit_or: Security_Int4
  bit_xor: Security_Int4
  max: Security_Int4
  min: Security_Int4
  stddev: Security_Numeric
  stddev_pop: Security_Numeric
  stddev_samp: Security_Numeric
  sum: Security_Int8
  var_pop: Security_Numeric
  var_samp: Security_Numeric
  variance: Security_Numeric
}

input Security_Int4BoolExp {
  _and: [Security_Int4BoolExp!]
  _eq: Security_Int4
  _gt: Security_Int4
  _gte: Security_Int4
  _in: [Security_Int4!]
  _is_null: Boolean
  _lt: Security_Int4
  _lte: Security_Int4
  _neq: Security_Int4
  _not: Security_Int4BoolExp
  _or: [Security_Int4BoolExp!]
}

scalar Security_Int8

type Security_Int8AggExp {
  _count: Int!
  _count_distinct: Int!
  avg: Security_Numeric
  bit_and: Security_Int8
  bit_or: Security_Int8
  bit_xor: Security_Int8
  max: Security_Int8
  min: Security_Int8
  stddev: Security_Numeric
  stddev_pop: Security_Numeric
  stddev_samp: Security_Numeric
  sum: Security_Numeric
  var_pop: Security_Numeric
  var_samp: Security_Numeric
  variance: Security_Numeric
}

input Security_Int8BoolExp {
  _and: [Security_Int8BoolExp!]
  _eq: Security_Int8
  _gt: Security_Int8
  _gte: Security_Int8
  _in: [Security_Int8!]
  _is_null: Boolean
  _lt: Security_Int8
  _lte: Security_Int8
  _neq: Security_Int8
  _not: Security_Int8BoolExp
  _or: [Security_Int8BoolExp!]
}

scalar Security_Numeric

type Security_NumericAggExp {
  _count: Int!
  _count_distinct: Int!
  avg: Security_Numeric
  max: Security_Numeric
  min: Security_Numeric
  stddev: Security_Numeric
  stddev_pop: Security_Numeric
  stddev_samp: Security_Numeric
  sum: Security_Numeric
  var_pop: Security_Numeric
  var_samp: Security_Numeric
  variance: Security_Numeric
}

input Security_NumericBoolExp {
  _and: [Security_NumericBoolExp!]
  _eq: Security_Numeric
  _gt: Security_Numeric
  _gte: Security_Numeric
  _in: [Security_Numeric!]
  _is_null: Boolean
  _lt: Security_Numeric
  _lte: Security_Numeric
  _neq: Security_Numeric
  _not: Security_NumericBoolExp
  _or: [Security_NumericBoolExp!]
}

"""Table storing information about user accounts across various systems."""
type Security_SecurityAccounts {
  """String representation of the account ID."""
  accountIdString: Security_Varchar

  """Timestamp when the account was created."""
  created: Security_Timestamp

  """Indicates if the account is disabled."""
  disabled: Security_Bool

  """Indicates if the account is locked."""
  locked: Security_Bool

  """Indicates if the account was manually correlated."""
  manuallyCorrelated: Security_Bool

  """Name of the account."""
  name: Security_Varchar

  """Timestamp when the account password was last set."""
  passwordLastSet: Security_Timestamp

  """Indicates if the account has privileged access."""
  privileged: Security_Bool

  """Unique identifier for the account."""
  securityAccountId: Security_Uuid!
  securityIamLogins(limit: Int, offset: Int, order_by: [Security_SecurityIamLoginsOrderByExp!], where: Security_SecurityIamLoginsBoolExp): [Security_SecurityIamLogins!]
  securityIamLoginsAggregate(filter_input: Security_SecurityIamLoginsFilterInput): Security_SecurityIamLoginsAggExp!
  securityIdentity: Security_SecurityIdentities

  """Identifier of the associated identity."""
  securityIdentityId: Security_Uuid

  """Identifier of the source system for the account."""
  securitySourceId: Security_Uuid

  """Timestamp when the account status was last updated"""
  statusUpdateDateTime: Security_Timestamp
}

type Security_SecurityAccountsAggExp {
  _count: Int!
  accountIdString: Security_VarcharAggExp!
  created: Security_TimestampAggExp!
  disabled: Security_BoolAggExp!
  locked: Security_BoolAggExp!
  manuallyCorrelated: Security_BoolAggExp!
  name: Security_VarcharAggExp!
  passwordLastSet: Security_TimestampAggExp!
  privileged: Security_BoolAggExp!
  securityAccountId: Security_UuidAggExp!
  securityIdentityId: Security_UuidAggExp!
  securitySourceId: Security_UuidAggExp!
  statusUpdateDateTime: Security_TimestampAggExp!
}

input Security_SecurityAccountsBoolExp {
  _and: [Security_SecurityAccountsBoolExp!]
  _not: Security_SecurityAccountsBoolExp
  _or: [Security_SecurityAccountsBoolExp!]
  accountIdString: Security_VarcharBoolExp
  created: Security_TimestampBoolExp
  disabled: Security_BoolBoolExp
  locked: Security_BoolBoolExp
  manuallyCorrelated: Security_BoolBoolExp
  name: Security_VarcharBoolExp
  passwordLastSet: Security_TimestampBoolExp
  privileged: Security_BoolBoolExp
  securityAccountId: Security_UuidBoolExp
  securityIamLogins: Security_SecurityIamLoginsBoolExp
  securityIdentity: Security_SecurityIdentitiesBoolExp
  securityIdentityId: Security_UuidBoolExp
  securitySourceId: Security_UuidBoolExp
  statusUpdateDateTime: Security_TimestampBoolExp
}

input Security_SecurityAccountsFilterInput {
  limit: Int
  offset: Int
  order_by: [Security_SecurityAccountsOrderByExp!]
  where: Security_SecurityAccountsBoolExp
}

input Security_SecurityAccountsOrderByExp {
  accountIdString: OrderBy
  created: OrderBy
  disabled: OrderBy
  locked: OrderBy
  manuallyCorrelated: OrderBy
  name: OrderBy
  passwordLastSet: OrderBy
  privileged: OrderBy
  securityAccountId: OrderBy
  securityIdentity: Security_SecurityIdentitiesOrderByExp
  securityIdentityId: OrderBy
  securitySourceId: OrderBy
  statusUpdateDateTime: OrderBy
}

scalar Security_SecurityAgentStatus

type Security_SecurityAgentStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: Security_SecurityAgentStatus
  min: Security_SecurityAgentStatus
}

input Security_SecurityAgentStatusBoolExp {
  _and: [Security_SecurityAgentStatusBoolExp!]
  _eq: Security_SecurityAgentStatus
  _gt: Security_SecurityAgentStatus
  _gte: Security_SecurityAgentStatus
  _in: [Security_SecurityAgentStatus!]
  _is_null: Boolean
  _lt: Security_SecurityAgentStatus
  _lte: Security_SecurityAgentStatus
  _neq: Security_SecurityAgentStatus
  _not: Security_SecurityAgentStatusBoolExp
  _or: [Security_SecurityAgentStatusBoolExp!]
}

scalar Security_SecurityComplianceStatus

type Security_SecurityComplianceStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: Security_SecurityComplianceStatus
  min: Security_SecurityComplianceStatus
}

input Security_SecurityComplianceStatusBoolExp {
  _and: [Security_SecurityComplianceStatusBoolExp!]
  _eq: Security_SecurityComplianceStatus
  _gt: Security_SecurityComplianceStatus
  _gte: Security_SecurityComplianceStatus
  _in: [Security_SecurityComplianceStatus!]
  _is_null: Boolean
  _lt: Security_SecurityComplianceStatus
  _lte: Security_SecurityComplianceStatus
  _neq: Security_SecurityComplianceStatus
  _not: Security_SecurityComplianceStatusBoolExp
  _or: [Security_SecurityComplianceStatusBoolExp!]
}

"""
Stores Common Platform Enumeration (CPE) information associated with CVEs.
"""
type Security_SecurityCpe {
  """CPE 2.3 URI string."""
  cpe23Uri: Security_Text

  """
  Common Vulnerabilities and Exposures identifier. Foreign key referencing cvss.cve.
  """
  cve: Security_Varchar
  securityCvss: Security_SecurityCvss

  """Indicates if the CPE is vulnerable to the CVE."""
  vulnerable: Security_Varchar
}

type Security_SecurityCpeAggExp {
  _count: Int!
  cpe23Uri: Security_TextAggExp!
  cve: Security_VarcharAggExp!
  vulnerable: Security_VarcharAggExp!
}

input Security_SecurityCpeBoolExp {
  _and: [Security_SecurityCpeBoolExp!]
  _not: Security_SecurityCpeBoolExp
  _or: [Security_SecurityCpeBoolExp!]
  cpe23Uri: Security_TextBoolExp
  cve: Security_VarcharBoolExp
  securityCvss: Security_SecurityCvssBoolExp
  vulnerable: Security_VarcharBoolExp
}

input Security_SecurityCpeFilterInput {
  limit: Int
  offset: Int
  order_by: [Security_SecurityCpeOrderByExp!]
  where: Security_SecurityCpeBoolExp
}

input Security_SecurityCpeOrderByExp {
  cpe23Uri: OrderBy
  cve: OrderBy
  securityCvss: Security_SecurityCvssOrderByExp
  vulnerable: OrderBy
}

"""Stores problem descriptions associated with CVEs."""
type Security_SecurityCveProblem {
  """
  Common Vulnerabilities and Exposures identifier. Foreign key referencing cvss.cve.
  """
  cve: Security_Varchar

  """A reference to the related Common Weakness Enumeration, if it exists"""
  cweId: Security_Int4

  """Problem description related to the CVE."""
  problem: Security_Text
  securityCvss: Security_SecurityCvss
  securityCwe: Security_SecurityCwe
}

type Security_SecurityCveProblemAggExp {
  _count: Int!
  cve: Security_VarcharAggExp!
  cweId: Security_Int4AggExp!
  problem: Security_TextAggExp!
}

input Security_SecurityCveProblemBoolExp {
  _and: [Security_SecurityCveProblemBoolExp!]
  _not: Security_SecurityCveProblemBoolExp
  _or: [Security_SecurityCveProblemBoolExp!]
  cve: Security_VarcharBoolExp
  cweId: Security_Int4BoolExp
  problem: Security_TextBoolExp
  securityCvss: Security_SecurityCvssBoolExp
  securityCwe: Security_SecurityCweBoolExp
}

input Security_SecurityCveProblemFilterInput {
  limit: Int
  offset: Int
  order_by: [Security_SecurityCveProblemOrderByExp!]
  where: Security_SecurityCveProblemBoolExp
}

input Security_SecurityCveProblemOrderByExp {
  cve: OrderBy
  cweId: OrderBy
  problem: OrderBy
  securityCvss: Security_SecurityCvssOrderByExp
  securityCwe: Security_SecurityCweOrderByExp
}

"""
Stores Common Vulnerability Scoring System (CVSS) metrics for CVEs, including both CVSS v2 and v3.
"""
type Security_SecurityCvss {
  """CVSS v2 Access Complexity metric."""
  accessComplexity: Security_Varchar

  """CVSS v2 Access Vector metric."""
  accessVector: Security_Varchar

  """CVSS v3 Attack Complexity metric."""
  attackComplexity3: Security_Varchar

  """CVSS v3 Attack Vector metric."""
  attackVector3: Security_Varchar

  """CVSS v2 Authentication metric."""
  authentication: Security_Varchar

  """CVSS v2 Availability Impact metric."""
  availabilityImpact: Security_Varchar

  """CVSS v3 Availability Impact metric."""
  availabilityImpact3: Security_Varchar

  """CVSS v2 Base Score."""
  baseScore: Security_Float4

  """CVSS v3 Base Score."""
  baseScore3: Security_Float4

  """CVSS v3 Base Severity."""
  baseSeverity3: Security_Varchar

  """CVSS v2 Confidentiality Impact metric."""
  confidentialityImpact: Security_Varchar

  """CVSS v3 Confidentiality Impact metric."""
  confidentialityImpact3: Security_Varchar

  """Common Vulnerabilities and Exposures identifier. Primary key."""
  cve: Security_Varchar!

  """CVE description."""
  description: Security_Text

  """CVSS v2 Exploitability Score."""
  exploitabilityScore: Security_Float4

  """CVSS v3 Exploitability Score."""
  exploitabilityScore3: Security_Float4

  """CVSS v2 Impact Score."""
  impactScore: Security_Float4

  """CVSS v3 Impact Score."""
  impactScore3: Security_Float4

  """CVSS v2 Integrity Impact metric."""
  integrityImpact: Security_Varchar

  """CVSS v3 Integrity Impact metric."""
  integrityImpact3: Security_Varchar

  """CVE last modified date."""
  lastModifiedDate: Security_Date

  """CVSS v2 Obtain All Privileges metric."""
  obtainAllPrivileges: Security_Bool

  """CVSS v2 Obtain Other Privileges metric."""
  obtainOtherPrivileges: Security_Bool

  """CVSS v2 Obtain User Privileges metric."""
  obtainUserPrivileges: Security_Bool

  """CVSS v3 Privileges Required metric."""
  privilegesRequired3: Security_Varchar

  """CVE publication date."""
  publishedDate: Security_Date

  """CVSS v3 Scope metric."""
  scope3: Security_Varchar
  securityCpes(limit: Int, offset: Int, order_by: [Security_SecurityCpeOrderByExp!], where: Security_SecurityCpeBoolExp): [Security_SecurityCpe!]
  securityCpesAggregate(filter_input: Security_SecurityCpeFilterInput): Security_SecurityCpeAggExp!
  securityCveProblems(limit: Int, offset: Int, order_by: [Security_SecurityCveProblemOrderByExp!], where: Security_SecurityCveProblemBoolExp): [Security_SecurityCveProblem!]
  securityCveProblemsAggregate(filter_input: Security_SecurityCveProblemFilterInput): Security_SecurityCveProblemAggExp!

  """CVSS v2 Severity."""
  severity: Security_Varchar

  """CVSS v3 User Interaction metric."""
  userInteraction3: Security_Varchar

  """CVSS v2 User Interaction Required metric."""
  userInteractionRequired: Security_Bool

  """CVSS v2 Vector String."""
  vectorString: Security_Varchar

  """CVSS v3 Vector String."""
  vectorString3: Security_Varchar
}

type Security_SecurityCvssAggExp {
  _count: Int!
  accessComplexity: Security_VarcharAggExp!
  accessVector: Security_VarcharAggExp!
  attackComplexity3: Security_VarcharAggExp!
  attackVector3: Security_VarcharAggExp!
  authentication: Security_VarcharAggExp!
  availabilityImpact: Security_VarcharAggExp!
  availabilityImpact3: Security_VarcharAggExp!
  baseScore: Security_Float4AggExp!
  baseScore3: Security_Float4AggExp!
  baseSeverity3: Security_VarcharAggExp!
  confidentialityImpact: Security_VarcharAggExp!
  confidentialityImpact3: Security_VarcharAggExp!
  cve: Security_VarcharAggExp!
  description: Security_TextAggExp!
  exploitabilityScore: Security_Float4AggExp!
  exploitabilityScore3: Security_Float4AggExp!
  impactScore: Security_Float4AggExp!
  impactScore3: Security_Float4AggExp!
  integrityImpact: Security_VarcharAggExp!
  integrityImpact3: Security_VarcharAggExp!
  lastModifiedDate: Security_DateAggExp!
  obtainAllPrivileges: Security_BoolAggExp!
  obtainOtherPrivileges: Security_BoolAggExp!
  obtainUserPrivileges: Security_BoolAggExp!
  privilegesRequired3: Security_VarcharAggExp!
  publishedDate: Security_DateAggExp!
  scope3: Security_VarcharAggExp!
  severity: Security_VarcharAggExp!
  userInteraction3: Security_VarcharAggExp!
  userInteractionRequired: Security_BoolAggExp!
  vectorString: Security_VarcharAggExp!
  vectorString3: Security_VarcharAggExp!
}

input Security_SecurityCvssBoolExp {
  _and: [Security_SecurityCvssBoolExp!]
  _not: Security_SecurityCvssBoolExp
  _or: [Security_SecurityCvssBoolExp!]
  accessComplexity: Security_VarcharBoolExp
  accessVector: Security_VarcharBoolExp
  attackComplexity3: Security_VarcharBoolExp
  attackVector3: Security_VarcharBoolExp
  authentication: Security_VarcharBoolExp
  availabilityImpact: Security_VarcharBoolExp
  availabilityImpact3: Security_VarcharBoolExp
  baseScore: Security_Float4BoolExp
  baseScore3: Security_Float4BoolExp
  baseSeverity3: Security_VarcharBoolExp
  confidentialityImpact: Security_VarcharBoolExp
  confidentialityImpact3: Security_VarcharBoolExp
  cve: Security_VarcharBoolExp
  description: Security_TextBoolExp
  exploitabilityScore: Security_Float4BoolExp
  exploitabilityScore3: Security_Float4BoolExp
  impactScore: Security_Float4BoolExp
  impactScore3: Security_Float4BoolExp
  integrityImpact: Security_VarcharBoolExp
  integrityImpact3: Security_VarcharBoolExp
  lastModifiedDate: Security_DateBoolExp
  obtainAllPrivileges: Security_BoolBoolExp
  obtainOtherPrivileges: Security_BoolBoolExp
  obtainUserPrivileges: Security_BoolBoolExp
  privilegesRequired3: Security_VarcharBoolExp
  publishedDate: Security_DateBoolExp
  scope3: Security_VarcharBoolExp
  securityCpes: Security_SecurityCpeBoolExp
  securityCveProblems: Security_SecurityCveProblemBoolExp
  severity: Security_VarcharBoolExp
  userInteraction3: Security_VarcharBoolExp
  userInteractionRequired: Security_BoolBoolExp
  vectorString: Security_VarcharBoolExp
  vectorString3: Security_VarcharBoolExp
}

input Security_SecurityCvssFilterInput {
  limit: Int
  offset: Int
  order_by: [Security_SecurityCvssOrderByExp!]
  where: Security_SecurityCvssBoolExp
}

input Security_SecurityCvssOrderByExp {
  accessComplexity: OrderBy
  accessVector: OrderBy
  attackComplexity3: OrderBy
  attackVector3: OrderBy
  authentication: OrderBy
  availabilityImpact: OrderBy
  availabilityImpact3: OrderBy
  baseScore: OrderBy
  baseScore3: OrderBy
  baseSeverity3: OrderBy
  confidentialityImpact: OrderBy
  confidentialityImpact3: OrderBy
  cve: OrderBy
  description: OrderBy
  exploitabilityScore: OrderBy
  exploitabilityScore3: OrderBy
  impactScore: OrderBy
  impactScore3: OrderBy
  integrityImpact: OrderBy
  integrityImpact3: OrderBy
  lastModifiedDate: OrderBy
  obtainAllPrivileges: OrderBy
  obtainOtherPrivileges: OrderBy
  obtainUserPrivileges: OrderBy
  privilegesRequired3: OrderBy
  publishedDate: OrderBy
  scope3: OrderBy
  severity: OrderBy
  userInteraction3: OrderBy
  userInteractionRequired: OrderBy
  vectorString: OrderBy
  vectorString3: OrderBy
}

"""Stores Common Weakness Enumeration (CWE) information."""
type Security_SecurityCwe {
  """Common consequences of the CWE."""
  commonConsequences: Security_Text

  """Common Weakness Enumeration identifier. Primary key."""
  cweId: Security_Int4!

  """CWE description."""
  description: Security_Text

  """Extended CWE description."""
  extendedDescription: Security_Text

  """Modes of introduction for the CWE."""
  modesOfIntroduction: Security_Text

  """CWE name."""
  name: Security_Text

  """Potential mitigations for the CWE."""
  potentialMitigations: Security_Text
  securityCveProblems(limit: Int, offset: Int, order_by: [Security_SecurityCveProblemOrderByExp!], where: Security_SecurityCveProblemBoolExp): [Security_SecurityCveProblem!]
  securityCveProblemsAggregate(filter_input: Security_SecurityCveProblemFilterInput): Security_SecurityCveProblemAggExp!
}

type Security_SecurityCweAggExp {
  _count: Int!
  commonConsequences: Security_TextAggExp!
  cweId: Security_Int4AggExp!
  description: Security_TextAggExp!
  extendedDescription: Security_TextAggExp!
  modesOfIntroduction: Security_TextAggExp!
  name: Security_TextAggExp!
  potentialMitigations: Security_TextAggExp!
}

input Security_SecurityCweBoolExp {
  _and: [Security_SecurityCweBoolExp!]
  _not: Security_SecurityCweBoolExp
  _or: [Security_SecurityCweBoolExp!]
  commonConsequences: Security_TextBoolExp
  cweId: Security_Int4BoolExp
  description: Security_TextBoolExp
  extendedDescription: Security_TextBoolExp
  modesOfIntroduction: Security_TextBoolExp
  name: Security_TextBoolExp
  potentialMitigations: Security_TextBoolExp
  securityCveProblems: Security_SecurityCveProblemBoolExp
}

input Security_SecurityCweFilterInput {
  limit: Int
  offset: Int
  order_by: [Security_SecurityCweOrderByExp!]
  where: Security_SecurityCweBoolExp
}

input Security_SecurityCweOrderByExp {
  commonConsequences: OrderBy
  cweId: OrderBy
  description: OrderBy
  extendedDescription: OrderBy
  modesOfIntroduction: OrderBy
  name: OrderBy
  potentialMitigations: OrderBy
}

"""Table storing information about network devices."""
type Security_SecurityDevices {
  """The timestamp when the device record was created."""
  createdAt: Security_Timestamp

  """The type of the device (e.g., router, server, workstation)."""
  deviceType: Security_Varchar!

  """The hostname of the device."""
  hostname: Security_Varchar

  """The unique IP address of the device. Serves as the primary key."""
  securityDeviceId: Security_Inet!
  securityNetworkEvents(limit: Int, offset: Int, order_by: [Security_SecurityNetworkEventsOrderByExp!], where: Security_SecurityNetworkEventsBoolExp): [Security_SecurityNetworkEvents!]
  securityNetworkEventsAggregate(filter_input: Security_SecurityNetworkEventsFilterInput): Security_SecurityNetworkEventsAggExp!
  securityResourceDefinitions(limit: Int, offset: Int, order_by: [Security_SecurityResourceDefinitionsOrderByExp!], where: Security_SecurityResourceDefinitionsBoolExp): [Security_SecurityResourceDefinitions!]
  securityResourceDefinitionsAggregate(filter_input: Security_SecurityResourceDefinitionsFilterInput): Security_SecurityResourceDefinitionsAggExp!

  """The subnet the device belongs to."""
  subnet: Security_Varchar

  """The timestamp when the device record was last updated."""
  updatedAt: Security_Timestamp
}

type Security_SecurityDevicesAggExp {
  _count: Int!
  createdAt: Security_TimestampAggExp!
  deviceType: Security_VarcharAggExp!
  hostname: Security_VarcharAggExp!
  securityDeviceId: Security_InetAggExp!
  subnet: Security_VarcharAggExp!
  updatedAt: Security_TimestampAggExp!
}

input Security_SecurityDevicesBoolExp {
  _and: [Security_SecurityDevicesBoolExp!]
  _not: Security_SecurityDevicesBoolExp
  _or: [Security_SecurityDevicesBoolExp!]
  createdAt: Security_TimestampBoolExp
  deviceType: Security_VarcharBoolExp
  hostname: Security_VarcharBoolExp
  securityDeviceId: Security_InetBoolExp
  securityNetworkEvents: Security_SecurityNetworkEventsBoolExp
  securityResourceDefinitions: Security_SecurityResourceDefinitionsBoolExp
  subnet: Security_VarcharBoolExp
  updatedAt: Security_TimestampBoolExp
}

input Security_SecurityDevicesFilterInput {
  limit: Int
  offset: Int
  order_by: [Security_SecurityDevicesOrderByExp!]
  where: Security_SecurityDevicesBoolExp
}

input Security_SecurityDevicesOrderByExp {
  createdAt: OrderBy
  deviceType: OrderBy
  hostname: OrderBy
  securityDeviceId: OrderBy
  subnet: OrderBy
  updatedAt: OrderBy
}

"""Defines granular entitlements that can be granted to roles"""
type Security_SecurityEnhancedEntitlements {
  """When the entitlement was created"""
  createdAt: Security_Timestamptz

  """Who created the entitlement"""
  createdById: Security_Int4

  """Description of what the entitlement grants access to"""
  description: Security_Text

  """User-friendly name for the entitlement"""
  displayName: Security_Varchar

  """Internal name for the entitlement"""
  entitlementName: Security_Varchar!

  """Application that manages this entitlement"""
  managingApplicationId: Security_Uuid

  """Unique identifier for the entitlement"""
  securityEntitlementId: Security_Uuid!
  securityEntitlementResources(limit: Int, offset: Int, order_by: [Security_SecurityEntitlementResourcesOrderByExp!], where: Security_SecurityEntitlementResourcesBoolExp): [Security_SecurityEntitlementResources!]
  securityEntitlementResourcesAggregate(filter_input: Security_SecurityEntitlementResourcesFilterInput): Security_SecurityEntitlementResourcesAggExp!
  securityRoleEntitlements(limit: Int, offset: Int, order_by: [Security_SecurityRoleEntitlementsOrderByExp!], where: Security_SecurityRoleEntitlementsBoolExp): [Security_SecurityRoleEntitlements!]
  securityRoleEntitlementsAggregate(filter_input: Security_SecurityRoleEntitlementsFilterInput): Security_SecurityRoleEntitlementsAggExp!

  """Current status of the entitlement"""
  status: Security_SecurityEntitlementStatus!
}

type Security_SecurityEnhancedEntitlementsAggExp {
  _count: Int!
  createdAt: Security_TimestamptzAggExp!
  createdById: Security_Int4AggExp!
  description: Security_TextAggExp!
  displayName: Security_VarcharAggExp!
  entitlementName: Security_VarcharAggExp!
  managingApplicationId: Security_UuidAggExp!
  securityEntitlementId: Security_UuidAggExp!
  status: Security_SecurityEntitlementStatusAggExp!
}

input Security_SecurityEnhancedEntitlementsBoolExp {
  _and: [Security_SecurityEnhancedEntitlementsBoolExp!]
  _not: Security_SecurityEnhancedEntitlementsBoolExp
  _or: [Security_SecurityEnhancedEntitlementsBoolExp!]
  createdAt: Security_TimestamptzBoolExp
  createdById: Security_Int4BoolExp
  description: Security_TextBoolExp
  displayName: Security_VarcharBoolExp
  entitlementName: Security_VarcharBoolExp
  managingApplicationId: Security_UuidBoolExp
  securityEntitlementId: Security_UuidBoolExp
  securityEntitlementResources: Security_SecurityEntitlementResourcesBoolExp
  securityRoleEntitlements: Security_SecurityRoleEntitlementsBoolExp
  status: Security_SecurityEntitlementStatusBoolExp
}

input Security_SecurityEnhancedEntitlementsFilterInput {
  limit: Int
  offset: Int
  order_by: [Security_SecurityEnhancedEntitlementsOrderByExp!]
  where: Security_SecurityEnhancedEntitlementsBoolExp
}

input Security_SecurityEnhancedEntitlementsOrderByExp {
  createdAt: OrderBy
  createdById: OrderBy
  description: OrderBy
  displayName: OrderBy
  entitlementName: OrderBy
  managingApplicationId: OrderBy
  securityEntitlementId: OrderBy
  status: OrderBy
}

"""
Maps entitlements to resources with specific permission types and contexts
"""
type Security_SecurityEntitlementResources {
  """Context conditions that restrict when this entitlement is applicable"""
  contextConditions: Security_Varchar

  """When the relationship was created"""
  createdAt: Security_Timestamptz

  """Who created the relationship"""
  createdById: Security_Int4

  """Type of permission granted on the resource"""
  permissionType: Security_SecurityPermissionType!

  """
  Resource-specific details like column filters, row filters, access parameters
  """
  resourceDetails: Security_Varchar
  securityEnhancedEntitlement: Security_SecurityEnhancedEntitlements

  """Reference to the entitlement"""
  securityEntitlementId: Security_Uuid!

  """Unique identifier for this entitlement-resource relationship"""
  securityEntitlementResourceId: Security_Uuid!
  securityResourceDefinition: Security_SecurityResourceDefinitions

  """Reference to the resource"""
  securityResourceId: Security_Uuid!
}

type Security_SecurityEntitlementResourcesAggExp {
  _count: Int!
  contextConditions: Security_VarcharAggExp!
  createdAt: Security_TimestamptzAggExp!
  createdById: Security_Int4AggExp!
  permissionType: Security_SecurityPermissionTypeAggExp!
  resourceDetails: Security_VarcharAggExp!
  securityEntitlementId: Security_UuidAggExp!
  securityEntitlementResourceId: Security_UuidAggExp!
  securityResourceId: Security_UuidAggExp!
}

input Security_SecurityEntitlementResourcesBoolExp {
  _and: [Security_SecurityEntitlementResourcesBoolExp!]
  _not: Security_SecurityEntitlementResourcesBoolExp
  _or: [Security_SecurityEntitlementResourcesBoolExp!]
  contextConditions: Security_VarcharBoolExp
  createdAt: Security_TimestamptzBoolExp
  createdById: Security_Int4BoolExp
  permissionType: Security_SecurityPermissionTypeBoolExp
  resourceDetails: Security_VarcharBoolExp
  securityEnhancedEntitlement: Security_SecurityEnhancedEntitlementsBoolExp
  securityEntitlementId: Security_UuidBoolExp
  securityEntitlementResourceId: Security_UuidBoolExp
  securityResourceDefinition: Security_SecurityResourceDefinitionsBoolExp
  securityResourceId: Security_UuidBoolExp
}

input Security_SecurityEntitlementResourcesFilterInput {
  limit: Int
  offset: Int
  order_by: [Security_SecurityEntitlementResourcesOrderByExp!]
  where: Security_SecurityEntitlementResourcesBoolExp
}

input Security_SecurityEntitlementResourcesOrderByExp {
  contextConditions: OrderBy
  createdAt: OrderBy
  createdById: OrderBy
  permissionType: OrderBy
  resourceDetails: OrderBy
  securityEnhancedEntitlement: Security_SecurityEnhancedEntitlementsOrderByExp
  securityEntitlementId: OrderBy
  securityEntitlementResourceId: OrderBy
  securityResourceDefinition: Security_SecurityResourceDefinitionsOrderByExp
  securityResourceId: OrderBy
}

scalar Security_SecurityEntitlementStatus

type Security_SecurityEntitlementStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: Security_SecurityEntitlementStatus
  min: Security_SecurityEntitlementStatus
}

input Security_SecurityEntitlementStatusBoolExp {
  _and: [Security_SecurityEntitlementStatusBoolExp!]
  _eq: Security_SecurityEntitlementStatus
  _gt: Security_SecurityEntitlementStatus
  _gte: Security_SecurityEntitlementStatus
  _in: [Security_SecurityEntitlementStatus!]
  _is_null: Boolean
  _lt: Security_SecurityEntitlementStatus
  _lte: Security_SecurityEntitlementStatus
  _neq: Security_SecurityEntitlementStatus
  _not: Security_SecurityEntitlementStatusBoolExp
  _or: [Security_SecurityEntitlementStatusBoolExp!]
}

scalar Security_SecurityEnvironment

type Security_SecurityEnvironmentAggExp {
  _count: Int!
  _count_distinct: Int!
  max: Security_SecurityEnvironment
  min: Security_SecurityEnvironment
}

input Security_SecurityEnvironmentBoolExp {
  _and: [Security_SecurityEnvironmentBoolExp!]
  _eq: Security_SecurityEnvironment
  _gt: Security_SecurityEnvironment
  _gte: Security_SecurityEnvironment
  _in: [Security_SecurityEnvironment!]
  _is_null: Boolean
  _lt: Security_SecurityEnvironment
  _lte: Security_SecurityEnvironment
  _neq: Security_SecurityEnvironment
  _not: Security_SecurityEnvironmentBoolExp
  _or: [Security_SecurityEnvironmentBoolExp!]
}

"""
Table storing information about file access events, tracking file usage and access patterns.
"""
type Security_SecurityFileAccesses {
  """Timestamp when the file access occurred."""
  accessTime: Security_Timestamp

  """Type of file access (e.g., read, write, execute)."""
  accessType: Security_Varchar
  securityFile: Security_SecurityFiles

  """Unique identifier for the file access event."""
  securityFileAccessId: Security_Uuid!

  """Identifier of the accessed file."""
  securityFileId: Security_Uuid!
  securityHost: Security_SecurityHosts
  securityProcessExecution: Security_SecurityProcessExecutions

  """Identifier of the process execution that initiated the file access."""
  securityProcessExecutionId: Security_Uuid!

  """Identifier of the system where the file access occurred."""
  securitySystemId: Security_Uuid!
}

type Security_SecurityFileAccessesAggExp {
  _count: Int!
  accessTime: Security_TimestampAggExp!
  accessType: Security_VarcharAggExp!
  securityFileAccessId: Security_UuidAggExp!
  securityFileId: Security_UuidAggExp!
  securityProcessExecutionId: Security_UuidAggExp!
  securitySystemId: Security_UuidAggExp!
}

input Security_SecurityFileAccessesBoolExp {
  _and: [Security_SecurityFileAccessesBoolExp!]
  _not: Security_SecurityFileAccessesBoolExp
  _or: [Security_SecurityFileAccessesBoolExp!]
  accessTime: Security_TimestampBoolExp
  accessType: Security_VarcharBoolExp
  securityFile: Security_SecurityFilesBoolExp
  securityFileAccessId: Security_UuidBoolExp
  securityFileId: Security_UuidBoolExp
  securityHost: Security_SecurityHostsBoolExp
  securityProcessExecution: Security_SecurityProcessExecutionsBoolExp
  securityProcessExecutionId: Security_UuidBoolExp
  securitySystemId: Security_UuidBoolExp
}

input Security_SecurityFileAccessesFilterInput {
  limit: Int
  offset: Int
  order_by: [Security_SecurityFileAccessesOrderByExp!]
  where: Security_SecurityFileAccessesBoolExp
}

input Security_SecurityFileAccessesOrderByExp {
  accessTime: OrderBy
  accessType: OrderBy
  securityFile: Security_SecurityFilesOrderByExp
  securityFileAccessId: OrderBy
  securityFileId: OrderBy
  securityHost: Security_SecurityHostsOrderByExp
  securityProcessExecution: Security_SecurityProcessExecutionsOrderByExp
  securityProcessExecutionId: OrderBy
  securitySystemId: OrderBy
}

"""
Table storing information about files on systems, including file paths, hashes, and sizes.
"""
type Security_SecurityFiles {
  """Hash of the file, used for integrity checks."""
  fileHash: Security_Varchar

  """Path to the file on the system."""
  filePath: Security_Text

  """Size of the file in bytes."""
  fileSize: Security_Int8

  """Timestamp when the file was last modified."""
  lastModified: Security_Timestamp
  securityFileAccesses(limit: Int, offset: Int, order_by: [Security_SecurityFileAccessesOrderByExp!], where: Security_SecurityFileAccessesBoolExp): [Security_SecurityFileAccesses!]
  securityFileAccessesAggregate(filter_input: Security_SecurityFileAccessesFilterInput): Security_SecurityFileAccessesAggExp!

  """Unique identifier for the file."""
  securityFileId: Security_Uuid!
  securityHost: Security_SecurityHosts

  """Identifier of the system where the file is located."""
  securityHostId: Security_Uuid!
}

type Security_SecurityFilesAggExp {
  _count: Int!
  fileHash: Security_VarcharAggExp!
  filePath: Security_TextAggExp!
  fileSize: Security_Int8AggExp!
  lastModified: Security_TimestampAggExp!
  securityFileId: Security_UuidAggExp!
  securityHostId: Security_UuidAggExp!
}

input Security_SecurityFilesBoolExp {
  _and: [Security_SecurityFilesBoolExp!]
  _not: Security_SecurityFilesBoolExp
  _or: [Security_SecurityFilesBoolExp!]
  fileHash: Security_VarcharBoolExp
  filePath: Security_TextBoolExp
  fileSize: Security_Int8BoolExp
  lastModified: Security_TimestampBoolExp
  securityFileAccesses: Security_SecurityFileAccessesBoolExp
  securityFileId: Security_UuidBoolExp
  securityHost: Security_SecurityHostsBoolExp
  securityHostId: Security_UuidBoolExp
}

input Security_SecurityFilesFilterInput {
  limit: Int
  offset: Int
  order_by: [Security_SecurityFilesOrderByExp!]
  where: Security_SecurityFilesBoolExp
}

input Security_SecurityFilesOrderByExp {
  fileHash: OrderBy
  filePath: OrderBy
  fileSize: OrderBy
  lastModified: OrderBy
  securityFileId: OrderBy
  securityHost: Security_SecurityHostsOrderByExp
  securityHostId: OrderBy
}

"""
Table storing information about file threats, linking file hashes to threat levels and descriptions.
"""
type Security_SecurityFileThreats {
  """Hash of the file, used to identify threats."""
  securityFileThreatHash: Security_Varchar!

  """Description of the threat associated with the file."""
  threatDescription: Security_Text

  """Level of threat associated with the file."""
  threatLevel: Security_SecurityThreatLevelType!
}

type Security_SecurityFileThreatsAggExp {
  _count: Int!
  securityFileThreatHash: Security_VarcharAggExp!
  threatDescription: Security_TextAggExp!
  threatLevel: Security_SecurityThreatLevelTypeAggExp!
}

input Security_SecurityFileThreatsBoolExp {
  _and: [Security_SecurityFileThreatsBoolExp!]
  _not: Security_SecurityFileThreatsBoolExp
  _or: [Security_SecurityFileThreatsBoolExp!]
  securityFileThreatHash: Security_VarcharBoolExp
  threatDescription: Security_TextBoolExp
  threatLevel: Security_SecurityThreatLevelTypeBoolExp
}

input Security_SecurityFileThreatsFilterInput {
  limit: Int
  offset: Int
  order_by: [Security_SecurityFileThreatsOrderByExp!]
  where: Security_SecurityFileThreatsBoolExp
}

input Security_SecurityFileThreatsOrderByExp {
  securityFileThreatHash: OrderBy
  threatDescription: OrderBy
  threatLevel: OrderBy
}

"""
Table storing information about governance groups, used for managing access and permissions.
"""
type Security_SecurityGovernanceGroups {
  groupOwner: Enterprise_EnterpriseAssociates

  """Name of the governance group."""
  name: Security_Varchar

  """Identifier of the owner of the governance group."""
  ownerId: Security_Int4

  """Unique identifier for the governance group."""
  securityGovernanceGroupId: Security_Uuid!
}

type Security_SecurityGovernanceGroupsAggExp {
  _count: Int!
  name: Security_VarcharAggExp!
  ownerId: Security_Int4AggExp!
  securityGovernanceGroupId: Security_UuidAggExp!
}

input Security_SecurityGovernanceGroupsBoolExp {
  _and: [Security_SecurityGovernanceGroupsBoolExp!]
  _not: Security_SecurityGovernanceGroupsBoolExp
  _or: [Security_SecurityGovernanceGroupsBoolExp!]
  name: Security_VarcharBoolExp
  ownerId: Security_Int4BoolExp
  securityGovernanceGroupId: Security_UuidBoolExp
}

input Security_SecurityGovernanceGroupsFilterInput {
  limit: Int
  offset: Int
  order_by: [Security_SecurityGovernanceGroupsOrderByExp!]
  where: Security_SecurityGovernanceGroupsBoolExp
}

input Security_SecurityGovernanceGroupsOrderByExp {
  name: OrderBy
  ownerId: OrderBy
  securityGovernanceGroupId: OrderBy
}

"""
Table storing information about systems, including hardware, software, and status details.
"""
type Security_SecurityHosts {
  """Identifier of the agent installed on the system."""
  agentIdentifier: Security_Varchar

  """Status of the agent installed on the system."""
  agentStatus: Security_SecurityAgentStatus

  """Version of the agent installed on the system."""
  agentVersion: Security_Varchar

  """Email of the asset owner."""
  assetOwnerEmail: Security_Varchar

  """Name of the asset owner."""
  assetOwnerName: Security_Varchar

  """Date when the system was checked out."""
  checkedOutDate: Security_Date

  """Compliance status of the system."""
  compliance: Security_SecurityComplianceStatus

  """Hostname of the system."""
  hostname: Security_Varchar

  """External IP address of the system."""
  ipAddressExternal: Security_Inet

  """Internal IP address of the system."""
  ipAddressInternal: Security_Inet

  """Timestamp when the system was last patched."""
  lastPatched: Security_Timestamp

  """Timestamp when the system was last seen."""
  lastSeen: Security_Timestamp

  """MAC address of the system."""
  macAddress: Security_Varchar

  """Operating system of the system."""
  os: Security_Varchar

  """Operating system version."""
  osVersion: Security_Varchar

  """Patch level of the system."""
  patchLevel: Security_Varchar

  """Status of system patches."""
  patchStatus: Security_SecurityPatchStatus

  """Indicates if patch updates are available."""
  patchUpdateAvailable: Security_Bool
  securityFileAccesses(limit: Int, offset: Int, order_by: [Security_SecurityFileAccessesOrderByExp!], where: Security_SecurityFileAccessesBoolExp): [Security_SecurityFileAccesses!]
  securityFileAccessesAggregate(filter_input: Security_SecurityFileAccessesFilterInput): Security_SecurityFileAccessesAggExp!
  securityFiles(limit: Int, offset: Int, order_by: [Security_SecurityFilesOrderByExp!], where: Security_SecurityFilesBoolExp): [Security_SecurityFiles!]
  securityFilesAggregate(filter_input: Security_SecurityFilesFilterInput): Security_SecurityFilesAggExp!

  """Unique identifier for the system."""
  securityHostId: Security_Uuid!
  securityInstalledApplications(limit: Int, offset: Int, order_by: [Security_SecurityInstalledApplicationsOrderByExp!], where: Security_SecurityInstalledApplicationsBoolExp): [Security_SecurityInstalledApplications!]
  securityInstalledApplicationsAggregate(filter_input: Security_SecurityInstalledApplicationsFilterInput): Security_SecurityInstalledApplicationsAggExp!
  securityNetworkConnections(limit: Int, offset: Int, order_by: [Security_SecurityNetworkConnectionsOrderByExp!], where: Security_SecurityNetworkConnectionsBoolExp): [Security_SecurityNetworkConnections!]
  securityNetworkConnectionsAggregate(filter_input: Security_SecurityNetworkConnectionsFilterInput): Security_SecurityNetworkConnectionsAggExp!
  securityOpenPorts(limit: Int, offset: Int, order_by: [Security_SecurityOpenPortsOrderByExp!], where: Security_SecurityOpenPortsBoolExp): [Security_SecurityOpenPorts!]
  securityOpenPortsAggregate(filter_input: Security_SecurityOpenPortsFilterInput): Security_SecurityOpenPortsAggExp!
  securityProcessExecutions(limit: Int, offset: Int, order_by: [Security_SecurityProcessExecutionsOrderByExp!], where: Security_SecurityProcessExecutionsBoolExp): [Security_SecurityProcessExecutions!]
  securityProcessExecutionsAggregate(filter_input: Security_SecurityProcessExecutionsFilterInput): Security_SecurityProcessExecutionsAggExp!
  securityResourceDefinitions(limit: Int, offset: Int, order_by: [Security_SecurityResourceDefinitionsOrderByExp!], where: Security_SecurityResourceDefinitionsBoolExp): [Security_SecurityResourceDefinitions!]
  securityResourceDefinitionsAggregate(filter_input: Security_SecurityResourceDefinitionsFilterInput): Security_SecurityResourceDefinitionsAggExp!
  securityRunningServices(limit: Int, offset: Int, order_by: [Security_SecurityRunningServicesOrderByExp!], where: Security_SecurityRunningServicesBoolExp): [Security_SecurityRunningServices!]
  securityRunningServicesAggregate(filter_input: Security_SecurityRunningServicesFilterInput): Security_SecurityRunningServicesAggExp!
  securitySystemStats(limit: Int, offset: Int, order_by: [Security_SecuritySystemStatsOrderByExp!], where: Security_SecuritySystemStatsBoolExp): [Security_SecuritySystemStats!]
  securitySystemStatsAggregate(filter_input: Security_SecuritySystemStatsFilterInput): Security_SecuritySystemStatsAggExp!
  securityUsbDeviceUsages(limit: Int, offset: Int, order_by: [Security_SecurityUsbDeviceUsageOrderByExp!], where: Security_SecurityUsbDeviceUsageBoolExp): [Security_SecurityUsbDeviceUsage!]
  securityUsbDeviceUsagesAggregate(filter_input: Security_SecurityUsbDeviceUsageFilterInput): Security_SecurityUsbDeviceUsageAggExp!

  """Type of the system (e.g., server, workstation)."""
  systemType: Security_SecuritySystemType
}

type Security_SecurityHostsAggExp {
  _count: Int!
  agentIdentifier: Security_VarcharAggExp!
  agentStatus: Security_SecurityAgentStatusAggExp!
  agentVersion: Security_VarcharAggExp!
  assetOwnerEmail: Security_VarcharAggExp!
  assetOwnerName: Security_VarcharAggExp!
  checkedOutDate: Security_DateAggExp!
  compliance: Security_SecurityComplianceStatusAggExp!
  hostname: Security_VarcharAggExp!
  ipAddressExternal: Security_InetAggExp!
  ipAddressInternal: Security_InetAggExp!
  lastPatched: Security_TimestampAggExp!
  lastSeen: Security_TimestampAggExp!
  macAddress: Security_VarcharAggExp!
  os: Security_VarcharAggExp!
  osVersion: Security_VarcharAggExp!
  patchLevel: Security_VarcharAggExp!
  patchStatus: Security_SecurityPatchStatusAggExp!
  patchUpdateAvailable: Security_BoolAggExp!
  securityHostId: Security_UuidAggExp!
  systemType: Security_SecuritySystemTypeAggExp!
}

input Security_SecurityHostsBoolExp {
  _and: [Security_SecurityHostsBoolExp!]
  _not: Security_SecurityHostsBoolExp
  _or: [Security_SecurityHostsBoolExp!]
  agentIdentifier: Security_VarcharBoolExp
  agentStatus: Security_SecurityAgentStatusBoolExp
  agentVersion: Security_VarcharBoolExp
  assetOwnerEmail: Security_VarcharBoolExp
  assetOwnerName: Security_VarcharBoolExp
  checkedOutDate: Security_DateBoolExp
  compliance: Security_SecurityComplianceStatusBoolExp
  hostname: Security_VarcharBoolExp
  ipAddressExternal: Security_InetBoolExp
  ipAddressInternal: Security_InetBoolExp
  lastPatched: Security_TimestampBoolExp
  lastSeen: Security_TimestampBoolExp
  macAddress: Security_VarcharBoolExp
  os: Security_VarcharBoolExp
  osVersion: Security_VarcharBoolExp
  patchLevel: Security_VarcharBoolExp
  patchStatus: Security_SecurityPatchStatusBoolExp
  patchUpdateAvailable: Security_BoolBoolExp
  securityFileAccesses: Security_SecurityFileAccessesBoolExp
  securityFiles: Security_SecurityFilesBoolExp
  securityHostId: Security_UuidBoolExp
  securityInstalledApplications: Security_SecurityInstalledApplicationsBoolExp
  securityNetworkConnections: Security_SecurityNetworkConnectionsBoolExp
  securityOpenPorts: Security_SecurityOpenPortsBoolExp
  securityProcessExecutions: Security_SecurityProcessExecutionsBoolExp
  securityResourceDefinitions: Security_SecurityResourceDefinitionsBoolExp
  securityRunningServices: Security_SecurityRunningServicesBoolExp
  securitySystemStats: Security_SecuritySystemStatsBoolExp
  securityUsbDeviceUsages: Security_SecurityUsbDeviceUsageBoolExp
  systemType: Security_SecuritySystemTypeBoolExp
}

input Security_SecurityHostsFilterInput {
  limit: Int
  offset: Int
  order_by: [Security_SecurityHostsOrderByExp!]
  where: Security_SecurityHostsBoolExp
}

input Security_SecurityHostsOrderByExp {
  agentIdentifier: OrderBy
  agentStatus: OrderBy
  agentVersion: OrderBy
  assetOwnerEmail: OrderBy
  assetOwnerName: OrderBy
  checkedOutDate: OrderBy
  compliance: OrderBy
  hostname: OrderBy
  ipAddressExternal: OrderBy
  ipAddressInternal: OrderBy
  lastPatched: OrderBy
  lastSeen: OrderBy
  macAddress: OrderBy
  os: OrderBy
  osVersion: OrderBy
  patchLevel: OrderBy
  patchStatus: OrderBy
  patchUpdateAvailable: OrderBy
  securityHostId: OrderBy
  systemType: OrderBy
}

"""
Table storing information about IAM logins, tracking user access via accounts.
"""
type Security_SecurityIamLogins {
  """Method used for the login."""
  loginMethod: Security_Varchar!

  """Timestamp when the login occurred."""
  loginTime: Security_Timestamp!

  """Timestamp when the logout occurred."""
  logoutTime: Security_Timestamp
  securityAccount: Security_SecurityAccounts

  """Identifier of the account used for the login."""
  securityAccountId: Security_Uuid!

  """Unique identifier for the IAM login."""
  securityLoginId: Security_Uuid!

  """Username used for the login."""
  userName: Security_Varchar
}

type Security_SecurityIamLoginsAggExp {
  _count: Int!
  loginMethod: Security_VarcharAggExp!
  loginTime: Security_TimestampAggExp!
  logoutTime: Security_TimestampAggExp!
  securityAccountId: Security_UuidAggExp!
  securityLoginId: Security_UuidAggExp!
  userName: Security_VarcharAggExp!
}

input Security_SecurityIamLoginsBoolExp {
  _and: [Security_SecurityIamLoginsBoolExp!]
  _not: Security_SecurityIamLoginsBoolExp
  _or: [Security_SecurityIamLoginsBoolExp!]
  loginMethod: Security_VarcharBoolExp
  loginTime: Security_TimestampBoolExp
  logoutTime: Security_TimestampBoolExp
  securityAccount: Security_SecurityAccountsBoolExp
  securityAccountId: Security_UuidBoolExp
  securityLoginId: Security_UuidBoolExp
  userName: Security_VarcharBoolExp
}

input Security_SecurityIamLoginsFilterInput {
  limit: Int
  offset: Int
  order_by: [Security_SecurityIamLoginsOrderByExp!]
  where: Security_SecurityIamLoginsBoolExp
}

input Security_SecurityIamLoginsOrderByExp {
  loginMethod: OrderBy
  loginTime: OrderBy
  logoutTime: OrderBy
  securityAccount: Security_SecurityAccountsOrderByExp
  securityAccountId: OrderBy
  securityLoginId: OrderBy
  userName: OrderBy
}

"""
Table storing information about user identities, representing individuals or entities.
"""
type Security_SecurityIdentities {
  """Timestamp when the identity was created."""
  created: Security_Timestamp

  """User-friendly name of the identity."""
  displayName: Security_Varchar

  """Identifies access to an environment e.g production, development, etc."""
  environment: Security_SecurityEnvironment
  identityOwner: Enterprise_EnterpriseAssociates

  """Indicates if the identity is inactive."""
  inactive: Security_Bool

  """Indicates if the identity is a fallback approver."""
  isFallbackApprover: Security_Bool

  """Timestamp when the identity was last modified."""
  modified: Security_Timestamp

  """Internal name of the identity."""
  name: Security_Varchar
  ownerId: Security_Int4
  securityAccounts(limit: Int, offset: Int, order_by: [Security_SecurityAccountsOrderByExp!], where: Security_SecurityAccountsBoolExp): [Security_SecurityAccounts!]
  securityAccountsAggregate(filter_input: Security_SecurityAccountsFilterInput): Security_SecurityAccountsAggExp!

  """Unique identifier for the identity."""
  securityIdentityId: Security_Uuid!
  securityIdentityProfile: Security_SecurityIdentityProfiles

  """Identifier of the identity profile associated with the identity."""
  securityIdentityProfileId: Security_Uuid
  securityIdentityRoles(limit: Int, offset: Int, order_by: [Security_SecurityIdentityRolesOrderByExp!], where: Security_SecurityIdentityRolesBoolExp): [Security_SecurityIdentityRoles!]
  securityIdentityRolesAggregate(filter_input: Security_SecurityIdentityRolesFilterInput): Security_SecurityIdentityRolesAggExp!

  """
  If false than access is considered to be on behalf of the owner, otherwise
  this is service account used for system to system automation
  """
  serviceAccount: Security_Bool

  """Status of the identity."""
  status: Security_Varchar

  """Timestamp when the identity was last synced."""
  synced: Security_Timestamp
}

type Security_SecurityIdentitiesAggExp {
  _count: Int!
  created: Security_TimestampAggExp!
  displayName: Security_VarcharAggExp!
  environment: Security_SecurityEnvironmentAggExp!
  inactive: Security_BoolAggExp!
  isFallbackApprover: Security_BoolAggExp!
  modified: Security_TimestampAggExp!
  name: Security_VarcharAggExp!
  ownerId: Security_Int4AggExp!
  securityIdentityId: Security_UuidAggExp!
  securityIdentityProfileId: Security_UuidAggExp!
  serviceAccount: Security_BoolAggExp!
  status: Security_VarcharAggExp!
  synced: Security_TimestampAggExp!
}

input Security_SecurityIdentitiesBoolExp {
  _and: [Security_SecurityIdentitiesBoolExp!]
  _not: Security_SecurityIdentitiesBoolExp
  _or: [Security_SecurityIdentitiesBoolExp!]
  created: Security_TimestampBoolExp
  displayName: Security_VarcharBoolExp
  environment: Security_SecurityEnvironmentBoolExp
  inactive: Security_BoolBoolExp
  isFallbackApprover: Security_BoolBoolExp
  modified: Security_TimestampBoolExp
  name: Security_VarcharBoolExp
  ownerId: Security_Int4BoolExp
  securityAccounts: Security_SecurityAccountsBoolExp
  securityIdentityId: Security_UuidBoolExp
  securityIdentityProfile: Security_SecurityIdentityProfilesBoolExp
  securityIdentityProfileId: Security_UuidBoolExp
  securityIdentityRoles: Security_SecurityIdentityRolesBoolExp
  serviceAccount: Security_BoolBoolExp
  status: Security_VarcharBoolExp
  synced: Security_TimestampBoolExp
}

input Security_SecurityIdentitiesFilterInput {
  limit: Int
  offset: Int
  order_by: [Security_SecurityIdentitiesOrderByExp!]
  where: Security_SecurityIdentitiesBoolExp
}

input Security_SecurityIdentitiesOrderByExp {
  created: OrderBy
  displayName: OrderBy
  environment: OrderBy
  inactive: OrderBy
  isFallbackApprover: OrderBy
  modified: OrderBy
  name: OrderBy
  ownerId: OrderBy
  securityIdentityId: OrderBy
  securityIdentityProfile: Security_SecurityIdentityProfilesOrderByExp
  securityIdentityProfileId: OrderBy
  serviceAccount: OrderBy
  status: OrderBy
  synced: OrderBy
}

"""
Table storing information about identity profiles, defining sets of attributes and rules for identities.
"""
type Security_SecurityIdentityProfiles {
  """How often accounts with this profile should be reviewed, in days."""
  accessReviewFrequencyDays: Security_Int4

  """When the profile was created."""
  createdAt: Security_Timestamptz

  """Default session timeout in minutes for identities with this profile."""
  defaultSessionTimeoutMinutes: Security_Int4

  """Detailed description of the profile and its purpose."""
  description: Security_Text

  """
  Maximum number of days an identity can be inactive before automatic disablement.
  """
  maxInactiveDays: Security_Int4

  """Name of the identity profile."""
  name: Security_Varchar

  """Number of days before password expiration for this profile type."""
  passwordExpiryDays: Security_Int4

  """
  Whether multi-factor authentication is required for identities with this profile.
  """
  requiresMfa: Security_Bool

  """Risk classification level for this profile type."""
  riskLevel: Security_SecurityRiskLevel!
  securityIdentities(limit: Int, offset: Int, order_by: [Security_SecurityIdentitiesOrderByExp!], where: Security_SecurityIdentitiesBoolExp): [Security_SecurityIdentities!]
  securityIdentitiesAggregate(filter_input: Security_SecurityIdentitiesFilterInput): Security_SecurityIdentitiesAggExp!

  """Unique identifier for the identity profile."""
  securityIdentityProfileId: Security_Uuid!

  """When the profile was last updated."""
  updatedAt: Security_Timestamptz
}

type Security_SecurityIdentityProfilesAggExp {
  _count: Int!
  accessReviewFrequencyDays: Security_Int4AggExp!
  createdAt: Security_TimestamptzAggExp!
  defaultSessionTimeoutMinutes: Security_Int4AggExp!
  description: Security_TextAggExp!
  maxInactiveDays: Security_Int4AggExp!
  name: Security_VarcharAggExp!
  passwordExpiryDays: Security_Int4AggExp!
  requiresMfa: Security_BoolAggExp!
  riskLevel: Security_SecurityRiskLevelAggExp!
  securityIdentityProfileId: Security_UuidAggExp!
  updatedAt: Security_TimestamptzAggExp!
}

input Security_SecurityIdentityProfilesBoolExp {
  _and: [Security_SecurityIdentityProfilesBoolExp!]
  _not: Security_SecurityIdentityProfilesBoolExp
  _or: [Security_SecurityIdentityProfilesBoolExp!]
  accessReviewFrequencyDays: Security_Int4BoolExp
  createdAt: Security_TimestamptzBoolExp
  defaultSessionTimeoutMinutes: Security_Int4BoolExp
  description: Security_TextBoolExp
  maxInactiveDays: Security_Int4BoolExp
  name: Security_VarcharBoolExp
  passwordExpiryDays: Security_Int4BoolExp
  requiresMfa: Security_BoolBoolExp
  riskLevel: Security_SecurityRiskLevelBoolExp
  securityIdentities: Security_SecurityIdentitiesBoolExp
  securityIdentityProfileId: Security_UuidBoolExp
  updatedAt: Security_TimestamptzBoolExp
}

input Security_SecurityIdentityProfilesFilterInput {
  limit: Int
  offset: Int
  order_by: [Security_SecurityIdentityProfilesOrderByExp!]
  where: Security_SecurityIdentityProfilesBoolExp
}

input Security_SecurityIdentityProfilesOrderByExp {
  accessReviewFrequencyDays: OrderBy
  createdAt: OrderBy
  defaultSessionTimeoutMinutes: OrderBy
  description: OrderBy
  maxInactiveDays: OrderBy
  name: OrderBy
  passwordExpiryDays: OrderBy
  requiresMfa: OrderBy
  riskLevel: OrderBy
  securityIdentityProfileId: OrderBy
  updatedAt: OrderBy
}

"""Associates identities with roles"""
type Security_SecurityIdentityRoles {
  """Whether this assignment is currently active"""
  active: Security_Bool!

  """Who assigned the role"""
  assignedById: Security_Int4

  """When the role was no longer effective"""
  endDate: Security_Timestamptz
  securityIdentity: Security_SecurityIdentities

  """Reference to the identity"""
  securityIdentityId: Security_Uuid!

  """Reference to the identity role assignment"""
  securityIdentityRoleId: Security_Uuid!
  securityRole: Security_SecurityRoles

  """Reference to the role"""
  securityRoleId: Security_Uuid!

  """When the role became effective"""
  startDate: Security_Timestamptz
}

type Security_SecurityIdentityRolesAggExp {
  _count: Int!
  active: Security_BoolAggExp!
  assignedById: Security_Int4AggExp!
  endDate: Security_TimestamptzAggExp!
  securityIdentityId: Security_UuidAggExp!
  securityIdentityRoleId: Security_UuidAggExp!
  securityRoleId: Security_UuidAggExp!
  startDate: Security_TimestamptzAggExp!
}

input Security_SecurityIdentityRolesBoolExp {
  _and: [Security_SecurityIdentityRolesBoolExp!]
  _not: Security_SecurityIdentityRolesBoolExp
  _or: [Security_SecurityIdentityRolesBoolExp!]
  active: Security_BoolBoolExp
  assignedById: Security_Int4BoolExp
  endDate: Security_TimestamptzBoolExp
  securityIdentity: Security_SecurityIdentitiesBoolExp
  securityIdentityId: Security_UuidBoolExp
  securityIdentityRoleId: Security_UuidBoolExp
  securityRole: Security_SecurityRolesBoolExp
  securityRoleId: Security_UuidBoolExp
  startDate: Security_TimestamptzBoolExp
}

input Security_SecurityIdentityRolesFilterInput {
  limit: Int
  offset: Int
  order_by: [Security_SecurityIdentityRolesOrderByExp!]
  where: Security_SecurityIdentityRolesBoolExp
}

input Security_SecurityIdentityRolesOrderByExp {
  active: OrderBy
  assignedById: OrderBy
  endDate: OrderBy
  securityIdentity: Security_SecurityIdentitiesOrderByExp
  securityIdentityId: OrderBy
  securityIdentityRoleId: OrderBy
  securityRole: Security_SecurityRolesOrderByExp
  securityRoleId: OrderBy
  startDate: OrderBy
}

"""
Table storing information about installed applications on servers, tracking software installations.
"""
type Security_SecurityInstalledApplications {
  """Reference to the application definition."""
  appMgmtApplicationId: Security_Uuid!

  """Version of the installed application."""
  applicationVersion: Security_Varchar

  """Timestamp when the application was installed."""
  installationDate: Security_Timestamp
  securityHost: Security_SecurityHosts

  """Identifier of the system where the application is installed."""
  securityHostId: Security_Uuid!
}

type Security_SecurityInstalledApplicationsAggExp {
  _count: Int!
  appMgmtApplicationId: Security_UuidAggExp!
  applicationVersion: Security_VarcharAggExp!
  installationDate: Security_TimestampAggExp!
  securityHostId: Security_UuidAggExp!
}

input Security_SecurityInstalledApplicationsBoolExp {
  _and: [Security_SecurityInstalledApplicationsBoolExp!]
  _not: Security_SecurityInstalledApplicationsBoolExp
  _or: [Security_SecurityInstalledApplicationsBoolExp!]
  appMgmtApplicationId: Security_UuidBoolExp
  applicationVersion: Security_VarcharBoolExp
  installationDate: Security_TimestampBoolExp
  securityHost: Security_SecurityHostsBoolExp
  securityHostId: Security_UuidBoolExp
}

input Security_SecurityInstalledApplicationsFilterInput {
  limit: Int
  offset: Int
  order_by: [Security_SecurityInstalledApplicationsOrderByExp!]
  where: Security_SecurityInstalledApplicationsBoolExp
}

input Security_SecurityInstalledApplicationsOrderByExp {
  appMgmtApplicationId: OrderBy
  applicationVersion: OrderBy
  installationDate: OrderBy
  securityHost: Security_SecurityHostsOrderByExp
  securityHostId: OrderBy
}

"""
Table storing information about network connections, tracking network traffic and activity.
"""
type Security_SecurityNetworkConnections {
  """Type of network connection (e.g., TCP, UDP)."""
  connectionType: Security_Varchar

  """Timestamp when the connection ended."""
  endTime: Security_Timestamp

  """Local IP address of the connection."""
  localIp: Security_Inet

  """Local port number of the connection."""
  localPort: Security_Int4

  """Network protocol used for the connection."""
  protocol: Security_SecurityNetworkProtocols

  """Remote IP address of the connection."""
  remoteIp: Security_Inet

  """Remote port number of the connection."""
  remotePort: Security_Int4
  securityHost: Security_SecurityHosts

  """Identifier of the system where the connection originated."""
  securityHostId: Security_Uuid!

  """Unique identifier for the network connection."""
  securityNetworkConnectionId: Security_Uuid!
  securityProcessExecution: Security_SecurityProcessExecutions

  """Identifier of the process execution that initiated the connection."""
  securityProcessExecutionId: Security_Uuid!

  """Timestamp when the connection started."""
  startTime: Security_Timestamp
}

type Security_SecurityNetworkConnectionsAggExp {
  _count: Int!
  connectionType: Security_VarcharAggExp!
  endTime: Security_TimestampAggExp!
  localIp: Security_InetAggExp!
  localPort: Security_Int4AggExp!
  protocol: Security_SecurityNetworkProtocolsAggExp!
  remoteIp: Security_InetAggExp!
  remotePort: Security_Int4AggExp!
  securityHostId: Security_UuidAggExp!
  securityNetworkConnectionId: Security_UuidAggExp!
  securityProcessExecutionId: Security_UuidAggExp!
  startTime: Security_TimestampAggExp!
}

input Security_SecurityNetworkConnectionsBoolExp {
  _and: [Security_SecurityNetworkConnectionsBoolExp!]
  _not: Security_SecurityNetworkConnectionsBoolExp
  _or: [Security_SecurityNetworkConnectionsBoolExp!]
  connectionType: Security_VarcharBoolExp
  endTime: Security_TimestampBoolExp
  localIp: Security_InetBoolExp
  localPort: Security_Int4BoolExp
  protocol: Security_SecurityNetworkProtocolsBoolExp
  remoteIp: Security_InetBoolExp
  remotePort: Security_Int4BoolExp
  securityHost: Security_SecurityHostsBoolExp
  securityHostId: Security_UuidBoolExp
  securityNetworkConnectionId: Security_UuidBoolExp
  securityProcessExecution: Security_SecurityProcessExecutionsBoolExp
  securityProcessExecutionId: Security_UuidBoolExp
  startTime: Security_TimestampBoolExp
}

input Security_SecurityNetworkConnectionsFilterInput {
  limit: Int
  offset: Int
  order_by: [Security_SecurityNetworkConnectionsOrderByExp!]
  where: Security_SecurityNetworkConnectionsBoolExp
}

input Security_SecurityNetworkConnectionsOrderByExp {
  connectionType: OrderBy
  endTime: OrderBy
  localIp: OrderBy
  localPort: OrderBy
  protocol: OrderBy
  remoteIp: OrderBy
  remotePort: OrderBy
  securityHost: Security_SecurityHostsOrderByExp
  securityHostId: OrderBy
  securityNetworkConnectionId: OrderBy
  securityProcessExecution: Security_SecurityProcessExecutionsOrderByExp
  securityProcessExecutionId: OrderBy
  startTime: OrderBy
}

"""
Table storing detailed information about network events for security monitoring and analysis.
"""
type Security_SecurityNetworkEvents {
  """TCP acknowledgment number, if applicable."""
  ack: Security_Int8

  """Number of bytes received during the event."""
  bytesReceived: Security_Int4!

  """Number of bytes sent during the event."""
  bytesSent: Security_Int4!

  """Timestamp when the event record was created."""
  createdAt: Security_Timestamp

  """Destination IP address of the network event."""
  destIp: Security_Inet!

  """Destination port of the network event."""
  destPort: Security_Int4!

  """Length of the data packet in bytes."""
  length: Security_Int4!

  """Detailed log message associated with the network event."""
  logMessage: Security_Text

  """Network protocol used (e.g., TCP, UDP, ICMP)."""
  protocol: Security_SecurityNetworkProtocols!
  securityDevice: Security_SecurityDevices

  """
  IP address of the device involved in the event (likely the device that logged the event)
  """
  securityDeviceId: Security_Inet!

  """Unique identifier for the network event. Automatically incrementing."""
  securityNetworkEventId: Security_Int8!

  """TCP sequence number, if applicable."""
  sequence: Security_Int8

  """Source IP address of the network event."""
  sourceIp: Security_Inet!

  """Source port of the network event."""
  sourcePort: Security_Int4!

  """Status of the network event (e.g., success, failure, blocked)."""
  status: Security_Varchar!

  """TCP flags associated with the event, if applicable."""
  tcpFlag: Security_SecurityTcpFlagType

  """Timestamp when the network event occurred."""
  timestamp: Security_Timestamp!

  """TCP window size, if applicable."""
  windowSize: Security_Int4
}

type Security_SecurityNetworkEventsAggExp {
  _count: Int!
  ack: Security_Int8AggExp!
  bytesReceived: Security_Int4AggExp!
  bytesSent: Security_Int4AggExp!
  createdAt: Security_TimestampAggExp!
  destIp: Security_InetAggExp!
  destPort: Security_Int4AggExp!
  length: Security_Int4AggExp!
  logMessage: Security_TextAggExp!
  protocol: Security_SecurityNetworkProtocolsAggExp!
  securityDeviceId: Security_InetAggExp!
  securityNetworkEventId: Security_Int8AggExp!
  sequence: Security_Int8AggExp!
  sourceIp: Security_InetAggExp!
  sourcePort: Security_Int4AggExp!
  status: Security_VarcharAggExp!
  tcpFlag: Security_SecurityTcpFlagTypeAggExp!
  timestamp: Security_TimestampAggExp!
  windowSize: Security_Int4AggExp!
}

input Security_SecurityNetworkEventsBoolExp {
  _and: [Security_SecurityNetworkEventsBoolExp!]
  _not: Security_SecurityNetworkEventsBoolExp
  _or: [Security_SecurityNetworkEventsBoolExp!]
  ack: Security_Int8BoolExp
  bytesReceived: Security_Int4BoolExp
  bytesSent: Security_Int4BoolExp
  createdAt: Security_TimestampBoolExp
  destIp: Security_InetBoolExp
  destPort: Security_Int4BoolExp
  length: Security_Int4BoolExp
  logMessage: Security_TextBoolExp
  protocol: Security_SecurityNetworkProtocolsBoolExp
  securityDevice: Security_SecurityDevicesBoolExp
  securityDeviceId: Security_InetBoolExp
  securityNetworkEventId: Security_Int8BoolExp
  sequence: Security_Int8BoolExp
  sourceIp: Security_InetBoolExp
  sourcePort: Security_Int4BoolExp
  status: Security_VarcharBoolExp
  tcpFlag: Security_SecurityTcpFlagTypeBoolExp
  timestamp: Security_TimestampBoolExp
  windowSize: Security_Int4BoolExp
}

input Security_SecurityNetworkEventsFilterInput {
  limit: Int
  offset: Int
  order_by: [Security_SecurityNetworkEventsOrderByExp!]
  where: Security_SecurityNetworkEventsBoolExp
}

input Security_SecurityNetworkEventsOrderByExp {
  ack: OrderBy
  bytesReceived: OrderBy
  bytesSent: OrderBy
  createdAt: OrderBy
  destIp: OrderBy
  destPort: OrderBy
  length: OrderBy
  logMessage: OrderBy
  protocol: OrderBy
  securityDevice: Security_SecurityDevicesOrderByExp
  securityDeviceId: OrderBy
  securityNetworkEventId: OrderBy
  sequence: OrderBy
  sourceIp: OrderBy
  sourcePort: OrderBy
  status: OrderBy
  tcpFlag: OrderBy
  timestamp: OrderBy
  windowSize: OrderBy
}

scalar Security_SecurityNetworkProtocols

type Security_SecurityNetworkProtocolsAggExp {
  _count: Int!
  _count_distinct: Int!
  max: Security_SecurityNetworkProtocols
  min: Security_SecurityNetworkProtocols
}

input Security_SecurityNetworkProtocolsBoolExp {
  _and: [Security_SecurityNetworkProtocolsBoolExp!]
  _eq: Security_SecurityNetworkProtocols
  _gt: Security_SecurityNetworkProtocols
  _gte: Security_SecurityNetworkProtocols
  _in: [Security_SecurityNetworkProtocols!]
  _is_null: Boolean
  _lt: Security_SecurityNetworkProtocols
  _lte: Security_SecurityNetworkProtocols
  _neq: Security_SecurityNetworkProtocols
  _not: Security_SecurityNetworkProtocolsBoolExp
  _or: [Security_SecurityNetworkProtocolsBoolExp!]
}

"""
Table storing information about open ports on systems, tracking network services and potential vulnerabilities.
"""
type Security_SecurityOpenPorts {
  """Port number that is open."""
  portNumber: Security_Int4!

  """Network protocol associated with the open port."""
  protocol: Security_SecurityNetworkProtocols!
  securityHost: Security_SecurityHosts

  """Identifier of the system with the open port."""
  securityHostId: Security_Uuid!
}

type Security_SecurityOpenPortsAggExp {
  _count: Int!
  portNumber: Security_Int4AggExp!
  protocol: Security_SecurityNetworkProtocolsAggExp!
  securityHostId: Security_UuidAggExp!
}

input Security_SecurityOpenPortsBoolExp {
  _and: [Security_SecurityOpenPortsBoolExp!]
  _not: Security_SecurityOpenPortsBoolExp
  _or: [Security_SecurityOpenPortsBoolExp!]
  portNumber: Security_Int4BoolExp
  protocol: Security_SecurityNetworkProtocolsBoolExp
  securityHost: Security_SecurityHostsBoolExp
  securityHostId: Security_UuidBoolExp
}

input Security_SecurityOpenPortsFilterInput {
  limit: Int
  offset: Int
  order_by: [Security_SecurityOpenPortsOrderByExp!]
  where: Security_SecurityOpenPortsBoolExp
}

input Security_SecurityOpenPortsOrderByExp {
  portNumber: OrderBy
  protocol: OrderBy
  securityHost: Security_SecurityHostsOrderByExp
  securityHostId: OrderBy
}

scalar Security_SecurityPatchStatus

type Security_SecurityPatchStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: Security_SecurityPatchStatus
  min: Security_SecurityPatchStatus
}

input Security_SecurityPatchStatusBoolExp {
  _and: [Security_SecurityPatchStatusBoolExp!]
  _eq: Security_SecurityPatchStatus
  _gt: Security_SecurityPatchStatus
  _gte: Security_SecurityPatchStatus
  _in: [Security_SecurityPatchStatus!]
  _is_null: Boolean
  _lt: Security_SecurityPatchStatus
  _lte: Security_SecurityPatchStatus
  _neq: Security_SecurityPatchStatus
  _not: Security_SecurityPatchStatusBoolExp
  _or: [Security_SecurityPatchStatusBoolExp!]
}

scalar Security_SecurityPermissionType

type Security_SecurityPermissionTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: Security_SecurityPermissionType
  min: Security_SecurityPermissionType
}

input Security_SecurityPermissionTypeBoolExp {
  _and: [Security_SecurityPermissionTypeBoolExp!]
  _eq: Security_SecurityPermissionType
  _gt: Security_SecurityPermissionType
  _gte: Security_SecurityPermissionType
  _in: [Security_SecurityPermissionType!]
  _is_null: Boolean
  _lt: Security_SecurityPermissionType
  _lte: Security_SecurityPermissionType
  _neq: Security_SecurityPermissionType
  _not: Security_SecurityPermissionTypeBoolExp
  _or: [Security_SecurityPermissionTypeBoolExp!]
}

"""Table storing security policies and their details."""
type Security_SecurityPolicies {
  """Indicates whether the policy is currently active."""
  active: Security_Bool

  """Timestamp when the policy was created."""
  createdAt: Security_Timestamp

  """Who created the policy"""
  createdById: Security_Int4

  """Detailed description of the policy."""
  description: Security_Text!

  """Timestamp when the policy was no longer effective."""
  endedAt: Security_Timestamp

  """Name of the policy. Must be unique."""
  name: Security_Varchar!
  securityPolicyAttributes(limit: Int, offset: Int, order_by: [Security_SecurityPolicyAttributesOrderByExp!], where: Security_SecurityPolicyAttributesBoolExp): [Security_SecurityPolicyAttributes!]
  securityPolicyAttributesAggregate(filter_input: Security_SecurityPolicyAttributesFilterInput): Security_SecurityPolicyAttributesAggExp!

  """Unique identifier for the policy."""
  securityPolicyId: Security_Uuid!
  securityPolicyRules(limit: Int, offset: Int, order_by: [Security_SecurityPolicyRulesOrderByExp!], where: Security_SecurityPolicyRulesBoolExp): [Security_SecurityPolicyRules!]
  securityPolicyRulesAggregate(filter_input: Security_SecurityPolicyRulesFilterInput): Security_SecurityPolicyRulesAggExp!

  """Timestamp when the policy became effective."""
  startedAt: Security_Timestamp!

  """Timestamp when the policy was last updated."""
  updatedAt: Security_Timestamp

  """Who updated the policy"""
  updatedById: Security_Int4
}

type Security_SecurityPoliciesAggExp {
  _count: Int!
  active: Security_BoolAggExp!
  createdAt: Security_TimestampAggExp!
  createdById: Security_Int4AggExp!
  description: Security_TextAggExp!
  endedAt: Security_TimestampAggExp!
  name: Security_VarcharAggExp!
  securityPolicyId: Security_UuidAggExp!
  startedAt: Security_TimestampAggExp!
  updatedAt: Security_TimestampAggExp!
  updatedById: Security_Int4AggExp!
}

input Security_SecurityPoliciesBoolExp {
  _and: [Security_SecurityPoliciesBoolExp!]
  _not: Security_SecurityPoliciesBoolExp
  _or: [Security_SecurityPoliciesBoolExp!]
  active: Security_BoolBoolExp
  createdAt: Security_TimestampBoolExp
  createdById: Security_Int4BoolExp
  description: Security_TextBoolExp
  endedAt: Security_TimestampBoolExp
  name: Security_VarcharBoolExp
  securityPolicyAttributes: Security_SecurityPolicyAttributesBoolExp
  securityPolicyId: Security_UuidBoolExp
  securityPolicyRules: Security_SecurityPolicyRulesBoolExp
  startedAt: Security_TimestampBoolExp
  updatedAt: Security_TimestampBoolExp
  updatedById: Security_Int4BoolExp
}

input Security_SecurityPoliciesFilterInput {
  limit: Int
  offset: Int
  order_by: [Security_SecurityPoliciesOrderByExp!]
  where: Security_SecurityPoliciesBoolExp
}

input Security_SecurityPoliciesOrderByExp {
  active: OrderBy
  createdAt: OrderBy
  createdById: OrderBy
  description: OrderBy
  endedAt: OrderBy
  name: OrderBy
  securityPolicyId: OrderBy
  startedAt: OrderBy
  updatedAt: OrderBy
  updatedById: OrderBy
}

"""
Table storing attributes associated with security policies. Allows for flexible policy configuration.
"""
type Security_SecurityPolicyAttributes {
  """Name of the policy attribute."""
  attributeName: Security_Varchar!

  """Value of the policy attribute."""
  attributeValue: Security_Varchar
  securityPolicy: Security_SecurityPolicies

  """Foreign key referencing the policy_id in the policies table."""
  securityPolicyId: Security_Uuid!
}

type Security_SecurityPolicyAttributesAggExp {
  _count: Int!
  attributeName: Security_VarcharAggExp!
  attributeValue: Security_VarcharAggExp!
  securityPolicyId: Security_UuidAggExp!
}

input Security_SecurityPolicyAttributesBoolExp {
  _and: [Security_SecurityPolicyAttributesBoolExp!]
  _not: Security_SecurityPolicyAttributesBoolExp
  _or: [Security_SecurityPolicyAttributesBoolExp!]
  attributeName: Security_VarcharBoolExp
  attributeValue: Security_VarcharBoolExp
  securityPolicy: Security_SecurityPoliciesBoolExp
  securityPolicyId: Security_UuidBoolExp
}

input Security_SecurityPolicyAttributesFilterInput {
  limit: Int
  offset: Int
  order_by: [Security_SecurityPolicyAttributesOrderByExp!]
  where: Security_SecurityPolicyAttributesBoolExp
}

input Security_SecurityPolicyAttributesOrderByExp {
  attributeName: OrderBy
  attributeValue: OrderBy
  securityPolicy: Security_SecurityPoliciesOrderByExp
  securityPolicyId: OrderBy
}

"""Table storing specific rules associated with security policies."""
type Security_SecurityPolicyRules {
  """Detailed description of the policy rule."""
  ruleDescription: Security_Text!

  """Name of the policy rule."""
  ruleName: Security_Varchar!
  securityPolicy: Security_SecurityPolicies

  """Foreign key referencing the policy_id in the policies table."""
  securityPolicyId: Security_Uuid

  """Unique identifier for the policy rule."""
  securityPolicyRuleId: Security_Uuid!
}

type Security_SecurityPolicyRulesAggExp {
  _count: Int!
  ruleDescription: Security_TextAggExp!
  ruleName: Security_VarcharAggExp!
  securityPolicyId: Security_UuidAggExp!
  securityPolicyRuleId: Security_UuidAggExp!
}

input Security_SecurityPolicyRulesBoolExp {
  _and: [Security_SecurityPolicyRulesBoolExp!]
  _not: Security_SecurityPolicyRulesBoolExp
  _or: [Security_SecurityPolicyRulesBoolExp!]
  ruleDescription: Security_TextBoolExp
  ruleName: Security_VarcharBoolExp
  securityPolicy: Security_SecurityPoliciesBoolExp
  securityPolicyId: Security_UuidBoolExp
  securityPolicyRuleId: Security_UuidBoolExp
}

input Security_SecurityPolicyRulesFilterInput {
  limit: Int
  offset: Int
  order_by: [Security_SecurityPolicyRulesOrderByExp!]
  where: Security_SecurityPolicyRulesBoolExp
}

input Security_SecurityPolicyRulesOrderByExp {
  ruleDescription: OrderBy
  ruleName: OrderBy
  securityPolicy: Security_SecurityPoliciesOrderByExp
  securityPolicyId: OrderBy
  securityPolicyRuleId: OrderBy
}

"""
Table storing information about process executions, tracking application activity and system behavior.
"""
type Security_SecurityProcessExecutions {
  """Command line used to execute the process."""
  commandLine: Security_Text

  """Timestamp when the process execution ended."""
  endTime: Security_Timestamp

  """Process ID of the parent process."""
  parentProcessId: Security_Int4

  """Process ID of the executed process."""
  processId: Security_Int4

  """Name of the executed process."""
  processName: Security_Varchar
  securityFileAccesses(limit: Int, offset: Int, order_by: [Security_SecurityFileAccessesOrderByExp!], where: Security_SecurityFileAccessesBoolExp): [Security_SecurityFileAccesses!]
  securityFileAccessesAggregate(filter_input: Security_SecurityFileAccessesFilterInput): Security_SecurityFileAccessesAggExp!
  securityHost: Security_SecurityHosts

  """Identifier of the system where the process was executed."""
  securityHostId: Security_Uuid!
  securityNetworkConnections(limit: Int, offset: Int, order_by: [Security_SecurityNetworkConnectionsOrderByExp!], where: Security_SecurityNetworkConnectionsBoolExp): [Security_SecurityNetworkConnections!]
  securityNetworkConnectionsAggregate(filter_input: Security_SecurityNetworkConnectionsFilterInput): Security_SecurityNetworkConnectionsAggExp!

  """Unique identifier for the process execution."""
  securityProcessExecutionId: Security_Uuid!

  """Timestamp when the process execution started."""
  startTime: Security_Timestamp

  """Username of the user who executed the process."""
  userName: Security_Varchar
}

type Security_SecurityProcessExecutionsAggExp {
  _count: Int!
  commandLine: Security_TextAggExp!
  endTime: Security_TimestampAggExp!
  parentProcessId: Security_Int4AggExp!
  processId: Security_Int4AggExp!
  processName: Security_VarcharAggExp!
  securityHostId: Security_UuidAggExp!
  securityProcessExecutionId: Security_UuidAggExp!
  startTime: Security_TimestampAggExp!
  userName: Security_VarcharAggExp!
}

input Security_SecurityProcessExecutionsBoolExp {
  _and: [Security_SecurityProcessExecutionsBoolExp!]
  _not: Security_SecurityProcessExecutionsBoolExp
  _or: [Security_SecurityProcessExecutionsBoolExp!]
  commandLine: Security_TextBoolExp
  endTime: Security_TimestampBoolExp
  parentProcessId: Security_Int4BoolExp
  processId: Security_Int4BoolExp
  processName: Security_VarcharBoolExp
  securityFileAccesses: Security_SecurityFileAccessesBoolExp
  securityHost: Security_SecurityHostsBoolExp
  securityHostId: Security_UuidBoolExp
  securityNetworkConnections: Security_SecurityNetworkConnectionsBoolExp
  securityProcessExecutionId: Security_UuidBoolExp
  startTime: Security_TimestampBoolExp
  userName: Security_VarcharBoolExp
}

input Security_SecurityProcessExecutionsFilterInput {
  limit: Int
  offset: Int
  order_by: [Security_SecurityProcessExecutionsOrderByExp!]
  where: Security_SecurityProcessExecutionsBoolExp
}

input Security_SecurityProcessExecutionsOrderByExp {
  commandLine: OrderBy
  endTime: OrderBy
  parentProcessId: OrderBy
  processId: OrderBy
  processName: OrderBy
  securityHost: Security_SecurityHostsOrderByExp
  securityHostId: OrderBy
  securityProcessExecutionId: OrderBy
  startTime: OrderBy
  userName: OrderBy
}

"""Defines resources that can be secured through entitlements"""
type Security_SecurityResourceDefinitions {
  """
  Owner application that manages this resource (for APPLICATION and DATA types)
  """
  applicationId: Security_Uuid

  """When the resource definition was created"""
  createdAt: Security_Timestamptz

  """Who created the resource definition"""
  createdById: Security_Int4

  """Description of the resource"""
  description: Security_Text

  """Host where the resource is located (for HOST types)"""
  hostId: Security_Uuid

  """
  Network device where the resource is located (for NETWORK_DEVICE types)
  """
  networkDeviceId: Security_Inet

  """
  Unique identifier for the resource (table name, API endpoint, hostname, IP address, etc.)
  """
  resourceIdentifier: Security_Varchar!

  """Name of the resource"""
  resourceName: Security_Varchar!

  """Type of resource (DATA, APPLICATION, HOST, NETWORK_DEVICE)"""
  resourceType: Security_SecurityResourceType!
  securityDevice: Security_SecurityDevices
  securityEntitlementResources(limit: Int, offset: Int, order_by: [Security_SecurityEntitlementResourcesOrderByExp!], where: Security_SecurityEntitlementResourcesBoolExp): [Security_SecurityEntitlementResources!]
  securityEntitlementResourcesAggregate(filter_input: Security_SecurityEntitlementResourcesFilterInput): Security_SecurityEntitlementResourcesAggExp!
  securityHost: Security_SecurityHosts

  """Unique identifier for the resource"""
  securityResourceId: Security_Uuid!
}

type Security_SecurityResourceDefinitionsAggExp {
  _count: Int!
  applicationId: Security_UuidAggExp!
  createdAt: Security_TimestamptzAggExp!
  createdById: Security_Int4AggExp!
  description: Security_TextAggExp!
  hostId: Security_UuidAggExp!
  networkDeviceId: Security_InetAggExp!
  resourceIdentifier: Security_VarcharAggExp!
  resourceName: Security_VarcharAggExp!
  resourceType: Security_SecurityResourceTypeAggExp!
  securityResourceId: Security_UuidAggExp!
}

input Security_SecurityResourceDefinitionsBoolExp {
  _and: [Security_SecurityResourceDefinitionsBoolExp!]
  _not: Security_SecurityResourceDefinitionsBoolExp
  _or: [Security_SecurityResourceDefinitionsBoolExp!]
  applicationId: Security_UuidBoolExp
  createdAt: Security_TimestamptzBoolExp
  createdById: Security_Int4BoolExp
  description: Security_TextBoolExp
  hostId: Security_UuidBoolExp
  networkDeviceId: Security_InetBoolExp
  resourceIdentifier: Security_VarcharBoolExp
  resourceName: Security_VarcharBoolExp
  resourceType: Security_SecurityResourceTypeBoolExp
  securityDevice: Security_SecurityDevicesBoolExp
  securityEntitlementResources: Security_SecurityEntitlementResourcesBoolExp
  securityHost: Security_SecurityHostsBoolExp
  securityResourceId: Security_UuidBoolExp
}

input Security_SecurityResourceDefinitionsFilterInput {
  limit: Int
  offset: Int
  order_by: [Security_SecurityResourceDefinitionsOrderByExp!]
  where: Security_SecurityResourceDefinitionsBoolExp
}

input Security_SecurityResourceDefinitionsOrderByExp {
  applicationId: OrderBy
  createdAt: OrderBy
  createdById: OrderBy
  description: OrderBy
  hostId: OrderBy
  networkDeviceId: OrderBy
  resourceIdentifier: OrderBy
  resourceName: OrderBy
  resourceType: OrderBy
  securityDevice: Security_SecurityDevicesOrderByExp
  securityHost: Security_SecurityHostsOrderByExp
  securityResourceId: OrderBy
}

scalar Security_SecurityResourceType

type Security_SecurityResourceTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: Security_SecurityResourceType
  min: Security_SecurityResourceType
}

input Security_SecurityResourceTypeBoolExp {
  _and: [Security_SecurityResourceTypeBoolExp!]
  _eq: Security_SecurityResourceType
  _gt: Security_SecurityResourceType
  _gte: Security_SecurityResourceType
  _in: [Security_SecurityResourceType!]
  _is_null: Boolean
  _lt: Security_SecurityResourceType
  _lte: Security_SecurityResourceType
  _neq: Security_SecurityResourceType
  _not: Security_SecurityResourceTypeBoolExp
  _or: [Security_SecurityResourceTypeBoolExp!]
}

scalar Security_SecurityRiskLevel

type Security_SecurityRiskLevelAggExp {
  _count: Int!
  _count_distinct: Int!
  max: Security_SecurityRiskLevel
  min: Security_SecurityRiskLevel
}

input Security_SecurityRiskLevelBoolExp {
  _and: [Security_SecurityRiskLevelBoolExp!]
  _eq: Security_SecurityRiskLevel
  _gt: Security_SecurityRiskLevel
  _gte: Security_SecurityRiskLevel
  _in: [Security_SecurityRiskLevel!]
  _is_null: Boolean
  _lt: Security_SecurityRiskLevel
  _lte: Security_SecurityRiskLevel
  _neq: Security_SecurityRiskLevel
  _not: Security_SecurityRiskLevelBoolExp
  _or: [Security_SecurityRiskLevelBoolExp!]
}

"""Maps roles to their constituent entitlements"""
type Security_SecurityRoleEntitlements {
  """Incicates that the entitlement is effective at this moment"""
  active: Security_Bool

  """When the entitlement was added to the role"""
  createdAt: Security_Timestamptz!

  """Who added the entitlement to the role"""
  createdById: Security_Int4

  """When the entitlement was no longer effective"""
  endedAt: Security_Timestamptz
  securityEnhancedEntitlement: Security_SecurityEnhancedEntitlements

  """Reference to the entitlement"""
  securityEntitlementId: Security_Uuid!
  securityRole: Security_SecurityRoles

  """Reference to the role entitlement pair"""
  securityRoleEntitlementId: Security_Uuid!

  """Reference to the role"""
  securityRoleId: Security_Uuid!

  """When the entitlement became effective"""
  startedAt: Security_Timestamptz!

  """Who added the entitlement to the role"""
  updatedById: Security_Int4
}

type Security_SecurityRoleEntitlementsAggExp {
  _count: Int!
  active: Security_BoolAggExp!
  createdAt: Security_TimestamptzAggExp!
  createdById: Security_Int4AggExp!
  endedAt: Security_TimestamptzAggExp!
  securityEntitlementId: Security_UuidAggExp!
  securityRoleEntitlementId: Security_UuidAggExp!
  securityRoleId: Security_UuidAggExp!
  startedAt: Security_TimestamptzAggExp!
  updatedById: Security_Int4AggExp!
}

input Security_SecurityRoleEntitlementsBoolExp {
  _and: [Security_SecurityRoleEntitlementsBoolExp!]
  _not: Security_SecurityRoleEntitlementsBoolExp
  _or: [Security_SecurityRoleEntitlementsBoolExp!]
  active: Security_BoolBoolExp
  createdAt: Security_TimestamptzBoolExp
  createdById: Security_Int4BoolExp
  endedAt: Security_TimestamptzBoolExp
  securityEnhancedEntitlement: Security_SecurityEnhancedEntitlementsBoolExp
  securityEntitlementId: Security_UuidBoolExp
  securityRole: Security_SecurityRolesBoolExp
  securityRoleEntitlementId: Security_UuidBoolExp
  securityRoleId: Security_UuidBoolExp
  startedAt: Security_TimestamptzBoolExp
  updatedById: Security_Int4BoolExp
}

input Security_SecurityRoleEntitlementsFilterInput {
  limit: Int
  offset: Int
  order_by: [Security_SecurityRoleEntitlementsOrderByExp!]
  where: Security_SecurityRoleEntitlementsBoolExp
}

input Security_SecurityRoleEntitlementsOrderByExp {
  active: OrderBy
  createdAt: OrderBy
  createdById: OrderBy
  endedAt: OrderBy
  securityEnhancedEntitlement: Security_SecurityEnhancedEntitlementsOrderByExp
  securityEntitlementId: OrderBy
  securityRole: Security_SecurityRolesOrderByExp
  securityRoleEntitlementId: OrderBy
  securityRoleId: OrderBy
  startedAt: OrderBy
  updatedById: OrderBy
}

"""Defines roles that can be assigned to identities"""
type Security_SecurityRoles {
  """When the role was created"""
  createdAt: Security_Timestamptz

  """Who created the role"""
  createdById: Security_Int4

  """Description of the role's purpose and scope"""
  description: Security_Text

  """User-friendly name for the role"""
  displayName: Security_Varchar

  """Application that manages this role"""
  managingApplicationId: Security_Uuid

  """Who owns/manages this role"""
  ownerId: Security_Int4

  """Internal name for the role"""
  roleName: Security_Varchar!
  roleOwner: Enterprise_EnterpriseAssociates
  securityIdentityRoles(limit: Int, offset: Int, order_by: [Security_SecurityIdentityRolesOrderByExp!], where: Security_SecurityIdentityRolesBoolExp): [Security_SecurityIdentityRoles!]
  securityIdentityRolesAggregate(filter_input: Security_SecurityIdentityRolesFilterInput): Security_SecurityIdentityRolesAggExp!
  securityRoleEntitlements(limit: Int, offset: Int, order_by: [Security_SecurityRoleEntitlementsOrderByExp!], where: Security_SecurityRoleEntitlementsBoolExp): [Security_SecurityRoleEntitlements!]
  securityRoleEntitlementsAggregate(filter_input: Security_SecurityRoleEntitlementsFilterInput): Security_SecurityRoleEntitlementsAggExp!

  """Unique identifier for the role"""
  securityRoleId: Security_Uuid!

  """Current status of the role"""
  status: Security_SecurityRoleStatus!
}

type Security_SecurityRolesAggExp {
  _count: Int!
  createdAt: Security_TimestamptzAggExp!
  createdById: Security_Int4AggExp!
  description: Security_TextAggExp!
  displayName: Security_VarcharAggExp!
  managingApplicationId: Security_UuidAggExp!
  ownerId: Security_Int4AggExp!
  roleName: Security_VarcharAggExp!
  securityRoleId: Security_UuidAggExp!
  status: Security_SecurityRoleStatusAggExp!
}

input Security_SecurityRolesBoolExp {
  _and: [Security_SecurityRolesBoolExp!]
  _not: Security_SecurityRolesBoolExp
  _or: [Security_SecurityRolesBoolExp!]
  createdAt: Security_TimestamptzBoolExp
  createdById: Security_Int4BoolExp
  description: Security_TextBoolExp
  displayName: Security_VarcharBoolExp
  managingApplicationId: Security_UuidBoolExp
  ownerId: Security_Int4BoolExp
  roleName: Security_VarcharBoolExp
  securityIdentityRoles: Security_SecurityIdentityRolesBoolExp
  securityRoleEntitlements: Security_SecurityRoleEntitlementsBoolExp
  securityRoleId: Security_UuidBoolExp
  status: Security_SecurityRoleStatusBoolExp
}

input Security_SecurityRolesFilterInput {
  limit: Int
  offset: Int
  order_by: [Security_SecurityRolesOrderByExp!]
  where: Security_SecurityRolesBoolExp
}

input Security_SecurityRolesOrderByExp {
  createdAt: OrderBy
  createdById: OrderBy
  description: OrderBy
  displayName: OrderBy
  managingApplicationId: OrderBy
  ownerId: OrderBy
  roleName: OrderBy
  securityRoleId: OrderBy
  status: OrderBy
}

scalar Security_SecurityRoleStatus

type Security_SecurityRoleStatusAggExp {
  _count: Int!
  _count_distinct: Int!
  max: Security_SecurityRoleStatus
  min: Security_SecurityRoleStatus
}

input Security_SecurityRoleStatusBoolExp {
  _and: [Security_SecurityRoleStatusBoolExp!]
  _eq: Security_SecurityRoleStatus
  _gt: Security_SecurityRoleStatus
  _gte: Security_SecurityRoleStatus
  _in: [Security_SecurityRoleStatus!]
  _is_null: Boolean
  _lt: Security_SecurityRoleStatus
  _lte: Security_SecurityRoleStatus
  _neq: Security_SecurityRoleStatus
  _not: Security_SecurityRoleStatusBoolExp
  _or: [Security_SecurityRoleStatusBoolExp!]
}

"""
Table storing information about running services on systems, tracking system services and their states.
"""
type Security_SecurityRunningServices {
  """Name of the running service."""
  runningServiceName: Security_Varchar!
  securityHost: Security_SecurityHosts

  """Identifier of the system with the running service."""
  securityHostId: Security_Uuid!

  """Timestamp when the service started running."""
  startTime: Security_Timestamp

  """Status of the running service (e.g., running, stopped)."""
  status: Security_Varchar
}

type Security_SecurityRunningServicesAggExp {
  _count: Int!
  runningServiceName: Security_VarcharAggExp!
  securityHostId: Security_UuidAggExp!
  startTime: Security_TimestampAggExp!
  status: Security_VarcharAggExp!
}

input Security_SecurityRunningServicesBoolExp {
  _and: [Security_SecurityRunningServicesBoolExp!]
  _not: Security_SecurityRunningServicesBoolExp
  _or: [Security_SecurityRunningServicesBoolExp!]
  runningServiceName: Security_VarcharBoolExp
  securityHost: Security_SecurityHostsBoolExp
  securityHostId: Security_UuidBoolExp
  startTime: Security_TimestampBoolExp
  status: Security_VarcharBoolExp
}

input Security_SecurityRunningServicesFilterInput {
  limit: Int
  offset: Int
  order_by: [Security_SecurityRunningServicesOrderByExp!]
  where: Security_SecurityRunningServicesBoolExp
}

input Security_SecurityRunningServicesOrderByExp {
  runningServiceName: OrderBy
  securityHost: Security_SecurityHostsOrderByExp
  securityHostId: OrderBy
  startTime: OrderBy
  status: OrderBy
}

"""
Table storing system statistics, tracking resource usage and performance metrics.
"""
type Security_SecuritySystemStats {
  """CPU usage percentage."""
  cpuUsagePercent: Security_Int4

  """Free disk space in gigabytes."""
  diskFreeGb: Security_Int4

  """Total disk space in gigabytes."""
  diskTotalGb: Security_Int4

  """Total memory in gigabytes."""
  memoryTotalGb: Security_Int4

  """Memory usage in gigabytes."""
  memoryUsageGb: Security_Numeric
  securityHost: Security_SecurityHosts

  """Identifier of the system for which statistics are recorded."""
  securityHostId: Security_Uuid!

  """Unique identifier for the system statistics record."""
  securitySystemStatId: Security_Uuid!

  """Timestamp when the statistics were recorded."""
  timestamp: Security_Timestamp
}

type Security_SecuritySystemStatsAggExp {
  _count: Int!
  cpuUsagePercent: Security_Int4AggExp!
  diskFreeGb: Security_Int4AggExp!
  diskTotalGb: Security_Int4AggExp!
  memoryTotalGb: Security_Int4AggExp!
  memoryUsageGb: Security_NumericAggExp!
  securityHostId: Security_UuidAggExp!
  securitySystemStatId: Security_UuidAggExp!
  timestamp: Security_TimestampAggExp!
}

input Security_SecuritySystemStatsBoolExp {
  _and: [Security_SecuritySystemStatsBoolExp!]
  _not: Security_SecuritySystemStatsBoolExp
  _or: [Security_SecuritySystemStatsBoolExp!]
  cpuUsagePercent: Security_Int4BoolExp
  diskFreeGb: Security_Int4BoolExp
  diskTotalGb: Security_Int4BoolExp
  memoryTotalGb: Security_Int4BoolExp
  memoryUsageGb: Security_NumericBoolExp
  securityHost: Security_SecurityHostsBoolExp
  securityHostId: Security_UuidBoolExp
  securitySystemStatId: Security_UuidBoolExp
  timestamp: Security_TimestampBoolExp
}

input Security_SecuritySystemStatsFilterInput {
  limit: Int
  offset: Int
  order_by: [Security_SecuritySystemStatsOrderByExp!]
  where: Security_SecuritySystemStatsBoolExp
}

input Security_SecuritySystemStatsOrderByExp {
  cpuUsagePercent: OrderBy
  diskFreeGb: OrderBy
  diskTotalGb: OrderBy
  memoryTotalGb: OrderBy
  memoryUsageGb: OrderBy
  securityHost: Security_SecurityHostsOrderByExp
  securityHostId: OrderBy
  securitySystemStatId: OrderBy
  timestamp: OrderBy
}

scalar Security_SecuritySystemType

type Security_SecuritySystemTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: Security_SecuritySystemType
  min: Security_SecuritySystemType
}

input Security_SecuritySystemTypeBoolExp {
  _and: [Security_SecuritySystemTypeBoolExp!]
  _eq: Security_SecuritySystemType
  _gt: Security_SecuritySystemType
  _gte: Security_SecuritySystemType
  _in: [Security_SecuritySystemType!]
  _is_null: Boolean
  _lt: Security_SecuritySystemType
  _lte: Security_SecuritySystemType
  _neq: Security_SecuritySystemType
  _not: Security_SecuritySystemTypeBoolExp
  _or: [Security_SecuritySystemTypeBoolExp!]
}

scalar Security_SecurityTcpFlagType

type Security_SecurityTcpFlagTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: Security_SecurityTcpFlagType
  min: Security_SecurityTcpFlagType
}

input Security_SecurityTcpFlagTypeBoolExp {
  _and: [Security_SecurityTcpFlagTypeBoolExp!]
  _eq: Security_SecurityTcpFlagType
  _gt: Security_SecurityTcpFlagType
  _gte: Security_SecurityTcpFlagType
  _in: [Security_SecurityTcpFlagType!]
  _is_null: Boolean
  _lt: Security_SecurityTcpFlagType
  _lte: Security_SecurityTcpFlagType
  _neq: Security_SecurityTcpFlagType
  _not: Security_SecurityTcpFlagTypeBoolExp
  _or: [Security_SecurityTcpFlagTypeBoolExp!]
}

scalar Security_SecurityThreatLevelType

type Security_SecurityThreatLevelTypeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: Security_SecurityThreatLevelType
  min: Security_SecurityThreatLevelType
}

input Security_SecurityThreatLevelTypeBoolExp {
  _and: [Security_SecurityThreatLevelTypeBoolExp!]
  _eq: Security_SecurityThreatLevelType
  _gt: Security_SecurityThreatLevelType
  _gte: Security_SecurityThreatLevelType
  _in: [Security_SecurityThreatLevelType!]
  _is_null: Boolean
  _lt: Security_SecurityThreatLevelType
  _lte: Security_SecurityThreatLevelType
  _neq: Security_SecurityThreatLevelType
  _not: Security_SecurityThreatLevelTypeBoolExp
  _or: [Security_SecurityThreatLevelTypeBoolExp!]
}

"""
Table storing information about USB device usage, tracking connection and disconnection times.
"""
type Security_SecurityUsbDeviceUsage {
  """Timestamp when the USB device was connected."""
  connectionTime: Security_Timestamp

  """Name of the USB device."""
  deviceName: Security_Varchar

  """Type of the USB device."""
  deviceType: Security_Varchar

  """Timestamp when the USB device was disconnected."""
  disconnectionTime: Security_Timestamp
  securityHost: Security_SecurityHosts

  """Identifier of the system where the USB device was used."""
  securitySystemId: Security_Uuid!

  """Unique identifier for the USB device usage record."""
  securityUsbDeviceUsageId: Security_Uuid!
}

type Security_SecurityUsbDeviceUsageAggExp {
  _count: Int!
  connectionTime: Security_TimestampAggExp!
  deviceName: Security_VarcharAggExp!
  deviceType: Security_VarcharAggExp!
  disconnectionTime: Security_TimestampAggExp!
  securitySystemId: Security_UuidAggExp!
  securityUsbDeviceUsageId: Security_UuidAggExp!
}

input Security_SecurityUsbDeviceUsageBoolExp {
  _and: [Security_SecurityUsbDeviceUsageBoolExp!]
  _not: Security_SecurityUsbDeviceUsageBoolExp
  _or: [Security_SecurityUsbDeviceUsageBoolExp!]
  connectionTime: Security_TimestampBoolExp
  deviceName: Security_VarcharBoolExp
  deviceType: Security_VarcharBoolExp
  disconnectionTime: Security_TimestampBoolExp
  securityHost: Security_SecurityHostsBoolExp
  securitySystemId: Security_UuidBoolExp
  securityUsbDeviceUsageId: Security_UuidBoolExp
}

input Security_SecurityUsbDeviceUsageFilterInput {
  limit: Int
  offset: Int
  order_by: [Security_SecurityUsbDeviceUsageOrderByExp!]
  where: Security_SecurityUsbDeviceUsageBoolExp
}

input Security_SecurityUsbDeviceUsageOrderByExp {
  connectionTime: OrderBy
  deviceName: OrderBy
  deviceType: OrderBy
  disconnectionTime: OrderBy
  securityHost: Security_SecurityHostsOrderByExp
  securitySystemId: OrderBy
  securityUsbDeviceUsageId: OrderBy
}

scalar Security_Text

type Security_TextAggExp {
  _count: Int!
  _count_distinct: Int!
  max: Security_Text
  min: Security_Text
}

input Security_TextBoolExp {
  _and: [Security_TextBoolExp!]
  _eq: Security_Text
  _gt: Security_Text
  _gte: Security_Text
  _ilike: Security_Text
  _in: [Security_Text!]
  _iregex: Security_Text
  _is_null: Boolean
  _like: Security_Text
  _lt: Security_Text
  _lte: Security_Text
  _neq: Security_Text
  _nilike: Security_Text
  _niregex: Security_Text
  _nlike: Security_Text
  _not: Security_TextBoolExp
  _nregex: Security_Text
  _or: [Security_TextBoolExp!]
  _regex: Security_Text
  starts_with: Security_Text
  ts_match_tt: Security_Text
}

scalar Security_Timestamp

type Security_TimestampAggExp {
  _count: Int!
  _count_distinct: Int!
  max: Security_Timestamp
  min: Security_Timestamp
}

input Security_TimestampBoolExp {
  _and: [Security_TimestampBoolExp!]
  _eq: Security_Timestamp
  _gt: Security_Timestamp
  _gte: Security_Timestamp
  _in: [Security_Timestamp!]
  _is_null: Boolean
  _lt: Security_Timestamp
  _lte: Security_Timestamp
  _neq: Security_Timestamp
  _not: Security_TimestampBoolExp
  _or: [Security_TimestampBoolExp!]
}

scalar Security_Timestamptz

type Security_TimestamptzAggExp {
  _count: Int!
  _count_distinct: Int!
  max: Security_Timestamptz
  min: Security_Timestamptz
}

input Security_TimestamptzBoolExp {
  _and: [Security_TimestamptzBoolExp!]
  _eq: Security_Timestamptz
  _gt: Security_Timestamptz
  _gte: Security_Timestamptz
  _in: [Security_Timestamptz!]
  _is_null: Boolean
  _lt: Security_Timestamptz
  _lte: Security_Timestamptz
  _neq: Security_Timestamptz
  _not: Security_TimestamptzBoolExp
  _or: [Security_TimestamptzBoolExp!]
}

scalar Security_Uuid

type Security_UuidAggExp {
  _count: Int!
  _count_distinct: Int!
}

input Security_UuidBoolExp {
  _and: [Security_UuidBoolExp!]
  _eq: Security_Uuid
  _gt: Security_Uuid
  _gte: Security_Uuid
  _in: [Security_Uuid!]
  _is_null: Boolean
  _lt: Security_Uuid
  _lte: Security_Uuid
  _neq: Security_Uuid
  _not: Security_UuidBoolExp
  _or: [Security_UuidBoolExp!]
}

scalar Security_Varchar

type Security_VarcharAggExp {
  _count: Int!
  _count_distinct: Int!
  max: Security_Text
  min: Security_Text
}

input Security_VarcharBoolExp {
  _and: [Security_VarcharBoolExp!]
  _eq: Security_Varchar
  _gt: Security_Varchar
  _gte: Security_Varchar
  _ilike: Security_Varchar
  _in: [Security_Varchar!]
  _iregex: Security_Varchar
  _is_null: Boolean
  _like: Security_Varchar
  _lt: Security_Varchar
  _lte: Security_Varchar
  _neq: Security_Varchar
  _nilike: Security_Varchar
  _niregex: Security_Varchar
  _nlike: Security_Varchar
  _not: Security_VarcharBoolExp
  _nregex: Security_Varchar
  _or: [Security_VarcharBoolExp!]
  _regex: Security_Varchar
  starts_with: Security_Varchar
  ts_match_tt: Security_Varchar
}

scalar SmallBusinessBanking_Bool

type SmallBusinessBanking_BoolAggExp {
  _count: Int!
  _count_distinct: Int!
  bool_and: SmallBusinessBanking_Bool
  bool_or: SmallBusinessBanking_Bool
  every: SmallBusinessBanking_Bool
}

input SmallBusinessBanking_BoolBoolExp {
  _and: [SmallBusinessBanking_BoolBoolExp!]
  _eq: SmallBusinessBanking_Bool
  _gt: SmallBusinessBanking_Bool
  _gte: SmallBusinessBanking_Bool
  _in: [SmallBusinessBanking_Bool!]
  _is_null: Boolean
  _lt: SmallBusinessBanking_Bool
  _lte: SmallBusinessBanking_Bool
  _neq: SmallBusinessBanking_Bool
  _not: SmallBusinessBanking_BoolBoolExp
  _or: [SmallBusinessBanking_BoolBoolExp!]
}

scalar SmallBusinessBanking_Date

type SmallBusinessBanking_DateAggExp {
  _count: Int!
  _count_distinct: Int!
  max: SmallBusinessBanking_Date
  min: SmallBusinessBanking_Date
}

input SmallBusinessBanking_DateBoolExp {
  _and: [SmallBusinessBanking_DateBoolExp!]
  _eq: SmallBusinessBanking_Date
  _gt: SmallBusinessBanking_Date
  _gte: SmallBusinessBanking_Date
  _in: [SmallBusinessBanking_Date!]
  _is_null: Boolean
  _lt: SmallBusinessBanking_Date
  _lte: SmallBusinessBanking_Date
  _neq: SmallBusinessBanking_Date
  _not: SmallBusinessBanking_DateBoolExp
  _or: [SmallBusinessBanking_DateBoolExp!]
}

scalar SmallBusinessBanking_EnterpriseCurrencyCode

type SmallBusinessBanking_EnterpriseCurrencyCodeAggExp {
  _count: Int!
  _count_distinct: Int!
  max: SmallBusinessBanking_EnterpriseCurrencyCode
  min: SmallBusinessBanking_EnterpriseCurrencyCode
}

input SmallBusinessBanking_EnterpriseCurrencyCodeBoolExp {
  _and: [SmallBusinessBanking_EnterpriseCurrencyCodeBoolExp!]
  _eq: SmallBusinessBanking_EnterpriseCurrencyCode
  _gt: SmallBusinessBanking_EnterpriseCurrencyCode
  _gte: SmallBusinessBanking_EnterpriseCurrencyCode
  _in: [SmallBusinessBanking_EnterpriseCurrencyCode!]
  _is_null: Boolean
  _lt: SmallBusinessBanking_EnterpriseCurrencyCode
  _lte: SmallBusinessBanking_EnterpriseCurrencyCode
  _neq: SmallBusinessBanking_EnterpriseCurrencyCode
  _not: SmallBusinessBanking_EnterpriseCurrencyCodeBoolExp
  _or: [SmallBusinessBanking_EnterpriseCurrencyCodeBoolExp!]
}

scalar SmallBusinessBanking_Int4

type SmallBusinessBanking_Int4AggExp {
  _count: Int!
  _count_distinct: Int!
  avg: SmallBusinessBanking_Numeric
  bit_and: SmallBusinessBanking_Int4
  bit_or: SmallBusinessBanking_Int4
  bit_xor: SmallBusinessBanking_Int4
  max: SmallBusinessBanking_Int4
  min: SmallBusinessBanking_Int4
  stddev: SmallBusinessBanking_Numeric
  stddev_pop: SmallBusinessBanking_Numeric
  stddev_samp: SmallBusinessBanking_Numeric
  sum: SmallBusinessBanking_Int8
  var_pop: SmallBusinessBanking_Numeric
  var_samp: SmallBusinessBanking_Numeric
  variance: SmallBusinessBanking_Numeric
}

input SmallBusinessBanking_Int4BoolExp {
  _and: [SmallBusinessBanking_Int4BoolExp!]
  _eq: SmallBusinessBanking_Int4
  _gt: SmallBusinessBanking_Int4
  _gte: SmallBusinessBanking_Int4
  _in: [SmallBusinessBanking_Int4!]
  _is_null: Boolean
  _lt: SmallBusinessBanking_Int4
  _lte: SmallBusinessBanking_Int4
  _neq: SmallBusinessBanking_Int4
  _not: SmallBusinessBanking_Int4BoolExp
  _or: [SmallBusinessBanking_Int4BoolExp!]
}

scalar SmallBusinessBanking_Int8

scalar SmallBusinessBanking_Numeric

type SmallBusinessBanking_NumericAggExp {
  _count: Int!
  _count_distinct: Int!
  avg: SmallBusinessBanking_Numeric
  max: SmallBusinessBanking_Numeric
  min: SmallBusinessBanking_Numeric
  stddev: SmallBusinessBanking_Numeric
  stddev_pop: SmallBusinessBanking_Numeric
  stddev_samp: SmallBusinessBanking_Numeric
  sum: SmallBusinessBanking_Numeric
  var_pop: SmallBusinessBanking_Numeric
  var_samp: SmallBusinessBanking_Numeric
  variance: SmallBusinessBanking_Numeric
}

input SmallBusinessBanking_NumericBoolExp {
  _and: [SmallBusinessBanking_NumericBoolExp!]
  _eq: SmallBusinessBanking_Numeric
  _gt: SmallBusinessBanking_Numeric
  _gte: SmallBusinessBanking_Numeric
  _in: [SmallBusinessBanking_Numeric!]
  _is_null: Boolean
  _lt: SmallBusinessBanking_Numeric
  _lte: SmallBusinessBanking_Numeric
  _neq: SmallBusinessBanking_Numeric
  _not: SmallBusinessBanking_NumericBoolExp
  _or: [SmallBusinessBanking_NumericBoolExp!]
}

"""
Stores the business deposit and transaction accounts managed by the bank
"""
type SmallBusinessBanking_SmallBusinessBankingAccounts {
  """Unique account number visible to customers"""
  accountNumber: SmallBusinessBanking_Varchar!

  """Type of account (checking, savings, money market, etc.)"""
  accountType: SmallBusinessBanking_Varchar!

  """Available balance after holds and pending transactions"""
  availableBalance: SmallBusinessBanking_Numeric!

  """Current balance of the account"""
  balance: SmallBusinessBanking_Numeric!

  """ISO currency code for the account"""
  currency: SmallBusinessBanking_EnterpriseCurrencyCode!

  """References the main account"""
  enterpriseAccountId: SmallBusinessBanking_Int4!

  """Current interest rate applied to the account (if applicable)"""
  interestRate: SmallBusinessBanking_Numeric

  """Date when the last statement was generated"""
  lastStatementDate: SmallBusinessBanking_Date

  """Date when the account was opened"""
  openedDate: SmallBusinessBanking_Date!

  """Maximum allowed overdraft amount"""
  overdraftLimit: SmallBusinessBanking_Numeric!

  """Unique identifier for each business account"""
  smallBusinessBankingAccountId: SmallBusinessBanking_Int4!
  smallBusinessBankingAccountSignatories(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingAccountSignatoriesOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingAccountSignatoriesBoolExp): [SmallBusinessBanking_SmallBusinessBankingAccountSignatories!]
  smallBusinessBankingAccountSignatoriesAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingAccountSignatoriesFilterInput): SmallBusinessBanking_SmallBusinessBankingAccountSignatoriesAggExp!
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinesses
  smallBusinessBankingBusinessCardAccounts(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingBusinessCardAccountsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingBusinessCardAccountsBoolExp): [SmallBusinessBanking_SmallBusinessBankingBusinessCardAccounts!]
  smallBusinessBankingBusinessCardAccountsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingBusinessCardAccountsFilterInput): SmallBusinessBanking_SmallBusinessBankingBusinessCardAccountsAggExp!

  """Reference to the business that owns this account"""
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4!
  smallBusinessBankingCreditLines(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingCreditLinesOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingCreditLinesBoolExp): [SmallBusinessBanking_SmallBusinessBankingCreditLines!]
  smallBusinessBankingCreditLinesAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingCreditLinesFilterInput): SmallBusinessBanking_SmallBusinessBankingCreditLinesAggExp!
  smallBusinessBankingLoans(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingLoansOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingLoansBoolExp): [SmallBusinessBanking_SmallBusinessBankingLoans!]
  smallBusinessBankingLoansAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingLoansFilterInput): SmallBusinessBanking_SmallBusinessBankingLoansAggExp!
  smallBusinessBankingPayments(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingPaymentsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingPaymentsBoolExp): [SmallBusinessBanking_SmallBusinessBankingPayments!]
  smallBusinessBankingPaymentsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingPaymentsFilterInput): SmallBusinessBanking_SmallBusinessBankingPaymentsAggExp!
  smallBusinessBankingPaymentsBySourceAccountId(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingPaymentsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingPaymentsBoolExp): [SmallBusinessBanking_SmallBusinessBankingPayments!]
  smallBusinessBankingPaymentsBySourceAccountIdAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingPaymentsFilterInput): SmallBusinessBanking_SmallBusinessBankingPaymentsAggExp!
  smallBusinessBankingProduct: SmallBusinessBanking_SmallBusinessBankingProducts

  """Reference to the product this account is based on"""
  smallBusinessBankingProductId: SmallBusinessBanking_Int4!
  smallBusinessBankingTransactions(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingTransactionsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingTransactionsBoolExp): [SmallBusinessBanking_SmallBusinessBankingTransactions!]
  smallBusinessBankingTransactionsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingTransactionsFilterInput): SmallBusinessBanking_SmallBusinessBankingTransactionsAggExp!

  """Day of month/week when statements are generated"""
  statementDay: SmallBusinessBanking_Int4

  """Frequency of account statements (daily, weekly, monthly)"""
  statementFrequency: SmallBusinessBanking_Varchar!

  """Current status of the account (active, inactive, frozen, closed)"""
  status: SmallBusinessBanking_Varchar!

  """When the status was last updated"""
  statusUpdateDateTime: SmallBusinessBanking_Timestamptz!
}

type SmallBusinessBanking_SmallBusinessBankingAccountsAggExp {
  _count: Int!
  accountNumber: SmallBusinessBanking_VarcharAggExp!
  accountType: SmallBusinessBanking_VarcharAggExp!
  availableBalance: SmallBusinessBanking_NumericAggExp!
  balance: SmallBusinessBanking_NumericAggExp!
  currency: SmallBusinessBanking_EnterpriseCurrencyCodeAggExp!
  enterpriseAccountId: SmallBusinessBanking_Int4AggExp!
  interestRate: SmallBusinessBanking_NumericAggExp!
  lastStatementDate: SmallBusinessBanking_DateAggExp!
  openedDate: SmallBusinessBanking_DateAggExp!
  overdraftLimit: SmallBusinessBanking_NumericAggExp!
  smallBusinessBankingAccountId: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingProductId: SmallBusinessBanking_Int4AggExp!
  statementDay: SmallBusinessBanking_Int4AggExp!
  statementFrequency: SmallBusinessBanking_VarcharAggExp!
  status: SmallBusinessBanking_VarcharAggExp!
  statusUpdateDateTime: SmallBusinessBanking_TimestamptzAggExp!
}

input SmallBusinessBanking_SmallBusinessBankingAccountsBoolExp {
  _and: [SmallBusinessBanking_SmallBusinessBankingAccountsBoolExp!]
  _not: SmallBusinessBanking_SmallBusinessBankingAccountsBoolExp
  _or: [SmallBusinessBanking_SmallBusinessBankingAccountsBoolExp!]
  accountNumber: SmallBusinessBanking_VarcharBoolExp
  accountType: SmallBusinessBanking_VarcharBoolExp
  availableBalance: SmallBusinessBanking_NumericBoolExp
  balance: SmallBusinessBanking_NumericBoolExp
  currency: SmallBusinessBanking_EnterpriseCurrencyCodeBoolExp
  enterpriseAccountId: SmallBusinessBanking_Int4BoolExp
  interestRate: SmallBusinessBanking_NumericBoolExp
  lastStatementDate: SmallBusinessBanking_DateBoolExp
  openedDate: SmallBusinessBanking_DateBoolExp
  overdraftLimit: SmallBusinessBanking_NumericBoolExp
  smallBusinessBankingAccountId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingAccountSignatories: SmallBusinessBanking_SmallBusinessBankingAccountSignatoriesBoolExp
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinessesBoolExp
  smallBusinessBankingBusinessCardAccounts: SmallBusinessBanking_SmallBusinessBankingBusinessCardAccountsBoolExp
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingCreditLines: SmallBusinessBanking_SmallBusinessBankingCreditLinesBoolExp
  smallBusinessBankingLoans: SmallBusinessBanking_SmallBusinessBankingLoansBoolExp
  smallBusinessBankingPayments: SmallBusinessBanking_SmallBusinessBankingPaymentsBoolExp
  smallBusinessBankingPaymentsBySourceAccountId: SmallBusinessBanking_SmallBusinessBankingPaymentsBoolExp
  smallBusinessBankingProduct: SmallBusinessBanking_SmallBusinessBankingProductsBoolExp
  smallBusinessBankingProductId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingTransactions: SmallBusinessBanking_SmallBusinessBankingTransactionsBoolExp
  statementDay: SmallBusinessBanking_Int4BoolExp
  statementFrequency: SmallBusinessBanking_VarcharBoolExp
  status: SmallBusinessBanking_VarcharBoolExp
  statusUpdateDateTime: SmallBusinessBanking_TimestamptzBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingAccountsFilterInput {
  limit: Int
  offset: Int
  order_by: [SmallBusinessBanking_SmallBusinessBankingAccountsOrderByExp!]
  where: SmallBusinessBanking_SmallBusinessBankingAccountsBoolExp
}

"""
Identifies individuals who have authority to sign on or manage a business account
"""
type SmallBusinessBanking_SmallBusinessBankingAccountSignatories {
  """Maximum daily transaction limit for this signatory"""
  dailyLimit: SmallBusinessBanking_Numeric

  """Date when the signing authority expires (if applicable)"""
  endDate: SmallBusinessBanking_Date

  """Reference to the enterprise party who has signing authority"""
  enterprisePartyId: SmallBusinessBanking_Int4!

  """Indicates if the signing authority is currently active"""
  isActive: SmallBusinessBanking_Bool!

  """Level of signing authority (primary, secondary, view-only)"""
  signatoryLevel: SmallBusinessBanking_Varchar!
  smallBusinessBankingAccount: SmallBusinessBanking_SmallBusinessBankingAccounts

  """Reference to the account"""
  smallBusinessBankingAccountId: SmallBusinessBanking_Int4!

  """Unique identifier for each account signatory record"""
  smallBusinessBankingAccountSignatoryId: SmallBusinessBanking_Int4!

  """Date when the signing authority begins"""
  startDate: SmallBusinessBanking_Date!
}

type SmallBusinessBanking_SmallBusinessBankingAccountSignatoriesAggExp {
  _count: Int!
  dailyLimit: SmallBusinessBanking_NumericAggExp!
  endDate: SmallBusinessBanking_DateAggExp!
  enterprisePartyId: SmallBusinessBanking_Int4AggExp!
  isActive: SmallBusinessBanking_BoolAggExp!
  signatoryLevel: SmallBusinessBanking_VarcharAggExp!
  smallBusinessBankingAccountId: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingAccountSignatoryId: SmallBusinessBanking_Int4AggExp!
  startDate: SmallBusinessBanking_DateAggExp!
}

input SmallBusinessBanking_SmallBusinessBankingAccountSignatoriesBoolExp {
  _and: [SmallBusinessBanking_SmallBusinessBankingAccountSignatoriesBoolExp!]
  _not: SmallBusinessBanking_SmallBusinessBankingAccountSignatoriesBoolExp
  _or: [SmallBusinessBanking_SmallBusinessBankingAccountSignatoriesBoolExp!]
  dailyLimit: SmallBusinessBanking_NumericBoolExp
  endDate: SmallBusinessBanking_DateBoolExp
  enterprisePartyId: SmallBusinessBanking_Int4BoolExp
  isActive: SmallBusinessBanking_BoolBoolExp
  signatoryLevel: SmallBusinessBanking_VarcharBoolExp
  smallBusinessBankingAccount: SmallBusinessBanking_SmallBusinessBankingAccountsBoolExp
  smallBusinessBankingAccountId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingAccountSignatoryId: SmallBusinessBanking_Int4BoolExp
  startDate: SmallBusinessBanking_DateBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingAccountSignatoriesFilterInput {
  limit: Int
  offset: Int
  order_by: [SmallBusinessBanking_SmallBusinessBankingAccountSignatoriesOrderByExp!]
  where: SmallBusinessBanking_SmallBusinessBankingAccountSignatoriesBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingAccountSignatoriesOrderByExp {
  dailyLimit: OrderBy
  endDate: OrderBy
  enterprisePartyId: OrderBy
  isActive: OrderBy
  signatoryLevel: OrderBy
  smallBusinessBankingAccount: SmallBusinessBanking_SmallBusinessBankingAccountsOrderByExp
  smallBusinessBankingAccountId: OrderBy
  smallBusinessBankingAccountSignatoryId: OrderBy
  startDate: OrderBy
}

input SmallBusinessBanking_SmallBusinessBankingAccountsOrderByExp {
  accountNumber: OrderBy
  accountType: OrderBy
  availableBalance: OrderBy
  balance: OrderBy
  currency: OrderBy
  enterpriseAccountId: OrderBy
  interestRate: OrderBy
  lastStatementDate: OrderBy
  openedDate: OrderBy
  overdraftLimit: OrderBy
  smallBusinessBankingAccountId: OrderBy
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinessesOrderByExp
  smallBusinessBankingBusinessId: OrderBy
  smallBusinessBankingProduct: SmallBusinessBanking_SmallBusinessBankingProductsOrderByExp
  smallBusinessBankingProductId: OrderBy
  statementDay: OrderBy
  statementFrequency: OrderBy
  status: OrderBy
  statusUpdateDateTime: OrderBy
}

"""Tracks adverse action notices sent to declined applicants"""
type SmallBusinessBanking_SmallBusinessBankingAdverseActionNotices {
  """Credit score disclosed (if applicable)"""
  creditScore: SmallBusinessBanking_Int4

  """Whether credit score was disclosed"""
  creditScoreDisclosed: SmallBusinessBanking_Bool!

  """Address or email where notice was sent"""
  deliveryAddress: SmallBusinessBanking_Varchar!

  """Date the notice was delivered"""
  deliveryDate: SmallBusinessBanking_Date!

  """Method of delivery (mail, email, etc.)"""
  deliveryMethod: SmallBusinessBanking_Varchar!

  """Whether ECOA notice was included"""
  ecoaNoticeIncluded: SmallBusinessBanking_Bool!

  """Whether FCRA notice was included"""
  fcraNoticeIncluded: SmallBusinessBanking_Bool!

  """Person or system that generated the notice"""
  generatedById: SmallBusinessBanking_Int4!

  """Date the notice was generated"""
  noticeDate: SmallBusinessBanking_Date!

  """Path to stored copy of the notice"""
  noticeFilePath: SmallBusinessBanking_Varchar
  noticeGeneratedBy: Enterprise_EnterpriseAssociates

  """Primary reason for adverse action"""
  primaryReason: SmallBusinessBanking_Varchar!

  """Whether right to appraisal notice was included"""
  rightToAppraisalNotice: SmallBusinessBanking_Bool!

  """Factors affecting the credit score"""
  scoreFactors: SmallBusinessBanking_Text

  """High end of score range"""
  scoreRangeHigh: SmallBusinessBanking_Int4

  """Low end of score range"""
  scoreRangeLow: SmallBusinessBanking_Int4

  """Secondary reasons for adverse action"""
  secondaryReasons: SmallBusinessBanking_Text
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinesses

  """Reference to the business"""
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4!
  smallBusinessBankingCreditDecision: SmallBusinessBanking_SmallBusinessBankingCreditDecisions

  """Reference to the credit decision"""
  smallBusinessBankingDecisionId: SmallBusinessBanking_Int4!

  """Unique identifier for each adverse action notice"""
  smallBusinessBankingNoticeId: SmallBusinessBanking_Int4!

  """Version of the notice template used"""
  templateVersion: SmallBusinessBanking_Varchar!
}

type SmallBusinessBanking_SmallBusinessBankingAdverseActionNoticesAggExp {
  _count: Int!
  creditScore: SmallBusinessBanking_Int4AggExp!
  creditScoreDisclosed: SmallBusinessBanking_BoolAggExp!
  deliveryAddress: SmallBusinessBanking_VarcharAggExp!
  deliveryDate: SmallBusinessBanking_DateAggExp!
  deliveryMethod: SmallBusinessBanking_VarcharAggExp!
  ecoaNoticeIncluded: SmallBusinessBanking_BoolAggExp!
  fcraNoticeIncluded: SmallBusinessBanking_BoolAggExp!
  generatedById: SmallBusinessBanking_Int4AggExp!
  noticeDate: SmallBusinessBanking_DateAggExp!
  noticeFilePath: SmallBusinessBanking_VarcharAggExp!
  primaryReason: SmallBusinessBanking_VarcharAggExp!
  rightToAppraisalNotice: SmallBusinessBanking_BoolAggExp!
  scoreFactors: SmallBusinessBanking_TextAggExp!
  scoreRangeHigh: SmallBusinessBanking_Int4AggExp!
  scoreRangeLow: SmallBusinessBanking_Int4AggExp!
  secondaryReasons: SmallBusinessBanking_TextAggExp!
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingDecisionId: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingNoticeId: SmallBusinessBanking_Int4AggExp!
  templateVersion: SmallBusinessBanking_VarcharAggExp!
}

input SmallBusinessBanking_SmallBusinessBankingAdverseActionNoticesBoolExp {
  _and: [SmallBusinessBanking_SmallBusinessBankingAdverseActionNoticesBoolExp!]
  _not: SmallBusinessBanking_SmallBusinessBankingAdverseActionNoticesBoolExp
  _or: [SmallBusinessBanking_SmallBusinessBankingAdverseActionNoticesBoolExp!]
  creditScore: SmallBusinessBanking_Int4BoolExp
  creditScoreDisclosed: SmallBusinessBanking_BoolBoolExp
  deliveryAddress: SmallBusinessBanking_VarcharBoolExp
  deliveryDate: SmallBusinessBanking_DateBoolExp
  deliveryMethod: SmallBusinessBanking_VarcharBoolExp
  ecoaNoticeIncluded: SmallBusinessBanking_BoolBoolExp
  fcraNoticeIncluded: SmallBusinessBanking_BoolBoolExp
  generatedById: SmallBusinessBanking_Int4BoolExp
  noticeDate: SmallBusinessBanking_DateBoolExp
  noticeFilePath: SmallBusinessBanking_VarcharBoolExp
  primaryReason: SmallBusinessBanking_VarcharBoolExp
  rightToAppraisalNotice: SmallBusinessBanking_BoolBoolExp
  scoreFactors: SmallBusinessBanking_TextBoolExp
  scoreRangeHigh: SmallBusinessBanking_Int4BoolExp
  scoreRangeLow: SmallBusinessBanking_Int4BoolExp
  secondaryReasons: SmallBusinessBanking_TextBoolExp
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinessesBoolExp
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingCreditDecision: SmallBusinessBanking_SmallBusinessBankingCreditDecisionsBoolExp
  smallBusinessBankingDecisionId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingNoticeId: SmallBusinessBanking_Int4BoolExp
  templateVersion: SmallBusinessBanking_VarcharBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingAdverseActionNoticesFilterInput {
  limit: Int
  offset: Int
  order_by: [SmallBusinessBanking_SmallBusinessBankingAdverseActionNoticesOrderByExp!]
  where: SmallBusinessBanking_SmallBusinessBankingAdverseActionNoticesBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingAdverseActionNoticesOrderByExp {
  creditScore: OrderBy
  creditScoreDisclosed: OrderBy
  deliveryAddress: OrderBy
  deliveryDate: OrderBy
  deliveryMethod: OrderBy
  ecoaNoticeIncluded: OrderBy
  fcraNoticeIncluded: OrderBy
  generatedById: OrderBy
  noticeDate: OrderBy
  noticeFilePath: OrderBy
  primaryReason: OrderBy
  rightToAppraisalNotice: OrderBy
  scoreFactors: OrderBy
  scoreRangeHigh: OrderBy
  scoreRangeLow: OrderBy
  secondaryReasons: OrderBy
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinessesOrderByExp
  smallBusinessBankingBusinessId: OrderBy
  smallBusinessBankingCreditDecision: SmallBusinessBanking_SmallBusinessBankingCreditDecisionsOrderByExp
  smallBusinessBankingDecisionId: OrderBy
  smallBusinessBankingNoticeId: OrderBy
  templateVersion: OrderBy
}

"""Tracks verification of beneficial owners as required by FinCEN"""
type SmallBusinessBanking_SmallBusinessBankingBeneficialOwnerVerification {
  """Whether address was verified"""
  addressVerified: SmallBusinessBanking_Bool!

  """Whether adverse media was found"""
  adverseMediaFound: SmallBusinessBanking_Bool!

  """Date of certification"""
  certificationDate: SmallBusinessBanking_Date

  """Whether certification of beneficial ownership was received"""
  certificationReceived: SmallBusinessBanking_Bool!

  """Reason for exception (if applicable)"""
  exceptionReason: SmallBusinessBanking_Text

  """Expiration date of the ID"""
  idExpirationDate: SmallBusinessBanking_Date

  """Country that issued the ID"""
  idIssuingCountry: SmallBusinessBanking_Varchar

  """ID number (masked for security)"""
  idNumber: SmallBusinessBanking_Varchar

  """Type of ID provided (driver's license, passport, etc.)"""
  idType: SmallBusinessBanking_Varchar

  """Additional notes about the verification"""
  notes: SmallBusinessBanking_Text

  """Whether ownership percentage was verified"""
  ownershipPercentageVerified: SmallBusinessBanking_Bool!

  """Whether person is a politically exposed person"""
  pepStatus: SmallBusinessBanking_Bool!

  """Person who performed the verification"""
  performedById: SmallBusinessBanking_Int4!

  """Date when recertification is due"""
  recertificationDueDate: SmallBusinessBanking_Date

  """Whether person appears on sanctions lists"""
  sanctionsHit: SmallBusinessBanking_Bool!

  """Whether screening was conducted"""
  screeningConducted: SmallBusinessBanking_Bool!

  """Date of screening"""
  screeningDate: SmallBusinessBanking_Date

  """Results of screening"""
  screeningResults: SmallBusinessBanking_Text

  """System used for screening"""
  screeningSystem: SmallBusinessBanking_Varchar
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinesses

  """Reference to the business"""
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4!
  smallBusinessBankingBusinessOwner: SmallBusinessBanking_SmallBusinessBankingBusinessOwners

  """Reference to the business owner"""
  smallBusinessBankingBusinessOwnerId: SmallBusinessBanking_Int4!

  """Unique identifier for each verification record"""
  smallBusinessBankingVerificationId: SmallBusinessBanking_Int4!

  """Whether SSN was verified (for US persons)"""
  ssnVerified: SmallBusinessBanking_Bool

  """Whether TIN was verified (for non-US persons)"""
  tinVerified: SmallBusinessBanking_Bool

  """Date the verification was performed"""
  verificationDate: SmallBusinessBanking_Date!

  """Method used to verify beneficial ownership"""
  verificationMethod: SmallBusinessBanking_Varchar!
  verificationPerformedBy: Enterprise_EnterpriseAssociates

  """Status of verification (pending, completed, exception)"""
  verificationStatus: SmallBusinessBanking_Varchar!
}

type SmallBusinessBanking_SmallBusinessBankingBeneficialOwnerVerificationAggExp {
  _count: Int!
  addressVerified: SmallBusinessBanking_BoolAggExp!
  adverseMediaFound: SmallBusinessBanking_BoolAggExp!
  certificationDate: SmallBusinessBanking_DateAggExp!
  certificationReceived: SmallBusinessBanking_BoolAggExp!
  exceptionReason: SmallBusinessBanking_TextAggExp!
  idExpirationDate: SmallBusinessBanking_DateAggExp!
  idIssuingCountry: SmallBusinessBanking_VarcharAggExp!
  idNumber: SmallBusinessBanking_VarcharAggExp!
  idType: SmallBusinessBanking_VarcharAggExp!
  notes: SmallBusinessBanking_TextAggExp!
  ownershipPercentageVerified: SmallBusinessBanking_BoolAggExp!
  pepStatus: SmallBusinessBanking_BoolAggExp!
  performedById: SmallBusinessBanking_Int4AggExp!
  recertificationDueDate: SmallBusinessBanking_DateAggExp!
  sanctionsHit: SmallBusinessBanking_BoolAggExp!
  screeningConducted: SmallBusinessBanking_BoolAggExp!
  screeningDate: SmallBusinessBanking_DateAggExp!
  screeningResults: SmallBusinessBanking_TextAggExp!
  screeningSystem: SmallBusinessBanking_VarcharAggExp!
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingBusinessOwnerId: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingVerificationId: SmallBusinessBanking_Int4AggExp!
  ssnVerified: SmallBusinessBanking_BoolAggExp!
  tinVerified: SmallBusinessBanking_BoolAggExp!
  verificationDate: SmallBusinessBanking_DateAggExp!
  verificationMethod: SmallBusinessBanking_VarcharAggExp!
  verificationStatus: SmallBusinessBanking_VarcharAggExp!
}

input SmallBusinessBanking_SmallBusinessBankingBeneficialOwnerVerificationBoolExp {
  _and: [SmallBusinessBanking_SmallBusinessBankingBeneficialOwnerVerificationBoolExp!]
  _not: SmallBusinessBanking_SmallBusinessBankingBeneficialOwnerVerificationBoolExp
  _or: [SmallBusinessBanking_SmallBusinessBankingBeneficialOwnerVerificationBoolExp!]
  addressVerified: SmallBusinessBanking_BoolBoolExp
  adverseMediaFound: SmallBusinessBanking_BoolBoolExp
  certificationDate: SmallBusinessBanking_DateBoolExp
  certificationReceived: SmallBusinessBanking_BoolBoolExp
  exceptionReason: SmallBusinessBanking_TextBoolExp
  idExpirationDate: SmallBusinessBanking_DateBoolExp
  idIssuingCountry: SmallBusinessBanking_VarcharBoolExp
  idNumber: SmallBusinessBanking_VarcharBoolExp
  idType: SmallBusinessBanking_VarcharBoolExp
  notes: SmallBusinessBanking_TextBoolExp
  ownershipPercentageVerified: SmallBusinessBanking_BoolBoolExp
  pepStatus: SmallBusinessBanking_BoolBoolExp
  performedById: SmallBusinessBanking_Int4BoolExp
  recertificationDueDate: SmallBusinessBanking_DateBoolExp
  sanctionsHit: SmallBusinessBanking_BoolBoolExp
  screeningConducted: SmallBusinessBanking_BoolBoolExp
  screeningDate: SmallBusinessBanking_DateBoolExp
  screeningResults: SmallBusinessBanking_TextBoolExp
  screeningSystem: SmallBusinessBanking_VarcharBoolExp
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinessesBoolExp
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingBusinessOwner: SmallBusinessBanking_SmallBusinessBankingBusinessOwnersBoolExp
  smallBusinessBankingBusinessOwnerId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingVerificationId: SmallBusinessBanking_Int4BoolExp
  ssnVerified: SmallBusinessBanking_BoolBoolExp
  tinVerified: SmallBusinessBanking_BoolBoolExp
  verificationDate: SmallBusinessBanking_DateBoolExp
  verificationMethod: SmallBusinessBanking_VarcharBoolExp
  verificationStatus: SmallBusinessBanking_VarcharBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingBeneficialOwnerVerificationFilterInput {
  limit: Int
  offset: Int
  order_by: [SmallBusinessBanking_SmallBusinessBankingBeneficialOwnerVerificationOrderByExp!]
  where: SmallBusinessBanking_SmallBusinessBankingBeneficialOwnerVerificationBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingBeneficialOwnerVerificationOrderByExp {
  addressVerified: OrderBy
  adverseMediaFound: OrderBy
  certificationDate: OrderBy
  certificationReceived: OrderBy
  exceptionReason: OrderBy
  idExpirationDate: OrderBy
  idIssuingCountry: OrderBy
  idNumber: OrderBy
  idType: OrderBy
  notes: OrderBy
  ownershipPercentageVerified: OrderBy
  pepStatus: OrderBy
  performedById: OrderBy
  recertificationDueDate: OrderBy
  sanctionsHit: OrderBy
  screeningConducted: OrderBy
  screeningDate: OrderBy
  screeningResults: OrderBy
  screeningSystem: OrderBy
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinessesOrderByExp
  smallBusinessBankingBusinessId: OrderBy
  smallBusinessBankingBusinessOwner: SmallBusinessBanking_SmallBusinessBankingBusinessOwnersOrderByExp
  smallBusinessBankingBusinessOwnerId: OrderBy
  smallBusinessBankingVerificationId: OrderBy
  ssnVerified: OrderBy
  tinVerified: OrderBy
  verificationDate: OrderBy
  verificationMethod: OrderBy
  verificationStatus: OrderBy
}

"""
Links businesses to credit card accounts and stores business-specific attributes
"""
type SmallBusinessBanking_SmallBusinessBankingBusinessCardAccounts {
  """Categorization of the account (business, corporate, etc.)"""
  accountType: SmallBusinessBanking_Varchar!

  """Date when account should be reviewed annually"""
  annualReviewDate: SmallBusinessBanking_Date

  """Legal structure of the business for credit purposes"""
  businessStructure: SmallBusinessBanking_Varchar!
  cardAccount: CreditCards_CreditCardsCardAccounts

  """
  Reference to the primary credit card account in the credit_cards schema
  """
  cardAccountId: SmallBusinessBanking_Int4!
  creditCardsProduct: CreditCards_CreditCardsCardProducts

  """Reference to the card product in credit_cards schema"""
  creditCardsProductId: SmallBusinessBanking_Int4!

  """Type of expense categorization setup (standard, custom)"""
  expenseCategorySetup: SmallBusinessBanking_Varchar!

  """Liability arrangement (business liability, joint liability, etc.)"""
  liabilityType: SmallBusinessBanking_Varchar!
  linkedDepositAccount: Enterprise_EnterpriseAccounts

  """Reference to deposit account for automatic payments"""
  linkedDepositAccountId: SmallBusinessBanking_Int4

  """
  Type of ownership for this card account (sole proprietor, partnership, corporation)
  """
  ownershipType: SmallBusinessBanking_Varchar!

  """Reference to the relationship manager for this business"""
  relationshipManagerId: SmallBusinessBanking_Int4
  smallBusinessBankingAccount: SmallBusinessBanking_SmallBusinessBankingAccounts
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinesses

  """Unique identifier for each business credit card account"""
  smallBusinessBankingBusinessCardAccountId: SmallBusinessBanking_Int4!
  smallBusinessBankingBusinessCardUsers(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingBusinessCardUsersOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingBusinessCardUsersBoolExp): [SmallBusinessBanking_SmallBusinessBankingBusinessCardUsers!]
  smallBusinessBankingBusinessCardUsersAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingBusinessCardUsersFilterInput): SmallBusinessBanking_SmallBusinessBankingBusinessCardUsersAggExp!

  """Reference to the business that owns the credit card account"""
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4!
  smallBusinessBankingPayments(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingPaymentsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingPaymentsBoolExp): [SmallBusinessBanking_SmallBusinessBankingPayments!]
  smallBusinessBankingPaymentsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingPaymentsFilterInput): SmallBusinessBanking_SmallBusinessBankingPaymentsAggExp!

  """Tax ID used for reporting purposes"""
  taxIdReporting: SmallBusinessBanking_Varchar!
}

type SmallBusinessBanking_SmallBusinessBankingBusinessCardAccountsAggExp {
  _count: Int!
  accountType: SmallBusinessBanking_VarcharAggExp!
  annualReviewDate: SmallBusinessBanking_DateAggExp!
  businessStructure: SmallBusinessBanking_VarcharAggExp!
  cardAccountId: SmallBusinessBanking_Int4AggExp!
  creditCardsProductId: SmallBusinessBanking_Int4AggExp!
  expenseCategorySetup: SmallBusinessBanking_VarcharAggExp!
  liabilityType: SmallBusinessBanking_VarcharAggExp!
  linkedDepositAccountId: SmallBusinessBanking_Int4AggExp!
  ownershipType: SmallBusinessBanking_VarcharAggExp!
  relationshipManagerId: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingBusinessCardAccountId: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4AggExp!
  taxIdReporting: SmallBusinessBanking_VarcharAggExp!
}

input SmallBusinessBanking_SmallBusinessBankingBusinessCardAccountsBoolExp {
  _and: [SmallBusinessBanking_SmallBusinessBankingBusinessCardAccountsBoolExp!]
  _not: SmallBusinessBanking_SmallBusinessBankingBusinessCardAccountsBoolExp
  _or: [SmallBusinessBanking_SmallBusinessBankingBusinessCardAccountsBoolExp!]
  accountType: SmallBusinessBanking_VarcharBoolExp
  annualReviewDate: SmallBusinessBanking_DateBoolExp
  businessStructure: SmallBusinessBanking_VarcharBoolExp
  cardAccountId: SmallBusinessBanking_Int4BoolExp
  creditCardsProductId: SmallBusinessBanking_Int4BoolExp
  expenseCategorySetup: SmallBusinessBanking_VarcharBoolExp
  liabilityType: SmallBusinessBanking_VarcharBoolExp
  linkedDepositAccountId: SmallBusinessBanking_Int4BoolExp
  ownershipType: SmallBusinessBanking_VarcharBoolExp
  relationshipManagerId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingAccount: SmallBusinessBanking_SmallBusinessBankingAccountsBoolExp
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinessesBoolExp
  smallBusinessBankingBusinessCardAccountId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingBusinessCardUsers: SmallBusinessBanking_SmallBusinessBankingBusinessCardUsersBoolExp
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingPayments: SmallBusinessBanking_SmallBusinessBankingPaymentsBoolExp
  taxIdReporting: SmallBusinessBanking_VarcharBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingBusinessCardAccountsFilterInput {
  limit: Int
  offset: Int
  order_by: [SmallBusinessBanking_SmallBusinessBankingBusinessCardAccountsOrderByExp!]
  where: SmallBusinessBanking_SmallBusinessBankingBusinessCardAccountsBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingBusinessCardAccountsOrderByExp {
  accountType: OrderBy
  annualReviewDate: OrderBy
  businessStructure: OrderBy
  cardAccountId: OrderBy
  creditCardsProductId: OrderBy
  expenseCategorySetup: OrderBy
  liabilityType: OrderBy
  linkedDepositAccountId: OrderBy
  ownershipType: OrderBy
  relationshipManagerId: OrderBy
  smallBusinessBankingAccount: SmallBusinessBanking_SmallBusinessBankingAccountsOrderByExp
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinessesOrderByExp
  smallBusinessBankingBusinessCardAccountId: OrderBy
  smallBusinessBankingBusinessId: OrderBy
  taxIdReporting: OrderBy
}

"""
Manages employee and owner cards issued under a business credit card account
"""
type SmallBusinessBanking_SmallBusinessBankingBusinessCardUsers {
  """Whether user can manage all company cards"""
  canManageAllCards: SmallBusinessBanking_Bool!

  """Whether user can view all company transactions"""
  canViewAllTransactions: SmallBusinessBanking_Bool!
  creditCardsCard: CreditCards_CreditCardsCards

  """Reference to the specific card in the credit_cards schema"""
  creditCardsCardId: SmallBusinessBanking_Int4!

  """Department or cost center for this cardholder"""
  department: SmallBusinessBanking_Varchar

  """Employee ID within the business if applicable"""
  employeeId: SmallBusinessBanking_Varchar
  enterpriseParty: Enterprise_EnterpriseParties

  """Reference to the enterprise party who is issued a card"""
  enterprisePartyId: SmallBusinessBanking_Int4!

  """JSON object describing merchant category restrictions"""
  merchantCategoryRestrictions: SmallBusinessBanking_Text

  """Role of user in the business (owner, employee, accountant, etc.)"""
  role: SmallBusinessBanking_Varchar!
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinesses
  smallBusinessBankingBusinessCardAccount: SmallBusinessBanking_SmallBusinessBankingBusinessCardAccounts

  """Reference to the business card account"""
  smallBusinessBankingBusinessCardAccountId: SmallBusinessBanking_Int4!

  """Unique identifier for each business card user"""
  smallBusinessBankingBusinessCardUserId: SmallBusinessBanking_Int4!

  """Reference to the business"""
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4!

  """Monthly spending limit for this cardholder"""
  spendingLimit: SmallBusinessBanking_Numeric!

  """Whether transactions require approval"""
  transactionApprovalRequired: SmallBusinessBanking_Bool!
}

type SmallBusinessBanking_SmallBusinessBankingBusinessCardUsersAggExp {
  _count: Int!
  canManageAllCards: SmallBusinessBanking_BoolAggExp!
  canViewAllTransactions: SmallBusinessBanking_BoolAggExp!
  creditCardsCardId: SmallBusinessBanking_Int4AggExp!
  department: SmallBusinessBanking_VarcharAggExp!
  employeeId: SmallBusinessBanking_VarcharAggExp!
  enterprisePartyId: SmallBusinessBanking_Int4AggExp!
  merchantCategoryRestrictions: SmallBusinessBanking_TextAggExp!
  role: SmallBusinessBanking_VarcharAggExp!
  smallBusinessBankingBusinessCardAccountId: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingBusinessCardUserId: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4AggExp!
  spendingLimit: SmallBusinessBanking_NumericAggExp!
  transactionApprovalRequired: SmallBusinessBanking_BoolAggExp!
}

input SmallBusinessBanking_SmallBusinessBankingBusinessCardUsersBoolExp {
  _and: [SmallBusinessBanking_SmallBusinessBankingBusinessCardUsersBoolExp!]
  _not: SmallBusinessBanking_SmallBusinessBankingBusinessCardUsersBoolExp
  _or: [SmallBusinessBanking_SmallBusinessBankingBusinessCardUsersBoolExp!]
  canManageAllCards: SmallBusinessBanking_BoolBoolExp
  canViewAllTransactions: SmallBusinessBanking_BoolBoolExp
  creditCardsCardId: SmallBusinessBanking_Int4BoolExp
  department: SmallBusinessBanking_VarcharBoolExp
  employeeId: SmallBusinessBanking_VarcharBoolExp
  enterprisePartyId: SmallBusinessBanking_Int4BoolExp
  merchantCategoryRestrictions: SmallBusinessBanking_TextBoolExp
  role: SmallBusinessBanking_VarcharBoolExp
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinessesBoolExp
  smallBusinessBankingBusinessCardAccount: SmallBusinessBanking_SmallBusinessBankingBusinessCardAccountsBoolExp
  smallBusinessBankingBusinessCardAccountId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingBusinessCardUserId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4BoolExp
  spendingLimit: SmallBusinessBanking_NumericBoolExp
  transactionApprovalRequired: SmallBusinessBanking_BoolBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingBusinessCardUsersFilterInput {
  limit: Int
  offset: Int
  order_by: [SmallBusinessBanking_SmallBusinessBankingBusinessCardUsersOrderByExp!]
  where: SmallBusinessBanking_SmallBusinessBankingBusinessCardUsersBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingBusinessCardUsersOrderByExp {
  canManageAllCards: OrderBy
  canViewAllTransactions: OrderBy
  creditCardsCardId: OrderBy
  department: OrderBy
  employeeId: OrderBy
  enterprisePartyId: OrderBy
  merchantCategoryRestrictions: OrderBy
  role: OrderBy
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinessesOrderByExp
  smallBusinessBankingBusinessCardAccount: SmallBusinessBanking_SmallBusinessBankingBusinessCardAccountsOrderByExp
  smallBusinessBankingBusinessCardAccountId: OrderBy
  smallBusinessBankingBusinessCardUserId: OrderBy
  smallBusinessBankingBusinessId: OrderBy
  spendingLimit: OrderBy
  transactionApprovalRequired: OrderBy
}

"""Documents the due diligence process for business customers"""
type SmallBusinessBanking_SmallBusinessBankingBusinessDueDiligence {
  """Whether actual activity is consistent with expected"""
  actualActivityConsistent: SmallBusinessBanking_Bool

  """Whether business address was verified"""
  addressVerified: SmallBusinessBanking_Bool!

  """Date of approval"""
  approvalDate: SmallBusinessBanking_Date

  """Status of approval (pending, approved, rejected)"""
  approvalStatus: SmallBusinessBanking_Varchar!

  """Person who approved the due diligence"""
  approvedById: SmallBusinessBanking_Int4

  """List of business documents reviewed"""
  businessDocumentsReviewed: SmallBusinessBanking_Text

  """Whether business identity was verified"""
  businessVerified: SmallBusinessBanking_Bool!
  diligenceApprovedBy: Enterprise_EnterpriseAssociates

  """Date the due diligence was performed"""
  diligenceDate: SmallBusinessBanking_Date!
  diligencePerformedBy: Enterprise_EnterpriseAssociates

  """Type of due diligence (initial, ongoing, enhanced)"""
  diligenceType: SmallBusinessBanking_Varchar!

  """Description of expected account activity"""
  expectedActivity: SmallBusinessBanking_Text

  """High-risk factors identified during diligence"""
  highRiskFactors: SmallBusinessBanking_Text

  """Whether legal structure was verified"""
  legalStructureVerified: SmallBusinessBanking_Bool!

  """Date when next review is due"""
  nextReviewDate: SmallBusinessBanking_Date!

  """Additional notes about the due diligence"""
  notes: SmallBusinessBanking_Text

  """Person who performed the due diligence"""
  performedById: SmallBusinessBanking_Int4!

  """Frequency of ongoing reviews (monthly, quarterly, annual)"""
  reviewFrequency: SmallBusinessBanking_Varchar!

  """Risk rating assigned (low, medium, high)"""
  riskRating: SmallBusinessBanking_Varchar!

  """Results of screening against watchlists, PEPs, etc."""
  screeningResults: SmallBusinessBanking_Text

  """Whether a site visit was conducted"""
  siteVisitConducted: SmallBusinessBanking_Bool!

  """Date of site visit (if applicable)"""
  siteVisitDate: SmallBusinessBanking_Date

  """Notes from site visit"""
  siteVisitNotes: SmallBusinessBanking_Text
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinesses

  """Reference to the business"""
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4!

  """Unique identifier for each due diligence record"""
  smallBusinessBankingDueDiligenceId: SmallBusinessBanking_Int4!

  """Whether tax ID was verified"""
  tinVerified: SmallBusinessBanking_Bool!

  """Method used to verify business (documents, database, etc.)"""
  verificationMethod: SmallBusinessBanking_Varchar!
}

type SmallBusinessBanking_SmallBusinessBankingBusinessDueDiligenceAggExp {
  _count: Int!
  actualActivityConsistent: SmallBusinessBanking_BoolAggExp!
  addressVerified: SmallBusinessBanking_BoolAggExp!
  approvalDate: SmallBusinessBanking_DateAggExp!
  approvalStatus: SmallBusinessBanking_VarcharAggExp!
  approvedById: SmallBusinessBanking_Int4AggExp!
  businessDocumentsReviewed: SmallBusinessBanking_TextAggExp!
  businessVerified: SmallBusinessBanking_BoolAggExp!
  diligenceDate: SmallBusinessBanking_DateAggExp!
  diligenceType: SmallBusinessBanking_VarcharAggExp!
  expectedActivity: SmallBusinessBanking_TextAggExp!
  highRiskFactors: SmallBusinessBanking_TextAggExp!
  legalStructureVerified: SmallBusinessBanking_BoolAggExp!
  nextReviewDate: SmallBusinessBanking_DateAggExp!
  notes: SmallBusinessBanking_TextAggExp!
  performedById: SmallBusinessBanking_Int4AggExp!
  reviewFrequency: SmallBusinessBanking_VarcharAggExp!
  riskRating: SmallBusinessBanking_VarcharAggExp!
  screeningResults: SmallBusinessBanking_TextAggExp!
  siteVisitConducted: SmallBusinessBanking_BoolAggExp!
  siteVisitDate: SmallBusinessBanking_DateAggExp!
  siteVisitNotes: SmallBusinessBanking_TextAggExp!
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingDueDiligenceId: SmallBusinessBanking_Int4AggExp!
  tinVerified: SmallBusinessBanking_BoolAggExp!
  verificationMethod: SmallBusinessBanking_VarcharAggExp!
}

input SmallBusinessBanking_SmallBusinessBankingBusinessDueDiligenceBoolExp {
  _and: [SmallBusinessBanking_SmallBusinessBankingBusinessDueDiligenceBoolExp!]
  _not: SmallBusinessBanking_SmallBusinessBankingBusinessDueDiligenceBoolExp
  _or: [SmallBusinessBanking_SmallBusinessBankingBusinessDueDiligenceBoolExp!]
  actualActivityConsistent: SmallBusinessBanking_BoolBoolExp
  addressVerified: SmallBusinessBanking_BoolBoolExp
  approvalDate: SmallBusinessBanking_DateBoolExp
  approvalStatus: SmallBusinessBanking_VarcharBoolExp
  approvedById: SmallBusinessBanking_Int4BoolExp
  businessDocumentsReviewed: SmallBusinessBanking_TextBoolExp
  businessVerified: SmallBusinessBanking_BoolBoolExp
  diligenceDate: SmallBusinessBanking_DateBoolExp
  diligenceType: SmallBusinessBanking_VarcharBoolExp
  expectedActivity: SmallBusinessBanking_TextBoolExp
  highRiskFactors: SmallBusinessBanking_TextBoolExp
  legalStructureVerified: SmallBusinessBanking_BoolBoolExp
  nextReviewDate: SmallBusinessBanking_DateBoolExp
  notes: SmallBusinessBanking_TextBoolExp
  performedById: SmallBusinessBanking_Int4BoolExp
  reviewFrequency: SmallBusinessBanking_VarcharBoolExp
  riskRating: SmallBusinessBanking_VarcharBoolExp
  screeningResults: SmallBusinessBanking_TextBoolExp
  siteVisitConducted: SmallBusinessBanking_BoolBoolExp
  siteVisitDate: SmallBusinessBanking_DateBoolExp
  siteVisitNotes: SmallBusinessBanking_TextBoolExp
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinessesBoolExp
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingDueDiligenceId: SmallBusinessBanking_Int4BoolExp
  tinVerified: SmallBusinessBanking_BoolBoolExp
  verificationMethod: SmallBusinessBanking_VarcharBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingBusinessDueDiligenceFilterInput {
  limit: Int
  offset: Int
  order_by: [SmallBusinessBanking_SmallBusinessBankingBusinessDueDiligenceOrderByExp!]
  where: SmallBusinessBanking_SmallBusinessBankingBusinessDueDiligenceBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingBusinessDueDiligenceOrderByExp {
  actualActivityConsistent: OrderBy
  addressVerified: OrderBy
  approvalDate: OrderBy
  approvalStatus: OrderBy
  approvedById: OrderBy
  businessDocumentsReviewed: OrderBy
  businessVerified: OrderBy
  diligenceDate: OrderBy
  diligenceType: OrderBy
  expectedActivity: OrderBy
  highRiskFactors: OrderBy
  legalStructureVerified: OrderBy
  nextReviewDate: OrderBy
  notes: OrderBy
  performedById: OrderBy
  reviewFrequency: OrderBy
  riskRating: OrderBy
  screeningResults: OrderBy
  siteVisitConducted: OrderBy
  siteVisitDate: OrderBy
  siteVisitNotes: OrderBy
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinessesOrderByExp
  smallBusinessBankingBusinessId: OrderBy
  smallBusinessBankingDueDiligenceId: OrderBy
  tinVerified: OrderBy
  verificationMethod: OrderBy
}

"""
Stores core information about small businesses that are customers of the bank
"""
type SmallBusinessBanking_SmallBusinessBankingBusinesses {
  """Annual revenue amount for the business"""
  annualRevenue: SmallBusinessBanking_Numeric

  """Operating name of the business"""
  businessName: SmallBusinessBanking_Varchar!

  """Type of business entity (e.g., LLC, Corporation, Sole Proprietorship)"""
  businessType: SmallBusinessBanking_Varchar!

  """Number of employees in the business"""
  employeeCount: SmallBusinessBanking_Int4
  enterpriseParty: Enterprise_EnterpriseParties

  """Reference to the enterprise party record representing this business"""
  enterprisePartyId: SmallBusinessBanking_Int4!

  """Date the business was established"""
  establishmentDate: SmallBusinessBanking_Date

  """Standard industry classification code for the business"""
  industryCode: SmallBusinessBanking_Varchar!
  smallBusinessBankingAccounts(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingAccountsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingAccountsBoolExp): [SmallBusinessBanking_SmallBusinessBankingAccounts!]
  smallBusinessBankingAccountsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingAccountsFilterInput): SmallBusinessBanking_SmallBusinessBankingAccountsAggExp!
  smallBusinessBankingAdverseActionNotices(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingAdverseActionNoticesOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingAdverseActionNoticesBoolExp): [SmallBusinessBanking_SmallBusinessBankingAdverseActionNotices!]
  smallBusinessBankingAdverseActionNoticesAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingAdverseActionNoticesFilterInput): SmallBusinessBanking_SmallBusinessBankingAdverseActionNoticesAggExp!
  smallBusinessBankingBeneficialOwnerVerifications(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingBeneficialOwnerVerificationOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingBeneficialOwnerVerificationBoolExp): [SmallBusinessBanking_SmallBusinessBankingBeneficialOwnerVerification!]
  smallBusinessBankingBeneficialOwnerVerificationsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingBeneficialOwnerVerificationFilterInput): SmallBusinessBanking_SmallBusinessBankingBeneficialOwnerVerificationAggExp!
  smallBusinessBankingBusinessCardAccounts(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingBusinessCardAccountsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingBusinessCardAccountsBoolExp): [SmallBusinessBanking_SmallBusinessBankingBusinessCardAccounts!]
  smallBusinessBankingBusinessCardAccountsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingBusinessCardAccountsFilterInput): SmallBusinessBanking_SmallBusinessBankingBusinessCardAccountsAggExp!
  smallBusinessBankingBusinessCardUsers(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingBusinessCardUsersOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingBusinessCardUsersBoolExp): [SmallBusinessBanking_SmallBusinessBankingBusinessCardUsers!]
  smallBusinessBankingBusinessCardUsersAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingBusinessCardUsersFilterInput): SmallBusinessBanking_SmallBusinessBankingBusinessCardUsersAggExp!
  smallBusinessBankingBusinessDueDiligences(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingBusinessDueDiligenceOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingBusinessDueDiligenceBoolExp): [SmallBusinessBanking_SmallBusinessBankingBusinessDueDiligence!]
  smallBusinessBankingBusinessDueDiligencesAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingBusinessDueDiligenceFilterInput): SmallBusinessBanking_SmallBusinessBankingBusinessDueDiligenceAggExp!
  smallBusinessBankingBusinessExpenseCategories(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingBusinessExpenseCategoriesOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingBusinessExpenseCategoriesBoolExp): [SmallBusinessBanking_SmallBusinessBankingBusinessExpenseCategories!]
  smallBusinessBankingBusinessExpenseCategoriesAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingBusinessExpenseCategoriesFilterInput): SmallBusinessBanking_SmallBusinessBankingBusinessExpenseCategoriesAggExp!

  """Unique identifier for each business entity"""
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4!
  smallBusinessBankingBusinessOwners(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingBusinessOwnersOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingBusinessOwnersBoolExp): [SmallBusinessBanking_SmallBusinessBankingBusinessOwners!]
  smallBusinessBankingBusinessOwnersAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingBusinessOwnersFilterInput): SmallBusinessBanking_SmallBusinessBankingBusinessOwnersAggExp!
  smallBusinessBankingBusinessRiskAssessments(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingBusinessRiskAssessmentsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingBusinessRiskAssessmentsBoolExp): [SmallBusinessBanking_SmallBusinessBankingBusinessRiskAssessments!]
  smallBusinessBankingBusinessRiskAssessmentsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingBusinessRiskAssessmentsFilterInput): SmallBusinessBanking_SmallBusinessBankingBusinessRiskAssessmentsAggExp!
  smallBusinessBankingBusinessTransactionCategories(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingBusinessTransactionCategoriesOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingBusinessTransactionCategoriesBoolExp): [SmallBusinessBanking_SmallBusinessBankingBusinessTransactionCategories!]
  smallBusinessBankingBusinessTransactionCategoriesAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingBusinessTransactionCategoriesFilterInput): SmallBusinessBanking_SmallBusinessBankingBusinessTransactionCategoriesAggExp!
  smallBusinessBankingCollaterals(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingCollateralOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingCollateralBoolExp): [SmallBusinessBanking_SmallBusinessBankingCollateral!]
  smallBusinessBankingCollateralsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingCollateralFilterInput): SmallBusinessBanking_SmallBusinessBankingCollateralAggExp!
  smallBusinessBankingComplianceCases(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingComplianceCasesOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingComplianceCasesBoolExp): [SmallBusinessBanking_SmallBusinessBankingComplianceCases!]
  smallBusinessBankingComplianceCasesAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingComplianceCasesFilterInput): SmallBusinessBanking_SmallBusinessBankingComplianceCasesAggExp!
  smallBusinessBankingCreditDecisions(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingCreditDecisionsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingCreditDecisionsBoolExp): [SmallBusinessBanking_SmallBusinessBankingCreditDecisions!]
  smallBusinessBankingCreditDecisionsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingCreditDecisionsFilterInput): SmallBusinessBanking_SmallBusinessBankingCreditDecisionsAggExp!
  smallBusinessBankingCreditLines(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingCreditLinesOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingCreditLinesBoolExp): [SmallBusinessBanking_SmallBusinessBankingCreditLines!]
  smallBusinessBankingCreditLinesAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingCreditLinesFilterInput): SmallBusinessBanking_SmallBusinessBankingCreditLinesAggExp!
  smallBusinessBankingDocuments(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingDocumentsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingDocumentsBoolExp): [SmallBusinessBanking_SmallBusinessBankingDocuments!]
  smallBusinessBankingDocumentsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingDocumentsFilterInput): SmallBusinessBanking_SmallBusinessBankingDocumentsAggExp!
  smallBusinessBankingLoanFairLendings(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingLoanFairLendingOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingLoanFairLendingBoolExp): [SmallBusinessBanking_SmallBusinessBankingLoanFairLending!]
  smallBusinessBankingLoanFairLendingsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingLoanFairLendingFilterInput): SmallBusinessBanking_SmallBusinessBankingLoanFairLendingAggExp!
  smallBusinessBankingLoans(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingLoansOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingLoansBoolExp): [SmallBusinessBanking_SmallBusinessBankingLoans!]
  smallBusinessBankingLoansAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingLoansFilterInput): SmallBusinessBanking_SmallBusinessBankingLoansAggExp!
  smallBusinessBankingRegulatoryFindings(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingRegulatoryFindingsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingRegulatoryFindingsBoolExp): [SmallBusinessBanking_SmallBusinessBankingRegulatoryFindings!]
  smallBusinessBankingRegulatoryFindingsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingRegulatoryFindingsFilterInput): SmallBusinessBanking_SmallBusinessBankingRegulatoryFindingsAggExp!
  smallBusinessBankingSuspiciousActivityReports(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingSuspiciousActivityReportsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingSuspiciousActivityReportsBoolExp): [SmallBusinessBanking_SmallBusinessBankingSuspiciousActivityReports!]
  smallBusinessBankingSuspiciousActivityReportsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingSuspiciousActivityReportsFilterInput): SmallBusinessBanking_SmallBusinessBankingSuspiciousActivityReportsAggExp!

  """Current status of the business (active, inactive, suspended, etc.)"""
  status: SmallBusinessBanking_Varchar!

  """Tax identification number for the business (e.g., EIN)"""
  taxId: SmallBusinessBanking_Varchar!

  """Business website URL"""
  website: SmallBusinessBanking_Varchar
}

type SmallBusinessBanking_SmallBusinessBankingBusinessesAggExp {
  _count: Int!
  annualRevenue: SmallBusinessBanking_NumericAggExp!
  businessName: SmallBusinessBanking_VarcharAggExp!
  businessType: SmallBusinessBanking_VarcharAggExp!
  employeeCount: SmallBusinessBanking_Int4AggExp!
  enterprisePartyId: SmallBusinessBanking_Int4AggExp!
  establishmentDate: SmallBusinessBanking_DateAggExp!
  industryCode: SmallBusinessBanking_VarcharAggExp!
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4AggExp!
  status: SmallBusinessBanking_VarcharAggExp!
  taxId: SmallBusinessBanking_VarcharAggExp!
  website: SmallBusinessBanking_VarcharAggExp!
}

input SmallBusinessBanking_SmallBusinessBankingBusinessesBoolExp {
  _and: [SmallBusinessBanking_SmallBusinessBankingBusinessesBoolExp!]
  _not: SmallBusinessBanking_SmallBusinessBankingBusinessesBoolExp
  _or: [SmallBusinessBanking_SmallBusinessBankingBusinessesBoolExp!]
  annualRevenue: SmallBusinessBanking_NumericBoolExp
  businessName: SmallBusinessBanking_VarcharBoolExp
  businessType: SmallBusinessBanking_VarcharBoolExp
  employeeCount: SmallBusinessBanking_Int4BoolExp
  enterprisePartyId: SmallBusinessBanking_Int4BoolExp
  establishmentDate: SmallBusinessBanking_DateBoolExp
  industryCode: SmallBusinessBanking_VarcharBoolExp
  smallBusinessBankingAccounts: SmallBusinessBanking_SmallBusinessBankingAccountsBoolExp
  smallBusinessBankingAdverseActionNotices: SmallBusinessBanking_SmallBusinessBankingAdverseActionNoticesBoolExp
  smallBusinessBankingBeneficialOwnerVerifications: SmallBusinessBanking_SmallBusinessBankingBeneficialOwnerVerificationBoolExp
  smallBusinessBankingBusinessCardAccounts: SmallBusinessBanking_SmallBusinessBankingBusinessCardAccountsBoolExp
  smallBusinessBankingBusinessCardUsers: SmallBusinessBanking_SmallBusinessBankingBusinessCardUsersBoolExp
  smallBusinessBankingBusinessDueDiligences: SmallBusinessBanking_SmallBusinessBankingBusinessDueDiligenceBoolExp
  smallBusinessBankingBusinessExpenseCategories: SmallBusinessBanking_SmallBusinessBankingBusinessExpenseCategoriesBoolExp
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingBusinessOwners: SmallBusinessBanking_SmallBusinessBankingBusinessOwnersBoolExp
  smallBusinessBankingBusinessRiskAssessments: SmallBusinessBanking_SmallBusinessBankingBusinessRiskAssessmentsBoolExp
  smallBusinessBankingBusinessTransactionCategories: SmallBusinessBanking_SmallBusinessBankingBusinessTransactionCategoriesBoolExp
  smallBusinessBankingCollaterals: SmallBusinessBanking_SmallBusinessBankingCollateralBoolExp
  smallBusinessBankingComplianceCases: SmallBusinessBanking_SmallBusinessBankingComplianceCasesBoolExp
  smallBusinessBankingCreditDecisions: SmallBusinessBanking_SmallBusinessBankingCreditDecisionsBoolExp
  smallBusinessBankingCreditLines: SmallBusinessBanking_SmallBusinessBankingCreditLinesBoolExp
  smallBusinessBankingDocuments: SmallBusinessBanking_SmallBusinessBankingDocumentsBoolExp
  smallBusinessBankingLoanFairLendings: SmallBusinessBanking_SmallBusinessBankingLoanFairLendingBoolExp
  smallBusinessBankingLoans: SmallBusinessBanking_SmallBusinessBankingLoansBoolExp
  smallBusinessBankingRegulatoryFindings: SmallBusinessBanking_SmallBusinessBankingRegulatoryFindingsBoolExp
  smallBusinessBankingSuspiciousActivityReports: SmallBusinessBanking_SmallBusinessBankingSuspiciousActivityReportsBoolExp
  status: SmallBusinessBanking_VarcharBoolExp
  taxId: SmallBusinessBanking_VarcharBoolExp
  website: SmallBusinessBanking_VarcharBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingBusinessesFilterInput {
  limit: Int
  offset: Int
  order_by: [SmallBusinessBanking_SmallBusinessBankingBusinessesOrderByExp!]
  where: SmallBusinessBanking_SmallBusinessBankingBusinessesBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingBusinessesOrderByExp {
  annualRevenue: OrderBy
  businessName: OrderBy
  businessType: OrderBy
  employeeCount: OrderBy
  enterprisePartyId: OrderBy
  establishmentDate: OrderBy
  industryCode: OrderBy
  smallBusinessBankingBusinessId: OrderBy
  status: OrderBy
  taxId: OrderBy
  website: OrderBy
}

"""Defines custom expense categories for business card transactions"""
type SmallBusinessBanking_SmallBusinessBankingBusinessExpenseCategories {
  """Monthly budget amount for this category"""
  budgetAmount: SmallBusinessBanking_Numeric

  """Description of what expenses belong in this category"""
  categoryDescription: SmallBusinessBanking_Text

  """Name of the expense category"""
  categoryName: SmallBusinessBanking_Varchar!

  """General ledger account code for accounting integration"""
  glAccountCode: SmallBusinessBanking_Varchar

  """Whether expenses in this category are typically tax deductible"""
  isTaxDeductible: SmallBusinessBanking_Bool

  """Reference to parent category for hierarchical categorization"""
  parentCategoryId: SmallBusinessBanking_Int4
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinesses
  smallBusinessBankingBusinessExpenseCategories(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingBusinessExpenseCategoriesOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingBusinessExpenseCategoriesBoolExp): [SmallBusinessBanking_SmallBusinessBankingBusinessExpenseCategories!]
  smallBusinessBankingBusinessExpenseCategoriesAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingBusinessExpenseCategoriesFilterInput): SmallBusinessBanking_SmallBusinessBankingBusinessExpenseCategoriesAggExp!
  smallBusinessBankingBusinessExpenseCategory: SmallBusinessBanking_SmallBusinessBankingBusinessExpenseCategories

  """Reference to the business"""
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4!
  smallBusinessBankingBusinessTransactionCategories(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingBusinessTransactionCategoriesOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingBusinessTransactionCategoriesBoolExp): [SmallBusinessBanking_SmallBusinessBankingBusinessTransactionCategories!]
  smallBusinessBankingBusinessTransactionCategoriesAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingBusinessTransactionCategoriesFilterInput): SmallBusinessBanking_SmallBusinessBankingBusinessTransactionCategoriesAggExp!

  """Unique identifier for each expense category"""
  smallBusinessBankingCategoryId: SmallBusinessBanking_Int4!
}

type SmallBusinessBanking_SmallBusinessBankingBusinessExpenseCategoriesAggExp {
  _count: Int!
  budgetAmount: SmallBusinessBanking_NumericAggExp!
  categoryDescription: SmallBusinessBanking_TextAggExp!
  categoryName: SmallBusinessBanking_VarcharAggExp!
  glAccountCode: SmallBusinessBanking_VarcharAggExp!
  isTaxDeductible: SmallBusinessBanking_BoolAggExp!
  parentCategoryId: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingCategoryId: SmallBusinessBanking_Int4AggExp!
}

input SmallBusinessBanking_SmallBusinessBankingBusinessExpenseCategoriesBoolExp {
  _and: [SmallBusinessBanking_SmallBusinessBankingBusinessExpenseCategoriesBoolExp!]
  _not: SmallBusinessBanking_SmallBusinessBankingBusinessExpenseCategoriesBoolExp
  _or: [SmallBusinessBanking_SmallBusinessBankingBusinessExpenseCategoriesBoolExp!]
  budgetAmount: SmallBusinessBanking_NumericBoolExp
  categoryDescription: SmallBusinessBanking_TextBoolExp
  categoryName: SmallBusinessBanking_VarcharBoolExp
  glAccountCode: SmallBusinessBanking_VarcharBoolExp
  isTaxDeductible: SmallBusinessBanking_BoolBoolExp
  parentCategoryId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinessesBoolExp
  smallBusinessBankingBusinessExpenseCategories: SmallBusinessBanking_SmallBusinessBankingBusinessExpenseCategoriesBoolExp
  smallBusinessBankingBusinessExpenseCategory: SmallBusinessBanking_SmallBusinessBankingBusinessExpenseCategoriesBoolExp
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingBusinessTransactionCategories: SmallBusinessBanking_SmallBusinessBankingBusinessTransactionCategoriesBoolExp
  smallBusinessBankingCategoryId: SmallBusinessBanking_Int4BoolExp
}

input SmallBusinessBanking_SmallBusinessBankingBusinessExpenseCategoriesFilterInput {
  limit: Int
  offset: Int
  order_by: [SmallBusinessBanking_SmallBusinessBankingBusinessExpenseCategoriesOrderByExp!]
  where: SmallBusinessBanking_SmallBusinessBankingBusinessExpenseCategoriesBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingBusinessExpenseCategoriesOrderByExp {
  budgetAmount: OrderBy
  categoryDescription: OrderBy
  categoryName: OrderBy
  glAccountCode: OrderBy
  isTaxDeductible: OrderBy
  parentCategoryId: OrderBy
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinessesOrderByExp
  smallBusinessBankingBusinessExpenseCategory: SmallBusinessBanking_SmallBusinessBankingBusinessExpenseCategoriesOrderByExp
  smallBusinessBankingBusinessId: OrderBy
  smallBusinessBankingCategoryId: OrderBy
}

"""
Identifies individuals who own or have significant control over a business entity
"""
type SmallBusinessBanking_SmallBusinessBankingBusinessOwners {
  enterpriseParty: Enterprise_EnterpriseParties

  """Reference to the enterprise party record representing this individual"""
  enterprisePartyId: SmallBusinessBanking_Int4!

  """Indicates if this owner serves as a loan guarantor"""
  isGuarantor: SmallBusinessBanking_Bool!

  """Percentage of business ownership (0-100)"""
  ownershipPercentage: SmallBusinessBanking_Numeric!

  """Role in the business (e.g., CEO, CFO, Managing Partner)"""
  role: SmallBusinessBanking_Varchar!
  smallBusinessBankingBeneficialOwnerVerifications(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingBeneficialOwnerVerificationOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingBeneficialOwnerVerificationBoolExp): [SmallBusinessBanking_SmallBusinessBankingBeneficialOwnerVerification!]
  smallBusinessBankingBeneficialOwnerVerificationsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingBeneficialOwnerVerificationFilterInput): SmallBusinessBanking_SmallBusinessBankingBeneficialOwnerVerificationAggExp!
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinesses

  """Reference to the business the person owns or controls"""
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4!

  """Unique identifier for each business owner record"""
  smallBusinessBankingBusinessOwnerId: SmallBusinessBanking_Int4!
}

type SmallBusinessBanking_SmallBusinessBankingBusinessOwnersAggExp {
  _count: Int!
  enterprisePartyId: SmallBusinessBanking_Int4AggExp!
  isGuarantor: SmallBusinessBanking_BoolAggExp!
  ownershipPercentage: SmallBusinessBanking_NumericAggExp!
  role: SmallBusinessBanking_VarcharAggExp!
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingBusinessOwnerId: SmallBusinessBanking_Int4AggExp!
}

input SmallBusinessBanking_SmallBusinessBankingBusinessOwnersBoolExp {
  _and: [SmallBusinessBanking_SmallBusinessBankingBusinessOwnersBoolExp!]
  _not: SmallBusinessBanking_SmallBusinessBankingBusinessOwnersBoolExp
  _or: [SmallBusinessBanking_SmallBusinessBankingBusinessOwnersBoolExp!]
  enterprisePartyId: SmallBusinessBanking_Int4BoolExp
  isGuarantor: SmallBusinessBanking_BoolBoolExp
  ownershipPercentage: SmallBusinessBanking_NumericBoolExp
  role: SmallBusinessBanking_VarcharBoolExp
  smallBusinessBankingBeneficialOwnerVerifications: SmallBusinessBanking_SmallBusinessBankingBeneficialOwnerVerificationBoolExp
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinessesBoolExp
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingBusinessOwnerId: SmallBusinessBanking_Int4BoolExp
}

input SmallBusinessBanking_SmallBusinessBankingBusinessOwnersFilterInput {
  limit: Int
  offset: Int
  order_by: [SmallBusinessBanking_SmallBusinessBankingBusinessOwnersOrderByExp!]
  where: SmallBusinessBanking_SmallBusinessBankingBusinessOwnersBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingBusinessOwnersOrderByExp {
  enterprisePartyId: OrderBy
  isGuarantor: OrderBy
  ownershipPercentage: OrderBy
  role: OrderBy
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinessesOrderByExp
  smallBusinessBankingBusinessId: OrderBy
  smallBusinessBankingBusinessOwnerId: OrderBy
}

"""Stores risk assessments performed on small business customers"""
type SmallBusinessBanking_SmallBusinessBankingBusinessRiskAssessments {
  assessmentConductedBy: Enterprise_EnterpriseAssociates

  """Date of the risk assessment"""
  assessmentDate: SmallBusinessBanking_Date!

  """Type of assessment (AML, credit, operational, etc.)"""
  assessmentType: SmallBusinessBanking_Varchar!

  """Person or team that conducted the assessment"""
  conductedById: SmallBusinessBanking_Int4!

  """Risk score based on customer attributes (1-5 scale)"""
  customerRiskScore: SmallBusinessBanking_Int4!

  """Risk score based on geographic location (1-5 scale)"""
  geographicRiskScore: SmallBusinessBanking_Int4!

  """Risk score based on industry (1-5 scale)"""
  industryRiskScore: SmallBusinessBanking_Int4!

  """Methodology used for the assessment"""
  methodology: SmallBusinessBanking_Text!

  """Factors that mitigate the identified risks"""
  mitigatingFactors: SmallBusinessBanking_Text

  """Date when the next assessment should be conducted"""
  nextReviewDate: SmallBusinessBanking_Date!

  """Combined overall risk score (1-5 scale)"""
  overallRiskScore: SmallBusinessBanking_Int4!

  """Risk score based on products used (1-5 scale)"""
  productRiskScore: SmallBusinessBanking_Int4!

  """Rationale for the risk scores and rating"""
  rationale: SmallBusinessBanking_Text!

  """Actions recommended to address risks"""
  recommendedActions: SmallBusinessBanking_Text

  """Overall risk rating (low, medium, high)"""
  riskRating: SmallBusinessBanking_Varchar!

  """Unique identifier for each risk assessment"""
  smallBusinessBankingAssessmentId: SmallBusinessBanking_Int4!
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinesses

  """Reference to the business being assessed"""
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4!

  """Risk score based on transaction patterns (1-5 scale)"""
  transactionRiskScore: SmallBusinessBanking_Int4!
}

type SmallBusinessBanking_SmallBusinessBankingBusinessRiskAssessmentsAggExp {
  _count: Int!
  assessmentDate: SmallBusinessBanking_DateAggExp!
  assessmentType: SmallBusinessBanking_VarcharAggExp!
  conductedById: SmallBusinessBanking_Int4AggExp!
  customerRiskScore: SmallBusinessBanking_Int4AggExp!
  geographicRiskScore: SmallBusinessBanking_Int4AggExp!
  industryRiskScore: SmallBusinessBanking_Int4AggExp!
  methodology: SmallBusinessBanking_TextAggExp!
  mitigatingFactors: SmallBusinessBanking_TextAggExp!
  nextReviewDate: SmallBusinessBanking_DateAggExp!
  overallRiskScore: SmallBusinessBanking_Int4AggExp!
  productRiskScore: SmallBusinessBanking_Int4AggExp!
  rationale: SmallBusinessBanking_TextAggExp!
  recommendedActions: SmallBusinessBanking_TextAggExp!
  riskRating: SmallBusinessBanking_VarcharAggExp!
  smallBusinessBankingAssessmentId: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4AggExp!
  transactionRiskScore: SmallBusinessBanking_Int4AggExp!
}

input SmallBusinessBanking_SmallBusinessBankingBusinessRiskAssessmentsBoolExp {
  _and: [SmallBusinessBanking_SmallBusinessBankingBusinessRiskAssessmentsBoolExp!]
  _not: SmallBusinessBanking_SmallBusinessBankingBusinessRiskAssessmentsBoolExp
  _or: [SmallBusinessBanking_SmallBusinessBankingBusinessRiskAssessmentsBoolExp!]
  assessmentDate: SmallBusinessBanking_DateBoolExp
  assessmentType: SmallBusinessBanking_VarcharBoolExp
  conductedById: SmallBusinessBanking_Int4BoolExp
  customerRiskScore: SmallBusinessBanking_Int4BoolExp
  geographicRiskScore: SmallBusinessBanking_Int4BoolExp
  industryRiskScore: SmallBusinessBanking_Int4BoolExp
  methodology: SmallBusinessBanking_TextBoolExp
  mitigatingFactors: SmallBusinessBanking_TextBoolExp
  nextReviewDate: SmallBusinessBanking_DateBoolExp
  overallRiskScore: SmallBusinessBanking_Int4BoolExp
  productRiskScore: SmallBusinessBanking_Int4BoolExp
  rationale: SmallBusinessBanking_TextBoolExp
  recommendedActions: SmallBusinessBanking_TextBoolExp
  riskRating: SmallBusinessBanking_VarcharBoolExp
  smallBusinessBankingAssessmentId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinessesBoolExp
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4BoolExp
  transactionRiskScore: SmallBusinessBanking_Int4BoolExp
}

input SmallBusinessBanking_SmallBusinessBankingBusinessRiskAssessmentsFilterInput {
  limit: Int
  offset: Int
  order_by: [SmallBusinessBanking_SmallBusinessBankingBusinessRiskAssessmentsOrderByExp!]
  where: SmallBusinessBanking_SmallBusinessBankingBusinessRiskAssessmentsBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingBusinessRiskAssessmentsOrderByExp {
  assessmentDate: OrderBy
  assessmentType: OrderBy
  conductedById: OrderBy
  customerRiskScore: OrderBy
  geographicRiskScore: OrderBy
  industryRiskScore: OrderBy
  methodology: OrderBy
  mitigatingFactors: OrderBy
  nextReviewDate: OrderBy
  overallRiskScore: OrderBy
  productRiskScore: OrderBy
  rationale: OrderBy
  recommendedActions: OrderBy
  riskRating: OrderBy
  smallBusinessBankingAssessmentId: OrderBy
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinessesOrderByExp
  smallBusinessBankingBusinessId: OrderBy
  transactionRiskScore: OrderBy
}

"""Maps credit card transactions to business expense categories"""
type SmallBusinessBanking_SmallBusinessBankingBusinessTransactionCategories {
  """User who created this categorization"""
  createdById: SmallBusinessBanking_Int4

  """Additional notes about this transaction categorization"""
  notes: SmallBusinessBanking_Text

  """Path to stored receipt image"""
  receiptImagePath: SmallBusinessBanking_Varchar
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinesses
  smallBusinessBankingBusinessExpenseCategory: SmallBusinessBanking_SmallBusinessBankingBusinessExpenseCategories

  """Reference to the business"""
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4!

  """Reference to the business expense category"""
  smallBusinessBankingCategoryId: SmallBusinessBanking_Int4!

  """Unique identifier for each transaction categorization"""
  smallBusinessBankingTransactionCategoryId: SmallBusinessBanking_Int4!

  """Flag indicating transaction is relevant for tax purposes"""
  taxRelevant: SmallBusinessBanking_Bool!
  transaction: CreditCards_CreditCardsTransactions

  """Reference to the transaction in credit_cards schema"""
  transactionId: SmallBusinessBanking_Int4!
}

type SmallBusinessBanking_SmallBusinessBankingBusinessTransactionCategoriesAggExp {
  _count: Int!
  createdById: SmallBusinessBanking_Int4AggExp!
  notes: SmallBusinessBanking_TextAggExp!
  receiptImagePath: SmallBusinessBanking_VarcharAggExp!
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingCategoryId: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingTransactionCategoryId: SmallBusinessBanking_Int4AggExp!
  taxRelevant: SmallBusinessBanking_BoolAggExp!
  transactionId: SmallBusinessBanking_Int4AggExp!
}

input SmallBusinessBanking_SmallBusinessBankingBusinessTransactionCategoriesBoolExp {
  _and: [SmallBusinessBanking_SmallBusinessBankingBusinessTransactionCategoriesBoolExp!]
  _not: SmallBusinessBanking_SmallBusinessBankingBusinessTransactionCategoriesBoolExp
  _or: [SmallBusinessBanking_SmallBusinessBankingBusinessTransactionCategoriesBoolExp!]
  createdById: SmallBusinessBanking_Int4BoolExp
  notes: SmallBusinessBanking_TextBoolExp
  receiptImagePath: SmallBusinessBanking_VarcharBoolExp
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinessesBoolExp
  smallBusinessBankingBusinessExpenseCategory: SmallBusinessBanking_SmallBusinessBankingBusinessExpenseCategoriesBoolExp
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingCategoryId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingTransactionCategoryId: SmallBusinessBanking_Int4BoolExp
  taxRelevant: SmallBusinessBanking_BoolBoolExp
  transactionId: SmallBusinessBanking_Int4BoolExp
}

input SmallBusinessBanking_SmallBusinessBankingBusinessTransactionCategoriesFilterInput {
  limit: Int
  offset: Int
  order_by: [SmallBusinessBanking_SmallBusinessBankingBusinessTransactionCategoriesOrderByExp!]
  where: SmallBusinessBanking_SmallBusinessBankingBusinessTransactionCategoriesBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingBusinessTransactionCategoriesOrderByExp {
  createdById: OrderBy
  notes: OrderBy
  receiptImagePath: OrderBy
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinessesOrderByExp
  smallBusinessBankingBusinessExpenseCategory: SmallBusinessBanking_SmallBusinessBankingBusinessExpenseCategoriesOrderByExp
  smallBusinessBankingBusinessId: OrderBy
  smallBusinessBankingCategoryId: OrderBy
  smallBusinessBankingTransactionCategoryId: OrderBy
  taxRelevant: OrderBy
  transactionId: OrderBy
}

"""Tracks assets pledged as security for loans and credit facilities"""
type SmallBusinessBanking_SmallBusinessBankingCollateral {
  """Type of collateral (real estate, equipment, vehicle, inventory, etc.)"""
  collateralType: SmallBusinessBanking_Varchar!

  """Detailed description of the collateral"""
  description: SmallBusinessBanking_Text!

  """Serial number, VIN, or other identifier for the collateral"""
  identificationNumber: SmallBusinessBanking_Varchar

  """Expiration date of the insurance policy"""
  insuranceExpiryDate: SmallBusinessBanking_Date

  """Insurance policy number for this collateral"""
  insurancePolicyNumber: SmallBusinessBanking_Varchar

  """Name of insurance company covering this collateral"""
  insuranceProvider: SmallBusinessBanking_Varchar

  """Reference number for the lien filing"""
  lienFilingNumber: SmallBusinessBanking_Varchar

  """Position of the bank's lien on this collateral (1st, 2nd, etc.)"""
  lienPosition: SmallBusinessBanking_Int4

  """Physical location of the collateral item"""
  location: SmallBusinessBanking_Text
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinesses

  """Reference to the business that owns the collateral"""
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4!

  """Unique identifier for each collateral item"""
  smallBusinessBankingCollateralId: SmallBusinessBanking_Int4!
  smallBusinessBankingLoanCollaterals(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingLoanCollateralOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingLoanCollateralBoolExp): [SmallBusinessBanking_SmallBusinessBankingLoanCollateral!]
  smallBusinessBankingLoanCollateralsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingLoanCollateralFilterInput): SmallBusinessBanking_SmallBusinessBankingLoanCollateralAggExp!

  """Current status of the collateral (active, sold, repossessed)"""
  status: SmallBusinessBanking_Varchar!

  """Date when the value was determined"""
  valuationDate: SmallBusinessBanking_Date!

  """Method of valuation (appraisal, estimate, purchase price)"""
  valuationType: SmallBusinessBanking_Varchar!

  """Estimated or appraised value of the collateral"""
  value: SmallBusinessBanking_Numeric!
}

type SmallBusinessBanking_SmallBusinessBankingCollateralAggExp {
  _count: Int!
  collateralType: SmallBusinessBanking_VarcharAggExp!
  description: SmallBusinessBanking_TextAggExp!
  identificationNumber: SmallBusinessBanking_VarcharAggExp!
  insuranceExpiryDate: SmallBusinessBanking_DateAggExp!
  insurancePolicyNumber: SmallBusinessBanking_VarcharAggExp!
  insuranceProvider: SmallBusinessBanking_VarcharAggExp!
  lienFilingNumber: SmallBusinessBanking_VarcharAggExp!
  lienPosition: SmallBusinessBanking_Int4AggExp!
  location: SmallBusinessBanking_TextAggExp!
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingCollateralId: SmallBusinessBanking_Int4AggExp!
  status: SmallBusinessBanking_VarcharAggExp!
  valuationDate: SmallBusinessBanking_DateAggExp!
  valuationType: SmallBusinessBanking_VarcharAggExp!
  value: SmallBusinessBanking_NumericAggExp!
}

input SmallBusinessBanking_SmallBusinessBankingCollateralBoolExp {
  _and: [SmallBusinessBanking_SmallBusinessBankingCollateralBoolExp!]
  _not: SmallBusinessBanking_SmallBusinessBankingCollateralBoolExp
  _or: [SmallBusinessBanking_SmallBusinessBankingCollateralBoolExp!]
  collateralType: SmallBusinessBanking_VarcharBoolExp
  description: SmallBusinessBanking_TextBoolExp
  identificationNumber: SmallBusinessBanking_VarcharBoolExp
  insuranceExpiryDate: SmallBusinessBanking_DateBoolExp
  insurancePolicyNumber: SmallBusinessBanking_VarcharBoolExp
  insuranceProvider: SmallBusinessBanking_VarcharBoolExp
  lienFilingNumber: SmallBusinessBanking_VarcharBoolExp
  lienPosition: SmallBusinessBanking_Int4BoolExp
  location: SmallBusinessBanking_TextBoolExp
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinessesBoolExp
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingCollateralId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingLoanCollaterals: SmallBusinessBanking_SmallBusinessBankingLoanCollateralBoolExp
  status: SmallBusinessBanking_VarcharBoolExp
  valuationDate: SmallBusinessBanking_DateBoolExp
  valuationType: SmallBusinessBanking_VarcharBoolExp
  value: SmallBusinessBanking_NumericBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingCollateralFilterInput {
  limit: Int
  offset: Int
  order_by: [SmallBusinessBanking_SmallBusinessBankingCollateralOrderByExp!]
  where: SmallBusinessBanking_SmallBusinessBankingCollateralBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingCollateralOrderByExp {
  collateralType: OrderBy
  description: OrderBy
  identificationNumber: OrderBy
  insuranceExpiryDate: OrderBy
  insurancePolicyNumber: OrderBy
  insuranceProvider: OrderBy
  lienFilingNumber: OrderBy
  lienPosition: OrderBy
  location: OrderBy
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinessesOrderByExp
  smallBusinessBankingBusinessId: OrderBy
  smallBusinessBankingCollateralId: OrderBy
  status: OrderBy
  valuationDate: OrderBy
  valuationType: OrderBy
  value: OrderBy
}

"""Tracks compliance cases related to small business accounts"""
type SmallBusinessBanking_SmallBusinessBankingComplianceCases {
  """Person or team assigned to the case"""
  assignedTo: SmallBusinessBanking_Int4
  caseAssignedTo: Enterprise_EnterpriseAssociates

  """Type of compliance case (AML, KYC, fraud, fair lending, etc.)"""
  caseType: SmallBusinessBanking_Varchar!

  """Date the case was closed"""
  closedDate: SmallBusinessBanking_Date

  """Description of the compliance case"""
  description: SmallBusinessBanking_Text!

  """Whether the case was escalated"""
  escalated: SmallBusinessBanking_Bool!

  """Date of escalation if applicable"""
  escalationDate: SmallBusinessBanking_Date

  """Reason for escalation"""
  escalationReason: SmallBusinessBanking_Text

  """Date the case was opened"""
  openedDate: SmallBusinessBanking_Date!

  """Priority level (high, medium, low)"""
  priority: SmallBusinessBanking_Varchar!

  """Description of the resolution"""
  resolution: SmallBusinessBanking_Text
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinesses

  """Reference to the business"""
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4!

  """Unique identifier for each compliance case"""
  smallBusinessBankingCaseId: SmallBusinessBanking_Int4!

  """Source that initiated the case (system alert, manual review, exam)"""
  source: SmallBusinessBanking_Varchar!

  """Status of the case (open, in review, closed)"""
  status: SmallBusinessBanking_Varchar!
}

type SmallBusinessBanking_SmallBusinessBankingComplianceCasesAggExp {
  _count: Int!
  assignedTo: SmallBusinessBanking_Int4AggExp!
  caseType: SmallBusinessBanking_VarcharAggExp!
  closedDate: SmallBusinessBanking_DateAggExp!
  description: SmallBusinessBanking_TextAggExp!
  escalated: SmallBusinessBanking_BoolAggExp!
  escalationDate: SmallBusinessBanking_DateAggExp!
  escalationReason: SmallBusinessBanking_TextAggExp!
  openedDate: SmallBusinessBanking_DateAggExp!
  priority: SmallBusinessBanking_VarcharAggExp!
  resolution: SmallBusinessBanking_TextAggExp!
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingCaseId: SmallBusinessBanking_Int4AggExp!
  source: SmallBusinessBanking_VarcharAggExp!
  status: SmallBusinessBanking_VarcharAggExp!
}

input SmallBusinessBanking_SmallBusinessBankingComplianceCasesBoolExp {
  _and: [SmallBusinessBanking_SmallBusinessBankingComplianceCasesBoolExp!]
  _not: SmallBusinessBanking_SmallBusinessBankingComplianceCasesBoolExp
  _or: [SmallBusinessBanking_SmallBusinessBankingComplianceCasesBoolExp!]
  assignedTo: SmallBusinessBanking_Int4BoolExp
  caseType: SmallBusinessBanking_VarcharBoolExp
  closedDate: SmallBusinessBanking_DateBoolExp
  description: SmallBusinessBanking_TextBoolExp
  escalated: SmallBusinessBanking_BoolBoolExp
  escalationDate: SmallBusinessBanking_DateBoolExp
  escalationReason: SmallBusinessBanking_TextBoolExp
  openedDate: SmallBusinessBanking_DateBoolExp
  priority: SmallBusinessBanking_VarcharBoolExp
  resolution: SmallBusinessBanking_TextBoolExp
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinessesBoolExp
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingCaseId: SmallBusinessBanking_Int4BoolExp
  source: SmallBusinessBanking_VarcharBoolExp
  status: SmallBusinessBanking_VarcharBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingComplianceCasesFilterInput {
  limit: Int
  offset: Int
  order_by: [SmallBusinessBanking_SmallBusinessBankingComplianceCasesOrderByExp!]
  where: SmallBusinessBanking_SmallBusinessBankingComplianceCasesBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingComplianceCasesOrderByExp {
  assignedTo: OrderBy
  caseType: OrderBy
  closedDate: OrderBy
  description: OrderBy
  escalated: OrderBy
  escalationDate: OrderBy
  escalationReason: OrderBy
  openedDate: OrderBy
  priority: OrderBy
  resolution: OrderBy
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinessesOrderByExp
  smallBusinessBankingBusinessId: OrderBy
  smallBusinessBankingCaseId: OrderBy
  source: OrderBy
  status: OrderBy
}

"""Catalogs compliance requirements affecting small business banking"""
type SmallBusinessBanking_SmallBusinessBankingComplianceRequirements {
  """How the requirement impacts business banking"""
  businessImpact: SmallBusinessBanking_Text!

  """Measures in place to ensure compliance"""
  controlMeasures: SmallBusinessBanking_Text

  """Detailed description of the requirement"""
  description: SmallBusinessBanking_Text!

  """Date when the requirement became effective"""
  effectiveDate: SmallBusinessBanking_Date!

  """Date when the requirement expires (if applicable)"""
  endDate: SmallBusinessBanking_Date

  """Whether this requirement is currently active"""
  isActive: SmallBusinessBanking_Bool!

  """Associated regulation or law"""
  regulation: SmallBusinessBanking_Varchar!

  """Authority that enforces the requirement"""
  regulatoryAuthority: SmallBusinessBanking_Varchar!

  """Name of the compliance requirement"""
  requirementName: SmallBusinessBanking_Varchar!
  requirementOwnedBy: Enterprise_EnterpriseAssociates

  """Department or role responsible for compliance"""
  requirementOwner: SmallBusinessBanking_Int4!

  """Unique identifier for each compliance requirement"""
  smallBusinessBankingRequirementId: SmallBusinessBanking_Int4!

  """How often compliance is verified (daily, monthly, quarterly, annual)"""
  verificationFrequency: SmallBusinessBanking_Varchar!

  """Description of the verification procedure"""
  verificationProcedure: SmallBusinessBanking_Text
}

type SmallBusinessBanking_SmallBusinessBankingComplianceRequirementsAggExp {
  _count: Int!
  businessImpact: SmallBusinessBanking_TextAggExp!
  controlMeasures: SmallBusinessBanking_TextAggExp!
  description: SmallBusinessBanking_TextAggExp!
  effectiveDate: SmallBusinessBanking_DateAggExp!
  endDate: SmallBusinessBanking_DateAggExp!
  isActive: SmallBusinessBanking_BoolAggExp!
  regulation: SmallBusinessBanking_VarcharAggExp!
  regulatoryAuthority: SmallBusinessBanking_VarcharAggExp!
  requirementName: SmallBusinessBanking_VarcharAggExp!
  requirementOwner: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingRequirementId: SmallBusinessBanking_Int4AggExp!
  verificationFrequency: SmallBusinessBanking_VarcharAggExp!
  verificationProcedure: SmallBusinessBanking_TextAggExp!
}

input SmallBusinessBanking_SmallBusinessBankingComplianceRequirementsBoolExp {
  _and: [SmallBusinessBanking_SmallBusinessBankingComplianceRequirementsBoolExp!]
  _not: SmallBusinessBanking_SmallBusinessBankingComplianceRequirementsBoolExp
  _or: [SmallBusinessBanking_SmallBusinessBankingComplianceRequirementsBoolExp!]
  businessImpact: SmallBusinessBanking_TextBoolExp
  controlMeasures: SmallBusinessBanking_TextBoolExp
  description: SmallBusinessBanking_TextBoolExp
  effectiveDate: SmallBusinessBanking_DateBoolExp
  endDate: SmallBusinessBanking_DateBoolExp
  isActive: SmallBusinessBanking_BoolBoolExp
  regulation: SmallBusinessBanking_VarcharBoolExp
  regulatoryAuthority: SmallBusinessBanking_VarcharBoolExp
  requirementName: SmallBusinessBanking_VarcharBoolExp
  requirementOwner: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingRequirementId: SmallBusinessBanking_Int4BoolExp
  verificationFrequency: SmallBusinessBanking_VarcharBoolExp
  verificationProcedure: SmallBusinessBanking_TextBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingComplianceRequirementsFilterInput {
  limit: Int
  offset: Int
  order_by: [SmallBusinessBanking_SmallBusinessBankingComplianceRequirementsOrderByExp!]
  where: SmallBusinessBanking_SmallBusinessBankingComplianceRequirementsBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingComplianceRequirementsOrderByExp {
  businessImpact: OrderBy
  controlMeasures: OrderBy
  description: OrderBy
  effectiveDate: OrderBy
  endDate: OrderBy
  isActive: OrderBy
  regulation: OrderBy
  regulatoryAuthority: OrderBy
  requirementName: OrderBy
  requirementOwner: OrderBy
  smallBusinessBankingRequirementId: OrderBy
  verificationFrequency: OrderBy
  verificationProcedure: OrderBy
}

"""
Documents credit decisions for regulatory review and fair lending analysis
"""
type SmallBusinessBanking_SmallBusinessBankingCreditDecisions {
  """Annual revenue considered in decision"""
  annualRevenue: SmallBusinessBanking_Numeric

  """Application identifier"""
  applicationId: SmallBusinessBanking_Varchar!

  """Value of collateral (if applicable)"""
  collateralValue: SmallBusinessBanking_Numeric
  creditDecisionMadeBy: Enterprise_EnterpriseAssociates

  """Credit score used in decision"""
  creditScore: SmallBusinessBanking_Int4

  """Model used for credit score"""
  creditScoreModel: SmallBusinessBanking_Varchar

  """Debt service coverage ratio calculated"""
  debtServiceCoverageRatio: SmallBusinessBanking_Numeric

  """Date and time of the decision"""
  decisionDate: SmallBusinessBanking_Timestamptz!
  decisionExceptionApprovedBy: Enterprise_EnterpriseAssociates

  """Factors that influenced the decision"""
  decisionFactors: SmallBusinessBanking_Text

  """Person or system that made the decision"""
  decisionMadeById: SmallBusinessBanking_Int4!

  """Additional notes about the decision"""
  decisionNotes: SmallBusinessBanking_Text

  """Outcome of the decision (approved, declined, counter-offer)"""
  decisionOutcome: SmallBusinessBanking_Varchar!

  """Type of decision (automated, manual, hybrid)"""
  decisionType: SmallBusinessBanking_Varchar!

  """Person who approved the exception"""
  exceptionApprover: SmallBusinessBanking_Int4

  """Whether an exception to policy was made"""
  exceptionMade: SmallBusinessBanking_Bool!

  """Reason for the exception (if applicable)"""
  exceptionReason: SmallBusinessBanking_Text

  """Loan to value ratio (if applicable)"""
  loanToValueRatio: SmallBusinessBanking_Numeric

  """Type of credit product (loan, line of credit, card)"""
  productType: SmallBusinessBanking_Varchar!
  smallBusinessBankingAdverseActionNotices(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingAdverseActionNoticesOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingAdverseActionNoticesBoolExp): [SmallBusinessBanking_SmallBusinessBankingAdverseActionNotices!]
  smallBusinessBankingAdverseActionNoticesAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingAdverseActionNoticesFilterInput): SmallBusinessBanking_SmallBusinessBankingAdverseActionNoticesAggExp!
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinesses

  """Reference to the business"""
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4!

  """Unique identifier for each credit decision"""
  smallBusinessBankingDecisionId: SmallBusinessBanking_Int4!

  """Time in business (months) considered in decision"""
  timeInBusiness: SmallBusinessBanking_Int4
}

type SmallBusinessBanking_SmallBusinessBankingCreditDecisionsAggExp {
  _count: Int!
  annualRevenue: SmallBusinessBanking_NumericAggExp!
  applicationId: SmallBusinessBanking_VarcharAggExp!
  collateralValue: SmallBusinessBanking_NumericAggExp!
  creditScore: SmallBusinessBanking_Int4AggExp!
  creditScoreModel: SmallBusinessBanking_VarcharAggExp!
  debtServiceCoverageRatio: SmallBusinessBanking_NumericAggExp!
  decisionDate: SmallBusinessBanking_TimestamptzAggExp!
  decisionFactors: SmallBusinessBanking_TextAggExp!
  decisionMadeById: SmallBusinessBanking_Int4AggExp!
  decisionNotes: SmallBusinessBanking_TextAggExp!
  decisionOutcome: SmallBusinessBanking_VarcharAggExp!
  decisionType: SmallBusinessBanking_VarcharAggExp!
  exceptionApprover: SmallBusinessBanking_Int4AggExp!
  exceptionMade: SmallBusinessBanking_BoolAggExp!
  exceptionReason: SmallBusinessBanking_TextAggExp!
  loanToValueRatio: SmallBusinessBanking_NumericAggExp!
  productType: SmallBusinessBanking_VarcharAggExp!
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingDecisionId: SmallBusinessBanking_Int4AggExp!
  timeInBusiness: SmallBusinessBanking_Int4AggExp!
}

input SmallBusinessBanking_SmallBusinessBankingCreditDecisionsBoolExp {
  _and: [SmallBusinessBanking_SmallBusinessBankingCreditDecisionsBoolExp!]
  _not: SmallBusinessBanking_SmallBusinessBankingCreditDecisionsBoolExp
  _or: [SmallBusinessBanking_SmallBusinessBankingCreditDecisionsBoolExp!]
  annualRevenue: SmallBusinessBanking_NumericBoolExp
  applicationId: SmallBusinessBanking_VarcharBoolExp
  collateralValue: SmallBusinessBanking_NumericBoolExp
  creditScore: SmallBusinessBanking_Int4BoolExp
  creditScoreModel: SmallBusinessBanking_VarcharBoolExp
  debtServiceCoverageRatio: SmallBusinessBanking_NumericBoolExp
  decisionDate: SmallBusinessBanking_TimestamptzBoolExp
  decisionFactors: SmallBusinessBanking_TextBoolExp
  decisionMadeById: SmallBusinessBanking_Int4BoolExp
  decisionNotes: SmallBusinessBanking_TextBoolExp
  decisionOutcome: SmallBusinessBanking_VarcharBoolExp
  decisionType: SmallBusinessBanking_VarcharBoolExp
  exceptionApprover: SmallBusinessBanking_Int4BoolExp
  exceptionMade: SmallBusinessBanking_BoolBoolExp
  exceptionReason: SmallBusinessBanking_TextBoolExp
  loanToValueRatio: SmallBusinessBanking_NumericBoolExp
  productType: SmallBusinessBanking_VarcharBoolExp
  smallBusinessBankingAdverseActionNotices: SmallBusinessBanking_SmallBusinessBankingAdverseActionNoticesBoolExp
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinessesBoolExp
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingDecisionId: SmallBusinessBanking_Int4BoolExp
  timeInBusiness: SmallBusinessBanking_Int4BoolExp
}

input SmallBusinessBanking_SmallBusinessBankingCreditDecisionsFilterInput {
  limit: Int
  offset: Int
  order_by: [SmallBusinessBanking_SmallBusinessBankingCreditDecisionsOrderByExp!]
  where: SmallBusinessBanking_SmallBusinessBankingCreditDecisionsBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingCreditDecisionsOrderByExp {
  annualRevenue: OrderBy
  applicationId: OrderBy
  collateralValue: OrderBy
  creditScore: OrderBy
  creditScoreModel: OrderBy
  debtServiceCoverageRatio: OrderBy
  decisionDate: OrderBy
  decisionFactors: OrderBy
  decisionMadeById: OrderBy
  decisionNotes: OrderBy
  decisionOutcome: OrderBy
  decisionType: OrderBy
  exceptionApprover: OrderBy
  exceptionMade: OrderBy
  exceptionReason: OrderBy
  loanToValueRatio: OrderBy
  productType: OrderBy
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinessesOrderByExp
  smallBusinessBankingBusinessId: OrderBy
  smallBusinessBankingDecisionId: OrderBy
  timeInBusiness: OrderBy
}

"""Manages revolving credit facilities provided to small businesses"""
type SmallBusinessBanking_SmallBusinessBankingCreditLines {
  """Annual fee charged for maintaining the credit line"""
  annualFee: SmallBusinessBanking_Numeric

  """Current amount available to be drawn"""
  availableCredit: SmallBusinessBanking_Numeric!

  """Maximum amount that can be borrowed"""
  creditLimit: SmallBusinessBanking_Numeric!

  """Unique credit line number visible to customers"""
  creditLineNumber: SmallBusinessBanking_Varchar!

  """Duration in months of the draw period"""
  drawPeriodMonths: SmallBusinessBanking_Int4

  """Annual interest rate for the credit line"""
  interestRate: SmallBusinessBanking_Numeric!

  """Type of interest rate (fixed, variable)"""
  interestType: SmallBusinessBanking_Varchar!

  """Minimum fixed amount required as monthly payment"""
  minimumPaymentAmount: SmallBusinessBanking_Numeric!

  """Minimum percentage of outstanding balance required as monthly payment"""
  minimumPaymentPercentage: SmallBusinessBanking_Numeric!

  """Current balance owed on the credit line"""
  outstandingBalance: SmallBusinessBanking_Numeric!

  """Spread over the reference rate for variable rate credit lines"""
  rateSpread: SmallBusinessBanking_Numeric

  """Reference rate for variable rate credit lines (e.g., PRIME, SOFR)"""
  referenceRate: SmallBusinessBanking_Varchar

  """Date when the credit line is up for renewal"""
  renewalDate: SmallBusinessBanking_Date

  """Duration in months of the repayment period"""
  repaymentPeriodMonths: SmallBusinessBanking_Int4
  smallBusinessBankingAccount: SmallBusinessBanking_SmallBusinessBankingAccounts

  """Reference to the associated account for fund disbursement and payments"""
  smallBusinessBankingAccountId: SmallBusinessBanking_Int4!
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinesses

  """Reference to the business that has the credit line"""
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4!

  """Unique identifier for each credit line"""
  smallBusinessBankingCreditLineId: SmallBusinessBanking_Int4!
  smallBusinessBankingPayments(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingPaymentsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingPaymentsBoolExp): [SmallBusinessBanking_SmallBusinessBankingPayments!]
  smallBusinessBankingPaymentsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingPaymentsFilterInput): SmallBusinessBanking_SmallBusinessBankingPaymentsAggExp!
  smallBusinessBankingProduct: SmallBusinessBanking_SmallBusinessBankingProducts

  """Reference to the credit line product"""
  smallBusinessBankingProductId: SmallBusinessBanking_Int4!

  """Date when the credit line becomes available"""
  startDate: SmallBusinessBanking_Date!

  """Current status of the credit line (active, inactive, frozen, closed)"""
  status: SmallBusinessBanking_Varchar!
}

type SmallBusinessBanking_SmallBusinessBankingCreditLinesAggExp {
  _count: Int!
  annualFee: SmallBusinessBanking_NumericAggExp!
  availableCredit: SmallBusinessBanking_NumericAggExp!
  creditLimit: SmallBusinessBanking_NumericAggExp!
  creditLineNumber: SmallBusinessBanking_VarcharAggExp!
  drawPeriodMonths: SmallBusinessBanking_Int4AggExp!
  interestRate: SmallBusinessBanking_NumericAggExp!
  interestType: SmallBusinessBanking_VarcharAggExp!
  minimumPaymentAmount: SmallBusinessBanking_NumericAggExp!
  minimumPaymentPercentage: SmallBusinessBanking_NumericAggExp!
  outstandingBalance: SmallBusinessBanking_NumericAggExp!
  rateSpread: SmallBusinessBanking_NumericAggExp!
  referenceRate: SmallBusinessBanking_VarcharAggExp!
  renewalDate: SmallBusinessBanking_DateAggExp!
  repaymentPeriodMonths: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingAccountId: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingCreditLineId: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingProductId: SmallBusinessBanking_Int4AggExp!
  startDate: SmallBusinessBanking_DateAggExp!
  status: SmallBusinessBanking_VarcharAggExp!
}

input SmallBusinessBanking_SmallBusinessBankingCreditLinesBoolExp {
  _and: [SmallBusinessBanking_SmallBusinessBankingCreditLinesBoolExp!]
  _not: SmallBusinessBanking_SmallBusinessBankingCreditLinesBoolExp
  _or: [SmallBusinessBanking_SmallBusinessBankingCreditLinesBoolExp!]
  annualFee: SmallBusinessBanking_NumericBoolExp
  availableCredit: SmallBusinessBanking_NumericBoolExp
  creditLimit: SmallBusinessBanking_NumericBoolExp
  creditLineNumber: SmallBusinessBanking_VarcharBoolExp
  drawPeriodMonths: SmallBusinessBanking_Int4BoolExp
  interestRate: SmallBusinessBanking_NumericBoolExp
  interestType: SmallBusinessBanking_VarcharBoolExp
  minimumPaymentAmount: SmallBusinessBanking_NumericBoolExp
  minimumPaymentPercentage: SmallBusinessBanking_NumericBoolExp
  outstandingBalance: SmallBusinessBanking_NumericBoolExp
  rateSpread: SmallBusinessBanking_NumericBoolExp
  referenceRate: SmallBusinessBanking_VarcharBoolExp
  renewalDate: SmallBusinessBanking_DateBoolExp
  repaymentPeriodMonths: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingAccount: SmallBusinessBanking_SmallBusinessBankingAccountsBoolExp
  smallBusinessBankingAccountId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinessesBoolExp
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingCreditLineId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingPayments: SmallBusinessBanking_SmallBusinessBankingPaymentsBoolExp
  smallBusinessBankingProduct: SmallBusinessBanking_SmallBusinessBankingProductsBoolExp
  smallBusinessBankingProductId: SmallBusinessBanking_Int4BoolExp
  startDate: SmallBusinessBanking_DateBoolExp
  status: SmallBusinessBanking_VarcharBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingCreditLinesFilterInput {
  limit: Int
  offset: Int
  order_by: [SmallBusinessBanking_SmallBusinessBankingCreditLinesOrderByExp!]
  where: SmallBusinessBanking_SmallBusinessBankingCreditLinesBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingCreditLinesOrderByExp {
  annualFee: OrderBy
  availableCredit: OrderBy
  creditLimit: OrderBy
  creditLineNumber: OrderBy
  drawPeriodMonths: OrderBy
  interestRate: OrderBy
  interestType: OrderBy
  minimumPaymentAmount: OrderBy
  minimumPaymentPercentage: OrderBy
  outstandingBalance: OrderBy
  rateSpread: OrderBy
  referenceRate: OrderBy
  renewalDate: OrderBy
  repaymentPeriodMonths: OrderBy
  smallBusinessBankingAccount: SmallBusinessBanking_SmallBusinessBankingAccountsOrderByExp
  smallBusinessBankingAccountId: OrderBy
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinessesOrderByExp
  smallBusinessBankingBusinessId: OrderBy
  smallBusinessBankingCreditLineId: OrderBy
  smallBusinessBankingProduct: SmallBusinessBanking_SmallBusinessBankingProductsOrderByExp
  smallBusinessBankingProductId: OrderBy
  startDate: OrderBy
  status: OrderBy
}

"""
Stores metadata about business documents with references to their file locations
"""
type SmallBusinessBanking_SmallBusinessBankingDocuments {
  """User that created the document record"""
  createdById: SmallBusinessBanking_Int4

  """Description of the document"""
  description: SmallBusinessBanking_Varchar!

  """Date associated with the document content"""
  documentDate: SmallBusinessBanking_Date!

  """
  Type of document (tax return, financial statement, business license, etc.)
  """
  documentType: SmallBusinessBanking_Varchar!

  """Date when the document expires (if applicable)"""
  expirationDate: SmallBusinessBanking_Date

  """Original file name of the document"""
  fileName: SmallBusinessBanking_Varchar!

  """Path to the stored document file"""
  filePath: SmallBusinessBanking_Varchar!

  """Size of the file in bytes"""
  fileSize: SmallBusinessBanking_Int4!

  """MIME type or format of the document"""
  fileType: SmallBusinessBanking_Varchar!
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinesses

  """Reference to the business the document belongs to"""
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4!

  """Unique identifier for each document record"""
  smallBusinessBankingDocumentId: SmallBusinessBanking_Int4!

  """Status of the document (active, archived, expired)"""
  status: SmallBusinessBanking_Varchar!

  """Date the document was uploaded"""
  uploadDate: SmallBusinessBanking_Date!
}

type SmallBusinessBanking_SmallBusinessBankingDocumentsAggExp {
  _count: Int!
  createdById: SmallBusinessBanking_Int4AggExp!
  description: SmallBusinessBanking_VarcharAggExp!
  documentDate: SmallBusinessBanking_DateAggExp!
  documentType: SmallBusinessBanking_VarcharAggExp!
  expirationDate: SmallBusinessBanking_DateAggExp!
  fileName: SmallBusinessBanking_VarcharAggExp!
  filePath: SmallBusinessBanking_VarcharAggExp!
  fileSize: SmallBusinessBanking_Int4AggExp!
  fileType: SmallBusinessBanking_VarcharAggExp!
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingDocumentId: SmallBusinessBanking_Int4AggExp!
  status: SmallBusinessBanking_VarcharAggExp!
  uploadDate: SmallBusinessBanking_DateAggExp!
}

input SmallBusinessBanking_SmallBusinessBankingDocumentsBoolExp {
  _and: [SmallBusinessBanking_SmallBusinessBankingDocumentsBoolExp!]
  _not: SmallBusinessBanking_SmallBusinessBankingDocumentsBoolExp
  _or: [SmallBusinessBanking_SmallBusinessBankingDocumentsBoolExp!]
  createdById: SmallBusinessBanking_Int4BoolExp
  description: SmallBusinessBanking_VarcharBoolExp
  documentDate: SmallBusinessBanking_DateBoolExp
  documentType: SmallBusinessBanking_VarcharBoolExp
  expirationDate: SmallBusinessBanking_DateBoolExp
  fileName: SmallBusinessBanking_VarcharBoolExp
  filePath: SmallBusinessBanking_VarcharBoolExp
  fileSize: SmallBusinessBanking_Int4BoolExp
  fileType: SmallBusinessBanking_VarcharBoolExp
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinessesBoolExp
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingDocumentId: SmallBusinessBanking_Int4BoolExp
  status: SmallBusinessBanking_VarcharBoolExp
  uploadDate: SmallBusinessBanking_DateBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingDocumentsFilterInput {
  limit: Int
  offset: Int
  order_by: [SmallBusinessBanking_SmallBusinessBankingDocumentsOrderByExp!]
  where: SmallBusinessBanking_SmallBusinessBankingDocumentsBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingDocumentsOrderByExp {
  createdById: OrderBy
  description: OrderBy
  documentDate: OrderBy
  documentType: OrderBy
  expirationDate: OrderBy
  fileName: OrderBy
  filePath: OrderBy
  fileSize: OrderBy
  fileType: OrderBy
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinessesOrderByExp
  smallBusinessBankingBusinessId: OrderBy
  smallBusinessBankingDocumentId: OrderBy
  status: OrderBy
  uploadDate: OrderBy
}

"""Junction table linking collateral items to specific loans they secure"""
type SmallBusinessBanking_SmallBusinessBankingLoanCollateral {
  """Percentage of the collateral's value assigned to this loan"""
  collateralPercentage: SmallBusinessBanking_Numeric!
  smallBusinessBankingCollateral: SmallBusinessBanking_SmallBusinessBankingCollateral

  """Reference to the collateral item"""
  smallBusinessBankingCollateralId: SmallBusinessBanking_Int4!
  smallBusinessBankingLoan: SmallBusinessBanking_SmallBusinessBankingLoans

  """Unique identifier for each loan-collateral association"""
  smallBusinessBankingLoanCollateralId: SmallBusinessBanking_Int4!

  """Reference to the loan secured by the collateral"""
  smallBusinessBankingLoanId: SmallBusinessBanking_Int4!
}

type SmallBusinessBanking_SmallBusinessBankingLoanCollateralAggExp {
  _count: Int!
  collateralPercentage: SmallBusinessBanking_NumericAggExp!
  smallBusinessBankingCollateralId: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingLoanCollateralId: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingLoanId: SmallBusinessBanking_Int4AggExp!
}

input SmallBusinessBanking_SmallBusinessBankingLoanCollateralBoolExp {
  _and: [SmallBusinessBanking_SmallBusinessBankingLoanCollateralBoolExp!]
  _not: SmallBusinessBanking_SmallBusinessBankingLoanCollateralBoolExp
  _or: [SmallBusinessBanking_SmallBusinessBankingLoanCollateralBoolExp!]
  collateralPercentage: SmallBusinessBanking_NumericBoolExp
  smallBusinessBankingCollateral: SmallBusinessBanking_SmallBusinessBankingCollateralBoolExp
  smallBusinessBankingCollateralId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingLoan: SmallBusinessBanking_SmallBusinessBankingLoansBoolExp
  smallBusinessBankingLoanCollateralId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingLoanId: SmallBusinessBanking_Int4BoolExp
}

input SmallBusinessBanking_SmallBusinessBankingLoanCollateralFilterInput {
  limit: Int
  offset: Int
  order_by: [SmallBusinessBanking_SmallBusinessBankingLoanCollateralOrderByExp!]
  where: SmallBusinessBanking_SmallBusinessBankingLoanCollateralBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingLoanCollateralOrderByExp {
  collateralPercentage: OrderBy
  smallBusinessBankingCollateral: SmallBusinessBanking_SmallBusinessBankingCollateralOrderByExp
  smallBusinessBankingCollateralId: OrderBy
  smallBusinessBankingLoan: SmallBusinessBanking_SmallBusinessBankingLoansOrderByExp
  smallBusinessBankingLoanCollateralId: OrderBy
  smallBusinessBankingLoanId: OrderBy
}

"""
Captures data required for small business lending fair lending analysis and reporting
"""
type SmallBusinessBanking_SmallBusinessBankingLoanFairLending {
  """Action taken (approved, denied, withdrawn, etc.)"""
  actionTaken: SmallBusinessBanking_Varchar!

  """Approved loan amount (if applicable)"""
  amountApproved: SmallBusinessBanking_Numeric

  """Date the loan application was received"""
  applicationDate: SmallBusinessBanking_Date!

  """Census tract of the business location"""
  censusTract: SmallBusinessBanking_Varchar

  """Date of the credit decision"""
  decisionDate: SmallBusinessBanking_Date!

  """Primary reason for denial (if applicable)"""
  denialReason1: SmallBusinessBanking_Varchar

  """Secondary reason for denial (if applicable)"""
  denialReason2: SmallBusinessBanking_Varchar

  """Tertiary reason for denial (if applicable)"""
  denialReason3: SmallBusinessBanking_Varchar

  """Quaternary reason for denial (if applicable)"""
  denialReason4: SmallBusinessBanking_Varchar

  """Whether an exemption from reporting was claimed"""
  exemptionClaimed: SmallBusinessBanking_Bool!

  """Reason for reporting exemption (if applicable)"""
  exemptionReason: SmallBusinessBanking_Varchar

  """Whether business is LGBTQ-owned"""
  lgbtqOwned: SmallBusinessBanking_Bool

  """Requested loan amount"""
  loanAmount: SmallBusinessBanking_Numeric!

  """Purpose of the loan"""
  loanPurpose: SmallBusinessBanking_Varchar!

  """Type of loan (term loan, line of credit, etc.)"""
  loanType: SmallBusinessBanking_Varchar!

  """Whether business is minority-owned"""
  minorityOwned: SmallBusinessBanking_Bool

  """Metropolitan Statistical Area/Metropolitan Division code"""
  msaMd: SmallBusinessBanking_Varchar

  """North American Industry Classification System code"""
  naicsCode: SmallBusinessBanking_Varchar

  """Number of business employees"""
  numberOfEmployees: SmallBusinessBanking_Int4

  """Difference between APR and average prime offer rate"""
  rateSpread: SmallBusinessBanking_Numeric

  """Gross annual revenue of the business as reported"""
  reportedRevenue: SmallBusinessBanking_Numeric!
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinesses

  """Reference to the business"""
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4!

  """Unique identifier for each fair lending record"""
  smallBusinessBankingLendingRecordId: SmallBusinessBanking_Int4!
  smallBusinessBankingLoan: SmallBusinessBanking_SmallBusinessBankingLoans

  """Reference to the loan"""
  smallBusinessBankingLoanId: SmallBusinessBanking_Int4!

  """Whether business is veteran-owned"""
  veteranOwned: SmallBusinessBanking_Bool

  """Whether business is women-owned"""
  womenOwned: SmallBusinessBanking_Bool
}

type SmallBusinessBanking_SmallBusinessBankingLoanFairLendingAggExp {
  _count: Int!
  actionTaken: SmallBusinessBanking_VarcharAggExp!
  amountApproved: SmallBusinessBanking_NumericAggExp!
  applicationDate: SmallBusinessBanking_DateAggExp!
  censusTract: SmallBusinessBanking_VarcharAggExp!
  decisionDate: SmallBusinessBanking_DateAggExp!
  denialReason1: SmallBusinessBanking_VarcharAggExp!
  denialReason2: SmallBusinessBanking_VarcharAggExp!
  denialReason3: SmallBusinessBanking_VarcharAggExp!
  denialReason4: SmallBusinessBanking_VarcharAggExp!
  exemptionClaimed: SmallBusinessBanking_BoolAggExp!
  exemptionReason: SmallBusinessBanking_VarcharAggExp!
  lgbtqOwned: SmallBusinessBanking_BoolAggExp!
  loanAmount: SmallBusinessBanking_NumericAggExp!
  loanPurpose: SmallBusinessBanking_VarcharAggExp!
  loanType: SmallBusinessBanking_VarcharAggExp!
  minorityOwned: SmallBusinessBanking_BoolAggExp!
  msaMd: SmallBusinessBanking_VarcharAggExp!
  naicsCode: SmallBusinessBanking_VarcharAggExp!
  numberOfEmployees: SmallBusinessBanking_Int4AggExp!
  rateSpread: SmallBusinessBanking_NumericAggExp!
  reportedRevenue: SmallBusinessBanking_NumericAggExp!
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingLendingRecordId: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingLoanId: SmallBusinessBanking_Int4AggExp!
  veteranOwned: SmallBusinessBanking_BoolAggExp!
  womenOwned: SmallBusinessBanking_BoolAggExp!
}

input SmallBusinessBanking_SmallBusinessBankingLoanFairLendingBoolExp {
  _and: [SmallBusinessBanking_SmallBusinessBankingLoanFairLendingBoolExp!]
  _not: SmallBusinessBanking_SmallBusinessBankingLoanFairLendingBoolExp
  _or: [SmallBusinessBanking_SmallBusinessBankingLoanFairLendingBoolExp!]
  actionTaken: SmallBusinessBanking_VarcharBoolExp
  amountApproved: SmallBusinessBanking_NumericBoolExp
  applicationDate: SmallBusinessBanking_DateBoolExp
  censusTract: SmallBusinessBanking_VarcharBoolExp
  decisionDate: SmallBusinessBanking_DateBoolExp
  denialReason1: SmallBusinessBanking_VarcharBoolExp
  denialReason2: SmallBusinessBanking_VarcharBoolExp
  denialReason3: SmallBusinessBanking_VarcharBoolExp
  denialReason4: SmallBusinessBanking_VarcharBoolExp
  exemptionClaimed: SmallBusinessBanking_BoolBoolExp
  exemptionReason: SmallBusinessBanking_VarcharBoolExp
  lgbtqOwned: SmallBusinessBanking_BoolBoolExp
  loanAmount: SmallBusinessBanking_NumericBoolExp
  loanPurpose: SmallBusinessBanking_VarcharBoolExp
  loanType: SmallBusinessBanking_VarcharBoolExp
  minorityOwned: SmallBusinessBanking_BoolBoolExp
  msaMd: SmallBusinessBanking_VarcharBoolExp
  naicsCode: SmallBusinessBanking_VarcharBoolExp
  numberOfEmployees: SmallBusinessBanking_Int4BoolExp
  rateSpread: SmallBusinessBanking_NumericBoolExp
  reportedRevenue: SmallBusinessBanking_NumericBoolExp
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinessesBoolExp
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingLendingRecordId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingLoan: SmallBusinessBanking_SmallBusinessBankingLoansBoolExp
  smallBusinessBankingLoanId: SmallBusinessBanking_Int4BoolExp
  veteranOwned: SmallBusinessBanking_BoolBoolExp
  womenOwned: SmallBusinessBanking_BoolBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingLoanFairLendingFilterInput {
  limit: Int
  offset: Int
  order_by: [SmallBusinessBanking_SmallBusinessBankingLoanFairLendingOrderByExp!]
  where: SmallBusinessBanking_SmallBusinessBankingLoanFairLendingBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingLoanFairLendingOrderByExp {
  actionTaken: OrderBy
  amountApproved: OrderBy
  applicationDate: OrderBy
  censusTract: OrderBy
  decisionDate: OrderBy
  denialReason1: OrderBy
  denialReason2: OrderBy
  denialReason3: OrderBy
  denialReason4: OrderBy
  exemptionClaimed: OrderBy
  exemptionReason: OrderBy
  lgbtqOwned: OrderBy
  loanAmount: OrderBy
  loanPurpose: OrderBy
  loanType: OrderBy
  minorityOwned: OrderBy
  msaMd: OrderBy
  naicsCode: OrderBy
  numberOfEmployees: OrderBy
  rateSpread: OrderBy
  reportedRevenue: OrderBy
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinessesOrderByExp
  smallBusinessBankingBusinessId: OrderBy
  smallBusinessBankingLendingRecordId: OrderBy
  smallBusinessBankingLoan: SmallBusinessBanking_SmallBusinessBankingLoansOrderByExp
  smallBusinessBankingLoanId: OrderBy
  veteranOwned: OrderBy
  womenOwned: OrderBy
}

"""Stores information about term loans issued to small businesses"""
type SmallBusinessBanking_SmallBusinessBankingLoans {
  """Final balloon payment amount (if applicable)"""
  balloonPayment: SmallBusinessBanking_Numeric

  """Date when loan funds were disbursed"""
  disbursalDate: SmallBusinessBanking_Date

  """Date when the first payment is due"""
  firstPaymentDate: SmallBusinessBanking_Date

  """Annual interest rate for the loan"""
  interestRate: SmallBusinessBanking_Numeric!

  """Type of interest rate (fixed, variable, etc.)"""
  interestType: SmallBusinessBanking_Varchar!

  """Original principal amount of the loan"""
  loanAmount: SmallBusinessBanking_Numeric!

  """Unique loan number visible to customers"""
  loanNumber: SmallBusinessBanking_Varchar!

  """Date when the loan is scheduled to be fully paid"""
  maturityDate: SmallBusinessBanking_Date

  """Current balance remaining on the loan"""
  outstandingBalance: SmallBusinessBanking_Numeric!

  """Regular payment amount"""
  paymentAmount: SmallBusinessBanking_Numeric!

  """Frequency of payments (weekly, monthly, quarterly)"""
  paymentFrequency: SmallBusinessBanking_Varchar!

  """Stated purpose of the loan"""
  purpose: SmallBusinessBanking_Varchar

  """Spread over the reference rate for variable rate loans"""
  rateSpread: SmallBusinessBanking_Numeric

  """Reference rate for variable rate loans (e.g., PRIME, SOFR)"""
  referenceRate: SmallBusinessBanking_Varchar
  smallBusinessBankingAccount: SmallBusinessBanking_SmallBusinessBankingAccounts

  """Reference to the associated account for fund disbursement and payments"""
  smallBusinessBankingAccountId: SmallBusinessBanking_Int4!
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinesses

  """Reference to the business receiving the loan"""
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4!
  smallBusinessBankingLoanCollaterals(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingLoanCollateralOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingLoanCollateralBoolExp): [SmallBusinessBanking_SmallBusinessBankingLoanCollateral!]
  smallBusinessBankingLoanCollateralsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingLoanCollateralFilterInput): SmallBusinessBanking_SmallBusinessBankingLoanCollateralAggExp!
  smallBusinessBankingLoanFairLendings(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingLoanFairLendingOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingLoanFairLendingBoolExp): [SmallBusinessBanking_SmallBusinessBankingLoanFairLending!]
  smallBusinessBankingLoanFairLendingsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingLoanFairLendingFilterInput): SmallBusinessBanking_SmallBusinessBankingLoanFairLendingAggExp!

  """Unique identifier for each loan"""
  smallBusinessBankingLoanId: SmallBusinessBanking_Int4!
  smallBusinessBankingPayments(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingPaymentsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingPaymentsBoolExp): [SmallBusinessBanking_SmallBusinessBankingPayments!]
  smallBusinessBankingPaymentsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingPaymentsFilterInput): SmallBusinessBanking_SmallBusinessBankingPaymentsAggExp!
  smallBusinessBankingProduct: SmallBusinessBanking_SmallBusinessBankingProducts

  """Reference to the loan product"""
  smallBusinessBankingProductId: SmallBusinessBanking_Int4!

  """Current status of the loan (pending, active, paid, defaulted)"""
  status: SmallBusinessBanking_Varchar!

  """Duration of the loan in months"""
  termMonths: SmallBusinessBanking_Int4!
}

type SmallBusinessBanking_SmallBusinessBankingLoansAggExp {
  _count: Int!
  balloonPayment: SmallBusinessBanking_NumericAggExp!
  disbursalDate: SmallBusinessBanking_DateAggExp!
  firstPaymentDate: SmallBusinessBanking_DateAggExp!
  interestRate: SmallBusinessBanking_NumericAggExp!
  interestType: SmallBusinessBanking_VarcharAggExp!
  loanAmount: SmallBusinessBanking_NumericAggExp!
  loanNumber: SmallBusinessBanking_VarcharAggExp!
  maturityDate: SmallBusinessBanking_DateAggExp!
  outstandingBalance: SmallBusinessBanking_NumericAggExp!
  paymentAmount: SmallBusinessBanking_NumericAggExp!
  paymentFrequency: SmallBusinessBanking_VarcharAggExp!
  purpose: SmallBusinessBanking_VarcharAggExp!
  rateSpread: SmallBusinessBanking_NumericAggExp!
  referenceRate: SmallBusinessBanking_VarcharAggExp!
  smallBusinessBankingAccountId: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingLoanId: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingProductId: SmallBusinessBanking_Int4AggExp!
  status: SmallBusinessBanking_VarcharAggExp!
  termMonths: SmallBusinessBanking_Int4AggExp!
}

input SmallBusinessBanking_SmallBusinessBankingLoansBoolExp {
  _and: [SmallBusinessBanking_SmallBusinessBankingLoansBoolExp!]
  _not: SmallBusinessBanking_SmallBusinessBankingLoansBoolExp
  _or: [SmallBusinessBanking_SmallBusinessBankingLoansBoolExp!]
  balloonPayment: SmallBusinessBanking_NumericBoolExp
  disbursalDate: SmallBusinessBanking_DateBoolExp
  firstPaymentDate: SmallBusinessBanking_DateBoolExp
  interestRate: SmallBusinessBanking_NumericBoolExp
  interestType: SmallBusinessBanking_VarcharBoolExp
  loanAmount: SmallBusinessBanking_NumericBoolExp
  loanNumber: SmallBusinessBanking_VarcharBoolExp
  maturityDate: SmallBusinessBanking_DateBoolExp
  outstandingBalance: SmallBusinessBanking_NumericBoolExp
  paymentAmount: SmallBusinessBanking_NumericBoolExp
  paymentFrequency: SmallBusinessBanking_VarcharBoolExp
  purpose: SmallBusinessBanking_VarcharBoolExp
  rateSpread: SmallBusinessBanking_NumericBoolExp
  referenceRate: SmallBusinessBanking_VarcharBoolExp
  smallBusinessBankingAccount: SmallBusinessBanking_SmallBusinessBankingAccountsBoolExp
  smallBusinessBankingAccountId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinessesBoolExp
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingLoanCollaterals: SmallBusinessBanking_SmallBusinessBankingLoanCollateralBoolExp
  smallBusinessBankingLoanFairLendings: SmallBusinessBanking_SmallBusinessBankingLoanFairLendingBoolExp
  smallBusinessBankingLoanId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingPayments: SmallBusinessBanking_SmallBusinessBankingPaymentsBoolExp
  smallBusinessBankingProduct: SmallBusinessBanking_SmallBusinessBankingProductsBoolExp
  smallBusinessBankingProductId: SmallBusinessBanking_Int4BoolExp
  status: SmallBusinessBanking_VarcharBoolExp
  termMonths: SmallBusinessBanking_Int4BoolExp
}

input SmallBusinessBanking_SmallBusinessBankingLoansFilterInput {
  limit: Int
  offset: Int
  order_by: [SmallBusinessBanking_SmallBusinessBankingLoansOrderByExp!]
  where: SmallBusinessBanking_SmallBusinessBankingLoansBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingLoansOrderByExp {
  balloonPayment: OrderBy
  disbursalDate: OrderBy
  firstPaymentDate: OrderBy
  interestRate: OrderBy
  interestType: OrderBy
  loanAmount: OrderBy
  loanNumber: OrderBy
  maturityDate: OrderBy
  outstandingBalance: OrderBy
  paymentAmount: OrderBy
  paymentFrequency: OrderBy
  purpose: OrderBy
  rateSpread: OrderBy
  referenceRate: OrderBy
  smallBusinessBankingAccount: SmallBusinessBanking_SmallBusinessBankingAccountsOrderByExp
  smallBusinessBankingAccountId: OrderBy
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinessesOrderByExp
  smallBusinessBankingBusinessId: OrderBy
  smallBusinessBankingLoanId: OrderBy
  smallBusinessBankingProduct: SmallBusinessBanking_SmallBusinessBankingProductsOrderByExp
  smallBusinessBankingProductId: OrderBy
  status: OrderBy
  termMonths: OrderBy
}

"""
Tracks payments made against loans, credit lines, credit cards, and between accounts
"""
type SmallBusinessBanking_SmallBusinessBankingPayments {
  """Payment amount"""
  amount: SmallBusinessBanking_Numeric!

  """Reference to the credit card being paid (for card payments)"""
  creditCardId: SmallBusinessBanking_Int4

  """
  Reference to the account funds are deposited to (for internal transfers)
  """
  destinationAccountId: SmallBusinessBanking_Int4

  """Date the payment is applied to the account"""
  effectiveDate: SmallBusinessBanking_Date

  """External reference number for the payment"""
  externalReference: SmallBusinessBanking_Varchar

  """Portion of payment applied to fees"""
  feesPortion: SmallBusinessBanking_Numeric

  """Portion of payment applied to interest"""
  interestPortion: SmallBusinessBanking_Numeric

  """Additional payment information or notes"""
  memo: SmallBusinessBanking_Varchar

  """Date the payment was made or scheduled"""
  paymentDate: SmallBusinessBanking_Date!

  """Method of payment (ACH, wire, internal transfer, check)"""
  paymentMethod: SmallBusinessBanking_Varchar!

  """Type of payment (principal, interest, fees, or combination)"""
  paymentType: SmallBusinessBanking_Varchar!

  """Portion of payment applied to principal"""
  principalPortion: SmallBusinessBanking_Numeric
  smallBusinessBankingAccount: SmallBusinessBanking_SmallBusinessBankingAccounts
  smallBusinessBankingAccountBySourceAccountId: SmallBusinessBanking_SmallBusinessBankingAccounts
  smallBusinessBankingBusinessCardAccount: SmallBusinessBanking_SmallBusinessBankingBusinessCardAccounts
  smallBusinessBankingCreditLine: SmallBusinessBanking_SmallBusinessBankingCreditLines

  """Reference to the credit line being paid (for credit line payments)"""
  smallBusinessBankingCreditLineId: SmallBusinessBanking_Int4
  smallBusinessBankingLoan: SmallBusinessBanking_SmallBusinessBankingLoans

  """Reference to the loan being paid (for loan payments)"""
  smallBusinessBankingLoanId: SmallBusinessBanking_Int4

  """Unique identifier for each payment"""
  smallBusinessBankingPaymentId: SmallBusinessBanking_Int4!

  """Reference to the account funds are drawn from (for internal transfers)"""
  sourceAccountId: SmallBusinessBanking_Int4

  """Status of the payment (pending, processed, failed)"""
  status: SmallBusinessBanking_Varchar!
}

type SmallBusinessBanking_SmallBusinessBankingPaymentsAggExp {
  _count: Int!
  amount: SmallBusinessBanking_NumericAggExp!
  creditCardId: SmallBusinessBanking_Int4AggExp!
  destinationAccountId: SmallBusinessBanking_Int4AggExp!
  effectiveDate: SmallBusinessBanking_DateAggExp!
  externalReference: SmallBusinessBanking_VarcharAggExp!
  feesPortion: SmallBusinessBanking_NumericAggExp!
  interestPortion: SmallBusinessBanking_NumericAggExp!
  memo: SmallBusinessBanking_VarcharAggExp!
  paymentDate: SmallBusinessBanking_DateAggExp!
  paymentMethod: SmallBusinessBanking_VarcharAggExp!
  paymentType: SmallBusinessBanking_VarcharAggExp!
  principalPortion: SmallBusinessBanking_NumericAggExp!
  smallBusinessBankingCreditLineId: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingLoanId: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingPaymentId: SmallBusinessBanking_Int4AggExp!
  sourceAccountId: SmallBusinessBanking_Int4AggExp!
  status: SmallBusinessBanking_VarcharAggExp!
}

input SmallBusinessBanking_SmallBusinessBankingPaymentsBoolExp {
  _and: [SmallBusinessBanking_SmallBusinessBankingPaymentsBoolExp!]
  _not: SmallBusinessBanking_SmallBusinessBankingPaymentsBoolExp
  _or: [SmallBusinessBanking_SmallBusinessBankingPaymentsBoolExp!]
  amount: SmallBusinessBanking_NumericBoolExp
  creditCardId: SmallBusinessBanking_Int4BoolExp
  destinationAccountId: SmallBusinessBanking_Int4BoolExp
  effectiveDate: SmallBusinessBanking_DateBoolExp
  externalReference: SmallBusinessBanking_VarcharBoolExp
  feesPortion: SmallBusinessBanking_NumericBoolExp
  interestPortion: SmallBusinessBanking_NumericBoolExp
  memo: SmallBusinessBanking_VarcharBoolExp
  paymentDate: SmallBusinessBanking_DateBoolExp
  paymentMethod: SmallBusinessBanking_VarcharBoolExp
  paymentType: SmallBusinessBanking_VarcharBoolExp
  principalPortion: SmallBusinessBanking_NumericBoolExp
  smallBusinessBankingAccount: SmallBusinessBanking_SmallBusinessBankingAccountsBoolExp
  smallBusinessBankingAccountBySourceAccountId: SmallBusinessBanking_SmallBusinessBankingAccountsBoolExp
  smallBusinessBankingBusinessCardAccount: SmallBusinessBanking_SmallBusinessBankingBusinessCardAccountsBoolExp
  smallBusinessBankingCreditLine: SmallBusinessBanking_SmallBusinessBankingCreditLinesBoolExp
  smallBusinessBankingCreditLineId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingLoan: SmallBusinessBanking_SmallBusinessBankingLoansBoolExp
  smallBusinessBankingLoanId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingPaymentId: SmallBusinessBanking_Int4BoolExp
  sourceAccountId: SmallBusinessBanking_Int4BoolExp
  status: SmallBusinessBanking_VarcharBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingPaymentsFilterInput {
  limit: Int
  offset: Int
  order_by: [SmallBusinessBanking_SmallBusinessBankingPaymentsOrderByExp!]
  where: SmallBusinessBanking_SmallBusinessBankingPaymentsBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingPaymentsOrderByExp {
  amount: OrderBy
  creditCardId: OrderBy
  destinationAccountId: OrderBy
  effectiveDate: OrderBy
  externalReference: OrderBy
  feesPortion: OrderBy
  interestPortion: OrderBy
  memo: OrderBy
  paymentDate: OrderBy
  paymentMethod: OrderBy
  paymentType: OrderBy
  principalPortion: OrderBy
  smallBusinessBankingAccount: SmallBusinessBanking_SmallBusinessBankingAccountsOrderByExp
  smallBusinessBankingAccountBySourceAccountId: SmallBusinessBanking_SmallBusinessBankingAccountsOrderByExp
  smallBusinessBankingBusinessCardAccount: SmallBusinessBanking_SmallBusinessBankingBusinessCardAccountsOrderByExp
  smallBusinessBankingCreditLine: SmallBusinessBanking_SmallBusinessBankingCreditLinesOrderByExp
  smallBusinessBankingCreditLineId: OrderBy
  smallBusinessBankingLoan: SmallBusinessBanking_SmallBusinessBankingLoansOrderByExp
  smallBusinessBankingLoanId: OrderBy
  smallBusinessBankingPaymentId: OrderBy
  sourceAccountId: OrderBy
  status: OrderBy
}

"""Defines the financial products offered to small business customers"""
type SmallBusinessBanking_SmallBusinessBankingProducts {
  """Standard interest rate for the product (if applicable)"""
  baseInterestRate: SmallBusinessBanking_Numeric

  """Detailed product description"""
  description: SmallBusinessBanking_Text

  """Indicates if the product is currently offered"""
  isActive: SmallBusinessBanking_Bool!

  """Indicates if the product earns interest"""
  isInterestBearing: SmallBusinessBanking_Bool!

  """Minimum balance to avoid fees"""
  minBalance: SmallBusinessBanking_Numeric

  """Minimum amount required to open an account of this product type"""
  minOpeningDeposit: SmallBusinessBanking_Numeric

  """Standard monthly maintenance fee"""
  monthlyFee: SmallBusinessBanking_Numeric

  """Internal code for the product"""
  productCode: SmallBusinessBanking_Varchar!

  """Display name for the product"""
  productName: SmallBusinessBanking_Varchar!

  """Type of product (checking, savings, loan, credit line, credit card)"""
  productType: SmallBusinessBanking_Varchar!
  smallBusinessBankingAccounts(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingAccountsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingAccountsBoolExp): [SmallBusinessBanking_SmallBusinessBankingAccounts!]
  smallBusinessBankingAccountsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingAccountsFilterInput): SmallBusinessBanking_SmallBusinessBankingAccountsAggExp!
  smallBusinessBankingCreditLines(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingCreditLinesOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingCreditLinesBoolExp): [SmallBusinessBanking_SmallBusinessBankingCreditLines!]
  smallBusinessBankingCreditLinesAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingCreditLinesFilterInput): SmallBusinessBanking_SmallBusinessBankingCreditLinesAggExp!
  smallBusinessBankingLoans(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingLoansOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingLoansBoolExp): [SmallBusinessBanking_SmallBusinessBankingLoans!]
  smallBusinessBankingLoansAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingLoansFilterInput): SmallBusinessBanking_SmallBusinessBankingLoansAggExp!

  """Unique identifier for each product"""
  smallBusinessBankingProductId: SmallBusinessBanking_Int4!

  """Term in months (for term products)"""
  termLength: SmallBusinessBanking_Int4

  """Fee charged per transaction beyond the limit"""
  transactionFee: SmallBusinessBanking_Numeric

  """Number of free transactions per statement period"""
  transactionLimit: SmallBusinessBanking_Int4
}

type SmallBusinessBanking_SmallBusinessBankingProductsAggExp {
  _count: Int!
  baseInterestRate: SmallBusinessBanking_NumericAggExp!
  description: SmallBusinessBanking_TextAggExp!
  isActive: SmallBusinessBanking_BoolAggExp!
  isInterestBearing: SmallBusinessBanking_BoolAggExp!
  minBalance: SmallBusinessBanking_NumericAggExp!
  minOpeningDeposit: SmallBusinessBanking_NumericAggExp!
  monthlyFee: SmallBusinessBanking_NumericAggExp!
  productCode: SmallBusinessBanking_VarcharAggExp!
  productName: SmallBusinessBanking_VarcharAggExp!
  productType: SmallBusinessBanking_VarcharAggExp!
  smallBusinessBankingProductId: SmallBusinessBanking_Int4AggExp!
  termLength: SmallBusinessBanking_Int4AggExp!
  transactionFee: SmallBusinessBanking_NumericAggExp!
  transactionLimit: SmallBusinessBanking_Int4AggExp!
}

input SmallBusinessBanking_SmallBusinessBankingProductsBoolExp {
  _and: [SmallBusinessBanking_SmallBusinessBankingProductsBoolExp!]
  _not: SmallBusinessBanking_SmallBusinessBankingProductsBoolExp
  _or: [SmallBusinessBanking_SmallBusinessBankingProductsBoolExp!]
  baseInterestRate: SmallBusinessBanking_NumericBoolExp
  description: SmallBusinessBanking_TextBoolExp
  isActive: SmallBusinessBanking_BoolBoolExp
  isInterestBearing: SmallBusinessBanking_BoolBoolExp
  minBalance: SmallBusinessBanking_NumericBoolExp
  minOpeningDeposit: SmallBusinessBanking_NumericBoolExp
  monthlyFee: SmallBusinessBanking_NumericBoolExp
  productCode: SmallBusinessBanking_VarcharBoolExp
  productName: SmallBusinessBanking_VarcharBoolExp
  productType: SmallBusinessBanking_VarcharBoolExp
  smallBusinessBankingAccounts: SmallBusinessBanking_SmallBusinessBankingAccountsBoolExp
  smallBusinessBankingCreditLines: SmallBusinessBanking_SmallBusinessBankingCreditLinesBoolExp
  smallBusinessBankingLoans: SmallBusinessBanking_SmallBusinessBankingLoansBoolExp
  smallBusinessBankingProductId: SmallBusinessBanking_Int4BoolExp
  termLength: SmallBusinessBanking_Int4BoolExp
  transactionFee: SmallBusinessBanking_NumericBoolExp
  transactionLimit: SmallBusinessBanking_Int4BoolExp
}

input SmallBusinessBanking_SmallBusinessBankingProductsFilterInput {
  limit: Int
  offset: Int
  order_by: [SmallBusinessBanking_SmallBusinessBankingProductsOrderByExp!]
  where: SmallBusinessBanking_SmallBusinessBankingProductsBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingProductsOrderByExp {
  baseInterestRate: OrderBy
  description: OrderBy
  isActive: OrderBy
  isInterestBearing: OrderBy
  minBalance: OrderBy
  minOpeningDeposit: OrderBy
  monthlyFee: OrderBy
  productCode: OrderBy
  productName: OrderBy
  productType: OrderBy
  smallBusinessBankingProductId: OrderBy
  termLength: OrderBy
  transactionFee: OrderBy
  transactionLimit: OrderBy
}

"""Tracks regulatory findings, violations, and corrective actions"""
type SmallBusinessBanking_SmallBusinessBankingRegulatoryFindings {
  """Description of required corrective action"""
  correctiveActionDescription: SmallBusinessBanking_Text

  """Whether corrective action is required"""
  correctiveActionRequired: SmallBusinessBanking_Bool!

  """Detailed description of the finding"""
  description: SmallBusinessBanking_Text!

  """Deadline for corrective action"""
  dueDate: SmallBusinessBanking_Date

  """Date the finding was identified or received"""
  findingDate: SmallBusinessBanking_Date!
  findingResponsibleParty: Enterprise_EnterpriseAssociates

  """Type of finding (violation, concern, observation)"""
  findingType: SmallBusinessBanking_Varchar!

  """Reference to specific regulation or law"""
  regulationReference: SmallBusinessBanking_Varchar

  """Date when the finding was resolved"""
  resolutionDate: SmallBusinessBanking_Date

  """Description of how the finding was resolved"""
  resolutionDescription: SmallBusinessBanking_Text

  """Department or individual responsible for resolution"""
  responsibleParty: SmallBusinessBanking_Int4

  """Severity level (high, medium, low)"""
  severity: SmallBusinessBanking_Varchar!
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinesses

  """Associated business if finding is related to a specific customer"""
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4

  """Unique identifier for each regulatory finding"""
  smallBusinessBankingFindingId: SmallBusinessBanking_Int4!
  smallBusinessBankingRegulatoryReport: SmallBusinessBanking_SmallBusinessBankingRegulatoryReports

  """Associated regulatory report if applicable"""
  smallBusinessBankingReportId: SmallBusinessBanking_Int4

  """Source of the finding (exam, self-assessment, regulator, etc.)"""
  source: SmallBusinessBanking_Varchar!

  """Status of the finding (open, in progress, resolved, validated)"""
  status: SmallBusinessBanking_Varchar!
}

type SmallBusinessBanking_SmallBusinessBankingRegulatoryFindingsAggExp {
  _count: Int!
  correctiveActionDescription: SmallBusinessBanking_TextAggExp!
  correctiveActionRequired: SmallBusinessBanking_BoolAggExp!
  description: SmallBusinessBanking_TextAggExp!
  dueDate: SmallBusinessBanking_DateAggExp!
  findingDate: SmallBusinessBanking_DateAggExp!
  findingType: SmallBusinessBanking_VarcharAggExp!
  regulationReference: SmallBusinessBanking_VarcharAggExp!
  resolutionDate: SmallBusinessBanking_DateAggExp!
  resolutionDescription: SmallBusinessBanking_TextAggExp!
  responsibleParty: SmallBusinessBanking_Int4AggExp!
  severity: SmallBusinessBanking_VarcharAggExp!
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingFindingId: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingReportId: SmallBusinessBanking_Int4AggExp!
  source: SmallBusinessBanking_VarcharAggExp!
  status: SmallBusinessBanking_VarcharAggExp!
}

input SmallBusinessBanking_SmallBusinessBankingRegulatoryFindingsBoolExp {
  _and: [SmallBusinessBanking_SmallBusinessBankingRegulatoryFindingsBoolExp!]
  _not: SmallBusinessBanking_SmallBusinessBankingRegulatoryFindingsBoolExp
  _or: [SmallBusinessBanking_SmallBusinessBankingRegulatoryFindingsBoolExp!]
  correctiveActionDescription: SmallBusinessBanking_TextBoolExp
  correctiveActionRequired: SmallBusinessBanking_BoolBoolExp
  description: SmallBusinessBanking_TextBoolExp
  dueDate: SmallBusinessBanking_DateBoolExp
  findingDate: SmallBusinessBanking_DateBoolExp
  findingType: SmallBusinessBanking_VarcharBoolExp
  regulationReference: SmallBusinessBanking_VarcharBoolExp
  resolutionDate: SmallBusinessBanking_DateBoolExp
  resolutionDescription: SmallBusinessBanking_TextBoolExp
  responsibleParty: SmallBusinessBanking_Int4BoolExp
  severity: SmallBusinessBanking_VarcharBoolExp
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinessesBoolExp
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingFindingId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingRegulatoryReport: SmallBusinessBanking_SmallBusinessBankingRegulatoryReportsBoolExp
  smallBusinessBankingReportId: SmallBusinessBanking_Int4BoolExp
  source: SmallBusinessBanking_VarcharBoolExp
  status: SmallBusinessBanking_VarcharBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingRegulatoryFindingsFilterInput {
  limit: Int
  offset: Int
  order_by: [SmallBusinessBanking_SmallBusinessBankingRegulatoryFindingsOrderByExp!]
  where: SmallBusinessBanking_SmallBusinessBankingRegulatoryFindingsBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingRegulatoryFindingsOrderByExp {
  correctiveActionDescription: OrderBy
  correctiveActionRequired: OrderBy
  description: OrderBy
  dueDate: OrderBy
  findingDate: OrderBy
  findingType: OrderBy
  regulationReference: OrderBy
  resolutionDate: OrderBy
  resolutionDescription: OrderBy
  responsibleParty: OrderBy
  severity: OrderBy
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinessesOrderByExp
  smallBusinessBankingBusinessId: OrderBy
  smallBusinessBankingFindingId: OrderBy
  smallBusinessBankingRegulatoryReport: SmallBusinessBanking_SmallBusinessBankingRegulatoryReportsOrderByExp
  smallBusinessBankingReportId: OrderBy
  source: OrderBy
  status: OrderBy
}

"""Tracks required regulatory reports related to small business banking"""
type SmallBusinessBanking_SmallBusinessBankingRegulatoryReports {
  """Date when the report is due to be submitted"""
  dueDate: SmallBusinessBanking_Date!

  """Version of the regulatory reporting specification"""
  fileSpecificationVersion: SmallBusinessBanking_Varchar

  """Additional information about the report"""
  notes: SmallBusinessBanking_Text

  """End date of the reporting period"""
  periodEndDate: SmallBusinessBanking_Date!

  """Start date of the reporting period"""
  periodStartDate: SmallBusinessBanking_Date!

  """Agency the report is submitted to (FDIC, Federal Reserve, CFPB, etc.)"""
  regulatoryAgency: SmallBusinessBanking_Varchar!
  reportOwnedBy: Enterprise_EnterpriseAssociates

  """Department or individual responsible for the report"""
  reportOwner: SmallBusinessBanking_Int4!

  """Type of regulatory report (CRA, HMDA, BSA, etc.)"""
  reportType: SmallBusinessBanking_Varchar!
  smallBusinessBankingRegulatoryFindings(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingRegulatoryFindingsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingRegulatoryFindingsBoolExp): [SmallBusinessBanking_SmallBusinessBankingRegulatoryFindings!]
  smallBusinessBankingRegulatoryFindingsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingRegulatoryFindingsFilterInput): SmallBusinessBanking_SmallBusinessBankingRegulatoryFindingsAggExp!

  """Unique identifier for each regulatory report"""
  smallBusinessBankingReportId: SmallBusinessBanking_Int4!
  smallBusinessBankingReportSubmissions(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingReportSubmissionsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingReportSubmissionsBoolExp): [SmallBusinessBanking_SmallBusinessBankingReportSubmissions!]
  smallBusinessBankingReportSubmissionsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingReportSubmissionsFilterInput): SmallBusinessBanking_SmallBusinessBankingReportSubmissionsAggExp!

  """
  Status of the report (pending, in progress, submitted, accepted, rejected)
  """
  status: SmallBusinessBanking_Varchar!
}

type SmallBusinessBanking_SmallBusinessBankingRegulatoryReportsAggExp {
  _count: Int!
  dueDate: SmallBusinessBanking_DateAggExp!
  fileSpecificationVersion: SmallBusinessBanking_VarcharAggExp!
  notes: SmallBusinessBanking_TextAggExp!
  periodEndDate: SmallBusinessBanking_DateAggExp!
  periodStartDate: SmallBusinessBanking_DateAggExp!
  regulatoryAgency: SmallBusinessBanking_VarcharAggExp!
  reportOwner: SmallBusinessBanking_Int4AggExp!
  reportType: SmallBusinessBanking_VarcharAggExp!
  smallBusinessBankingReportId: SmallBusinessBanking_Int4AggExp!
  status: SmallBusinessBanking_VarcharAggExp!
}

input SmallBusinessBanking_SmallBusinessBankingRegulatoryReportsBoolExp {
  _and: [SmallBusinessBanking_SmallBusinessBankingRegulatoryReportsBoolExp!]
  _not: SmallBusinessBanking_SmallBusinessBankingRegulatoryReportsBoolExp
  _or: [SmallBusinessBanking_SmallBusinessBankingRegulatoryReportsBoolExp!]
  dueDate: SmallBusinessBanking_DateBoolExp
  fileSpecificationVersion: SmallBusinessBanking_VarcharBoolExp
  notes: SmallBusinessBanking_TextBoolExp
  periodEndDate: SmallBusinessBanking_DateBoolExp
  periodStartDate: SmallBusinessBanking_DateBoolExp
  regulatoryAgency: SmallBusinessBanking_VarcharBoolExp
  reportOwner: SmallBusinessBanking_Int4BoolExp
  reportType: SmallBusinessBanking_VarcharBoolExp
  smallBusinessBankingRegulatoryFindings: SmallBusinessBanking_SmallBusinessBankingRegulatoryFindingsBoolExp
  smallBusinessBankingReportId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingReportSubmissions: SmallBusinessBanking_SmallBusinessBankingReportSubmissionsBoolExp
  status: SmallBusinessBanking_VarcharBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingRegulatoryReportsFilterInput {
  limit: Int
  offset: Int
  order_by: [SmallBusinessBanking_SmallBusinessBankingRegulatoryReportsOrderByExp!]
  where: SmallBusinessBanking_SmallBusinessBankingRegulatoryReportsBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingRegulatoryReportsOrderByExp {
  dueDate: OrderBy
  fileSpecificationVersion: OrderBy
  notes: OrderBy
  periodEndDate: OrderBy
  periodStartDate: OrderBy
  regulatoryAgency: OrderBy
  reportOwner: OrderBy
  reportType: OrderBy
  smallBusinessBankingReportId: OrderBy
  status: OrderBy
}

"""Records submissions of regulatory reports to authorities"""
type SmallBusinessBanking_SmallBusinessBankingReportSubmissions {
  """Confirmation number received upon submission"""
  confirmationNumber: SmallBusinessBanking_Varchar
  reportSubmittedBy: Enterprise_EnterpriseAssociates

  """Date and time of regulator response"""
  responseDate: SmallBusinessBanking_Timestamptz

  """Details of the regulator's response"""
  responseDetails: SmallBusinessBanking_Text

  """
  Status of the regulator's response (accepted, rejected, need more info)
  """
  responseStatus: SmallBusinessBanking_Varchar
  smallBusinessBankingRegulatoryReport: SmallBusinessBanking_SmallBusinessBankingRegulatoryReports

  """Reference to the regulatory report"""
  smallBusinessBankingReportId: SmallBusinessBanking_Int4!

  """Unique identifier for each report submission"""
  smallBusinessBankingSubmissionId: SmallBusinessBanking_Int4!

  """Date and time of submission"""
  submissionDate: SmallBusinessBanking_Timestamptz!

  """Path to the submitted file"""
  submissionFilePath: SmallBusinessBanking_Varchar

  """Method of submission (portal, API, mail, etc.)"""
  submissionMethod: SmallBusinessBanking_Varchar!

  """Person who submitted the report"""
  submittedById: SmallBusinessBanking_Int4!
}

type SmallBusinessBanking_SmallBusinessBankingReportSubmissionsAggExp {
  _count: Int!
  confirmationNumber: SmallBusinessBanking_VarcharAggExp!
  responseDate: SmallBusinessBanking_TimestamptzAggExp!
  responseDetails: SmallBusinessBanking_TextAggExp!
  responseStatus: SmallBusinessBanking_VarcharAggExp!
  smallBusinessBankingReportId: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingSubmissionId: SmallBusinessBanking_Int4AggExp!
  submissionDate: SmallBusinessBanking_TimestamptzAggExp!
  submissionFilePath: SmallBusinessBanking_VarcharAggExp!
  submissionMethod: SmallBusinessBanking_VarcharAggExp!
  submittedById: SmallBusinessBanking_Int4AggExp!
}

input SmallBusinessBanking_SmallBusinessBankingReportSubmissionsBoolExp {
  _and: [SmallBusinessBanking_SmallBusinessBankingReportSubmissionsBoolExp!]
  _not: SmallBusinessBanking_SmallBusinessBankingReportSubmissionsBoolExp
  _or: [SmallBusinessBanking_SmallBusinessBankingReportSubmissionsBoolExp!]
  confirmationNumber: SmallBusinessBanking_VarcharBoolExp
  responseDate: SmallBusinessBanking_TimestamptzBoolExp
  responseDetails: SmallBusinessBanking_TextBoolExp
  responseStatus: SmallBusinessBanking_VarcharBoolExp
  smallBusinessBankingRegulatoryReport: SmallBusinessBanking_SmallBusinessBankingRegulatoryReportsBoolExp
  smallBusinessBankingReportId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingSubmissionId: SmallBusinessBanking_Int4BoolExp
  submissionDate: SmallBusinessBanking_TimestamptzBoolExp
  submissionFilePath: SmallBusinessBanking_VarcharBoolExp
  submissionMethod: SmallBusinessBanking_VarcharBoolExp
  submittedById: SmallBusinessBanking_Int4BoolExp
}

input SmallBusinessBanking_SmallBusinessBankingReportSubmissionsFilterInput {
  limit: Int
  offset: Int
  order_by: [SmallBusinessBanking_SmallBusinessBankingReportSubmissionsOrderByExp!]
  where: SmallBusinessBanking_SmallBusinessBankingReportSubmissionsBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingReportSubmissionsOrderByExp {
  confirmationNumber: OrderBy
  responseDate: OrderBy
  responseDetails: OrderBy
  responseStatus: OrderBy
  smallBusinessBankingRegulatoryReport: SmallBusinessBanking_SmallBusinessBankingRegulatoryReportsOrderByExp
  smallBusinessBankingReportId: OrderBy
  smallBusinessBankingSubmissionId: OrderBy
  submissionDate: OrderBy
  submissionFilePath: OrderBy
  submissionMethod: OrderBy
  submittedById: OrderBy
}

"""Tracks Suspicious Activity Reports filed with FinCEN"""
type SmallBusinessBanking_SmallBusinessBankingSuspiciousActivityReports {
  """Whether account was closed"""
  accountClosed: SmallBusinessBanking_Bool!

  """Date account was closed (if applicable)"""
  accountClosingDate: SmallBusinessBanking_Date

  """Date when suspicious activity ended"""
  activityEndDate: SmallBusinessBanking_Date!

  """Date when suspicious activity began"""
  activityStartDate: SmallBusinessBanking_Date!

  """Total amount involved in suspicious activity"""
  amountInvolved: SmallBusinessBanking_Numeric!

  """Person who approved the SAR"""
  approvedById: SmallBusinessBanking_Int4!

  """Signature of BSA officer"""
  bsaOfficerSignature: SmallBusinessBanking_Int4!

  """Date the SAR was filed"""
  filingDate: SmallBusinessBanking_Date!

  """Name of filing institution"""
  filingInstitution: SmallBusinessBanking_Varchar!

  """Acknowledgment received from FinCEN"""
  fincenAcknowledgment: SmallBusinessBanking_Varchar

  """Whether fraud was involved"""
  fraudInvolved: SmallBusinessBanking_Bool!

  """Whether insider abuse was involved"""
  insiderAbuseInvolved: SmallBusinessBanking_Bool!

  """Agency contacted (if applicable)"""
  lawEnforcementAgency: SmallBusinessBanking_Varchar

  """Date of law enforcement contact"""
  lawEnforcementContactDate: SmallBusinessBanking_Date

  """Name of law enforcement contact"""
  lawEnforcementContactName: SmallBusinessBanking_Varchar

  """Whether law enforcement was contacted"""
  lawEnforcementContacted: SmallBusinessBanking_Bool!

  """Whether money laundering was involved"""
  moneyLaunderingInvolved: SmallBusinessBanking_Bool!

  """Description of other suspicious activity"""
  otherDescription: SmallBusinessBanking_Text

  """Whether other suspicious activity was involved"""
  otherInvolved: SmallBusinessBanking_Bool!

  """Person who prepared the SAR"""
  preparedById: SmallBusinessBanking_Int4!
  sarApprovedBy: Enterprise_EnterpriseAssociates
  sarBsaOfficerSignature: Enterprise_EnterpriseAssociates

  """Path to stored copy of the SAR"""
  sarFilePath: SmallBusinessBanking_Varchar
  sarPreparedBy: Enterprise_EnterpriseAssociates
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinesses

  """Reference to the business if applicable"""
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4

  """Unique identifier for each SAR"""
  smallBusinessBankingSarId: SmallBusinessBanking_Int4!

  """Whether structuring was involved"""
  structuringInvolved: SmallBusinessBanking_Bool!

  """List of supporting documentation"""
  supportingDocumentation: SmallBusinessBanking_Text

  """Detailed description of suspicious activity"""
  suspiciousActivityDescription: SmallBusinessBanking_Text!

  """Type of suspicious activity"""
  suspiciousActivityType: SmallBusinessBanking_Varchar!

  """Whether terrorist financing was involved"""
  terroristFinancingInvolved: SmallBusinessBanking_Bool!
}

type SmallBusinessBanking_SmallBusinessBankingSuspiciousActivityReportsAggExp {
  _count: Int!
  accountClosed: SmallBusinessBanking_BoolAggExp!
  accountClosingDate: SmallBusinessBanking_DateAggExp!
  activityEndDate: SmallBusinessBanking_DateAggExp!
  activityStartDate: SmallBusinessBanking_DateAggExp!
  amountInvolved: SmallBusinessBanking_NumericAggExp!
  approvedById: SmallBusinessBanking_Int4AggExp!
  bsaOfficerSignature: SmallBusinessBanking_Int4AggExp!
  filingDate: SmallBusinessBanking_DateAggExp!
  filingInstitution: SmallBusinessBanking_VarcharAggExp!
  fincenAcknowledgment: SmallBusinessBanking_VarcharAggExp!
  fraudInvolved: SmallBusinessBanking_BoolAggExp!
  insiderAbuseInvolved: SmallBusinessBanking_BoolAggExp!
  lawEnforcementAgency: SmallBusinessBanking_VarcharAggExp!
  lawEnforcementContactDate: SmallBusinessBanking_DateAggExp!
  lawEnforcementContactName: SmallBusinessBanking_VarcharAggExp!
  lawEnforcementContacted: SmallBusinessBanking_BoolAggExp!
  moneyLaunderingInvolved: SmallBusinessBanking_BoolAggExp!
  otherDescription: SmallBusinessBanking_TextAggExp!
  otherInvolved: SmallBusinessBanking_BoolAggExp!
  preparedById: SmallBusinessBanking_Int4AggExp!
  sarFilePath: SmallBusinessBanking_VarcharAggExp!
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingSarId: SmallBusinessBanking_Int4AggExp!
  structuringInvolved: SmallBusinessBanking_BoolAggExp!
  supportingDocumentation: SmallBusinessBanking_TextAggExp!
  suspiciousActivityDescription: SmallBusinessBanking_TextAggExp!
  suspiciousActivityType: SmallBusinessBanking_VarcharAggExp!
  terroristFinancingInvolved: SmallBusinessBanking_BoolAggExp!
}

input SmallBusinessBanking_SmallBusinessBankingSuspiciousActivityReportsBoolExp {
  _and: [SmallBusinessBanking_SmallBusinessBankingSuspiciousActivityReportsBoolExp!]
  _not: SmallBusinessBanking_SmallBusinessBankingSuspiciousActivityReportsBoolExp
  _or: [SmallBusinessBanking_SmallBusinessBankingSuspiciousActivityReportsBoolExp!]
  accountClosed: SmallBusinessBanking_BoolBoolExp
  accountClosingDate: SmallBusinessBanking_DateBoolExp
  activityEndDate: SmallBusinessBanking_DateBoolExp
  activityStartDate: SmallBusinessBanking_DateBoolExp
  amountInvolved: SmallBusinessBanking_NumericBoolExp
  approvedById: SmallBusinessBanking_Int4BoolExp
  bsaOfficerSignature: SmallBusinessBanking_Int4BoolExp
  filingDate: SmallBusinessBanking_DateBoolExp
  filingInstitution: SmallBusinessBanking_VarcharBoolExp
  fincenAcknowledgment: SmallBusinessBanking_VarcharBoolExp
  fraudInvolved: SmallBusinessBanking_BoolBoolExp
  insiderAbuseInvolved: SmallBusinessBanking_BoolBoolExp
  lawEnforcementAgency: SmallBusinessBanking_VarcharBoolExp
  lawEnforcementContactDate: SmallBusinessBanking_DateBoolExp
  lawEnforcementContactName: SmallBusinessBanking_VarcharBoolExp
  lawEnforcementContacted: SmallBusinessBanking_BoolBoolExp
  moneyLaunderingInvolved: SmallBusinessBanking_BoolBoolExp
  otherDescription: SmallBusinessBanking_TextBoolExp
  otherInvolved: SmallBusinessBanking_BoolBoolExp
  preparedById: SmallBusinessBanking_Int4BoolExp
  sarFilePath: SmallBusinessBanking_VarcharBoolExp
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinessesBoolExp
  smallBusinessBankingBusinessId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingSarId: SmallBusinessBanking_Int4BoolExp
  structuringInvolved: SmallBusinessBanking_BoolBoolExp
  supportingDocumentation: SmallBusinessBanking_TextBoolExp
  suspiciousActivityDescription: SmallBusinessBanking_TextBoolExp
  suspiciousActivityType: SmallBusinessBanking_VarcharBoolExp
  terroristFinancingInvolved: SmallBusinessBanking_BoolBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingSuspiciousActivityReportsFilterInput {
  limit: Int
  offset: Int
  order_by: [SmallBusinessBanking_SmallBusinessBankingSuspiciousActivityReportsOrderByExp!]
  where: SmallBusinessBanking_SmallBusinessBankingSuspiciousActivityReportsBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingSuspiciousActivityReportsOrderByExp {
  accountClosed: OrderBy
  accountClosingDate: OrderBy
  activityEndDate: OrderBy
  activityStartDate: OrderBy
  amountInvolved: OrderBy
  approvedById: OrderBy
  bsaOfficerSignature: OrderBy
  filingDate: OrderBy
  filingInstitution: OrderBy
  fincenAcknowledgment: OrderBy
  fraudInvolved: OrderBy
  insiderAbuseInvolved: OrderBy
  lawEnforcementAgency: OrderBy
  lawEnforcementContactDate: OrderBy
  lawEnforcementContactName: OrderBy
  lawEnforcementContacted: OrderBy
  moneyLaunderingInvolved: OrderBy
  otherDescription: OrderBy
  otherInvolved: OrderBy
  preparedById: OrderBy
  sarFilePath: OrderBy
  smallBusinessBankingBusiness: SmallBusinessBanking_SmallBusinessBankingBusinessesOrderByExp
  smallBusinessBankingBusinessId: OrderBy
  smallBusinessBankingSarId: OrderBy
  structuringInvolved: OrderBy
  supportingDocumentation: OrderBy
  suspiciousActivityDescription: OrderBy
  suspiciousActivityType: OrderBy
  terroristFinancingInvolved: OrderBy
}

"""Records all financial transactions across business accounts"""
type SmallBusinessBanking_SmallBusinessBankingTransactions {
  """Transaction amount"""
  amount: SmallBusinessBanking_Numeric!

  """User that created the transaction"""
  createdById: SmallBusinessBanking_Int4

  """Currency of the transaction"""
  currency: SmallBusinessBanking_EnterpriseCurrencyCode!

  """Transaction description"""
  description: SmallBusinessBanking_Varchar

  """Date when the transaction was posted to the account"""
  postDate: SmallBusinessBanking_Date

  """External reference for the transaction"""
  referenceNumber: SmallBusinessBanking_Varchar

  """Account balance after this transaction"""
  runningBalance: SmallBusinessBanking_Numeric
  smallBusinessBankingAccount: SmallBusinessBanking_SmallBusinessBankingAccounts

  """Reference to the account where the transaction occurred"""
  smallBusinessBankingAccountId: SmallBusinessBanking_Int4!

  """Unique identifier for each transaction"""
  smallBusinessBankingTransactionId: SmallBusinessBanking_Int4!

  """Status of the transaction (pending, completed, failed, reversed)"""
  status: SmallBusinessBanking_Varchar!

  """Date of the transaction"""
  transactionDate: SmallBusinessBanking_Date!

  """Type of transaction (deposit, withdrawal, payment, fee, etc.)"""
  transactionType: SmallBusinessBanking_Varchar!
}

type SmallBusinessBanking_SmallBusinessBankingTransactionsAggExp {
  _count: Int!
  amount: SmallBusinessBanking_NumericAggExp!
  createdById: SmallBusinessBanking_Int4AggExp!
  currency: SmallBusinessBanking_EnterpriseCurrencyCodeAggExp!
  description: SmallBusinessBanking_VarcharAggExp!
  postDate: SmallBusinessBanking_DateAggExp!
  referenceNumber: SmallBusinessBanking_VarcharAggExp!
  runningBalance: SmallBusinessBanking_NumericAggExp!
  smallBusinessBankingAccountId: SmallBusinessBanking_Int4AggExp!
  smallBusinessBankingTransactionId: SmallBusinessBanking_Int4AggExp!
  status: SmallBusinessBanking_VarcharAggExp!
  transactionDate: SmallBusinessBanking_DateAggExp!
  transactionType: SmallBusinessBanking_VarcharAggExp!
}

input SmallBusinessBanking_SmallBusinessBankingTransactionsBoolExp {
  _and: [SmallBusinessBanking_SmallBusinessBankingTransactionsBoolExp!]
  _not: SmallBusinessBanking_SmallBusinessBankingTransactionsBoolExp
  _or: [SmallBusinessBanking_SmallBusinessBankingTransactionsBoolExp!]
  amount: SmallBusinessBanking_NumericBoolExp
  createdById: SmallBusinessBanking_Int4BoolExp
  currency: SmallBusinessBanking_EnterpriseCurrencyCodeBoolExp
  description: SmallBusinessBanking_VarcharBoolExp
  postDate: SmallBusinessBanking_DateBoolExp
  referenceNumber: SmallBusinessBanking_VarcharBoolExp
  runningBalance: SmallBusinessBanking_NumericBoolExp
  smallBusinessBankingAccount: SmallBusinessBanking_SmallBusinessBankingAccountsBoolExp
  smallBusinessBankingAccountId: SmallBusinessBanking_Int4BoolExp
  smallBusinessBankingTransactionId: SmallBusinessBanking_Int4BoolExp
  status: SmallBusinessBanking_VarcharBoolExp
  transactionDate: SmallBusinessBanking_DateBoolExp
  transactionType: SmallBusinessBanking_VarcharBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingTransactionsFilterInput {
  limit: Int
  offset: Int
  order_by: [SmallBusinessBanking_SmallBusinessBankingTransactionsOrderByExp!]
  where: SmallBusinessBanking_SmallBusinessBankingTransactionsBoolExp
}

input SmallBusinessBanking_SmallBusinessBankingTransactionsOrderByExp {
  amount: OrderBy
  createdById: OrderBy
  currency: OrderBy
  description: OrderBy
  postDate: OrderBy
  referenceNumber: OrderBy
  runningBalance: OrderBy
  smallBusinessBankingAccount: SmallBusinessBanking_SmallBusinessBankingAccountsOrderByExp
  smallBusinessBankingAccountId: OrderBy
  smallBusinessBankingTransactionId: OrderBy
  status: OrderBy
  transactionDate: OrderBy
  transactionType: OrderBy
}

scalar SmallBusinessBanking_Text

type SmallBusinessBanking_TextAggExp {
  _count: Int!
  _count_distinct: Int!
  max: SmallBusinessBanking_Text
  min: SmallBusinessBanking_Text
}

input SmallBusinessBanking_TextBoolExp {
  _and: [SmallBusinessBanking_TextBoolExp!]
  _eq: SmallBusinessBanking_Text
  _gt: SmallBusinessBanking_Text
  _gte: SmallBusinessBanking_Text
  _ilike: SmallBusinessBanking_Text
  _in: [SmallBusinessBanking_Text!]
  _iregex: SmallBusinessBanking_Text
  _is_null: Boolean
  _like: SmallBusinessBanking_Text
  _lt: SmallBusinessBanking_Text
  _lte: SmallBusinessBanking_Text
  _neq: SmallBusinessBanking_Text
  _nilike: SmallBusinessBanking_Text
  _niregex: SmallBusinessBanking_Text
  _nlike: SmallBusinessBanking_Text
  _not: SmallBusinessBanking_TextBoolExp
  _nregex: SmallBusinessBanking_Text
  _or: [SmallBusinessBanking_TextBoolExp!]
  _regex: SmallBusinessBanking_Text
  starts_with: SmallBusinessBanking_Text
  ts_match_tt: SmallBusinessBanking_Text
}

scalar SmallBusinessBanking_Timestamptz

type SmallBusinessBanking_TimestamptzAggExp {
  _count: Int!
  _count_distinct: Int!
  max: SmallBusinessBanking_Timestamptz
  min: SmallBusinessBanking_Timestamptz
}

input SmallBusinessBanking_TimestamptzBoolExp {
  _and: [SmallBusinessBanking_TimestamptzBoolExp!]
  _eq: SmallBusinessBanking_Timestamptz
  _gt: SmallBusinessBanking_Timestamptz
  _gte: SmallBusinessBanking_Timestamptz
  _in: [SmallBusinessBanking_Timestamptz!]
  _is_null: Boolean
  _lt: SmallBusinessBanking_Timestamptz
  _lte: SmallBusinessBanking_Timestamptz
  _neq: SmallBusinessBanking_Timestamptz
  _not: SmallBusinessBanking_TimestamptzBoolExp
  _or: [SmallBusinessBanking_TimestamptzBoolExp!]
}

scalar SmallBusinessBanking_Varchar

type SmallBusinessBanking_VarcharAggExp {
  _count: Int!
  _count_distinct: Int!
  max: SmallBusinessBanking_Text
  min: SmallBusinessBanking_Text
}

input SmallBusinessBanking_VarcharBoolExp {
  _and: [SmallBusinessBanking_VarcharBoolExp!]
  _eq: SmallBusinessBanking_Varchar
  _gt: SmallBusinessBanking_Varchar
  _gte: SmallBusinessBanking_Varchar
  _ilike: SmallBusinessBanking_Varchar
  _in: [SmallBusinessBanking_Varchar!]
  _iregex: SmallBusinessBanking_Varchar
  _is_null: Boolean
  _like: SmallBusinessBanking_Varchar
  _lt: SmallBusinessBanking_Varchar
  _lte: SmallBusinessBanking_Varchar
  _neq: SmallBusinessBanking_Varchar
  _nilike: SmallBusinessBanking_Varchar
  _niregex: SmallBusinessBanking_Varchar
  _nlike: SmallBusinessBanking_Varchar
  _not: SmallBusinessBanking_VarcharBoolExp
  _nregex: SmallBusinessBanking_Varchar
  _or: [SmallBusinessBanking_VarcharBoolExp!]
  _regex: SmallBusinessBanking_Varchar
  starts_with: SmallBusinessBanking_Varchar
  ts_match_tt: SmallBusinessBanking_Varchar
}

type Subscription {
  appMgmtApplicationComponents(limit: Int, offset: Int, order_by: [App_Mgmt_AppMgmtApplicationComponentsOrderByExp!], where: App_Mgmt_AppMgmtApplicationComponentsBoolExp): [App_Mgmt_AppMgmtApplicationComponents!]
  appMgmtApplicationComponentsAggregate(filter_input: App_Mgmt_AppMgmtApplicationComponentsFilterInput): App_Mgmt_AppMgmtApplicationComponentsAggExp
  appMgmtApplicationComponentsByApplicationComponentsPkey(appMgmtApplicationId: App_Mgmt_Uuid!, appMgmtComponentId: App_Mgmt_Uuid!, dependencyType: App_Mgmt_AppMgmtDependencyTypes!): App_Mgmt_AppMgmtApplicationComponents
  appMgmtApplicationLicenses(limit: Int, offset: Int, order_by: [App_Mgmt_AppMgmtApplicationLicensesOrderByExp!], where: App_Mgmt_AppMgmtApplicationLicensesBoolExp): [App_Mgmt_AppMgmtApplicationLicenses!]
  appMgmtApplicationLicensesAggregate(filter_input: App_Mgmt_AppMgmtApplicationLicensesFilterInput): App_Mgmt_AppMgmtApplicationLicensesAggExp
  appMgmtApplicationLicensesByApplicationLicensesPkey(appMgmtApplicationId: App_Mgmt_Uuid!, appMgmtLicenseId: App_Mgmt_Uuid!): App_Mgmt_AppMgmtApplicationLicenses
  appMgmtApplicationRelationships(limit: Int, offset: Int, order_by: [App_Mgmt_AppMgmtApplicationRelationshipsOrderByExp!], where: App_Mgmt_AppMgmtApplicationRelationshipsBoolExp): [App_Mgmt_AppMgmtApplicationRelationships!]
  appMgmtApplicationRelationshipsAggregate(filter_input: App_Mgmt_AppMgmtApplicationRelationshipsFilterInput): App_Mgmt_AppMgmtApplicationRelationshipsAggExp
  appMgmtApplicationRelationshipsByAppMgmtApplicationRelationshipId(appMgmtApplicationRelationshipId: App_Mgmt_Int4!): App_Mgmt_AppMgmtApplicationRelationships
  appMgmtApplications(limit: Int, offset: Int, order_by: [App_Mgmt_AppMgmtApplicationsOrderByExp!], where: App_Mgmt_AppMgmtApplicationsBoolExp): [App_Mgmt_AppMgmtApplications!]
  appMgmtApplicationsAggregate(filter_input: App_Mgmt_AppMgmtApplicationsFilterInput): App_Mgmt_AppMgmtApplicationsAggExp
  appMgmtApplicationsByAppMgmtApplicationId(appMgmtApplicationId: App_Mgmt_Uuid!): App_Mgmt_AppMgmtApplications
  appMgmtArchitectures(limit: Int, offset: Int, order_by: [App_Mgmt_AppMgmtArchitecturesOrderByExp!], where: App_Mgmt_AppMgmtArchitecturesBoolExp): [App_Mgmt_AppMgmtArchitectures!]
  appMgmtArchitecturesAggregate(filter_input: App_Mgmt_AppMgmtArchitecturesFilterInput): App_Mgmt_AppMgmtArchitecturesAggExp
  appMgmtArchitecturesByAppMgmtArchitectureId(appMgmtArchitectureId: App_Mgmt_Uuid!): App_Mgmt_AppMgmtArchitectures
  appMgmtComponentDependencies(limit: Int, offset: Int, order_by: [App_Mgmt_AppMgmtComponentDependenciesOrderByExp!], where: App_Mgmt_AppMgmtComponentDependenciesBoolExp): [App_Mgmt_AppMgmtComponentDependencies!]
  appMgmtComponentDependenciesAggregate(filter_input: App_Mgmt_AppMgmtComponentDependenciesFilterInput): App_Mgmt_AppMgmtComponentDependenciesAggExp
  appMgmtComponentDependenciesByComponentDependenciesPkey(childComponentId: App_Mgmt_Uuid!, parentComponentId: App_Mgmt_Uuid!): App_Mgmt_AppMgmtComponentDependencies
  appMgmtComponents(limit: Int, offset: Int, order_by: [App_Mgmt_AppMgmtComponentsOrderByExp!], where: App_Mgmt_AppMgmtComponentsBoolExp): [App_Mgmt_AppMgmtComponents!]
  appMgmtComponentsAggregate(filter_input: App_Mgmt_AppMgmtComponentsFilterInput): App_Mgmt_AppMgmtComponentsAggExp
  appMgmtComponentsByAppMgmtComponentId(appMgmtComponentId: App_Mgmt_Uuid!): App_Mgmt_AppMgmtComponents
  appMgmtLicenses(limit: Int, offset: Int, order_by: [App_Mgmt_AppMgmtLicensesOrderByExp!], where: App_Mgmt_AppMgmtLicensesBoolExp): [App_Mgmt_AppMgmtLicenses!]
  appMgmtLicensesAggregate(filter_input: App_Mgmt_AppMgmtLicensesFilterInput): App_Mgmt_AppMgmtLicensesAggExp
  appMgmtLicensesByAppMgmtLicenseId(appMgmtLicenseId: App_Mgmt_Uuid!): App_Mgmt_AppMgmtLicenses
  appMgmtSdlcProcesses(limit: Int, offset: Int, order_by: [App_Mgmt_AppMgmtSdlcProcessesOrderByExp!], where: App_Mgmt_AppMgmtSdlcProcessesBoolExp): [App_Mgmt_AppMgmtSdlcProcesses!]
  appMgmtSdlcProcessesAggregate(filter_input: App_Mgmt_AppMgmtSdlcProcessesFilterInput): App_Mgmt_AppMgmtSdlcProcessesAggExp
  appMgmtSdlcProcessesByAppMgmtSdlcProcessId(appMgmtSdlcProcessId: App_Mgmt_Uuid!): App_Mgmt_AppMgmtSdlcProcesses
  appMgmtTeamMembers(limit: Int, offset: Int, order_by: [App_Mgmt_AppMgmtTeamMembersOrderByExp!], where: App_Mgmt_AppMgmtTeamMembersBoolExp): [App_Mgmt_AppMgmtTeamMembers!]
  appMgmtTeamMembersAggregate(filter_input: App_Mgmt_AppMgmtTeamMembersFilterInput): App_Mgmt_AppMgmtTeamMembersAggExp
  appMgmtTeamMembersByTeamMembersPkey(appMgmtTeamId: App_Mgmt_Uuid!, enterpriseAssociateId: App_Mgmt_Int4!): App_Mgmt_AppMgmtTeamMembers
  appMgmtTeams(limit: Int, offset: Int, order_by: [App_Mgmt_AppMgmtTeamsOrderByExp!], where: App_Mgmt_AppMgmtTeamsBoolExp): [App_Mgmt_AppMgmtTeams!]
  appMgmtTeamsAggregate(filter_input: App_Mgmt_AppMgmtTeamsFilterInput): App_Mgmt_AppMgmtTeamsAggExp
  appMgmtTeamsByAppMgmtTeamId(appMgmtTeamId: App_Mgmt_Uuid!): App_Mgmt_AppMgmtTeams
  consumerBankingAccountAccessConsents(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingAccountAccessConsentsOrderByExp!], where: ConsumerBanking_ConsumerBankingAccountAccessConsentsBoolExp): [ConsumerBanking_ConsumerBankingAccountAccessConsents!]
  consumerBankingAccountAccessConsentsAggregate(filter_input: ConsumerBanking_ConsumerBankingAccountAccessConsentsFilterInput): ConsumerBanking_ConsumerBankingAccountAccessConsentsAggExp
  consumerBankingAccountAccessConsentsByConsumerBankingConsentId(consumerBankingConsentId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingAccountAccessConsents
  consumerBankingAccountAccessConsentsPermissions(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingAccountAccessConsentsPermissionsOrderByExp!], where: ConsumerBanking_ConsumerBankingAccountAccessConsentsPermissionsBoolExp): [ConsumerBanking_ConsumerBankingAccountAccessConsentsPermissions!]
  consumerBankingAccountAccessConsentsPermissionsAggregate(filter_input: ConsumerBanking_ConsumerBankingAccountAccessConsentsPermissionsFilterInput): ConsumerBanking_ConsumerBankingAccountAccessConsentsPermissionsAggExp
  consumerBankingAccountStatementPreferences(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingAccountStatementPreferencesOrderByExp!], where: ConsumerBanking_ConsumerBankingAccountStatementPreferencesBoolExp): [ConsumerBanking_ConsumerBankingAccountStatementPreferences!]
  consumerBankingAccountStatementPreferencesAggregate(filter_input: ConsumerBanking_ConsumerBankingAccountStatementPreferencesFilterInput): ConsumerBanking_ConsumerBankingAccountStatementPreferencesAggExp
  consumerBankingAccounts(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingAccountsOrderByExp!], where: ConsumerBanking_ConsumerBankingAccountsBoolExp): [ConsumerBanking_ConsumerBankingAccounts!]
  consumerBankingAccountsAggregate(filter_input: ConsumerBanking_ConsumerBankingAccountsFilterInput): ConsumerBanking_ConsumerBankingAccountsAggExp
  consumerBankingAccountsByConsumerBankingAccountId(consumerBankingAccountId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingAccounts
  consumerBankingBalances(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingBalancesOrderByExp!], where: ConsumerBanking_ConsumerBankingBalancesBoolExp): [ConsumerBanking_ConsumerBankingBalances!]
  consumerBankingBalancesAggregate(filter_input: ConsumerBanking_ConsumerBankingBalancesFilterInput): ConsumerBanking_ConsumerBankingBalancesAggExp
  consumerBankingBalancesByConsumerBankingBalanceId(consumerBankingBalanceId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingBalances
  consumerBankingBeneficiaries(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingBeneficiariesOrderByExp!], where: ConsumerBanking_ConsumerBankingBeneficiariesBoolExp): [ConsumerBanking_ConsumerBankingBeneficiaries!]
  consumerBankingBeneficiariesAggregate(filter_input: ConsumerBanking_ConsumerBankingBeneficiariesFilterInput): ConsumerBanking_ConsumerBankingBeneficiariesAggExp
  consumerBankingBeneficiariesByConsumerBankingBeneficiaryId(consumerBankingBeneficiaryId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingBeneficiaries
  consumerBankingBeneficiaryCreditorAccounts(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingBeneficiaryCreditorAccountsOrderByExp!], where: ConsumerBanking_ConsumerBankingBeneficiaryCreditorAccountsBoolExp): [ConsumerBanking_ConsumerBankingBeneficiaryCreditorAccounts!]
  consumerBankingBeneficiaryCreditorAccountsAggregate(filter_input: ConsumerBanking_ConsumerBankingBeneficiaryCreditorAccountsFilterInput): ConsumerBanking_ConsumerBankingBeneficiaryCreditorAccountsAggExp
  consumerBankingBeneficiaryCreditorAccountsByConsumerBankingBeneficiaryCreditorAccountId(consumerBankingBeneficiaryCreditorAccountId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingBeneficiaryCreditorAccounts
  consumerBankingBeneficiaryCreditorAgents(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingBeneficiaryCreditorAgentsOrderByExp!], where: ConsumerBanking_ConsumerBankingBeneficiaryCreditorAgentsBoolExp): [ConsumerBanking_ConsumerBankingBeneficiaryCreditorAgents!]
  consumerBankingBeneficiaryCreditorAgentsAggregate(filter_input: ConsumerBanking_ConsumerBankingBeneficiaryCreditorAgentsFilterInput): ConsumerBanking_ConsumerBankingBeneficiaryCreditorAgentsAggExp
  consumerBankingBeneficiaryCreditorAgentsByConsumerBankingBeneficiaryCreditorAgentId(consumerBankingBeneficiaryCreditorAgentId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingBeneficiaryCreditorAgents
  consumerBankingCustomerInteractions(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingCustomerInteractionsOrderByExp!], where: ConsumerBanking_ConsumerBankingCustomerInteractionsBoolExp): [ConsumerBanking_ConsumerBankingCustomerInteractions!]
  consumerBankingCustomerInteractionsAggregate(filter_input: ConsumerBanking_ConsumerBankingCustomerInteractionsFilterInput): ConsumerBanking_ConsumerBankingCustomerInteractionsAggExp
  consumerBankingCustomerInteractionsByConsumerBankingInteractionId(consumerBankingInteractionId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingCustomerInteractions
  consumerBankingDirectDebits(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingDirectDebitsOrderByExp!], where: ConsumerBanking_ConsumerBankingDirectDebitsBoolExp): [ConsumerBanking_ConsumerBankingDirectDebits!]
  consumerBankingDirectDebitsAggregate(filter_input: ConsumerBanking_ConsumerBankingDirectDebitsFilterInput): ConsumerBanking_ConsumerBankingDirectDebitsAggExp
  consumerBankingDirectDebitsByConsumerBankingDirectDebitId(consumerBankingDirectDebitId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingDirectDebits
  consumerBankingMandateRelatedInformation(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingMandateRelatedInformationOrderByExp!], where: ConsumerBanking_ConsumerBankingMandateRelatedInformationBoolExp): [ConsumerBanking_ConsumerBankingMandateRelatedInformation!]
  consumerBankingMandateRelatedInformationAggregate(filter_input: ConsumerBanking_ConsumerBankingMandateRelatedInformationFilterInput): ConsumerBanking_ConsumerBankingMandateRelatedInformationAggExp
  consumerBankingMandateRelatedInformationByConsumerBankingMandateRelatedInformationId(consumerBankingMandateRelatedInformationId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingMandateRelatedInformation
  consumerBankingOffers(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingOffersOrderByExp!], where: ConsumerBanking_ConsumerBankingOffersBoolExp): [ConsumerBanking_ConsumerBankingOffers!]
  consumerBankingOffersAggregate(filter_input: ConsumerBanking_ConsumerBankingOffersFilterInput): ConsumerBanking_ConsumerBankingOffersAggExp
  consumerBankingOffersByConsumerBankingOfferId(consumerBankingOfferId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingOffers
  consumerBankingOtherProductTypes(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingOtherProductTypesOrderByExp!], where: ConsumerBanking_ConsumerBankingOtherProductTypesBoolExp): [ConsumerBanking_ConsumerBankingOtherProductTypes!]
  consumerBankingOtherProductTypesAggregate(filter_input: ConsumerBanking_ConsumerBankingOtherProductTypesFilterInput): ConsumerBanking_ConsumerBankingOtherProductTypesAggExp
  consumerBankingOtherProductTypesByConsumerBankingOtherProductTypeId(consumerBankingOtherProductTypeId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingOtherProductTypes
  consumerBankingProducts(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingProductsOrderByExp!], where: ConsumerBanking_ConsumerBankingProductsBoolExp): [ConsumerBanking_ConsumerBankingProducts!]
  consumerBankingProductsAggregate(filter_input: ConsumerBanking_ConsumerBankingProductsFilterInput): ConsumerBanking_ConsumerBankingProductsAggExp
  consumerBankingProductsByConsumerBankingProductId(consumerBankingProductId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingProducts
  consumerBankingProprietaryTransactionCodes(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingProprietaryTransactionCodesOrderByExp!], where: ConsumerBanking_ConsumerBankingProprietaryTransactionCodesBoolExp): [ConsumerBanking_ConsumerBankingProprietaryTransactionCodes!]
  consumerBankingProprietaryTransactionCodesAggregate(filter_input: ConsumerBanking_ConsumerBankingProprietaryTransactionCodesFilterInput): ConsumerBanking_ConsumerBankingProprietaryTransactionCodesAggExp
  consumerBankingProprietaryTransactionCodesByConsumerBankingProprietaryTransactionCodeId(consumerBankingProprietaryTransactionCodeId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingProprietaryTransactionCodes
  consumerBankingScheduledPaymentCreditorAccounts(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAccountsOrderByExp!], where: ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAccountsBoolExp): [ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAccounts!]
  consumerBankingScheduledPaymentCreditorAccountsAggregate(filter_input: ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAccountsFilterInput): ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAccountsAggExp
  consumerBankingScheduledPaymentCreditorAccountsByConsumerBankingScheduledPaymentCreditorAccountId(consumerBankingScheduledPaymentCreditorAccountId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAccounts
  consumerBankingScheduledPaymentCreditorAgents(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAgentsOrderByExp!], where: ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAgentsBoolExp): [ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAgents!]
  consumerBankingScheduledPaymentCreditorAgentsAggregate(filter_input: ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAgentsFilterInput): ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAgentsAggExp
  consumerBankingScheduledPaymentCreditorAgentsByConsumerBankingScheduledPaymentCreditorAgentId(consumerBankingScheduledPaymentCreditorAgentId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingScheduledPaymentCreditorAgents
  consumerBankingScheduledPayments(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingScheduledPaymentsOrderByExp!], where: ConsumerBanking_ConsumerBankingScheduledPaymentsBoolExp): [ConsumerBanking_ConsumerBankingScheduledPayments!]
  consumerBankingScheduledPaymentsAggregate(filter_input: ConsumerBanking_ConsumerBankingScheduledPaymentsFilterInput): ConsumerBanking_ConsumerBankingScheduledPaymentsAggExp
  consumerBankingScheduledPaymentsByConsumerBankingScheduledPaymentId(consumerBankingScheduledPaymentId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingScheduledPayments
  consumerBankingStandingOrderCreditorAccounts(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingStandingOrderCreditorAccountsOrderByExp!], where: ConsumerBanking_ConsumerBankingStandingOrderCreditorAccountsBoolExp): [ConsumerBanking_ConsumerBankingStandingOrderCreditorAccounts!]
  consumerBankingStandingOrderCreditorAccountsAggregate(filter_input: ConsumerBanking_ConsumerBankingStandingOrderCreditorAccountsFilterInput): ConsumerBanking_ConsumerBankingStandingOrderCreditorAccountsAggExp
  consumerBankingStandingOrderCreditorAccountsByConsumerBankingStandingOrderCreditorAccountId(consumerBankingStandingOrderCreditorAccountId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingStandingOrderCreditorAccounts
  consumerBankingStandingOrderCreditorAgents(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingStandingOrderCreditorAgentsOrderByExp!], where: ConsumerBanking_ConsumerBankingStandingOrderCreditorAgentsBoolExp): [ConsumerBanking_ConsumerBankingStandingOrderCreditorAgents!]
  consumerBankingStandingOrderCreditorAgentsAggregate(filter_input: ConsumerBanking_ConsumerBankingStandingOrderCreditorAgentsFilterInput): ConsumerBanking_ConsumerBankingStandingOrderCreditorAgentsAggExp
  consumerBankingStandingOrderCreditorAgentsByConsumerBankingStandingOrderCreditorAgentId(consumerBankingStandingOrderCreditorAgentId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingStandingOrderCreditorAgents
  consumerBankingStandingOrders(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingStandingOrdersOrderByExp!], where: ConsumerBanking_ConsumerBankingStandingOrdersBoolExp): [ConsumerBanking_ConsumerBankingStandingOrders!]
  consumerBankingStandingOrdersAggregate(filter_input: ConsumerBanking_ConsumerBankingStandingOrdersFilterInput): ConsumerBanking_ConsumerBankingStandingOrdersAggExp
  consumerBankingStandingOrdersByConsumerBankingStandingOrderId(consumerBankingStandingOrderId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingStandingOrders
  consumerBankingStatementAmounts(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingStatementAmountsOrderByExp!], where: ConsumerBanking_ConsumerBankingStatementAmountsBoolExp): [ConsumerBanking_ConsumerBankingStatementAmounts!]
  consumerBankingStatementAmountsAggregate(filter_input: ConsumerBanking_ConsumerBankingStatementAmountsFilterInput): ConsumerBanking_ConsumerBankingStatementAmountsAggExp
  consumerBankingStatementAmountsByConsumerBankingStatementAmountId(consumerBankingStatementAmountId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingStatementAmounts
  consumerBankingStatementBenefits(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingStatementBenefitsOrderByExp!], where: ConsumerBanking_ConsumerBankingStatementBenefitsBoolExp): [ConsumerBanking_ConsumerBankingStatementBenefits!]
  consumerBankingStatementBenefitsAggregate(filter_input: ConsumerBanking_ConsumerBankingStatementBenefitsFilterInput): ConsumerBanking_ConsumerBankingStatementBenefitsAggExp
  consumerBankingStatementBenefitsByConsumerBankingStatementBenefitId(consumerBankingStatementBenefitId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingStatementBenefits
  consumerBankingStatementDateTimes(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingStatementDateTimesOrderByExp!], where: ConsumerBanking_ConsumerBankingStatementDateTimesBoolExp): [ConsumerBanking_ConsumerBankingStatementDateTimes!]
  consumerBankingStatementDateTimesAggregate(filter_input: ConsumerBanking_ConsumerBankingStatementDateTimesFilterInput): ConsumerBanking_ConsumerBankingStatementDateTimesAggExp
  consumerBankingStatementDateTimesByConsumerBankingStatementDateTimeId(consumerBankingStatementDateTimeId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingStatementDateTimes
  consumerBankingStatementDescriptions(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingStatementDescriptionsOrderByExp!], where: ConsumerBanking_ConsumerBankingStatementDescriptionsBoolExp): [ConsumerBanking_ConsumerBankingStatementDescriptions!]
  consumerBankingStatementDescriptionsAggregate(filter_input: ConsumerBanking_ConsumerBankingStatementDescriptionsFilterInput): ConsumerBanking_ConsumerBankingStatementDescriptionsAggExp
  consumerBankingStatementDescriptionsByConsumerBankingStatementDescriptionId(consumerBankingStatementDescriptionId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingStatementDescriptions
  consumerBankingStatementFees(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingStatementFeesOrderByExp!], where: ConsumerBanking_ConsumerBankingStatementFeesBoolExp): [ConsumerBanking_ConsumerBankingStatementFees!]
  consumerBankingStatementFeesAggregate(filter_input: ConsumerBanking_ConsumerBankingStatementFeesFilterInput): ConsumerBanking_ConsumerBankingStatementFeesAggExp
  consumerBankingStatementFeesByConsumerBankingStatementFeeId(consumerBankingStatementFeeId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingStatementFees
  consumerBankingStatementInterests(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingStatementInterestsOrderByExp!], where: ConsumerBanking_ConsumerBankingStatementInterestsBoolExp): [ConsumerBanking_ConsumerBankingStatementInterests!]
  consumerBankingStatementInterestsAggregate(filter_input: ConsumerBanking_ConsumerBankingStatementInterestsFilterInput): ConsumerBanking_ConsumerBankingStatementInterestsAggExp
  consumerBankingStatementInterestsByConsumerBankingStatementInterestId(consumerBankingStatementInterestId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingStatementInterests
  consumerBankingStatementRates(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingStatementRatesOrderByExp!], where: ConsumerBanking_ConsumerBankingStatementRatesBoolExp): [ConsumerBanking_ConsumerBankingStatementRates!]
  consumerBankingStatementRatesAggregate(filter_input: ConsumerBanking_ConsumerBankingStatementRatesFilterInput): ConsumerBanking_ConsumerBankingStatementRatesAggExp
  consumerBankingStatementRatesByConsumerBankingStatementRateId(consumerBankingStatementRateId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingStatementRates
  consumerBankingStatementValues(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingStatementValuesOrderByExp!], where: ConsumerBanking_ConsumerBankingStatementValuesBoolExp): [ConsumerBanking_ConsumerBankingStatementValues!]
  consumerBankingStatementValuesAggregate(filter_input: ConsumerBanking_ConsumerBankingStatementValuesFilterInput): ConsumerBanking_ConsumerBankingStatementValuesAggExp
  consumerBankingStatementValuesByConsumerBankingStatementValueId(consumerBankingStatementValueId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingStatementValues
  consumerBankingStatements(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingStatementsOrderByExp!], where: ConsumerBanking_ConsumerBankingStatementsBoolExp): [ConsumerBanking_ConsumerBankingStatements!]
  consumerBankingStatementsAggregate(filter_input: ConsumerBanking_ConsumerBankingStatementsFilterInput): ConsumerBanking_ConsumerBankingStatementsAggExp
  consumerBankingStatementsByConsumerBankingStatementId(consumerBankingStatementId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingStatements
  consumerBankingTransactionBalances(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingTransactionBalancesOrderByExp!], where: ConsumerBanking_ConsumerBankingTransactionBalancesBoolExp): [ConsumerBanking_ConsumerBankingTransactionBalances!]
  consumerBankingTransactionBalancesAggregate(filter_input: ConsumerBanking_ConsumerBankingTransactionBalancesFilterInput): ConsumerBanking_ConsumerBankingTransactionBalancesAggExp
  consumerBankingTransactionBalancesByConsumerBankingTransactionBalanceId(consumerBankingTransactionBalanceId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingTransactionBalances
  consumerBankingTransactionBankTransactionCodes(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingTransactionBankTransactionCodesOrderByExp!], where: ConsumerBanking_ConsumerBankingTransactionBankTransactionCodesBoolExp): [ConsumerBanking_ConsumerBankingTransactionBankTransactionCodes!]
  consumerBankingTransactionBankTransactionCodesAggregate(filter_input: ConsumerBanking_ConsumerBankingTransactionBankTransactionCodesFilterInput): ConsumerBanking_ConsumerBankingTransactionBankTransactionCodesAggExp
  consumerBankingTransactionBankTransactionCodesByConsumerBankingTransactionBankTransactionCodeId(consumerBankingTransactionBankTransactionCodeId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingTransactionBankTransactionCodes
  consumerBankingTransactionCardInstruments(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingTransactionCardInstrumentsOrderByExp!], where: ConsumerBanking_ConsumerBankingTransactionCardInstrumentsBoolExp): [ConsumerBanking_ConsumerBankingTransactionCardInstruments!]
  consumerBankingTransactionCardInstrumentsAggregate(filter_input: ConsumerBanking_ConsumerBankingTransactionCardInstrumentsFilterInput): ConsumerBanking_ConsumerBankingTransactionCardInstrumentsAggExp
  consumerBankingTransactionCardInstrumentsByConsumerBankingTransactionCardInstrumentId(consumerBankingTransactionCardInstrumentId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingTransactionCardInstruments
  consumerBankingTransactionCreditorAccounts(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingTransactionCreditorAccountsOrderByExp!], where: ConsumerBanking_ConsumerBankingTransactionCreditorAccountsBoolExp): [ConsumerBanking_ConsumerBankingTransactionCreditorAccounts!]
  consumerBankingTransactionCreditorAccountsAggregate(filter_input: ConsumerBanking_ConsumerBankingTransactionCreditorAccountsFilterInput): ConsumerBanking_ConsumerBankingTransactionCreditorAccountsAggExp
  consumerBankingTransactionCreditorAccountsByConsumerBankingTransactionCreditorAccountId(consumerBankingTransactionCreditorAccountId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingTransactionCreditorAccounts
  consumerBankingTransactionCreditorAgents(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingTransactionCreditorAgentsOrderByExp!], where: ConsumerBanking_ConsumerBankingTransactionCreditorAgentsBoolExp): [ConsumerBanking_ConsumerBankingTransactionCreditorAgents!]
  consumerBankingTransactionCreditorAgentsAggregate(filter_input: ConsumerBanking_ConsumerBankingTransactionCreditorAgentsFilterInput): ConsumerBanking_ConsumerBankingTransactionCreditorAgentsAggExp
  consumerBankingTransactionCreditorAgentsByConsumerBankingTransactionCreditorAgentId(consumerBankingTransactionCreditorAgentId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingTransactionCreditorAgents
  consumerBankingTransactionCurrencyExchanges(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingTransactionCurrencyExchangesOrderByExp!], where: ConsumerBanking_ConsumerBankingTransactionCurrencyExchangesBoolExp): [ConsumerBanking_ConsumerBankingTransactionCurrencyExchanges!]
  consumerBankingTransactionCurrencyExchangesAggregate(filter_input: ConsumerBanking_ConsumerBankingTransactionCurrencyExchangesFilterInput): ConsumerBanking_ConsumerBankingTransactionCurrencyExchangesAggExp
  consumerBankingTransactionCurrencyExchangesByConsumerBankingTransactionCurrencyExchangeId(consumerBankingTransactionCurrencyExchangeId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingTransactionCurrencyExchanges
  consumerBankingTransactionDebtorAccounts(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingTransactionDebtorAccountsOrderByExp!], where: ConsumerBanking_ConsumerBankingTransactionDebtorAccountsBoolExp): [ConsumerBanking_ConsumerBankingTransactionDebtorAccounts!]
  consumerBankingTransactionDebtorAccountsAggregate(filter_input: ConsumerBanking_ConsumerBankingTransactionDebtorAccountsFilterInput): ConsumerBanking_ConsumerBankingTransactionDebtorAccountsAggExp
  consumerBankingTransactionDebtorAccountsByConsumerBankingTransactionDebtorAccountId(consumerBankingTransactionDebtorAccountId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingTransactionDebtorAccounts
  consumerBankingTransactionDebtorAgents(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingTransactionDebtorAgentsOrderByExp!], where: ConsumerBanking_ConsumerBankingTransactionDebtorAgentsBoolExp): [ConsumerBanking_ConsumerBankingTransactionDebtorAgents!]
  consumerBankingTransactionDebtorAgentsAggregate(filter_input: ConsumerBanking_ConsumerBankingTransactionDebtorAgentsFilterInput): ConsumerBanking_ConsumerBankingTransactionDebtorAgentsAggExp
  consumerBankingTransactionDebtorAgentsByConsumerBankingTransactionDebtorAgentId(consumerBankingTransactionDebtorAgentId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingTransactionDebtorAgents
  consumerBankingTransactionMerchantDetails(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingTransactionMerchantDetailsOrderByExp!], where: ConsumerBanking_ConsumerBankingTransactionMerchantDetailsBoolExp): [ConsumerBanking_ConsumerBankingTransactionMerchantDetails!]
  consumerBankingTransactionMerchantDetailsAggregate(filter_input: ConsumerBanking_ConsumerBankingTransactionMerchantDetailsFilterInput): ConsumerBanking_ConsumerBankingTransactionMerchantDetailsAggExp
  consumerBankingTransactionMerchantDetailsByConsumerBankingTransactionMerchantDetailId(consumerBankingTransactionMerchantDetailId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingTransactionMerchantDetails
  consumerBankingTransactionStatementReferences(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingTransactionStatementReferencesOrderByExp!], where: ConsumerBanking_ConsumerBankingTransactionStatementReferencesBoolExp): [ConsumerBanking_ConsumerBankingTransactionStatementReferences!]
  consumerBankingTransactionStatementReferencesAggregate(filter_input: ConsumerBanking_ConsumerBankingTransactionStatementReferencesFilterInput): ConsumerBanking_ConsumerBankingTransactionStatementReferencesAggExp
  consumerBankingTransactionStatementReferencesByConsumerBankingTransactionStatementReferenceId(consumerBankingTransactionStatementReferenceId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingTransactionStatementReferences
  consumerBankingTransactionUltimateCreditors(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingTransactionUltimateCreditorsOrderByExp!], where: ConsumerBanking_ConsumerBankingTransactionUltimateCreditorsBoolExp): [ConsumerBanking_ConsumerBankingTransactionUltimateCreditors!]
  consumerBankingTransactionUltimateCreditorsAggregate(filter_input: ConsumerBanking_ConsumerBankingTransactionUltimateCreditorsFilterInput): ConsumerBanking_ConsumerBankingTransactionUltimateCreditorsAggExp
  consumerBankingTransactionUltimateCreditorsByConsumerBankingTransactionUltimateCreditorId(consumerBankingTransactionUltimateCreditorId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingTransactionUltimateCreditors
  consumerBankingTransactionUltimateDebtors(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingTransactionUltimateDebtorsOrderByExp!], where: ConsumerBanking_ConsumerBankingTransactionUltimateDebtorsBoolExp): [ConsumerBanking_ConsumerBankingTransactionUltimateDebtors!]
  consumerBankingTransactionUltimateDebtorsAggregate(filter_input: ConsumerBanking_ConsumerBankingTransactionUltimateDebtorsFilterInput): ConsumerBanking_ConsumerBankingTransactionUltimateDebtorsAggExp
  consumerBankingTransactionUltimateDebtorsByConsumerBankingTransactionUltimateDebtorId(consumerBankingTransactionUltimateDebtorId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingTransactionUltimateDebtors
  consumerBankingTransactions(limit: Int, offset: Int, order_by: [ConsumerBanking_ConsumerBankingTransactionsOrderByExp!], where: ConsumerBanking_ConsumerBankingTransactionsBoolExp): [ConsumerBanking_ConsumerBankingTransactions!]
  consumerBankingTransactionsAggregate(filter_input: ConsumerBanking_ConsumerBankingTransactionsFilterInput): ConsumerBanking_ConsumerBankingTransactionsAggExp
  consumerBankingTransactionsByConsumerBankingTransactionId(consumerBankingTransactionId: ConsumerBanking_Int4!): ConsumerBanking_ConsumerBankingTransactions
  consumerLendingAdverseActionDetails(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingAdverseActionDetailsOrderByExp!], where: ConsumerLending_ConsumerLendingAdverseActionDetailsBoolExp): [ConsumerLending_ConsumerLendingAdverseActionDetails!]
  consumerLendingAdverseActionDetailsAggregate(filter_input: ConsumerLending_ConsumerLendingAdverseActionDetailsFilterInput): ConsumerLending_ConsumerLendingAdverseActionDetailsAggExp
  consumerLendingAdverseActionDetailsByConsumerLendingAdverseActionId(consumerLendingAdverseActionId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingAdverseActionDetails
  consumerLendingAdverseActionNotices(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingAdverseActionNoticesOrderByExp!], where: ConsumerLending_ConsumerLendingAdverseActionNoticesBoolExp): [ConsumerLending_ConsumerLendingAdverseActionNotices!]
  consumerLendingAdverseActionNoticesAggregate(filter_input: ConsumerLending_ConsumerLendingAdverseActionNoticesFilterInput): ConsumerLending_ConsumerLendingAdverseActionNoticesAggExp
  consumerLendingAdverseActionNoticesByConsumerLendingNoticeId(consumerLendingNoticeId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingAdverseActionNotices
  consumerLendingApplicantAssets(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingApplicantAssetsOrderByExp!], where: ConsumerLending_ConsumerLendingApplicantAssetsBoolExp): [ConsumerLending_ConsumerLendingApplicantAssets!]
  consumerLendingApplicantAssetsAggregate(filter_input: ConsumerLending_ConsumerLendingApplicantAssetsFilterInput): ConsumerLending_ConsumerLendingApplicantAssetsAggExp
  consumerLendingApplicantAssetsByConsumerLendingAssetId(consumerLendingAssetId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingApplicantAssets
  consumerLendingApplicantEmployments(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingApplicantEmploymentsOrderByExp!], where: ConsumerLending_ConsumerLendingApplicantEmploymentsBoolExp): [ConsumerLending_ConsumerLendingApplicantEmployments!]
  consumerLendingApplicantEmploymentsAggregate(filter_input: ConsumerLending_ConsumerLendingApplicantEmploymentsFilterInput): ConsumerLending_ConsumerLendingApplicantEmploymentsAggExp
  consumerLendingApplicantEmploymentsByConsumerLendingEmploymentId(consumerLendingEmploymentId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingApplicantEmployments
  consumerLendingApplicantIncomes(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingApplicantIncomesOrderByExp!], where: ConsumerLending_ConsumerLendingApplicantIncomesBoolExp): [ConsumerLending_ConsumerLendingApplicantIncomes!]
  consumerLendingApplicantIncomesAggregate(filter_input: ConsumerLending_ConsumerLendingApplicantIncomesFilterInput): ConsumerLending_ConsumerLendingApplicantIncomesAggExp
  consumerLendingApplicantIncomesByConsumerLendingIncomeId(consumerLendingIncomeId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingApplicantIncomes
  consumerLendingApplicantLiabilities(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingApplicantLiabilitiesOrderByExp!], where: ConsumerLending_ConsumerLendingApplicantLiabilitiesBoolExp): [ConsumerLending_ConsumerLendingApplicantLiabilities!]
  consumerLendingApplicantLiabilitiesAggregate(filter_input: ConsumerLending_ConsumerLendingApplicantLiabilitiesFilterInput): ConsumerLending_ConsumerLendingApplicantLiabilitiesAggExp
  consumerLendingApplicantLiabilitiesByConsumerLendingLiabilityId(consumerLendingLiabilityId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingApplicantLiabilities
  consumerLendingApplicants(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingApplicantsOrderByExp!], where: ConsumerLending_ConsumerLendingApplicantsBoolExp): [ConsumerLending_ConsumerLendingApplicants!]
  consumerLendingApplicantsAggregate(filter_input: ConsumerLending_ConsumerLendingApplicantsFilterInput): ConsumerLending_ConsumerLendingApplicantsAggExp
  consumerLendingApplicantsByConsumerLendingApplicantId(consumerLendingApplicantId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingApplicants
  consumerLendingApplicationApplicants(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingApplicationApplicantsOrderByExp!], where: ConsumerLending_ConsumerLendingApplicationApplicantsBoolExp): [ConsumerLending_ConsumerLendingApplicationApplicants!]
  consumerLendingApplicationApplicantsAggregate(filter_input: ConsumerLending_ConsumerLendingApplicationApplicantsFilterInput): ConsumerLending_ConsumerLendingApplicationApplicantsAggExp
  consumerLendingApplicationApplicantsByConsumerLendingApplicationApplicantId(consumerLendingApplicationApplicantId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingApplicationApplicants
  consumerLendingApplicationDecisions(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingApplicationDecisionsOrderByExp!], where: ConsumerLending_ConsumerLendingApplicationDecisionsBoolExp): [ConsumerLending_ConsumerLendingApplicationDecisions!]
  consumerLendingApplicationDecisionsAggregate(filter_input: ConsumerLending_ConsumerLendingApplicationDecisionsFilterInput): ConsumerLending_ConsumerLendingApplicationDecisionsAggExp
  consumerLendingApplicationDecisionsByConsumerLendingDecisionId(consumerLendingDecisionId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingApplicationDecisions
  consumerLendingAppraisalDisclosures(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingAppraisalDisclosuresOrderByExp!], where: ConsumerLending_ConsumerLendingAppraisalDisclosuresBoolExp): [ConsumerLending_ConsumerLendingAppraisalDisclosures!]
  consumerLendingAppraisalDisclosuresAggregate(filter_input: ConsumerLending_ConsumerLendingAppraisalDisclosuresFilterInput): ConsumerLending_ConsumerLendingAppraisalDisclosuresAggExp
  consumerLendingAppraisalDisclosuresByConsumerLendingDisclosureId(consumerLendingDisclosureId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingAppraisalDisclosures
  consumerLendingCollectionAccounts(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingCollectionAccountsOrderByExp!], where: ConsumerLending_ConsumerLendingCollectionAccountsBoolExp): [ConsumerLending_ConsumerLendingCollectionAccounts!]
  consumerLendingCollectionAccountsAggregate(filter_input: ConsumerLending_ConsumerLendingCollectionAccountsFilterInput): ConsumerLending_ConsumerLendingCollectionAccountsAggExp
  consumerLendingCollectionAccountsByConsumerLendingCollectionId(consumerLendingCollectionId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingCollectionAccounts
  consumerLendingCollectionActions(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingCollectionActionsOrderByExp!], where: ConsumerLending_ConsumerLendingCollectionActionsBoolExp): [ConsumerLending_ConsumerLendingCollectionActions!]
  consumerLendingCollectionActionsAggregate(filter_input: ConsumerLending_ConsumerLendingCollectionActionsFilterInput): ConsumerLending_ConsumerLendingCollectionActionsAggExp
  consumerLendingCollectionActionsByConsumerLendingActionId(consumerLendingActionId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingCollectionActions
  consumerLendingComplianceExceptions(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingComplianceExceptionsOrderByExp!], where: ConsumerLending_ConsumerLendingComplianceExceptionsBoolExp): [ConsumerLending_ConsumerLendingComplianceExceptions!]
  consumerLendingComplianceExceptionsAggregate(filter_input: ConsumerLending_ConsumerLendingComplianceExceptionsFilterInput): ConsumerLending_ConsumerLendingComplianceExceptionsAggExp
  consumerLendingComplianceExceptionsByConsumerLendingExceptionId(consumerLendingExceptionId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingComplianceExceptions
  consumerLendingCreditInquiries(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingCreditInquiriesOrderByExp!], where: ConsumerLending_ConsumerLendingCreditInquiriesBoolExp): [ConsumerLending_ConsumerLendingCreditInquiries!]
  consumerLendingCreditInquiriesAggregate(filter_input: ConsumerLending_ConsumerLendingCreditInquiriesFilterInput): ConsumerLending_ConsumerLendingCreditInquiriesAggExp
  consumerLendingCreditInquiriesByConsumerLendingInquiryId(consumerLendingInquiryId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingCreditInquiries
  consumerLendingCreditReportTradelines(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingCreditReportTradelinesOrderByExp!], where: ConsumerLending_ConsumerLendingCreditReportTradelinesBoolExp): [ConsumerLending_ConsumerLendingCreditReportTradelines!]
  consumerLendingCreditReportTradelinesAggregate(filter_input: ConsumerLending_ConsumerLendingCreditReportTradelinesFilterInput): ConsumerLending_ConsumerLendingCreditReportTradelinesAggExp
  consumerLendingCreditReportTradelinesByConsumerLendingTradelineId(consumerLendingTradelineId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingCreditReportTradelines
  consumerLendingCreditReports(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingCreditReportsOrderByExp!], where: ConsumerLending_ConsumerLendingCreditReportsBoolExp): [ConsumerLending_ConsumerLendingCreditReports!]
  consumerLendingCreditReportsAggregate(filter_input: ConsumerLending_ConsumerLendingCreditReportsFilterInput): ConsumerLending_ConsumerLendingCreditReportsAggExp
  consumerLendingCreditReportsByConsumerLendingCreditReportId(consumerLendingCreditReportId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingCreditReports
  consumerLendingDecisionModels(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingDecisionModelsOrderByExp!], where: ConsumerLending_ConsumerLendingDecisionModelsBoolExp): [ConsumerLending_ConsumerLendingDecisionModels!]
  consumerLendingDecisionModelsAggregate(filter_input: ConsumerLending_ConsumerLendingDecisionModelsFilterInput): ConsumerLending_ConsumerLendingDecisionModelsAggExp
  consumerLendingDecisionModelsByConsumerLendingModelId(consumerLendingModelId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingDecisionModels
  consumerLendingDecisionReasons(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingDecisionReasonsOrderByExp!], where: ConsumerLending_ConsumerLendingDecisionReasonsBoolExp): [ConsumerLending_ConsumerLendingDecisionReasons!]
  consumerLendingDecisionReasonsAggregate(filter_input: ConsumerLending_ConsumerLendingDecisionReasonsFilterInput): ConsumerLending_ConsumerLendingDecisionReasonsAggExp
  consumerLendingDecisionReasonsByConsumerLendingDecisionReasonId(consumerLendingDecisionReasonId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingDecisionReasons
  consumerLendingDisbursements(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingDisbursementsOrderByExp!], where: ConsumerLending_ConsumerLendingDisbursementsBoolExp): [ConsumerLending_ConsumerLendingDisbursements!]
  consumerLendingDisbursementsAggregate(filter_input: ConsumerLending_ConsumerLendingDisbursementsFilterInput): ConsumerLending_ConsumerLendingDisbursementsAggExp
  consumerLendingDisbursementsByDisbursementId(disbursementId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingDisbursements
  consumerLendingEcoaMonitoring(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingEcoaMonitoringOrderByExp!], where: ConsumerLending_ConsumerLendingEcoaMonitoringBoolExp): [ConsumerLending_ConsumerLendingEcoaMonitoring!]
  consumerLendingEcoaMonitoringAggregate(filter_input: ConsumerLending_ConsumerLendingEcoaMonitoringFilterInput): ConsumerLending_ConsumerLendingEcoaMonitoringAggExp
  consumerLendingEcoaMonitoringByConsumerLendingMonitoringId(consumerLendingMonitoringId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingEcoaMonitoring
  consumerLendingFairlendingAnalysis(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingFairlendingAnalysisOrderByExp!], where: ConsumerLending_ConsumerLendingFairlendingAnalysisBoolExp): [ConsumerLending_ConsumerLendingFairlendingAnalysis!]
  consumerLendingFairlendingAnalysisAggregate(filter_input: ConsumerLending_ConsumerLendingFairlendingAnalysisFilterInput): ConsumerLending_ConsumerLendingFairlendingAnalysisAggExp
  consumerLendingFairlendingAnalysisByConsumerLendingAnalysisId(consumerLendingAnalysisId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingFairlendingAnalysis
  consumerLendingHighCostMortgageTests(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingHighCostMortgageTestsOrderByExp!], where: ConsumerLending_ConsumerLendingHighCostMortgageTestsBoolExp): [ConsumerLending_ConsumerLendingHighCostMortgageTests!]
  consumerLendingHighCostMortgageTestsAggregate(filter_input: ConsumerLending_ConsumerLendingHighCostMortgageTestsFilterInput): ConsumerLending_ConsumerLendingHighCostMortgageTestsAggExp
  consumerLendingHighCostMortgageTestsByConsumerLendingTestId(consumerLendingTestId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingHighCostMortgageTests
  consumerLendingLoanAccounts(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingLoanAccountsOrderByExp!], where: ConsumerLending_ConsumerLendingLoanAccountsBoolExp): [ConsumerLending_ConsumerLendingLoanAccounts!]
  consumerLendingLoanAccountsAggregate(filter_input: ConsumerLending_ConsumerLendingLoanAccountsFilterInput): ConsumerLending_ConsumerLendingLoanAccountsAggExp
  consumerLendingLoanAccountsByAccountNumber(accountNumber: ConsumerLending_Varchar!): ConsumerLending_ConsumerLendingLoanAccounts
  consumerLendingLoanAccountsByConsumerLendingLoanAccountId(consumerLendingLoanAccountId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingLoanAccounts
  consumerLendingLoanApplications(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingLoanApplicationsOrderByExp!], where: ConsumerLending_ConsumerLendingLoanApplicationsBoolExp): [ConsumerLending_ConsumerLendingLoanApplications!]
  consumerLendingLoanApplicationsAggregate(filter_input: ConsumerLending_ConsumerLendingLoanApplicationsFilterInput): ConsumerLending_ConsumerLendingLoanApplicationsAggExp
  consumerLendingLoanApplicationsByConsumerLendingApplicationId(consumerLendingApplicationId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingLoanApplications
  consumerLendingLoanCollateral(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingLoanCollateralOrderByExp!], where: ConsumerLending_ConsumerLendingLoanCollateralBoolExp): [ConsumerLending_ConsumerLendingLoanCollateral!]
  consumerLendingLoanCollateralAggregate(filter_input: ConsumerLending_ConsumerLendingLoanCollateralFilterInput): ConsumerLending_ConsumerLendingLoanCollateralAggExp
  consumerLendingLoanCollateralByConsumerLendingCollateralId(consumerLendingCollateralId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingLoanCollateral
  consumerLendingLoanCommunications(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingLoanCommunicationsOrderByExp!], where: ConsumerLending_ConsumerLendingLoanCommunicationsBoolExp): [ConsumerLending_ConsumerLendingLoanCommunications!]
  consumerLendingLoanCommunicationsAggregate(filter_input: ConsumerLending_ConsumerLendingLoanCommunicationsFilterInput): ConsumerLending_ConsumerLendingLoanCommunicationsAggExp
  consumerLendingLoanCommunicationsByConsumerLendingCommunicationId(consumerLendingCommunicationId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingLoanCommunications
  consumerLendingLoanDocuments(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingLoanDocumentsOrderByExp!], where: ConsumerLending_ConsumerLendingLoanDocumentsBoolExp): [ConsumerLending_ConsumerLendingLoanDocuments!]
  consumerLendingLoanDocumentsAggregate(filter_input: ConsumerLending_ConsumerLendingLoanDocumentsFilterInput): ConsumerLending_ConsumerLendingLoanDocumentsAggExp
  consumerLendingLoanDocumentsByConsumerLendingDocumentId(consumerLendingDocumentId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingLoanDocuments
  consumerLendingLoanFees(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingLoanFeesOrderByExp!], where: ConsumerLending_ConsumerLendingLoanFeesBoolExp): [ConsumerLending_ConsumerLendingLoanFees!]
  consumerLendingLoanFeesAggregate(filter_input: ConsumerLending_ConsumerLendingLoanFeesFilterInput): ConsumerLending_ConsumerLendingLoanFeesAggExp
  consumerLendingLoanFeesByConsumerLendingFeeId(consumerLendingFeeId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingLoanFees
  consumerLendingLoanInsurance(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingLoanInsuranceOrderByExp!], where: ConsumerLending_ConsumerLendingLoanInsuranceBoolExp): [ConsumerLending_ConsumerLendingLoanInsurance!]
  consumerLendingLoanInsuranceAggregate(filter_input: ConsumerLending_ConsumerLendingLoanInsuranceFilterInput): ConsumerLending_ConsumerLendingLoanInsuranceAggExp
  consumerLendingLoanInsuranceByConsumerLendingInsuranceId(consumerLendingInsuranceId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingLoanInsurance
  consumerLendingLoanModifications(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingLoanModificationsOrderByExp!], where: ConsumerLending_ConsumerLendingLoanModificationsBoolExp): [ConsumerLending_ConsumerLendingLoanModifications!]
  consumerLendingLoanModificationsAggregate(filter_input: ConsumerLending_ConsumerLendingLoanModificationsFilterInput): ConsumerLending_ConsumerLendingLoanModificationsAggExp
  consumerLendingLoanModificationsByConsumerLendingModificationId(consumerLendingModificationId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingLoanModifications
  consumerLendingLoanPayments(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingLoanPaymentsOrderByExp!], where: ConsumerLending_ConsumerLendingLoanPaymentsBoolExp): [ConsumerLending_ConsumerLendingLoanPayments!]
  consumerLendingLoanPaymentsAggregate(filter_input: ConsumerLending_ConsumerLendingLoanPaymentsFilterInput): ConsumerLending_ConsumerLendingLoanPaymentsAggExp
  consumerLendingLoanPaymentsByConsumerLendingPaymentId(consumerLendingPaymentId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingLoanPayments
  consumerLendingLoanProducts(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingLoanProductsOrderByExp!], where: ConsumerLending_ConsumerLendingLoanProductsBoolExp): [ConsumerLending_ConsumerLendingLoanProducts!]
  consumerLendingLoanProductsAggregate(filter_input: ConsumerLending_ConsumerLendingLoanProductsFilterInput): ConsumerLending_ConsumerLendingLoanProductsAggExp
  consumerLendingLoanProductsByConsumerLendingLoanProductId(consumerLendingLoanProductId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingLoanProducts
  consumerLendingLoanStatements(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingLoanStatementsOrderByExp!], where: ConsumerLending_ConsumerLendingLoanStatementsBoolExp): [ConsumerLending_ConsumerLendingLoanStatements!]
  consumerLendingLoanStatementsAggregate(filter_input: ConsumerLending_ConsumerLendingLoanStatementsFilterInput): ConsumerLending_ConsumerLendingLoanStatementsAggExp
  consumerLendingLoanStatementsByConsumerLendingStatementId(consumerLendingStatementId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingLoanStatements
  consumerLendingMilitaryLendingChecks(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingMilitaryLendingChecksOrderByExp!], where: ConsumerLending_ConsumerLendingMilitaryLendingChecksBoolExp): [ConsumerLending_ConsumerLendingMilitaryLendingChecks!]
  consumerLendingMilitaryLendingChecksAggregate(filter_input: ConsumerLending_ConsumerLendingMilitaryLendingChecksFilterInput): ConsumerLending_ConsumerLendingMilitaryLendingChecksAggExp
  consumerLendingMilitaryLendingChecksByConsumerLendingCheckId(consumerLendingCheckId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingMilitaryLendingChecks
  consumerLendingPaymentArrangements(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingPaymentArrangementsOrderByExp!], where: ConsumerLending_ConsumerLendingPaymentArrangementsBoolExp): [ConsumerLending_ConsumerLendingPaymentArrangements!]
  consumerLendingPaymentArrangementsAggregate(filter_input: ConsumerLending_ConsumerLendingPaymentArrangementsFilterInput): ConsumerLending_ConsumerLendingPaymentArrangementsAggExp
  consumerLendingPaymentArrangementsByConsumerLendingArrangementId(consumerLendingArrangementId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingPaymentArrangements
  consumerLendingPaymentSchedules(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingPaymentSchedulesOrderByExp!], where: ConsumerLending_ConsumerLendingPaymentSchedulesBoolExp): [ConsumerLending_ConsumerLendingPaymentSchedules!]
  consumerLendingPaymentSchedulesAggregate(filter_input: ConsumerLending_ConsumerLendingPaymentSchedulesFilterInput): ConsumerLending_ConsumerLendingPaymentSchedulesAggExp
  consumerLendingPaymentSchedulesByPaymentScheduleId(paymentScheduleId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingPaymentSchedules
  consumerLendingProductEligibilityCriteria(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingProductEligibilityCriteriaOrderByExp!], where: ConsumerLending_ConsumerLendingProductEligibilityCriteriaBoolExp): [ConsumerLending_ConsumerLendingProductEligibilityCriteria!]
  consumerLendingProductEligibilityCriteriaAggregate(filter_input: ConsumerLending_ConsumerLendingProductEligibilityCriteriaFilterInput): ConsumerLending_ConsumerLendingProductEligibilityCriteriaAggExp
  consumerLendingProductEligibilityCriteriaByConsumerLendingCriteriaId(consumerLendingCriteriaId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingProductEligibilityCriteria
  consumerLendingPublicRecords(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingPublicRecordsOrderByExp!], where: ConsumerLending_ConsumerLendingPublicRecordsBoolExp): [ConsumerLending_ConsumerLendingPublicRecords!]
  consumerLendingPublicRecordsAggregate(filter_input: ConsumerLending_ConsumerLendingPublicRecordsFilterInput): ConsumerLending_ConsumerLendingPublicRecordsAggExp
  consumerLendingPublicRecordsByConsumerLendingRecordId(consumerLendingRecordId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingPublicRecords
  consumerLendingRegBNotices(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingRegBNoticesOrderByExp!], where: ConsumerLending_ConsumerLendingRegBNoticesBoolExp): [ConsumerLending_ConsumerLendingRegBNotices!]
  consumerLendingRegBNoticesAggregate(filter_input: ConsumerLending_ConsumerLendingRegBNoticesFilterInput): ConsumerLending_ConsumerLendingRegBNoticesAggExp
  consumerLendingRegBNoticesByConsumerLendingNoticeId(consumerLendingNoticeId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingRegBNotices
  consumerLendingRegZDisclosures(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingRegZDisclosuresOrderByExp!], where: ConsumerLending_ConsumerLendingRegZDisclosuresBoolExp): [ConsumerLending_ConsumerLendingRegZDisclosures!]
  consumerLendingRegZDisclosuresAggregate(filter_input: ConsumerLending_ConsumerLendingRegZDisclosuresFilterInput): ConsumerLending_ConsumerLendingRegZDisclosuresAggExp
  consumerLendingRegZDisclosuresByConsumerLendingDisclosureId(consumerLendingDisclosureId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingRegZDisclosures
  consumerLendingRiskBasedPricingTiers(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingRiskBasedPricingTiersOrderByExp!], where: ConsumerLending_ConsumerLendingRiskBasedPricingTiersBoolExp): [ConsumerLending_ConsumerLendingRiskBasedPricingTiers!]
  consumerLendingRiskBasedPricingTiersAggregate(filter_input: ConsumerLending_ConsumerLendingRiskBasedPricingTiersFilterInput): ConsumerLending_ConsumerLendingRiskBasedPricingTiersAggExp
  consumerLendingRiskBasedPricingTiersByConsumerLendingPricingTierId(consumerLendingPricingTierId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingRiskBasedPricingTiers
  consumerLendingVehicles(limit: Int, offset: Int, order_by: [ConsumerLending_ConsumerLendingVehiclesOrderByExp!], where: ConsumerLending_ConsumerLendingVehiclesBoolExp): [ConsumerLending_ConsumerLendingVehicles!]
  consumerLendingVehiclesAggregate(filter_input: ConsumerLending_ConsumerLendingVehiclesFilterInput): ConsumerLending_ConsumerLendingVehiclesAggExp
  consumerLendingVehiclesByVehicleId(vehicleId: ConsumerLending_Int4!): ConsumerLending_ConsumerLendingVehicles
  creditCardsAbilityToPayAssessments(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsAbilityToPayAssessmentsOrderByExp!], where: CreditCards_CreditCardsAbilityToPayAssessmentsBoolExp): [CreditCards_CreditCardsAbilityToPayAssessments!]
  creditCardsAbilityToPayAssessmentsAggregate(filter_input: CreditCards_CreditCardsAbilityToPayAssessmentsFilterInput): CreditCards_CreditCardsAbilityToPayAssessmentsAggExp
  creditCardsAbilityToPayAssessmentsByCreditCardsAssessmentId(creditCardsAssessmentId: CreditCards_Int4!): CreditCards_CreditCardsAbilityToPayAssessments
  creditCardsApplications(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsApplicationsOrderByExp!], where: CreditCards_CreditCardsApplicationsBoolExp): [CreditCards_CreditCardsApplications!]
  creditCardsApplicationsAggregate(filter_input: CreditCards_CreditCardsApplicationsFilterInput): CreditCards_CreditCardsApplicationsAggExp
  creditCardsApplicationsByCreditCardsApplicationId(creditCardsApplicationId: CreditCards_Int4!): CreditCards_CreditCardsApplications
  creditCardsAuthorizedUsers(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsAuthorizedUsersOrderByExp!], where: CreditCards_CreditCardsAuthorizedUsersBoolExp): [CreditCards_CreditCardsAuthorizedUsers!]
  creditCardsAuthorizedUsersAggregate(filter_input: CreditCards_CreditCardsAuthorizedUsersFilterInput): CreditCards_CreditCardsAuthorizedUsersAggExp
  creditCardsAuthorizedUsersByCreditCardsAuthorizedUserId(creditCardsAuthorizedUserId: CreditCards_Int4!): CreditCards_CreditCardsAuthorizedUsers
  creditCardsAutopaySettings(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsAutopaySettingsOrderByExp!], where: CreditCards_CreditCardsAutopaySettingsBoolExp): [CreditCards_CreditCardsAutopaySettings!]
  creditCardsAutopaySettingsAggregate(filter_input: CreditCards_CreditCardsAutopaySettingsFilterInput): CreditCards_CreditCardsAutopaySettingsAggExp
  creditCardsAutopaySettingsByCreditCardsAutopayId(creditCardsAutopayId: CreditCards_Int4!): CreditCards_CreditCardsAutopaySettings
  creditCardsBalanceTransfers(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsBalanceTransfersOrderByExp!], where: CreditCards_CreditCardsBalanceTransfersBoolExp): [CreditCards_CreditCardsBalanceTransfers!]
  creditCardsBalanceTransfersAggregate(filter_input: CreditCards_CreditCardsBalanceTransfersFilterInput): CreditCards_CreditCardsBalanceTransfersAggExp
  creditCardsBalanceTransfersByCreditCardsTransferId(creditCardsTransferId: CreditCards_Int4!): CreditCards_CreditCardsBalanceTransfers
  creditCardsCardAccounts(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsCardAccountsOrderByExp!], where: CreditCards_CreditCardsCardAccountsBoolExp): [CreditCards_CreditCardsCardAccounts!]
  creditCardsCardAccountsAggregate(filter_input: CreditCards_CreditCardsCardAccountsFilterInput): CreditCards_CreditCardsCardAccountsAggExp
  creditCardsCardAccountsByAccountNumber(accountNumber: CreditCards_Varchar!): CreditCards_CreditCardsCardAccounts
  creditCardsCardAccountsByCreditCardsCardAccountId(creditCardsCardAccountId: CreditCards_Int4!): CreditCards_CreditCardsCardAccounts
  creditCardsCardAlerts(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsCardAlertsOrderByExp!], where: CreditCards_CreditCardsCardAlertsBoolExp): [CreditCards_CreditCardsCardAlerts!]
  creditCardsCardAlertsAggregate(filter_input: CreditCards_CreditCardsCardAlertsFilterInput): CreditCards_CreditCardsCardAlertsAggExp
  creditCardsCardAlertsByCreditCardsAlertId(creditCardsAlertId: CreditCards_Int4!): CreditCards_CreditCardsCardAlerts
  creditCardsCardProductFeatures(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsCardProductFeaturesOrderByExp!], where: CreditCards_CreditCardsCardProductFeaturesBoolExp): [CreditCards_CreditCardsCardProductFeatures!]
  creditCardsCardProductFeaturesAggregate(filter_input: CreditCards_CreditCardsCardProductFeaturesFilterInput): CreditCards_CreditCardsCardProductFeaturesAggExp
  creditCardsCardProductFeaturesByCreditCardsFeatureId(creditCardsFeatureId: CreditCards_Int4!): CreditCards_CreditCardsCardProductFeatures
  creditCardsCardProductRewardCategories(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsCardProductRewardCategoriesOrderByExp!], where: CreditCards_CreditCardsCardProductRewardCategoriesBoolExp): [CreditCards_CreditCardsCardProductRewardCategories!]
  creditCardsCardProductRewardCategoriesAggregate(filter_input: CreditCards_CreditCardsCardProductRewardCategoriesFilterInput): CreditCards_CreditCardsCardProductRewardCategoriesAggExp
  creditCardsCardProductRewardCategoriesByCreditCardsCategoryId(creditCardsCategoryId: CreditCards_Int4!): CreditCards_CreditCardsCardProductRewardCategories
  creditCardsCardProducts(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsCardProductsOrderByExp!], where: CreditCards_CreditCardsCardProductsBoolExp): [CreditCards_CreditCardsCardProducts!]
  creditCardsCardProductsAggregate(filter_input: CreditCards_CreditCardsCardProductsFilterInput): CreditCards_CreditCardsCardProductsAggExp
  creditCardsCardProductsByCreditCardsProductId(creditCardsProductId: CreditCards_Int4!): CreditCards_CreditCardsCardProducts
  creditCardsCards(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsCardsOrderByExp!], where: CreditCards_CreditCardsCardsBoolExp): [CreditCards_CreditCardsCards!]
  creditCardsCardsAggregate(filter_input: CreditCards_CreditCardsCardsFilterInput): CreditCards_CreditCardsCardsAggExp
  creditCardsCardsByCreditCardsCardId(creditCardsCardId: CreditCards_Int4!): CreditCards_CreditCardsCards
  creditCardsConsumerComplaints(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsConsumerComplaintsOrderByExp!], where: CreditCards_CreditCardsConsumerComplaintsBoolExp): [CreditCards_CreditCardsConsumerComplaints!]
  creditCardsConsumerComplaintsAggregate(filter_input: CreditCards_CreditCardsConsumerComplaintsFilterInput): CreditCards_CreditCardsConsumerComplaintsAggExp
  creditCardsConsumerComplaintsByCreditCardsComplaintId(creditCardsComplaintId: CreditCards_Int4!): CreditCards_CreditCardsConsumerComplaints
  creditCardsCreditCardApplicationsHmda(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsCreditCardApplicationsHmdaOrderByExp!], where: CreditCards_CreditCardsCreditCardApplicationsHmdaBoolExp): [CreditCards_CreditCardsCreditCardApplicationsHmda!]
  creditCardsCreditCardApplicationsHmdaAggregate(filter_input: CreditCards_CreditCardsCreditCardApplicationsHmdaFilterInput): CreditCards_CreditCardsCreditCardApplicationsHmdaAggExp
  creditCardsCreditCardApplicationsHmdaByCreditCardsRecordId(creditCardsRecordId: CreditCards_Int4!): CreditCards_CreditCardsCreditCardApplicationsHmda
  creditCardsCreditLimitChanges(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsCreditLimitChangesOrderByExp!], where: CreditCards_CreditCardsCreditLimitChangesBoolExp): [CreditCards_CreditCardsCreditLimitChanges!]
  creditCardsCreditLimitChangesAggregate(filter_input: CreditCards_CreditCardsCreditLimitChangesFilterInput): CreditCards_CreditCardsCreditLimitChangesAggExp
  creditCardsCreditLimitChangesByCreditCardsChangeId(creditCardsChangeId: CreditCards_Int4!): CreditCards_CreditCardsCreditLimitChanges
  creditCardsDisputedTransactions(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsDisputedTransactionsOrderByExp!], where: CreditCards_CreditCardsDisputedTransactionsBoolExp): [CreditCards_CreditCardsDisputedTransactions!]
  creditCardsDisputedTransactionsAggregate(filter_input: CreditCards_CreditCardsDisputedTransactionsFilterInput): CreditCards_CreditCardsDisputedTransactionsAggExp
  creditCardsDisputedTransactionsByCreditCardsDisputeId(creditCardsDisputeId: CreditCards_Int4!): CreditCards_CreditCardsDisputedTransactions
  creditCardsFees(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsFeesOrderByExp!], where: CreditCards_CreditCardsFeesBoolExp): [CreditCards_CreditCardsFees!]
  creditCardsFeesAggregate(filter_input: CreditCards_CreditCardsFeesFilterInput): CreditCards_CreditCardsFeesAggExp
  creditCardsFeesByCreditCardsFeeId(creditCardsFeeId: CreditCards_Int4!): CreditCards_CreditCardsFees
  creditCardsFraudCases(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsFraudCasesOrderByExp!], where: CreditCards_CreditCardsFraudCasesBoolExp): [CreditCards_CreditCardsFraudCases!]
  creditCardsFraudCasesAggregate(filter_input: CreditCards_CreditCardsFraudCasesFilterInput): CreditCards_CreditCardsFraudCasesAggExp
  creditCardsFraudCasesByCreditCardsCaseId(creditCardsCaseId: CreditCards_Int4!): CreditCards_CreditCardsFraudCases
  creditCardsFraudTransactions(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsFraudTransactionsOrderByExp!], where: CreditCards_CreditCardsFraudTransactionsBoolExp): [CreditCards_CreditCardsFraudTransactions!]
  creditCardsFraudTransactionsAggregate(filter_input: CreditCards_CreditCardsFraudTransactionsFilterInput): CreditCards_CreditCardsFraudTransactionsAggExp
  creditCardsFraudTransactionsByCreditCardsFraudTransactionId(creditCardsFraudTransactionId: CreditCards_Int4!): CreditCards_CreditCardsFraudTransactions
  creditCardsInterestCharges(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsInterestChargesOrderByExp!], where: CreditCards_CreditCardsInterestChargesBoolExp): [CreditCards_CreditCardsInterestCharges!]
  creditCardsInterestChargesAggregate(filter_input: CreditCards_CreditCardsInterestChargesFilterInput): CreditCards_CreditCardsInterestChargesAggExp
  creditCardsInterestChargesByCreditCardsChargeId(creditCardsChargeId: CreditCards_Int4!): CreditCards_CreditCardsInterestCharges
  creditCardsPaymentMethods(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsPaymentMethodsOrderByExp!], where: CreditCards_CreditCardsPaymentMethodsBoolExp): [CreditCards_CreditCardsPaymentMethods!]
  creditCardsPaymentMethodsAggregate(filter_input: CreditCards_CreditCardsPaymentMethodsFilterInput): CreditCards_CreditCardsPaymentMethodsAggExp
  creditCardsPaymentMethodsByCreditCardsPaymentMethodId(creditCardsPaymentMethodId: CreditCards_Int4!): CreditCards_CreditCardsPaymentMethods
  creditCardsPromotionalOffers(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsPromotionalOffersOrderByExp!], where: CreditCards_CreditCardsPromotionalOffersBoolExp): [CreditCards_CreditCardsPromotionalOffers!]
  creditCardsPromotionalOffersAggregate(filter_input: CreditCards_CreditCardsPromotionalOffersFilterInput): CreditCards_CreditCardsPromotionalOffersAggExp
  creditCardsPromotionalOffersByCreditCardsOfferId(creditCardsOfferId: CreditCards_Int4!): CreditCards_CreditCardsPromotionalOffers
  creditCardsRegZCreditCardDisclosures(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsRegZCreditCardDisclosuresOrderByExp!], where: CreditCards_CreditCardsRegZCreditCardDisclosuresBoolExp): [CreditCards_CreditCardsRegZCreditCardDisclosures!]
  creditCardsRegZCreditCardDisclosuresAggregate(filter_input: CreditCards_CreditCardsRegZCreditCardDisclosuresFilterInput): CreditCards_CreditCardsRegZCreditCardDisclosuresAggExp
  creditCardsRegZCreditCardDisclosuresByCreditCardsDisclosureId(creditCardsDisclosureId: CreditCards_Int4!): CreditCards_CreditCardsRegZCreditCardDisclosures
  creditCardsRewardRedemptions(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsRewardRedemptionsOrderByExp!], where: CreditCards_CreditCardsRewardRedemptionsBoolExp): [CreditCards_CreditCardsRewardRedemptions!]
  creditCardsRewardRedemptionsAggregate(filter_input: CreditCards_CreditCardsRewardRedemptionsFilterInput): CreditCards_CreditCardsRewardRedemptionsAggExp
  creditCardsRewardRedemptionsByCreditCardsRedemptionId(creditCardsRedemptionId: CreditCards_Int4!): CreditCards_CreditCardsRewardRedemptions
  creditCardsRewards(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsRewardsOrderByExp!], where: CreditCards_CreditCardsRewardsBoolExp): [CreditCards_CreditCardsRewards!]
  creditCardsRewardsAggregate(filter_input: CreditCards_CreditCardsRewardsFilterInput): CreditCards_CreditCardsRewardsAggExp
  creditCardsRewardsByCreditCardsRewardId(creditCardsRewardId: CreditCards_Int4!): CreditCards_CreditCardsRewards
  creditCardsSecurityBlocks(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsSecurityBlocksOrderByExp!], where: CreditCards_CreditCardsSecurityBlocksBoolExp): [CreditCards_CreditCardsSecurityBlocks!]
  creditCardsSecurityBlocksAggregate(filter_input: CreditCards_CreditCardsSecurityBlocksFilterInput): CreditCards_CreditCardsSecurityBlocksAggExp
  creditCardsSecurityBlocksByCreditCardsBlockId(creditCardsBlockId: CreditCards_Int4!): CreditCards_CreditCardsSecurityBlocks
  creditCardsStatements(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsStatementsOrderByExp!], where: CreditCards_CreditCardsStatementsBoolExp): [CreditCards_CreditCardsStatements!]
  creditCardsStatementsAggregate(filter_input: CreditCards_CreditCardsStatementsFilterInput): CreditCards_CreditCardsStatementsAggExp
  creditCardsStatementsByCreditCardsStatementId(creditCardsStatementId: CreditCards_Int4!): CreditCards_CreditCardsStatements
  creditCardsTransactions(limit: Int, offset: Int, order_by: [CreditCards_CreditCardsTransactionsOrderByExp!], where: CreditCards_CreditCardsTransactionsBoolExp): [CreditCards_CreditCardsTransactions!]
  creditCardsTransactionsAggregate(filter_input: CreditCards_CreditCardsTransactionsFilterInput): CreditCards_CreditCardsTransactionsAggExp
  creditCardsTransactionsByCreditCardsTransactionId(creditCardsTransactionId: CreditCards_Int4!): CreditCards_CreditCardsTransactions
  enterpriseAccountOwnership(limit: Int, offset: Int, order_by: [Enterprise_EnterpriseAccountOwnershipOrderByExp!], where: Enterprise_EnterpriseAccountOwnershipBoolExp): [Enterprise_EnterpriseAccountOwnership!]
  enterpriseAccountOwnershipAggregate(filter_input: Enterprise_EnterpriseAccountOwnershipFilterInput): Enterprise_EnterpriseAccountOwnershipAggExp
  enterpriseAccountOwnershipByEnterpriseAccountOwnershipId(enterpriseAccountOwnershipId: Enterprise_Int4!): Enterprise_EnterpriseAccountOwnership
  enterpriseAccounts(limit: Int, offset: Int, order_by: [Enterprise_EnterpriseAccountsOrderByExp!], where: Enterprise_EnterpriseAccountsBoolExp): [Enterprise_EnterpriseAccounts!]
  enterpriseAccountsAggregate(filter_input: Enterprise_EnterpriseAccountsFilterInput): Enterprise_EnterpriseAccountsAggExp
  enterpriseAccountsByEnterpriseAccountId(enterpriseAccountId: Enterprise_Int4!): Enterprise_EnterpriseAccounts
  enterpriseAddresses(limit: Int, offset: Int, order_by: [Enterprise_EnterpriseAddressesOrderByExp!], where: Enterprise_EnterpriseAddressesBoolExp): [Enterprise_EnterpriseAddresses!]
  enterpriseAddressesAggregate(filter_input: Enterprise_EnterpriseAddressesFilterInput): Enterprise_EnterpriseAddressesAggExp
  enterpriseAddressesByEnterpriseAddressId(enterpriseAddressId: Enterprise_Int4!): Enterprise_EnterpriseAddresses
  enterpriseAssociates(limit: Int, offset: Int, order_by: [Enterprise_EnterpriseAssociatesOrderByExp!], where: Enterprise_EnterpriseAssociatesBoolExp): [Enterprise_EnterpriseAssociates!]
  enterpriseAssociatesAggregate(filter_input: Enterprise_EnterpriseAssociatesFilterInput): Enterprise_EnterpriseAssociatesAggExp
  enterpriseAssociatesByEmail(email: Enterprise_Varchar): Enterprise_EnterpriseAssociates
  enterpriseAssociatesByEnterpriseAssociateId(enterpriseAssociateId: Enterprise_Int4!): Enterprise_EnterpriseAssociates
  enterpriseBuildings(limit: Int, offset: Int, order_by: [Enterprise_EnterpriseBuildingsOrderByExp!], where: Enterprise_EnterpriseBuildingsBoolExp): [Enterprise_EnterpriseBuildings!]
  enterpriseBuildingsAggregate(filter_input: Enterprise_EnterpriseBuildingsFilterInput): Enterprise_EnterpriseBuildingsAggExp
  enterpriseBuildingsByEnterpriseBuildingId(enterpriseBuildingId: Enterprise_Int4!): Enterprise_EnterpriseBuildings
  enterpriseDepartments(limit: Int, offset: Int, order_by: [Enterprise_EnterpriseDepartmentsOrderByExp!], where: Enterprise_EnterpriseDepartmentsBoolExp): [Enterprise_EnterpriseDepartments!]
  enterpriseDepartmentsAggregate(filter_input: Enterprise_EnterpriseDepartmentsFilterInput): Enterprise_EnterpriseDepartmentsAggExp
  enterpriseDepartmentsByDepartmentName(departmentName: Enterprise_Varchar): Enterprise_EnterpriseDepartments
  enterpriseDepartmentsByEnterpriseDepartmentId(enterpriseDepartmentId: Enterprise_Int4!): Enterprise_EnterpriseDepartments
  enterpriseIdentifiers(limit: Int, offset: Int, order_by: [Enterprise_EnterpriseIdentifiersOrderByExp!], where: Enterprise_EnterpriseIdentifiersBoolExp): [Enterprise_EnterpriseIdentifiers!]
  enterpriseIdentifiersAggregate(filter_input: Enterprise_EnterpriseIdentifiersFilterInput): Enterprise_EnterpriseIdentifiersAggExp
  enterpriseIdentifiersByEnterpriseIdentifierId(enterpriseIdentifierId: Enterprise_Int4!): Enterprise_EnterpriseIdentifiers
  enterpriseParties(limit: Int, offset: Int, order_by: [Enterprise_EnterprisePartiesOrderByExp!], where: Enterprise_EnterprisePartiesBoolExp): [Enterprise_EnterpriseParties!]
  enterprisePartiesAggregate(filter_input: Enterprise_EnterprisePartiesFilterInput): Enterprise_EnterprisePartiesAggExp
  enterprisePartiesByEnterprisePartyId(enterprisePartyId: Enterprise_Int4!): Enterprise_EnterpriseParties
  enterprisePartyEntityAddresses(limit: Int, offset: Int, order_by: [Enterprise_EnterprisePartyEntityAddressesOrderByExp!], where: Enterprise_EnterprisePartyEntityAddressesBoolExp): [Enterprise_EnterprisePartyEntityAddresses!]
  enterprisePartyEntityAddressesAggregate(filter_input: Enterprise_EnterprisePartyEntityAddressesFilterInput): Enterprise_EnterprisePartyEntityAddressesAggExp
  enterprisePartyEntityAddressesByEnterprisePartyEntityAddressId(enterprisePartyEntityAddressId: Enterprise_Int4!): Enterprise_EnterprisePartyEntityAddresses
  enterprisePartyRelationships(limit: Int, offset: Int, order_by: [Enterprise_EnterprisePartyRelationshipsOrderByExp!], where: Enterprise_EnterprisePartyRelationshipsBoolExp): [Enterprise_EnterprisePartyRelationships!]
  enterprisePartyRelationshipsAggregate(filter_input: Enterprise_EnterprisePartyRelationshipsFilterInput): Enterprise_EnterprisePartyRelationshipsAggExp
  enterprisePartyRelationshipsByEnterprisePartyRelationshipId(enterprisePartyRelationshipId: Enterprise_Int4!): Enterprise_EnterprisePartyRelationships
  enterprisePermissions(limit: Int, offset: Int, order_by: [Enterprise_EnterprisePermissionsOrderByExp!], where: Enterprise_EnterprisePermissionsBoolExp): [Enterprise_EnterprisePermissions!]
  enterprisePermissionsAggregate(filter_input: Enterprise_EnterprisePermissionsFilterInput): Enterprise_EnterprisePermissionsAggExp
  enterprisePermissionsByEnterprisePermissionId(enterprisePermissionId: Enterprise_Int4!): Enterprise_EnterprisePermissions
  mortgageServicesApplicationBorrowers(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesApplicationBorrowersOrderByExp!], where: MortgageServices_MortgageServicesApplicationBorrowersBoolExp): [MortgageServices_MortgageServicesApplicationBorrowers!]
  mortgageServicesApplicationBorrowersAggregate(filter_input: MortgageServices_MortgageServicesApplicationBorrowersFilterInput): MortgageServices_MortgageServicesApplicationBorrowersAggExp
  mortgageServicesApplicationBorrowersByApplicationBorrowersPkey(mortgageServicesApplicationBorrowerId: MortgageServices_Int4!, mortgageServicesApplicationId: MortgageServices_Int4!): MortgageServices_MortgageServicesApplicationBorrowers
  mortgageServicesApplications(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesApplicationsOrderByExp!], where: MortgageServices_MortgageServicesApplicationsBoolExp): [MortgageServices_MortgageServicesApplications!]
  mortgageServicesApplicationsAggregate(filter_input: MortgageServices_MortgageServicesApplicationsFilterInput): MortgageServices_MortgageServicesApplicationsAggExp
  mortgageServicesApplicationsByMortgageServicesApplicationId(mortgageServicesApplicationId: MortgageServices_Int4!): MortgageServices_MortgageServicesApplications
  mortgageServicesAppraisals(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesAppraisalsOrderByExp!], where: MortgageServices_MortgageServicesAppraisalsBoolExp): [MortgageServices_MortgageServicesAppraisals!]
  mortgageServicesAppraisalsAggregate(filter_input: MortgageServices_MortgageServicesAppraisalsFilterInput): MortgageServices_MortgageServicesAppraisalsAggExp
  mortgageServicesAppraisalsByMortgageServicesAppraisalId(mortgageServicesAppraisalId: MortgageServices_Int4!): MortgageServices_MortgageServicesAppraisals
  mortgageServicesBorrowerAssets(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesBorrowerAssetsOrderByExp!], where: MortgageServices_MortgageServicesBorrowerAssetsBoolExp): [MortgageServices_MortgageServicesBorrowerAssets!]
  mortgageServicesBorrowerAssetsAggregate(filter_input: MortgageServices_MortgageServicesBorrowerAssetsFilterInput): MortgageServices_MortgageServicesBorrowerAssetsAggExp
  mortgageServicesBorrowerAssetsByMortgageServicesAssetId(mortgageServicesAssetId: MortgageServices_Int4!): MortgageServices_MortgageServicesBorrowerAssets
  mortgageServicesBorrowerEmployments(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesBorrowerEmploymentsOrderByExp!], where: MortgageServices_MortgageServicesBorrowerEmploymentsBoolExp): [MortgageServices_MortgageServicesBorrowerEmployments!]
  mortgageServicesBorrowerEmploymentsAggregate(filter_input: MortgageServices_MortgageServicesBorrowerEmploymentsFilterInput): MortgageServices_MortgageServicesBorrowerEmploymentsAggExp
  mortgageServicesBorrowerEmploymentsByMortgageServicesEmploymentId(mortgageServicesEmploymentId: MortgageServices_Int4!): MortgageServices_MortgageServicesBorrowerEmployments
  mortgageServicesBorrowerIncomes(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesBorrowerIncomesOrderByExp!], where: MortgageServices_MortgageServicesBorrowerIncomesBoolExp): [MortgageServices_MortgageServicesBorrowerIncomes!]
  mortgageServicesBorrowerIncomesAggregate(filter_input: MortgageServices_MortgageServicesBorrowerIncomesFilterInput): MortgageServices_MortgageServicesBorrowerIncomesAggExp
  mortgageServicesBorrowerIncomesByMortgageServicesIncomeId(mortgageServicesIncomeId: MortgageServices_Int4!): MortgageServices_MortgageServicesBorrowerIncomes
  mortgageServicesBorrowerLiabilities(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesBorrowerLiabilitiesOrderByExp!], where: MortgageServices_MortgageServicesBorrowerLiabilitiesBoolExp): [MortgageServices_MortgageServicesBorrowerLiabilities!]
  mortgageServicesBorrowerLiabilitiesAggregate(filter_input: MortgageServices_MortgageServicesBorrowerLiabilitiesFilterInput): MortgageServices_MortgageServicesBorrowerLiabilitiesAggExp
  mortgageServicesBorrowerLiabilitiesByMortgageServicesLiabilityId(mortgageServicesLiabilityId: MortgageServices_Int4!): MortgageServices_MortgageServicesBorrowerLiabilities
  mortgageServicesBorrowers(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesBorrowersOrderByExp!], where: MortgageServices_MortgageServicesBorrowersBoolExp): [MortgageServices_MortgageServicesBorrowers!]
  mortgageServicesBorrowersAggregate(filter_input: MortgageServices_MortgageServicesBorrowersFilterInput): MortgageServices_MortgageServicesBorrowersAggExp
  mortgageServicesBorrowersByMortgageServicesBorrowerId(mortgageServicesBorrowerId: MortgageServices_Int4!): MortgageServices_MortgageServicesBorrowers
  mortgageServicesClosedLoans(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesClosedLoansOrderByExp!], where: MortgageServices_MortgageServicesClosedLoansBoolExp): [MortgageServices_MortgageServicesClosedLoans!]
  mortgageServicesClosedLoansAggregate(filter_input: MortgageServices_MortgageServicesClosedLoansFilterInput): MortgageServices_MortgageServicesClosedLoansAggExp
  mortgageServicesClosedLoansByMortgageServicesClosedLoanId(mortgageServicesClosedLoanId: MortgageServices_Int4!): MortgageServices_MortgageServicesClosedLoans
  mortgageServicesClosingAppointments(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesClosingAppointmentsOrderByExp!], where: MortgageServices_MortgageServicesClosingAppointmentsBoolExp): [MortgageServices_MortgageServicesClosingAppointments!]
  mortgageServicesClosingAppointmentsAggregate(filter_input: MortgageServices_MortgageServicesClosingAppointmentsFilterInput): MortgageServices_MortgageServicesClosingAppointmentsAggExp
  mortgageServicesClosingAppointmentsByMortgageServicesAppointmentId(mortgageServicesAppointmentId: MortgageServices_Int4!): MortgageServices_MortgageServicesClosingAppointments
  mortgageServicesClosingDisclosures(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesClosingDisclosuresOrderByExp!], where: MortgageServices_MortgageServicesClosingDisclosuresBoolExp): [MortgageServices_MortgageServicesClosingDisclosures!]
  mortgageServicesClosingDisclosuresAggregate(filter_input: MortgageServices_MortgageServicesClosingDisclosuresFilterInput): MortgageServices_MortgageServicesClosingDisclosuresAggExp
  mortgageServicesClosingDisclosuresByMortgageServicesDisclosureId(mortgageServicesDisclosureId: MortgageServices_Int4!): MortgageServices_MortgageServicesClosingDisclosures
  mortgageServicesConditions(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesConditionsOrderByExp!], where: MortgageServices_MortgageServicesConditionsBoolExp): [MortgageServices_MortgageServicesConditions!]
  mortgageServicesConditionsAggregate(filter_input: MortgageServices_MortgageServicesConditionsFilterInput): MortgageServices_MortgageServicesConditionsAggExp
  mortgageServicesConditionsByMortgageServicesConditionId(mortgageServicesConditionId: MortgageServices_Int4!): MortgageServices_MortgageServicesConditions
  mortgageServicesCreditReports(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesCreditReportsOrderByExp!], where: MortgageServices_MortgageServicesCreditReportsBoolExp): [MortgageServices_MortgageServicesCreditReports!]
  mortgageServicesCreditReportsAggregate(filter_input: MortgageServices_MortgageServicesCreditReportsFilterInput): MortgageServices_MortgageServicesCreditReportsAggExp
  mortgageServicesCreditReportsByMortgageServicesCreditReportId(mortgageServicesCreditReportId: MortgageServices_Int4!): MortgageServices_MortgageServicesCreditReports
  mortgageServicesCustomerCommunications(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesCustomerCommunicationsOrderByExp!], where: MortgageServices_MortgageServicesCustomerCommunicationsBoolExp): [MortgageServices_MortgageServicesCustomerCommunications!]
  mortgageServicesCustomerCommunicationsAggregate(filter_input: MortgageServices_MortgageServicesCustomerCommunicationsFilterInput): MortgageServices_MortgageServicesCustomerCommunicationsAggExp
  mortgageServicesCustomerCommunicationsByMortgageServicesCommunicationId(mortgageServicesCommunicationId: MortgageServices_Int4!): MortgageServices_MortgageServicesCustomerCommunications
  mortgageServicesDocuments(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesDocumentsOrderByExp!], where: MortgageServices_MortgageServicesDocumentsBoolExp): [MortgageServices_MortgageServicesDocuments!]
  mortgageServicesDocumentsAggregate(filter_input: MortgageServices_MortgageServicesDocumentsFilterInput): MortgageServices_MortgageServicesDocumentsAggExp
  mortgageServicesDocumentsByMortgageServicesDocumentId(mortgageServicesDocumentId: MortgageServices_Int4!): MortgageServices_MortgageServicesDocuments
  mortgageServicesEscrowAnalyses(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesEscrowAnalysesOrderByExp!], where: MortgageServices_MortgageServicesEscrowAnalysesBoolExp): [MortgageServices_MortgageServicesEscrowAnalyses!]
  mortgageServicesEscrowAnalysesAggregate(filter_input: MortgageServices_MortgageServicesEscrowAnalysesFilterInput): MortgageServices_MortgageServicesEscrowAnalysesAggExp
  mortgageServicesEscrowAnalysesByMortgageServicesAnalysisId(mortgageServicesAnalysisId: MortgageServices_Int4!): MortgageServices_MortgageServicesEscrowAnalyses
  mortgageServicesEscrowDisbursements(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesEscrowDisbursementsOrderByExp!], where: MortgageServices_MortgageServicesEscrowDisbursementsBoolExp): [MortgageServices_MortgageServicesEscrowDisbursements!]
  mortgageServicesEscrowDisbursementsAggregate(filter_input: MortgageServices_MortgageServicesEscrowDisbursementsFilterInput): MortgageServices_MortgageServicesEscrowDisbursementsAggExp
  mortgageServicesEscrowDisbursementsByMortgageServicesDisbursementId(mortgageServicesDisbursementId: MortgageServices_Int4!): MortgageServices_MortgageServicesEscrowDisbursements
  mortgageServicesHmdaApplicantDemographics(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesHmdaApplicantDemographicsOrderByExp!], where: MortgageServices_MortgageServicesHmdaApplicantDemographicsBoolExp): [MortgageServices_MortgageServicesHmdaApplicantDemographics!]
  mortgageServicesHmdaApplicantDemographicsAggregate(filter_input: MortgageServices_MortgageServicesHmdaApplicantDemographicsFilterInput): MortgageServices_MortgageServicesHmdaApplicantDemographicsAggExp
  mortgageServicesHmdaApplicantDemographicsByMortgageServicesApplicantDemographicsId(mortgageServicesApplicantDemographicsId: MortgageServices_Int4!): MortgageServices_MortgageServicesHmdaApplicantDemographics
  mortgageServicesHmdaEdits(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesHmdaEditsOrderByExp!], where: MortgageServices_MortgageServicesHmdaEditsBoolExp): [MortgageServices_MortgageServicesHmdaEdits!]
  mortgageServicesHmdaEditsAggregate(filter_input: MortgageServices_MortgageServicesHmdaEditsFilterInput): MortgageServices_MortgageServicesHmdaEditsAggExp
  mortgageServicesHmdaEditsByMortgageServicesEditId(mortgageServicesEditId: MortgageServices_Int4!): MortgageServices_MortgageServicesHmdaEdits
  mortgageServicesHmdaRecords(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesHmdaRecordsOrderByExp!], where: MortgageServices_MortgageServicesHmdaRecordsBoolExp): [MortgageServices_MortgageServicesHmdaRecords!]
  mortgageServicesHmdaRecordsAggregate(filter_input: MortgageServices_MortgageServicesHmdaRecordsFilterInput): MortgageServices_MortgageServicesHmdaRecordsAggExp
  mortgageServicesHmdaRecordsByMortgageServicesHmdaRecordId(mortgageServicesHmdaRecordId: MortgageServices_Int4!): MortgageServices_MortgageServicesHmdaRecords
  mortgageServicesHmdaSubmissions(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesHmdaSubmissionsOrderByExp!], where: MortgageServices_MortgageServicesHmdaSubmissionsBoolExp): [MortgageServices_MortgageServicesHmdaSubmissions!]
  mortgageServicesHmdaSubmissionsAggregate(filter_input: MortgageServices_MortgageServicesHmdaSubmissionsFilterInput): MortgageServices_MortgageServicesHmdaSubmissionsAggExp
  mortgageServicesHmdaSubmissionsByMortgageServicesSubmissionId(mortgageServicesSubmissionId: MortgageServices_Int4!): MortgageServices_MortgageServicesHmdaSubmissions
  mortgageServicesInsurancePolicies(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesInsurancePoliciesOrderByExp!], where: MortgageServices_MortgageServicesInsurancePoliciesBoolExp): [MortgageServices_MortgageServicesInsurancePolicies!]
  mortgageServicesInsurancePoliciesAggregate(filter_input: MortgageServices_MortgageServicesInsurancePoliciesFilterInput): MortgageServices_MortgageServicesInsurancePoliciesAggExp
  mortgageServicesInsurancePoliciesByMortgageServicesPolicyId(mortgageServicesPolicyId: MortgageServices_Int4!): MortgageServices_MortgageServicesInsurancePolicies
  mortgageServicesLoanModifications(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesLoanModificationsOrderByExp!], where: MortgageServices_MortgageServicesLoanModificationsBoolExp): [MortgageServices_MortgageServicesLoanModifications!]
  mortgageServicesLoanModificationsAggregate(filter_input: MortgageServices_MortgageServicesLoanModificationsFilterInput): MortgageServices_MortgageServicesLoanModificationsAggExp
  mortgageServicesLoanModificationsByMortgageServicesModificationId(mortgageServicesModificationId: MortgageServices_Int4!): MortgageServices_MortgageServicesLoanModifications
  mortgageServicesLoanProducts(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesLoanProductsOrderByExp!], where: MortgageServices_MortgageServicesLoanProductsBoolExp): [MortgageServices_MortgageServicesLoanProducts!]
  mortgageServicesLoanProductsAggregate(filter_input: MortgageServices_MortgageServicesLoanProductsFilterInput): MortgageServices_MortgageServicesLoanProductsAggExp
  mortgageServicesLoanProductsByMortgageServicesLoanProductId(mortgageServicesLoanProductId: MortgageServices_Int4!): MortgageServices_MortgageServicesLoanProducts
  mortgageServicesLoanRateLocks(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesLoanRateLocksOrderByExp!], where: MortgageServices_MortgageServicesLoanRateLocksBoolExp): [MortgageServices_MortgageServicesLoanRateLocks!]
  mortgageServicesLoanRateLocksAggregate(filter_input: MortgageServices_MortgageServicesLoanRateLocksFilterInput): MortgageServices_MortgageServicesLoanRateLocksAggExp
  mortgageServicesLoanRateLocksByMortgageServicesRateLockId(mortgageServicesRateLockId: MortgageServices_Int4!): MortgageServices_MortgageServicesLoanRateLocks
  mortgageServicesLoans(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesLoansOrderByExp!], where: MortgageServices_MortgageServicesLoansBoolExp): [MortgageServices_MortgageServicesLoans!]
  mortgageServicesLoansAggregate(filter_input: MortgageServices_MortgageServicesLoansFilterInput): MortgageServices_MortgageServicesLoansAggExp
  mortgageServicesLoansByMortgageServicesLoanId(mortgageServicesLoanId: MortgageServices_Int4!): MortgageServices_MortgageServicesLoans
  mortgageServicesPayments(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesPaymentsOrderByExp!], where: MortgageServices_MortgageServicesPaymentsBoolExp): [MortgageServices_MortgageServicesPayments!]
  mortgageServicesPaymentsAggregate(filter_input: MortgageServices_MortgageServicesPaymentsFilterInput): MortgageServices_MortgageServicesPaymentsAggExp
  mortgageServicesPaymentsByMortgageServicesPaymentId(mortgageServicesPaymentId: MortgageServices_Int4!): MortgageServices_MortgageServicesPayments
  mortgageServicesProperties(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesPropertiesOrderByExp!], where: MortgageServices_MortgageServicesPropertiesBoolExp): [MortgageServices_MortgageServicesProperties!]
  mortgageServicesPropertiesAggregate(filter_input: MortgageServices_MortgageServicesPropertiesFilterInput): MortgageServices_MortgageServicesPropertiesAggExp
  mortgageServicesPropertiesByMortgageServicesPropertyId(mortgageServicesPropertyId: MortgageServices_Int4!): MortgageServices_MortgageServicesProperties
  mortgageServicesServicingAccounts(limit: Int, offset: Int, order_by: [MortgageServices_MortgageServicesServicingAccountsOrderByExp!], where: MortgageServices_MortgageServicesServicingAccountsBoolExp): [MortgageServices_MortgageServicesServicingAccounts!]
  mortgageServicesServicingAccountsAggregate(filter_input: MortgageServices_MortgageServicesServicingAccountsFilterInput): MortgageServices_MortgageServicesServicingAccountsAggExp
  mortgageServicesServicingAccountsByMortgageServicesServicingAccountId(mortgageServicesServicingAccountId: MortgageServices_Int4!): MortgageServices_MortgageServicesServicingAccounts
  securityAccounts(limit: Int, offset: Int, order_by: [Security_SecurityAccountsOrderByExp!], where: Security_SecurityAccountsBoolExp): [Security_SecurityAccounts!]
  securityAccountsAggregate(filter_input: Security_SecurityAccountsFilterInput): Security_SecurityAccountsAggExp
  securityAccountsBySecurityAccountId(securityAccountId: Security_Uuid!): Security_SecurityAccounts
  securityCpe(limit: Int, offset: Int, order_by: [Security_SecurityCpeOrderByExp!], where: Security_SecurityCpeBoolExp): [Security_SecurityCpe!]
  securityCpeAggregate(filter_input: Security_SecurityCpeFilterInput): Security_SecurityCpeAggExp
  securityCveProblem(limit: Int, offset: Int, order_by: [Security_SecurityCveProblemOrderByExp!], where: Security_SecurityCveProblemBoolExp): [Security_SecurityCveProblem!]
  securityCveProblemAggregate(filter_input: Security_SecurityCveProblemFilterInput): Security_SecurityCveProblemAggExp
  securityCvss(limit: Int, offset: Int, order_by: [Security_SecurityCvssOrderByExp!], where: Security_SecurityCvssBoolExp): [Security_SecurityCvss!]
  securityCvssAggregate(filter_input: Security_SecurityCvssFilterInput): Security_SecurityCvssAggExp
  securityCvssByCve(cve: Security_Varchar!): Security_SecurityCvss
  securityCwe(limit: Int, offset: Int, order_by: [Security_SecurityCweOrderByExp!], where: Security_SecurityCweBoolExp): [Security_SecurityCwe!]
  securityCweAggregate(filter_input: Security_SecurityCweFilterInput): Security_SecurityCweAggExp
  securityCweByCweId(cweId: Security_Int4!): Security_SecurityCwe
  securityDevices(limit: Int, offset: Int, order_by: [Security_SecurityDevicesOrderByExp!], where: Security_SecurityDevicesBoolExp): [Security_SecurityDevices!]
  securityDevicesAggregate(filter_input: Security_SecurityDevicesFilterInput): Security_SecurityDevicesAggExp
  securityDevicesBySecurityDeviceId(securityDeviceId: Security_Inet!): Security_SecurityDevices
  securityEnhancedEntitlements(limit: Int, offset: Int, order_by: [Security_SecurityEnhancedEntitlementsOrderByExp!], where: Security_SecurityEnhancedEntitlementsBoolExp): [Security_SecurityEnhancedEntitlements!]
  securityEnhancedEntitlementsAggregate(filter_input: Security_SecurityEnhancedEntitlementsFilterInput): Security_SecurityEnhancedEntitlementsAggExp
  securityEnhancedEntitlementsBySecurityEntitlementId(securityEntitlementId: Security_Uuid!): Security_SecurityEnhancedEntitlements
  securityEntitlementResources(limit: Int, offset: Int, order_by: [Security_SecurityEntitlementResourcesOrderByExp!], where: Security_SecurityEntitlementResourcesBoolExp): [Security_SecurityEntitlementResources!]
  securityEntitlementResourcesAggregate(filter_input: Security_SecurityEntitlementResourcesFilterInput): Security_SecurityEntitlementResourcesAggExp
  securityEntitlementResourcesBySecurityEntitlementResourceId(securityEntitlementResourceId: Security_Uuid!): Security_SecurityEntitlementResources
  securityFileAccesses(limit: Int, offset: Int, order_by: [Security_SecurityFileAccessesOrderByExp!], where: Security_SecurityFileAccessesBoolExp): [Security_SecurityFileAccesses!]
  securityFileAccessesAggregate(filter_input: Security_SecurityFileAccessesFilterInput): Security_SecurityFileAccessesAggExp
  securityFileAccessesBySecurityFileAccessId(securityFileAccessId: Security_Uuid!): Security_SecurityFileAccesses
  securityFileThreats(limit: Int, offset: Int, order_by: [Security_SecurityFileThreatsOrderByExp!], where: Security_SecurityFileThreatsBoolExp): [Security_SecurityFileThreats!]
  securityFileThreatsAggregate(filter_input: Security_SecurityFileThreatsFilterInput): Security_SecurityFileThreatsAggExp
  securityFileThreatsBySecurityFileThreatHash(securityFileThreatHash: Security_Varchar!): Security_SecurityFileThreats
  securityFiles(limit: Int, offset: Int, order_by: [Security_SecurityFilesOrderByExp!], where: Security_SecurityFilesBoolExp): [Security_SecurityFiles!]
  securityFilesAggregate(filter_input: Security_SecurityFilesFilterInput): Security_SecurityFilesAggExp
  securityFilesBySecurityFileId(securityFileId: Security_Uuid!): Security_SecurityFiles
  securityGovernanceGroups(limit: Int, offset: Int, order_by: [Security_SecurityGovernanceGroupsOrderByExp!], where: Security_SecurityGovernanceGroupsBoolExp): [Security_SecurityGovernanceGroups!]
  securityGovernanceGroupsAggregate(filter_input: Security_SecurityGovernanceGroupsFilterInput): Security_SecurityGovernanceGroupsAggExp
  securityGovernanceGroupsBySecurityGovernanceGroupId(securityGovernanceGroupId: Security_Uuid!): Security_SecurityGovernanceGroups
  securityHosts(limit: Int, offset: Int, order_by: [Security_SecurityHostsOrderByExp!], where: Security_SecurityHostsBoolExp): [Security_SecurityHosts!]
  securityHostsAggregate(filter_input: Security_SecurityHostsFilterInput): Security_SecurityHostsAggExp
  securityHostsBySecurityHostId(securityHostId: Security_Uuid!): Security_SecurityHosts
  securityIamLogins(limit: Int, offset: Int, order_by: [Security_SecurityIamLoginsOrderByExp!], where: Security_SecurityIamLoginsBoolExp): [Security_SecurityIamLogins!]
  securityIamLoginsAggregate(filter_input: Security_SecurityIamLoginsFilterInput): Security_SecurityIamLoginsAggExp
  securityIamLoginsBySecurityLoginId(securityLoginId: Security_Uuid!): Security_SecurityIamLogins
  securityIdentities(limit: Int, offset: Int, order_by: [Security_SecurityIdentitiesOrderByExp!], where: Security_SecurityIdentitiesBoolExp): [Security_SecurityIdentities!]
  securityIdentitiesAggregate(filter_input: Security_SecurityIdentitiesFilterInput): Security_SecurityIdentitiesAggExp
  securityIdentitiesBySecurityIdentityId(securityIdentityId: Security_Uuid!): Security_SecurityIdentities
  securityIdentityProfiles(limit: Int, offset: Int, order_by: [Security_SecurityIdentityProfilesOrderByExp!], where: Security_SecurityIdentityProfilesBoolExp): [Security_SecurityIdentityProfiles!]
  securityIdentityProfilesAggregate(filter_input: Security_SecurityIdentityProfilesFilterInput): Security_SecurityIdentityProfilesAggExp
  securityIdentityProfilesBySecurityIdentityProfileId(securityIdentityProfileId: Security_Uuid!): Security_SecurityIdentityProfiles
  securityIdentityRoles(limit: Int, offset: Int, order_by: [Security_SecurityIdentityRolesOrderByExp!], where: Security_SecurityIdentityRolesBoolExp): [Security_SecurityIdentityRoles!]
  securityIdentityRolesAggregate(filter_input: Security_SecurityIdentityRolesFilterInput): Security_SecurityIdentityRolesAggExp
  securityIdentityRolesBySecurityIdentityRoleId(securityIdentityRoleId: Security_Uuid!): Security_SecurityIdentityRoles
  securityInstalledApplications(limit: Int, offset: Int, order_by: [Security_SecurityInstalledApplicationsOrderByExp!], where: Security_SecurityInstalledApplicationsBoolExp): [Security_SecurityInstalledApplications!]
  securityInstalledApplicationsAggregate(filter_input: Security_SecurityInstalledApplicationsFilterInput): Security_SecurityInstalledApplicationsAggExp
  securityInstalledApplicationsByInstalledApplicationsPkey(appMgmtApplicationId: Security_Uuid!, securityHostId: Security_Uuid!): Security_SecurityInstalledApplications
  securityNetworkConnections(limit: Int, offset: Int, order_by: [Security_SecurityNetworkConnectionsOrderByExp!], where: Security_SecurityNetworkConnectionsBoolExp): [Security_SecurityNetworkConnections!]
  securityNetworkConnectionsAggregate(filter_input: Security_SecurityNetworkConnectionsFilterInput): Security_SecurityNetworkConnectionsAggExp
  securityNetworkConnectionsBySecurityNetworkConnectionId(securityNetworkConnectionId: Security_Uuid!): Security_SecurityNetworkConnections
  securityNetworkEvents(limit: Int, offset: Int, order_by: [Security_SecurityNetworkEventsOrderByExp!], where: Security_SecurityNetworkEventsBoolExp): [Security_SecurityNetworkEvents!]
  securityNetworkEventsAggregate(filter_input: Security_SecurityNetworkEventsFilterInput): Security_SecurityNetworkEventsAggExp
  securityNetworkEventsBySecurityNetworkEventId(securityNetworkEventId: Security_Int8!): Security_SecurityNetworkEvents
  securityOpenPorts(limit: Int, offset: Int, order_by: [Security_SecurityOpenPortsOrderByExp!], where: Security_SecurityOpenPortsBoolExp): [Security_SecurityOpenPorts!]
  securityOpenPortsAggregate(filter_input: Security_SecurityOpenPortsFilterInput): Security_SecurityOpenPortsAggExp
  securityOpenPortsByOpenPortsPkey(portNumber: Security_Int4!, protocol: Security_SecurityNetworkProtocols!, securityHostId: Security_Uuid!): Security_SecurityOpenPorts
  securityPolicies(limit: Int, offset: Int, order_by: [Security_SecurityPoliciesOrderByExp!], where: Security_SecurityPoliciesBoolExp): [Security_SecurityPolicies!]
  securityPoliciesAggregate(filter_input: Security_SecurityPoliciesFilterInput): Security_SecurityPoliciesAggExp
  securityPoliciesByName(name: Security_Varchar!): Security_SecurityPolicies
  securityPoliciesBySecurityPolicyId(securityPolicyId: Security_Uuid!): Security_SecurityPolicies
  securityPolicyAttributes(limit: Int, offset: Int, order_by: [Security_SecurityPolicyAttributesOrderByExp!], where: Security_SecurityPolicyAttributesBoolExp): [Security_SecurityPolicyAttributes!]
  securityPolicyAttributesAggregate(filter_input: Security_SecurityPolicyAttributesFilterInput): Security_SecurityPolicyAttributesAggExp
  securityPolicyRules(limit: Int, offset: Int, order_by: [Security_SecurityPolicyRulesOrderByExp!], where: Security_SecurityPolicyRulesBoolExp): [Security_SecurityPolicyRules!]
  securityPolicyRulesAggregate(filter_input: Security_SecurityPolicyRulesFilterInput): Security_SecurityPolicyRulesAggExp
  securityPolicyRulesBySecurityPolicyRuleId(securityPolicyRuleId: Security_Uuid!): Security_SecurityPolicyRules
  securityProcessExecutions(limit: Int, offset: Int, order_by: [Security_SecurityProcessExecutionsOrderByExp!], where: Security_SecurityProcessExecutionsBoolExp): [Security_SecurityProcessExecutions!]
  securityProcessExecutionsAggregate(filter_input: Security_SecurityProcessExecutionsFilterInput): Security_SecurityProcessExecutionsAggExp
  securityProcessExecutionsBySecurityProcessExecutionId(securityProcessExecutionId: Security_Uuid!): Security_SecurityProcessExecutions
  securityResourceDefinitions(limit: Int, offset: Int, order_by: [Security_SecurityResourceDefinitionsOrderByExp!], where: Security_SecurityResourceDefinitionsBoolExp): [Security_SecurityResourceDefinitions!]
  securityResourceDefinitionsAggregate(filter_input: Security_SecurityResourceDefinitionsFilterInput): Security_SecurityResourceDefinitionsAggExp
  securityResourceDefinitionsBySecurityResourceId(securityResourceId: Security_Uuid!): Security_SecurityResourceDefinitions
  securityRoleEntitlements(limit: Int, offset: Int, order_by: [Security_SecurityRoleEntitlementsOrderByExp!], where: Security_SecurityRoleEntitlementsBoolExp): [Security_SecurityRoleEntitlements!]
  securityRoleEntitlementsAggregate(filter_input: Security_SecurityRoleEntitlementsFilterInput): Security_SecurityRoleEntitlementsAggExp
  securityRoleEntitlementsBySecurityRoleEntitlementId(securityRoleEntitlementId: Security_Uuid!): Security_SecurityRoleEntitlements
  securityRoles(limit: Int, offset: Int, order_by: [Security_SecurityRolesOrderByExp!], where: Security_SecurityRolesBoolExp): [Security_SecurityRoles!]
  securityRolesAggregate(filter_input: Security_SecurityRolesFilterInput): Security_SecurityRolesAggExp
  securityRolesBySecurityRoleId(securityRoleId: Security_Uuid!): Security_SecurityRoles
  securityRunningServices(limit: Int, offset: Int, order_by: [Security_SecurityRunningServicesOrderByExp!], where: Security_SecurityRunningServicesBoolExp): [Security_SecurityRunningServices!]
  securityRunningServicesAggregate(filter_input: Security_SecurityRunningServicesFilterInput): Security_SecurityRunningServicesAggExp
  securityRunningServicesByRunningServicesPkey(runningServiceName: Security_Varchar!, securityHostId: Security_Uuid!): Security_SecurityRunningServices
  securitySystemStats(limit: Int, offset: Int, order_by: [Security_SecuritySystemStatsOrderByExp!], where: Security_SecuritySystemStatsBoolExp): [Security_SecuritySystemStats!]
  securitySystemStatsAggregate(filter_input: Security_SecuritySystemStatsFilterInput): Security_SecuritySystemStatsAggExp
  securitySystemStatsBySecuritySystemStatId(securitySystemStatId: Security_Uuid!): Security_SecuritySystemStats
  securityUsbDeviceUsage(limit: Int, offset: Int, order_by: [Security_SecurityUsbDeviceUsageOrderByExp!], where: Security_SecurityUsbDeviceUsageBoolExp): [Security_SecurityUsbDeviceUsage!]
  securityUsbDeviceUsageAggregate(filter_input: Security_SecurityUsbDeviceUsageFilterInput): Security_SecurityUsbDeviceUsageAggExp
  securityUsbDeviceUsageBySecurityUsbDeviceUsageId(securityUsbDeviceUsageId: Security_Uuid!): Security_SecurityUsbDeviceUsage
  smallBusinessBankingAccountSignatories(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingAccountSignatoriesOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingAccountSignatoriesBoolExp): [SmallBusinessBanking_SmallBusinessBankingAccountSignatories!]
  smallBusinessBankingAccountSignatoriesAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingAccountSignatoriesFilterInput): SmallBusinessBanking_SmallBusinessBankingAccountSignatoriesAggExp
  smallBusinessBankingAccountSignatoriesBySmallBusinessBankingAccountSignatoryId(smallBusinessBankingAccountSignatoryId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingAccountSignatories
  smallBusinessBankingAccounts(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingAccountsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingAccountsBoolExp): [SmallBusinessBanking_SmallBusinessBankingAccounts!]
  smallBusinessBankingAccountsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingAccountsFilterInput): SmallBusinessBanking_SmallBusinessBankingAccountsAggExp
  smallBusinessBankingAccountsBySmallBusinessBankingAccountId(smallBusinessBankingAccountId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingAccounts
  smallBusinessBankingAdverseActionNotices(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingAdverseActionNoticesOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingAdverseActionNoticesBoolExp): [SmallBusinessBanking_SmallBusinessBankingAdverseActionNotices!]
  smallBusinessBankingAdverseActionNoticesAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingAdverseActionNoticesFilterInput): SmallBusinessBanking_SmallBusinessBankingAdverseActionNoticesAggExp
  smallBusinessBankingAdverseActionNoticesBySmallBusinessBankingNoticeId(smallBusinessBankingNoticeId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingAdverseActionNotices
  smallBusinessBankingBeneficialOwnerVerification(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingBeneficialOwnerVerificationOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingBeneficialOwnerVerificationBoolExp): [SmallBusinessBanking_SmallBusinessBankingBeneficialOwnerVerification!]
  smallBusinessBankingBeneficialOwnerVerificationAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingBeneficialOwnerVerificationFilterInput): SmallBusinessBanking_SmallBusinessBankingBeneficialOwnerVerificationAggExp
  smallBusinessBankingBeneficialOwnerVerificationBySmallBusinessBankingVerificationId(smallBusinessBankingVerificationId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingBeneficialOwnerVerification
  smallBusinessBankingBusinessCardAccounts(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingBusinessCardAccountsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingBusinessCardAccountsBoolExp): [SmallBusinessBanking_SmallBusinessBankingBusinessCardAccounts!]
  smallBusinessBankingBusinessCardAccountsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingBusinessCardAccountsFilterInput): SmallBusinessBanking_SmallBusinessBankingBusinessCardAccountsAggExp
  smallBusinessBankingBusinessCardAccountsBySmallBusinessBankingBusinessCardAccountId(smallBusinessBankingBusinessCardAccountId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingBusinessCardAccounts
  smallBusinessBankingBusinessCardUsers(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingBusinessCardUsersOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingBusinessCardUsersBoolExp): [SmallBusinessBanking_SmallBusinessBankingBusinessCardUsers!]
  smallBusinessBankingBusinessCardUsersAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingBusinessCardUsersFilterInput): SmallBusinessBanking_SmallBusinessBankingBusinessCardUsersAggExp
  smallBusinessBankingBusinessCardUsersBySmallBusinessBankingBusinessCardUserId(smallBusinessBankingBusinessCardUserId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingBusinessCardUsers
  smallBusinessBankingBusinessDueDiligence(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingBusinessDueDiligenceOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingBusinessDueDiligenceBoolExp): [SmallBusinessBanking_SmallBusinessBankingBusinessDueDiligence!]
  smallBusinessBankingBusinessDueDiligenceAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingBusinessDueDiligenceFilterInput): SmallBusinessBanking_SmallBusinessBankingBusinessDueDiligenceAggExp
  smallBusinessBankingBusinessDueDiligenceBySmallBusinessBankingDueDiligenceId(smallBusinessBankingDueDiligenceId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingBusinessDueDiligence
  smallBusinessBankingBusinessExpenseCategories(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingBusinessExpenseCategoriesOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingBusinessExpenseCategoriesBoolExp): [SmallBusinessBanking_SmallBusinessBankingBusinessExpenseCategories!]
  smallBusinessBankingBusinessExpenseCategoriesAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingBusinessExpenseCategoriesFilterInput): SmallBusinessBanking_SmallBusinessBankingBusinessExpenseCategoriesAggExp
  smallBusinessBankingBusinessExpenseCategoriesBySmallBusinessBankingCategoryId(smallBusinessBankingCategoryId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingBusinessExpenseCategories
  smallBusinessBankingBusinessOwners(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingBusinessOwnersOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingBusinessOwnersBoolExp): [SmallBusinessBanking_SmallBusinessBankingBusinessOwners!]
  smallBusinessBankingBusinessOwnersAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingBusinessOwnersFilterInput): SmallBusinessBanking_SmallBusinessBankingBusinessOwnersAggExp
  smallBusinessBankingBusinessOwnersBySmallBusinessBankingBusinessOwnerId(smallBusinessBankingBusinessOwnerId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingBusinessOwners
  smallBusinessBankingBusinessRiskAssessments(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingBusinessRiskAssessmentsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingBusinessRiskAssessmentsBoolExp): [SmallBusinessBanking_SmallBusinessBankingBusinessRiskAssessments!]
  smallBusinessBankingBusinessRiskAssessmentsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingBusinessRiskAssessmentsFilterInput): SmallBusinessBanking_SmallBusinessBankingBusinessRiskAssessmentsAggExp
  smallBusinessBankingBusinessRiskAssessmentsBySmallBusinessBankingAssessmentId(smallBusinessBankingAssessmentId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingBusinessRiskAssessments
  smallBusinessBankingBusinessTransactionCategories(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingBusinessTransactionCategoriesOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingBusinessTransactionCategoriesBoolExp): [SmallBusinessBanking_SmallBusinessBankingBusinessTransactionCategories!]
  smallBusinessBankingBusinessTransactionCategoriesAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingBusinessTransactionCategoriesFilterInput): SmallBusinessBanking_SmallBusinessBankingBusinessTransactionCategoriesAggExp
  smallBusinessBankingBusinessTransactionCategoriesBySmallBusinessBankingTransactionCategoryId(smallBusinessBankingTransactionCategoryId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingBusinessTransactionCategories
  smallBusinessBankingBusinesses(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingBusinessesOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingBusinessesBoolExp): [SmallBusinessBanking_SmallBusinessBankingBusinesses!]
  smallBusinessBankingBusinessesAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingBusinessesFilterInput): SmallBusinessBanking_SmallBusinessBankingBusinessesAggExp
  smallBusinessBankingBusinessesBySmallBusinessBankingBusinessId(smallBusinessBankingBusinessId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingBusinesses
  smallBusinessBankingCollateral(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingCollateralOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingCollateralBoolExp): [SmallBusinessBanking_SmallBusinessBankingCollateral!]
  smallBusinessBankingCollateralAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingCollateralFilterInput): SmallBusinessBanking_SmallBusinessBankingCollateralAggExp
  smallBusinessBankingCollateralBySmallBusinessBankingCollateralId(smallBusinessBankingCollateralId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingCollateral
  smallBusinessBankingComplianceCases(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingComplianceCasesOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingComplianceCasesBoolExp): [SmallBusinessBanking_SmallBusinessBankingComplianceCases!]
  smallBusinessBankingComplianceCasesAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingComplianceCasesFilterInput): SmallBusinessBanking_SmallBusinessBankingComplianceCasesAggExp
  smallBusinessBankingComplianceCasesBySmallBusinessBankingCaseId(smallBusinessBankingCaseId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingComplianceCases
  smallBusinessBankingComplianceRequirements(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingComplianceRequirementsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingComplianceRequirementsBoolExp): [SmallBusinessBanking_SmallBusinessBankingComplianceRequirements!]
  smallBusinessBankingComplianceRequirementsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingComplianceRequirementsFilterInput): SmallBusinessBanking_SmallBusinessBankingComplianceRequirementsAggExp
  smallBusinessBankingComplianceRequirementsBySmallBusinessBankingRequirementId(smallBusinessBankingRequirementId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingComplianceRequirements
  smallBusinessBankingCreditDecisions(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingCreditDecisionsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingCreditDecisionsBoolExp): [SmallBusinessBanking_SmallBusinessBankingCreditDecisions!]
  smallBusinessBankingCreditDecisionsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingCreditDecisionsFilterInput): SmallBusinessBanking_SmallBusinessBankingCreditDecisionsAggExp
  smallBusinessBankingCreditDecisionsBySmallBusinessBankingDecisionId(smallBusinessBankingDecisionId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingCreditDecisions
  smallBusinessBankingCreditLines(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingCreditLinesOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingCreditLinesBoolExp): [SmallBusinessBanking_SmallBusinessBankingCreditLines!]
  smallBusinessBankingCreditLinesAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingCreditLinesFilterInput): SmallBusinessBanking_SmallBusinessBankingCreditLinesAggExp
  smallBusinessBankingCreditLinesBySmallBusinessBankingCreditLineId(smallBusinessBankingCreditLineId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingCreditLines
  smallBusinessBankingDocuments(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingDocumentsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingDocumentsBoolExp): [SmallBusinessBanking_SmallBusinessBankingDocuments!]
  smallBusinessBankingDocumentsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingDocumentsFilterInput): SmallBusinessBanking_SmallBusinessBankingDocumentsAggExp
  smallBusinessBankingDocumentsBySmallBusinessBankingDocumentId(smallBusinessBankingDocumentId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingDocuments
  smallBusinessBankingLoanCollateral(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingLoanCollateralOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingLoanCollateralBoolExp): [SmallBusinessBanking_SmallBusinessBankingLoanCollateral!]
  smallBusinessBankingLoanCollateralAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingLoanCollateralFilterInput): SmallBusinessBanking_SmallBusinessBankingLoanCollateralAggExp
  smallBusinessBankingLoanCollateralBySmallBusinessBankingLoanCollateralId(smallBusinessBankingLoanCollateralId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingLoanCollateral
  smallBusinessBankingLoanFairLending(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingLoanFairLendingOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingLoanFairLendingBoolExp): [SmallBusinessBanking_SmallBusinessBankingLoanFairLending!]
  smallBusinessBankingLoanFairLendingAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingLoanFairLendingFilterInput): SmallBusinessBanking_SmallBusinessBankingLoanFairLendingAggExp
  smallBusinessBankingLoanFairLendingBySmallBusinessBankingLendingRecordId(smallBusinessBankingLendingRecordId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingLoanFairLending
  smallBusinessBankingLoans(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingLoansOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingLoansBoolExp): [SmallBusinessBanking_SmallBusinessBankingLoans!]
  smallBusinessBankingLoansAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingLoansFilterInput): SmallBusinessBanking_SmallBusinessBankingLoansAggExp
  smallBusinessBankingLoansBySmallBusinessBankingLoanId(smallBusinessBankingLoanId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingLoans
  smallBusinessBankingPayments(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingPaymentsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingPaymentsBoolExp): [SmallBusinessBanking_SmallBusinessBankingPayments!]
  smallBusinessBankingPaymentsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingPaymentsFilterInput): SmallBusinessBanking_SmallBusinessBankingPaymentsAggExp
  smallBusinessBankingPaymentsBySmallBusinessBankingPaymentId(smallBusinessBankingPaymentId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingPayments
  smallBusinessBankingProducts(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingProductsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingProductsBoolExp): [SmallBusinessBanking_SmallBusinessBankingProducts!]
  smallBusinessBankingProductsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingProductsFilterInput): SmallBusinessBanking_SmallBusinessBankingProductsAggExp
  smallBusinessBankingProductsBySmallBusinessBankingProductId(smallBusinessBankingProductId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingProducts
  smallBusinessBankingRegulatoryFindings(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingRegulatoryFindingsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingRegulatoryFindingsBoolExp): [SmallBusinessBanking_SmallBusinessBankingRegulatoryFindings!]
  smallBusinessBankingRegulatoryFindingsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingRegulatoryFindingsFilterInput): SmallBusinessBanking_SmallBusinessBankingRegulatoryFindingsAggExp
  smallBusinessBankingRegulatoryFindingsBySmallBusinessBankingFindingId(smallBusinessBankingFindingId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingRegulatoryFindings
  smallBusinessBankingRegulatoryReports(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingRegulatoryReportsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingRegulatoryReportsBoolExp): [SmallBusinessBanking_SmallBusinessBankingRegulatoryReports!]
  smallBusinessBankingRegulatoryReportsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingRegulatoryReportsFilterInput): SmallBusinessBanking_SmallBusinessBankingRegulatoryReportsAggExp
  smallBusinessBankingRegulatoryReportsBySmallBusinessBankingReportId(smallBusinessBankingReportId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingRegulatoryReports
  smallBusinessBankingReportSubmissions(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingReportSubmissionsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingReportSubmissionsBoolExp): [SmallBusinessBanking_SmallBusinessBankingReportSubmissions!]
  smallBusinessBankingReportSubmissionsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingReportSubmissionsFilterInput): SmallBusinessBanking_SmallBusinessBankingReportSubmissionsAggExp
  smallBusinessBankingReportSubmissionsBySmallBusinessBankingSubmissionId(smallBusinessBankingSubmissionId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingReportSubmissions
  smallBusinessBankingSuspiciousActivityReports(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingSuspiciousActivityReportsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingSuspiciousActivityReportsBoolExp): [SmallBusinessBanking_SmallBusinessBankingSuspiciousActivityReports!]
  smallBusinessBankingSuspiciousActivityReportsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingSuspiciousActivityReportsFilterInput): SmallBusinessBanking_SmallBusinessBankingSuspiciousActivityReportsAggExp
  smallBusinessBankingSuspiciousActivityReportsBySmallBusinessBankingSarId(smallBusinessBankingSarId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingSuspiciousActivityReports
  smallBusinessBankingTransactions(limit: Int, offset: Int, order_by: [SmallBusinessBanking_SmallBusinessBankingTransactionsOrderByExp!], where: SmallBusinessBanking_SmallBusinessBankingTransactionsBoolExp): [SmallBusinessBanking_SmallBusinessBankingTransactions!]
  smallBusinessBankingTransactionsAggregate(filter_input: SmallBusinessBanking_SmallBusinessBankingTransactionsFilterInput): SmallBusinessBanking_SmallBusinessBankingTransactionsAggExp
  smallBusinessBankingTransactionsBySmallBusinessBankingTransactionId(smallBusinessBankingTransactionId: SmallBusinessBanking_Int4!): SmallBusinessBanking_SmallBusinessBankingTransactions
}

